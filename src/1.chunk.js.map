{"version":3,"sources":["C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/admin.module.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/barcode-gen/barcode-gen.component.html","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/barcode-gen/barcode-gen.component.scss","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/barcode-gen/barcode-gen.component.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/barcode-print/barcode-print.component.html","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/barcode-print/barcode-print.component.scss","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/barcode-print/barcode-print.component.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/crdn/crdn-edit/crdn-edit.component.html","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/crdn/crdn-edit/crdn-edit.component.scss","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/crdn/crdn-edit/crdn-edit.component.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/crdn/crdn-search/crdn-delete-dialog.component.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/crdn/crdn-search/crdn-dialog-content.component.html","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/crdn/crdn-search/crdn-dialog-content.component.scss","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/crdn/crdn-search/crdn-dialog-content.component.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/crdn/crdn-search/crdn-search.component.html","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/crdn/crdn-search/crdn-search.component.scss","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/crdn/crdn-search/crdn-search.component.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/crdn/crdn-search/crdn-search.datasource.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/crdn/credit-note/credit-note.component.html","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/crdn/credit-note/credit-note.component.scss","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/crdn/credit-note/credit-note.component.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/crdn/products-servrvice-toggle/products-servrvice-toggle.component.html","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/crdn/products-servrvice-toggle/products-servrvice-toggle.component.scss","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/crdn/products-servrvice-toggle/products-servrvice-toggle.component.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/crdn/products-table/products-table.component.html","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/crdn/products-table/products-table.component.scss","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/crdn/products-table/products-table.component.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/crdn/service-table/service-table.component.html","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/crdn/service-table/service-table.component.scss","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/crdn/service-table/service-table.component.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/customerdetails/customer.details.component.html","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/customerdetails/customer.details.component.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/customerdetails/customer.sidenav.component.html","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/customerdetails/customer.sidenav.component.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/customerdetails/customeredit.component.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/customerdetails/customeredit.html","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/customerdetails/details.component.html","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/customerdetails/details.component.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/customerdetails/dialog.component.html","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/customerdetails/dialog.component.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/customerdetails/transcation.component.html","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/customerdetails/transcation.component.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/customerdetails/transcation.datasource.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/custommangement/DialogContentExampleDialogCustomer.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/custommangement/cm.address.component.html","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/custommangement/cm.address.component.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/custommangement/cm.billing.component.html","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/custommangement/cm.billing.component.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/custommangement/cm.contactdetails.component.html","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/custommangement/cm.contactdetails.component.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/custommangement/customer.datasource.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/custommangement/customer.search.component.html","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/custommangement/customer.search.component.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/custommangement/custommangement.component.html","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/custommangement/custommangement.component.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/dashboard/dashboard.component.html","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/dashboard/dashboard.component.scss","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/dashboard/dashboard.component.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/dashboard/income-expenses/income-expenses.component.html","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/dashboard/income-expenses/income-expenses.component.scss","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/dashboard/income-expenses/income-expenses.component.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/dashboard/payable-chart/payable-chart.component.html","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/dashboard/payable-chart/payable-chart.component.scss","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/dashboard/payable-chart/payable-chart.component.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/dashboard/pie-chart/pie-chart.component.html","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/dashboard/pie-chart/pie-chart.component.scss","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/dashboard/pie-chart/pie-chart.component.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/dashboard/receivables-chart/receivables-chart.component.html","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/dashboard/receivables-chart/receivables-chart.component.scss","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/dashboard/receivables-chart/receivables-chart.component.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/dashboard/sales-chart/sales-chart.component.html","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/dashboard/sales-chart/sales-chart.component.scss","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/dashboard/sales-chart/sales-chart.component.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/dashboard/stock-pie-chart/stock-pie-chart.component.html","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/dashboard/stock-pie-chart/stock-pie-chart.component.scss","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/dashboard/stock-pie-chart/stock-pie-chart.component.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/expensemanagement/DialogContentExampleDialogExpense.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/expensemanagement/expense.datasource.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/expensemanagement/expense.search.component.html","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/expensemanagement/expense.search.component.scss","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/expensemanagement/expense.search.component.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/expensemanagement/expensemanagement.component.html","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/expensemanagement/expensemanagement.component.scss","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/expensemanagement/expensemanagement.component.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/expensemanagement/expensemanagement.view.component.html","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/expensemanagement/expensemanagement.view.component.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/invoice/DialogContentExampleDialogInvoice.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/invoice/invoice.datasource.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/invoice/invoice.edit.component.html","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/invoice/invoice.edit.component.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/invoice/invoice.search.component.html","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/invoice/invoice.search.component.scss","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/invoice/invoice.search.component.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/invoice/search.email.component.html","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/invoice/search.email.component.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/invoice80mm/invoice80mm.component.html","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/invoice80mm/invoice80mm.component.scss","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/invoice80mm/invoice80mm.component.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/payment/DialogContentExampleDialogPayment.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/payment/payment.datasource.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/payment/payment.search.component.html","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/payment/payment.search.component.scss","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/payment/payment.search.component.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/payment/pm.payment-dialog-content.component.html","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/payment/pm.payment-dialog-content.component.scss","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/payment/pm.payment-dialog-content.component.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/payment/pm.payment.component.html","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/payment/pm.payment.component.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/payment/pm.payment.view.component.html","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/payment/pm.payment.view.component.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/product/DialogContentExampleDialogInventory.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/product/inventory.edit.component.html","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/product/inventory.edit.component.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/product/noninventory.edit.component.html","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/product/noninventory.edit.component.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/product/product.search.component.html","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/product/product.search.component.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/product/product.search.datasource.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/quotations/DialogContentExampleDialogQuotations.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/quotations/quotations.edit.component.html","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/quotations/quotations.edit.component.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/settings/settings.component.html","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/settings/settings.component.scss","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/settings/settings.component.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/staff/staff.component.html","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/staff/staff.component.scss","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/staff/staff.component.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/stockitem/addstockitem/addstockitem.component.html","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/stockitem/addstockitem/addstockitem.component.scss","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/stockitem/addstockitem/addstockitem.component.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/stockitem/dialog-delete-service-item.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/stockitem/service-item-listing.datasource.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/stockitem/service.edit.component.html","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/stockitem/service.edit.component.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/stockitem/service.item.listing.component.html","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/stockitem/service.item.listing.component.scss","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/stockitem/service.item.listing.component.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/stockitem/stock-item-listing/dialog-delete-stock-item.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/stockitem/stock-item-listing/stock-item-listing.component.html","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/stockitem/stock-item-listing/stock-item-listing.component.scss","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/stockitem/stock-item-listing/stock-item-listing.component.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/stockitem/stock-item-listing/stock-item-listing.datasource.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/suppliermanagement/DialogContentExampleDialog.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/suppliermanagement/sm.address.component.html","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/suppliermanagement/sm.address.component.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/suppliermanagement/sm.bussiness.component.html","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/suppliermanagement/sm.bussiness.component.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/suppliermanagement/sm.supplierdetails.component.html","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/suppliermanagement/sm.supplierdetails.component.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/suppliermanagement/supplier.datasource.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/suppliermanagement/supplier.search.component.html","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/suppliermanagement/supplier.search.component.scss","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/suppliermanagement/supplier.search.component.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/suppliermanagement/suppliermanagement.component.html","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/suppliermanagement/suppliermanagement.component.scss","C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/suppliermanagement/suppliermanagement.component.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/entities/Product.entity.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/entities/ProductPriceListItems.entity.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/entities/ProductPurchasing.entity.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/entities/barcode.entity.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/entities/chartofaccount.entity.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/entities/custommanagement.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/entities/expenseSearchEmail.entity.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/entities/expenseaccountdetails.entity.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/entities/expensemanagement.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/entities/expensepayee.entity.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/entities/invoiceSearchEmail.entity.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/entities/payment.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/entities/paymentSearchEmail.entity.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/entities/printlayout.entity.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/entities/quotations.entity.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/entities/staff.entity.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/entities/supplierSearchEmail.entity.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/entities/userdetails.entity.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/entities/usersettings.entity.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/forms/Product.form.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/forms/Service.form.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/forms/customer.form.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/forms/expense.form.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/forms/payment.form.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/forms/quotations.form.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/forms/stockitem.form.ts","C:/GitHub/rightinvoices-web-v1.1/src/app/forms/usersetting.form.ts","C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/JsBarcode.js","C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/barcodes/Barcode.js","C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/barcodes/CODE128/CODE128.js","C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/barcodes/CODE128/CODE128A.js","C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/barcodes/CODE128/CODE128B.js","C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/barcodes/CODE128/CODE128C.js","C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/barcodes/CODE128/CODE128_AUTO.js","C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/barcodes/CODE128/auto.js","C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/barcodes/CODE128/constants.js","C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/barcodes/CODE128/index.js","C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/barcodes/CODE39/index.js","C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/barcodes/EAN_UPC/EAN.js","C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/barcodes/EAN_UPC/EAN13.js","C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/barcodes/EAN_UPC/EAN2.js","C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/barcodes/EAN_UPC/EAN5.js","C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/barcodes/EAN_UPC/EAN8.js","C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/barcodes/EAN_UPC/UPC.js","C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/barcodes/EAN_UPC/UPCE.js","C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/barcodes/EAN_UPC/constants.js","C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/barcodes/EAN_UPC/encoder.js","C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/barcodes/EAN_UPC/index.js","C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/barcodes/GenericBarcode/index.js","C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/barcodes/ITF/ITF.js","C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/barcodes/ITF/ITF14.js","C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/barcodes/ITF/constants.js","C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/barcodes/ITF/index.js","C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/barcodes/MSI/MSI.js","C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/barcodes/MSI/MSI10.js","C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/barcodes/MSI/MSI1010.js","C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/barcodes/MSI/MSI11.js","C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/barcodes/MSI/MSI1110.js","C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/barcodes/MSI/checksums.js","C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/barcodes/MSI/index.js","C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/barcodes/codabar/index.js","C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/barcodes/index.js","C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/barcodes/pharmacode/index.js","C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/exceptions/ErrorHandler.js","C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/exceptions/exceptions.js","C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/help/fixOptions.js","C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/help/getOptionsFromElement.js","C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/help/getRenderProperties.js","C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/help/linearizeEncodings.js","C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/help/merge.js","C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/help/optionsFromStrings.js","C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/options/defaults.js","C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/renderers/canvas.js","C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/renderers/index.js","C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/renderers/object.js","C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/renderers/shared.js","C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/renderers/svg.js","C:/GitHub/rightinvoices-web-v1.1/~/ngx-barcode/index.js","C:/GitHub/rightinvoices-web-v1.1/~/rxjs/add/operator/distinctUntilChanged.js","C:/GitHub/rightinvoices-web-v1.1/~/rxjs/operator/distinctUntilChanged.js"],"names":[],"mappings":"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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,iBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sC;;;;;;;;AC3GA;;AAEA;AACA;AACA,CAAC;AACD;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,oBAAoB;AACtC;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,C;;;;;;;;AC1BA;;AAEA;AACA;AACA,CAAC;;AAED,mDAAmD,gBAAgB,sBAAsB,OAAO,2BAA2B,0BAA0B,yDAAyD,2BAA2B,EAAE,EAAE,EAAE,eAAe;;AAE9P;AACA,oBAAoB;AACpB,E;;;;;;;;ACVA;;AAEA;AACA;AACA,CAAC;AACD;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,C;;;;;;;;AC1BA;;AAEA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,2B;;;;;;;;AC3BA;;AAEA;AACA;AACA,CAAC;;AAED,gCAAgC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEjjB;;AAEA;;AAEA;;AAEA,sCAAsC,uCAAuC,gBAAgB;;AAE7F,iDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,2BAA2B;AAC7C;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;;AAEA,kBAAkB,mBAAmB;AACrC;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;;AAEF;AACA,CAAC;;AAED,iC;;;;;;;;AC7JA;;AAEA;AACA;AACA,CAAC;;AAED;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,sCAAsC,uCAAuC,gBAAgB;;AAE7F,mBAAmB,kG;;;;;;;;ACpBnB;;AAEA;AACA;AACA,CAAC;;AAED,gCAAgC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEjjB,iDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA,CAAC;;AAED,iC;;;;;;;;AC7BA;;AAEA;AACA;AACA,CAAC;AACD;;AAEA;;AAEA;;AAEA,sCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,sBAAsB;AACtC;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,sBAAsB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,sBAAsB;AACtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,4D;;;;;;;;AC9FA;;AAEA;AACA;AACA,CAAC;;AAED,gCAAgC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEjjB;;AAEA;;AAEA;;AAEA,sCAAsC,uCAAuC,gBAAgB;;AAE7F,iDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,2BAA2B;AAC7C;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,gHAAgH;AAChH;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA,kBAAkB,mBAAmB;AACrC;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA,+DAA+D;AAC/D;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,EAAE;;AAEF;AACA,CAAC;;AAED,8B;;;;;;;;;;;AC5L2D;;AAE3D;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,aAAa;AAC/C;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,gBAAgB;AACtF;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA;AACA;AACA,sDAAsD;AACtD,SAAS,kEAAmB;AAC5B,MAAM;AACN;AACA,yBAAyB,yFAA0C;AACnE,sBAAsB,kFAAmC;AACzD,oBAAoB,mFAAoC;AACxD,uBAAuB,uFAAwC;AAC/D,mBAAmB,kFAAmC;AACtD,oBAAoB,mFAAoC;AACxD,0BAA0B,0FAA2C;AACrE,yBAAyB,yFAA0C;AACnE,kBAAkB,iFAAkC;AACpD,uBAAuB,uFAAwC;AAC/D,0BAA0B,0FAA2C;AACrE,wBAAwB,wFAAyC;AACjE,sBAAsB,sFAAuC;AAC7D,wBAAwB,uFAAwC;AAChE,oBAAoB,mFAAoC;AACxD,uBAAuB,uFAAwC;AAC/D,0BAA0B,0FAA2C;AACrE,wBAAwB,wFAAyC;AACjE,yBAAyB,yFAA0C;AACnE,mBAAmB,kFAAmC;AACtD,uBAAuB,uFAAwC;AAC/D,mBAAmB,kFAAmC;AACtD;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA;AACA;AACA,mDAAmD,WAAW;AAC9D;AACA,CAAC;;AAEO;;;;;;;;;ACnKR;AACA;AACA;AACA;AACA,gD;;;;;;;;ACJA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,qBAAqB;AAC7B,QAAQ,qBAAqB;AAC7B,QAAQ,qBAAqB;AAC7B,QAAQ,qBAAqB;AAC7B;AACA;AACA;AACA;AACA,OAAO;AACP,OAAO;AACP,OAAO;AACP;AACA,SAAS;AACT,SAAS;AACT;AACA,WAAW,SAAS;AACpB,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,gD","file":"1.chunk.js","sourcesContent":["import { DialogDeleteStockItem } from \"./stockitem/stock-item-listing/dialog-delete-stock-item\";\r\nimport { DialogDeleteServiceItem } from \"./stockitem/dialog-delete-service-item\";\r\nimport { CRDNDeleteDialog } from \"./crdn/crdn-search/crdn-delete-dialog.component\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\n//import { angularfixed }        from 'angular-fixed-table-header';\r\nimport { NgxBarcodeModule } from \"ngx-barcode\";\r\nimport { MaterialModule } from \"@angular/material\";\r\nimport { SharedModule } from \"../../shared/shared.module\";\r\n\r\nimport { InvoiceEditComponent } from \"./invoice/invoice.edit.component\";\r\nimport { InvoiceSearchComponent } from \"./invoice/invoice.search.component\";\r\nimport { CustomMangementComponent } from \"./custommangement/custommangement.component\";\r\nimport { CmContactdetailsComponent } from \"./custommangement/cm.contactdetails.component\";\r\nimport { CmBillingComponent } from \"./custommangement/cm.billing.component\";\r\nimport { CmAdressComponent } from \"./custommangement/cm.address.component\";\r\nimport { SearchEmailComponent } from \"./invoice/search.email.component\";\r\nimport { CustomerSearchComponent } from \"./custommangement/customer.search.component\";\r\nimport { PmPaymentDialogContentComponent } from \"./payment/pm.payment-dialog-content.component\";\r\n\r\nimport { DashboardComponent } from \"./dashboard/dashboard.component\";\r\nimport { CustomerDetailsComponent } from \"./customerdetails/customer.details.component\";\r\nimport { CustomerEditComponent } from \"./customerdetails/customeredit.component\";\r\nimport { PmPaymentComponent } from \"./payment/pm.payment.component\";\r\nimport { PmPaymentViewComponent } from \"./payment/pm.payment.view.component\";\r\nimport { QuotationsEditComponent } from \"./quotations/quotations.edit.component\";\r\nimport { DialogComponent } from \"./customerdetails/dialog.component\";\r\nimport { CustomerSideNavComponent } from \"./customerdetails/customer.sidenav.component\";\r\nimport { TranscationComponent } from \"./customerdetails/transcation.component\";\r\nimport { DetailsComponent } from \"./customerdetails/details.component\";\r\nimport { SuppliermanagementComponent } from \"./suppliermanagement/suppliermanagement.component\";\r\n\r\nimport { SmSupplierdetailsComponent } from \"./suppliermanagement/sm.supplierdetails.component\";\r\nimport { SmAddressComponent } from \"./suppliermanagement/sm.address.component\";\r\nimport { SupplierSearchComponent } from \"./suppliermanagement/supplier.search.component\";\r\nimport { SmBusinessComponent } from \"./suppliermanagement/sm.bussiness.component\";\r\nimport { PaymentSearchComponent } from \"./payment/payment.search.component\";\r\nimport { ExpensemanagementComponent } from \"./expensemanagement/expensemanagement.component\";\r\nimport { ExpensemanagementViewComponent } from \"./expensemanagement/expensemanagement.view.component\";\r\nimport { ExpenseSearchComponent } from \"./expensemanagement/expense.search.component\";\r\nimport { DialogContentExampleDialogCustomer } from \"./custommangement/DialogContentExampleDialogCustomer\";\r\nimport { DialogContentExampleDialogExpense } from \"./expensemanagement/DialogContentExampleDialogExpense\";\r\nimport { DialogContentExampleDialogInvoice } from \"./invoice/DialogContentExampleDialogInvoice\";\r\n\r\nimport { DialogContentExampleDialogPayment } from \"./payment/DialogContentExampleDialogPayment\";\r\nimport { DialogContentExampleDialogQuotations } from \"./quotations/DialogContentExampleDialogQuotations\";\r\nimport { DialogContentExampleDialog } from \"./suppliermanagement/DialogContentExampleDialog\";\r\nimport { DialogContentExampleDialogInventory } from \"./product/DialogContentExampleDialogInventory\";\r\n// Product\r\nimport { ProductSearchComponent } from \"./product/product.search.component\";\r\nimport { InventoryEditComponent } from \"./product/inventory.edit.component\";\r\nimport { NonInventoryEditComponent } from \"./product/noninventory.edit.component\";\r\nimport { ServiceEditComponent } from \"./stockitem/service.edit.component\";\r\nimport { CrdnEditComponent } from \"./crdn/crdn-edit/crdn-edit.component\";\r\nimport { CrdnSearchComponent } from \"./crdn/crdn-search/crdn-search.component\";\r\nimport { SettingsComponent } from \"./settings/settings.component\";\r\nimport { AddstockitemComponent } from \"./stockitem/addstockitem/addstockitem.component\";\r\nimport { StockItemListingComponent } from \"./stockitem/stock-item-listing/stock-item-listing.component\";\r\nimport { Invoice80mmComponent } from \"./invoice80mm/invoice80mm.component\";\r\nimport { StaffComponent } from \"./staff/staff.component\";\r\nimport { BarcodePrintComponent } from \"./barcode-print/barcode-print.component\";\r\nimport { BarcodeGenComponent } from \"./barcode-gen/barcode-gen.component\";\r\nimport { CreditNoteComponent } from \"./crdn/credit-note/credit-note.component\";\r\n// import { PmPaymentDialogContentComponent } from \"./payment/pm.payment-dialog-content.component\";\r\nimport { CrdnDialogContentComponent } from \"./crdn/crdn-search/crdn-dialog-content.component\";\r\nimport { ServiceItemListingComponent } from \"./stockitem/service.item.listing.component\";\r\nimport { ProductsTableComponent } from \"./crdn/products-table/products-table.component\";\r\nimport { ServiceTableComponent } from \"./crdn/service-table/service-table.component\";\r\nimport { ProductsServrviceToggleComponent } from \"./crdn/products-servrvice-toggle/products-servrvice-toggle.component\";\nimport { PieChartComponent } from './dashboard/pie-chart/pie-chart.component';\nimport { StockPieChartComponent } from './dashboard/stock-pie-chart/stock-pie-chart.component';\nimport { ReceivablesChartComponent } from './dashboard/receivables-chart/receivables-chart.component';\nimport { PayableChartComponent } from './dashboard/payable-chart/payable-chart.component';\nimport { IncomeExpensesComponent } from './dashboard/income-expenses/income-expenses.component';\nimport { SalesChartComponent } from './dashboard/sales-chart/sales-chart.component';\r\nconst routes: Routes = [\r\n  { path: \"\", component: DashboardComponent },\r\n  { path: \"dashboard\", component: DashboardComponent },\r\n  { path: \"invoice-edit\", component: InvoiceEditComponent },\r\n  { path: \"invoice-search\", component: InvoiceSearchComponent },\r\n  { path: \"custom-management\", component: CustomMangementComponent },\r\n  { path: \"supplier-management\", component: SuppliermanagementComponent },\r\n\r\n  { path: \"customersearch\", component: CustomerSearchComponent },\r\n  { path: \"suppliersearch\", component: SupplierSearchComponent },\r\n  { path: \"expense-management\", component: ExpensemanagementComponent },\r\n  { path: \"expense-managementView\", component: ExpensemanagementViewComponent },\r\n  { path: \"expense-search\", component: ExpenseSearchComponent },\r\n  { path: \"customer-details\", component: CustomerDetailsComponent },\r\n  { path: \"stock-details\", component: StockItemListingComponent },\r\n  { path: \"service-details\", component: ServiceItemListingComponent },\r\n\r\n  { path: \"customer-edit\", component: CustomerEditComponent },\r\n  { path: \"invoices-edit\", component: InvoiceEditComponent },\r\n\r\n  { path: \"payment\", component: PmPaymentComponent },\r\n  { path: \"paymentView\", component: PmPaymentViewComponent },\r\n  { path: \"payment-search\", component: PaymentSearchComponent },\r\n  { path: \"quotations\", component: QuotationsEditComponent },\r\n\r\n  //product\r\n  { path: \"product-search\", component: ProductSearchComponent },\r\n  { path: \"inventory-edit\", component: InventoryEditComponent },\r\n  { path: \"noninventory-edit\", component: NonInventoryEditComponent },\r\n  { path: \"service-edit\", component: ServiceEditComponent },\r\n  { path: \"crdn-edit\", component: CrdnEditComponent },\r\n  { path: \"crdn-search\", component: CrdnSearchComponent },\r\n  { path: \"credit-note\", component: CreditNoteComponent },\r\n  { path: \"user-settings\", component: SettingsComponent },\r\n\r\n  //Stock Item\r\n  { path: \"stockitem-management\", component: AddstockitemComponent },\r\n  //{ path: \"serviceitem-management\", component: ServiceEditComponent },\r\n  { path: \"stockitem-search\", component: StockItemListingComponent },\r\n  { path: \"serviceitem-search\", component: ServiceItemListingComponent },\r\n  { path: \"barcode-generation\", component: BarcodeGenComponent },\r\n  { path: \"barcode-print\", component: BarcodePrintComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MaterialModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    NgxBarcodeModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [\r\n    InvoiceEditComponent,\r\n    InvoiceSearchComponent,\r\n    CustomMangementComponent,\r\n    CmContactdetailsComponent,\r\n    CustomerEditComponent,\r\n    CmBillingComponent,\r\n    CmAdressComponent,\r\n    SearchEmailComponent,\r\n    DashboardComponent,\r\n    CustomerSearchComponent,\r\n    CustomerDetailsComponent,\r\n    DialogComponent,\r\n    StockItemListingComponent,\r\n    ServiceItemListingComponent,\r\n    CustomerSideNavComponent,\r\n    DetailsComponent,\r\n    TranscationComponent,\r\n    SuppliermanagementComponent,\r\n    SmSupplierdetailsComponent,\r\n    SmAddressComponent,\r\n    SupplierSearchComponent,\r\n    SmBusinessComponent,\r\n    PmPaymentComponent,\r\n    PaymentSearchComponent,\r\n    QuotationsEditComponent,\r\n    ExpensemanagementComponent,\r\n    ExpenseSearchComponent,\r\n    PmPaymentViewComponent,\r\n    ExpensemanagementViewComponent,\r\n    DialogContentExampleDialog,\r\n    DialogContentExampleDialogCustomer,\r\n    DialogContentExampleDialogExpense,\r\n    DialogContentExampleDialogInvoice,\r\n    DialogContentExampleDialogPayment,\r\n    DialogContentExampleDialogQuotations,\r\n    DialogContentExampleDialogInventory,\r\n    PmPaymentDialogContentComponent,\r\n    ProductSearchComponent,\r\n    InventoryEditComponent,\r\n    NonInventoryEditComponent,\r\n    ServiceEditComponent,\r\n    CrdnEditComponent,\r\n    CrdnSearchComponent,\r\n    CRDNDeleteDialog,\r\n    SettingsComponent,\r\n    AddstockitemComponent,\r\n    StockItemListingComponent,\r\n    ServiceItemListingComponent,\r\n    DialogDeleteStockItem,\r\n    DialogDeleteServiceItem,\r\n    Invoice80mmComponent,\r\n    StaffComponent,\r\n    BarcodePrintComponent,\r\n    BarcodeGenComponent,\r\n    CreditNoteComponent,\r\n    CrdnDialogContentComponent,\r\n    ProductsTableComponent,\r\n    ServiceTableComponent,\r\n    ProductsServrviceToggleComponent,\r\n    PieChartComponent,\r\n    StockPieChartComponent,\r\n    ReceivablesChartComponent,\r\n    PayableChartComponent,\r\n    IncomeExpensesComponent,\r\n    SalesChartComponent\r\n  ],\r\n  //declarations: [DashboardComponent,InvoiceEditComponent, InvoiceSearchComponent,CustomMangementComponent,CmContactdetailsComponent,CmBillingComponent,CmAdressComponent,SearchEmailComponent,CustomerSearchComponent,CustomerDetailsComponent,CustomerSideNavComponent,DetailsComponent,TranscationComponent, SuppliermanagementComponent,SmSupplierdetailsComponent,SmAddressComponent,SupplierSearchComponent,SmBusinessComponent,PmPaymentComponent,PaymentSearchComponent,QuotationsEditComponent,QuotationsSearchComponent, ExpensemanagementComponent, ExpenseSearchComponent,PmPaymentViewComponent,ExpensemanagementViewComponent, DialogContentExampleDialog,DialogContentExampleDialogCustomer,DialogContentExampleDialogExpense,DialogContentExampleDialogInvoice,DialogContentExampleDialogPayment,DialogContentExampleDialogQuotations],\r\n  exports: [CommonModule],\r\n  entryComponents: [\r\n    DialogContentExampleDialog,\r\n    DialogContentExampleDialogCustomer,\r\n    DialogContentExampleDialogExpense,\r\n    DialogContentExampleDialogInvoice,\r\n    DialogContentExampleDialogPayment,\r\n    DialogContentExampleDialogQuotations,\r\n    CRDNDeleteDialog,\r\n    DialogContentExampleDialogInventory,\r\n    DialogDeleteStockItem,\r\n    DialogDeleteServiceItem,\r\n    Invoice80mmComponent,\r\n    PmPaymentDialogContentComponent,\r\n    CrdnDialogContentComponent,\r\n    DialogComponent\r\n  ]\r\n  // entryComponents: [DialogContentExampleDialog]\r\n})\r\nexport class AdminModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/admin.module.ts","module.exports = \"<div id=\\\"page-header\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n  <h2>Barcode Generate</h2>\\r\\n</div>\\r\\n<div style=\\\"margin: 20px 0;\\\" align=\\\"center\\\">\\r\\n  <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n    <div fxFlex=\\\"100\\\">\\r\\n      <button\\r\\n        md-raised-button\\r\\n        color=\\\"accent\\\"\\r\\n        (click)=\\\"pop()\\\"\\r\\n        style=\\\"height: 40px;\\\"\\r\\n      >\\r\\n        Generate\\r\\n      </button>\\r\\n\\r\\n      <button\\r\\n        md-raised-button\\r\\n        color=\\\"accent\\\"\\r\\n        (click)=\\\"reset()\\\"\\r\\n        style=\\\"height: 40px;\\\"\\r\\n      >\\r\\n        Reset\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<aside id=\\\"page-content\\\" style=\\\"overflow: auto\\\">\\r\\n  <div class=\\\"padding-side\\\">\\r\\n    <md-card class=\\\"invoice-form-table\\\">\\r\\n      <div class=\\\"invoice-form-th\\\">\\r\\n        <md-list>\\r\\n          <md-list-item layout=\\\"row\\\" layout-wrap class=\\\"invoice-form-list-item\\\">\\r\\n            <span flex=\\\"10\\\" class=\\\"padding-side\\\">S.no</span>\\r\\n            <span flex=\\\"40\\\" class=\\\"padding-side\\\">Stock Item</span>\\r\\n            <span flex=\\\"15\\\" class=\\\"padding-side\\\">Qty</span>\\r\\n            <span flex=\\\"15\\\" class=\\\"padding-side\\\">Delete</span>\\r\\n            <span\\r\\n              flex=\\\"5\\\"\\r\\n              class=\\\"padding-side\\\"\\r\\n              *ngIf=\\\"isEditable == 'true'\\\"\\r\\n            ></span>\\r\\n          </md-list-item>\\r\\n        </md-list>\\r\\n      </div>\\r\\n      <br />\\r\\n      <div class=\\\"invoice-form-tb\\\">\\r\\n        <md-list>\\r\\n          <ng-template\\r\\n            let-index=\\\"index\\\"\\r\\n            let-item\\r\\n            let-last=\\\"last\\\"\\r\\n            ngFor\\r\\n            [ngForOf]=\\\"barcodesList\\\"\\r\\n          >\\r\\n            <md-list-item\\r\\n              layout=\\\"row\\\"\\r\\n              layout-wrap\\r\\n              (click)=\\\"selectLineItem(item, index)\\\"\\r\\n              *ngIf=\\\"item.stockName\\\"\\r\\n            >\\r\\n              <span\\r\\n                class=\\\"invoice-form-list-item-index\\\"\\r\\n                flex=\\\"10\\\"\\r\\n                class=\\\"padding-side\\\"\\r\\n              >\\r\\n                {{ index + 1 }}</span\\r\\n              >\\r\\n\\r\\n              <span flex=\\\"40\\\" class=\\\"padding-side\\\">\\r\\n                <!-- <md-input-container style=\\\"margin-top: -4px !important;\\\">\\r\\n                  <input\\r\\n                    mdInput\\r\\n                    placeholder=\\\"Choose Stock Item\\\"\\r\\n                    [ngModel)]=\\\"item.stockName\\\"\\r\\n                    (focus)=\\\"filterStockItems($event.target.values)\\\"\\r\\n                    (keyup)=\\\"filterStockItems($event.target.value)\\\"\\r\\n                    [mdAutocomplete]=\\\"autoStockItems\\\"\\r\\n                    [ngModelOptions]=\\\"{ standalone: true }\\\"\\r\\n                  />\\r\\n                  <md-autocomplete #autoStockItems=\\\"mdAutocomplete\\\">\\r\\n                    <md-option\\r\\n                      *ngFor=\\\"let fitem of filteredStockItems\\\"\\r\\n                      (click)=\\\"selectStockItem(fitem)\\\"\\r\\n                    >\\r\\n                      {{ fitem.productName }}\\r\\n                    </md-option>\\r\\n                  </md-autocomplete>\\r\\n                </md-input-container> -->\\r\\n                <md-input-container class=\\\"col-xs-12\\\">\\r\\n                  <input\\r\\n                    mdInput\\r\\n                    placeholder=\\\"Choose Stock Item\\\"\\r\\n                    [ngModel]=\\\"item.stockName\\\"\\r\\n                    (focus)=\\\"filterStockItems($event.target.values)\\\"\\r\\n                    (keyup)=\\\"filterStockItems($event.target.values)\\\"\\r\\n                    [mdAutocomplete]=\\\"autoStockItems\\\"\\r\\n                    [ngModelOptions]=\\\"{ standalone: true }\\\"\\r\\n                  />\\r\\n                  <md-autocomplete #autoStockItems=\\\"mdAutocomplete\\\">\\r\\n                    <md-option\\r\\n                      *ngFor=\\\"let fitem of filteredStockItems\\\"\\r\\n                      (click)=\\\"selectStockItem(fitem)\\\"\\r\\n                    >\\r\\n                      {{ fitem.productName }}\\r\\n                    </md-option>\\r\\n                  </md-autocomplete>\\r\\n                </md-input-container>\\r\\n              </span>\\r\\n              <span flex=\\\"15\\\" class=\\\"padding-side\\\">\\r\\n                <md-input-container>\\r\\n                  <input\\r\\n                    mdInput\\r\\n                    [(ngModel)]=\\\"item.qty\\\"\\r\\n                    (change)=\\\"itemValueChange(item)\\\"\\r\\n                  />\\r\\n                </md-input-container>\\r\\n              </span>\\r\\n\\r\\n              <span\\r\\n                flex=\\\"5\\\"\\r\\n                style=\\\"cursor: pointer;text-align:right;\\\"\\r\\n                class=\\\"padding-side\\\"\\r\\n                *ngIf=\\\"isEditable == 'true'\\\"\\r\\n              >\\r\\n                <md-icon\\r\\n                  color=\\\"accent\\\"\\r\\n                  (click)=\\\"removeItem(index)\\\"\\r\\n                  *ngIf=\\\"barcodesList.length > 1\\\"\\r\\n                  >delete</md-icon\\r\\n                >\\r\\n              </span>\\r\\n            </md-list-item>\\r\\n          </ng-template>\\r\\n        </md-list>\\r\\n        <br />\\r\\n        <br />\\r\\n        <div fxLayout=\\\"row\\\" style=\\\"font-size: 16px;\\\"></div>\\r\\n      </div>\\r\\n    </md-card>\\r\\n  </div>\\r\\n</aside>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/barcode-gen/barcode-gen.component.html\n// module id = ../../../../../src/app/components/admin/barcode-gen/barcode-gen.component.html\n// module chunks = 1","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/barcode-gen/barcode-gen.component.scss\n// module id = ../../../../../src/app/components/admin/barcode-gen/barcode-gen.component.scss\n// module chunks = 1","import { Component, OnInit, ViewChild, SimpleChanges } from \"@angular/core\";\r\nimport { RestService } from \"../../../common/rest.service\";\r\nimport { AppService } from \"../../../shared/service/app.service\";\r\n\r\nimport { Storage } from \"../../../shared/utils/storage\";\r\nimport {\r\n  MdDialog,\r\n  MdDialogRef,\r\n  MD_DIALOG_DATA,\r\n  MdPaginator\r\n} from \"@angular/material\";\r\nimport { BarcodePrintComponent } from \"../barcode-print/barcode-print.component\";\r\nimport { Barcode } from \"../../../entities/barcode.entity\";\r\nimport { StockItem } from \"../../../entities/stockitem.entity\";\r\n@Component({\r\n  selector: \"app-barcode-gen\",\r\n  templateUrl: \"./barcode-gen.component.html\",\r\n  styleUrls: [\"./barcode-gen.component.scss\"]\r\n})\r\nexport class BarcodeGenComponent implements OnInit {\r\n  //barcodeFrom: any = BARCODEFormGroup.init();\r\n  index: number = 0;\r\n  supplierList: any[] = [];\r\n  filteredSuppliers: any[] = [];\r\n  supplierSelected: string = \"\";\r\n\r\n  itemSelected: Barcode;\r\n  barcodesList: Barcode[] = [];\r\n  filteredStockItems: any[] = [];\r\n\r\n  isEditable: string = \"true\";\r\n  isEdit: boolean = false;\r\n  selectedItem: any;\r\n  stockItemList: any[] = [];\r\n\r\n  constructor(\r\n    private appService: AppService,\r\n    public dialog: MdDialog,\r\n    private restService: RestService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.loadStockItems();\r\n    this.add();\r\n  }\r\n  loadStockItems() {\r\n    this.restService\r\n      .getStockItems({ id: this.appService.getBranch().id })\r\n      .subscribe(results => {\r\n        this.stockItemList = results;\r\n      });\r\n  }\r\n  filterStockItems(val: string) {\r\n    if (this.isEditable == \"true\") {\r\n      this.filteredStockItems =\r\n        val && val != \"\"\r\n          ? this.stockItemList.filter(\r\n              s => s.productName.toLowerCase().indexOf(val.toLowerCase()) >= 0\r\n            )\r\n          : this.stockItemList;\r\n    } else {\r\n      this.filteredStockItems = [];\r\n    }\r\n  }\r\n\r\n  selectLineItem(lineItem, index) {\r\n    if (this.itemSelected !== lineItem) {\r\n      this.itemSelected = lineItem;\r\n    }\r\n  }\r\n\r\n  selectStockItem(item: StockItem) {\r\n    console.log(item);\r\n    this.itemSelected.stockName = item.productName;\r\n    // TODO this.itemSelected.barcode = item.barcode;\r\n    this.itemSelected.barcode = item.barcode;\r\n    // let isAvailable = false;\r\n    // this.stockItemList.forEach(element => {\r\n    //   if (element.stockName == this.itemSelected.stockName) {\r\n    //     isAvailable = true;\r\n    //   }\r\n    // });\r\n    // if (!isAvailable) this.add();\r\n  }\r\n\r\n  itemValueChange(item: any) {\r\n    let numberArray = Array(parseInt(item.qty)).fill(1);\r\n    console.log(\"numberArray\", numberArray);\r\n    this.itemSelected.qtyArray = numberArray;\r\n    this.add();\r\n  }\r\n\r\n  add() {\r\n    if (\r\n      this.barcodesList.length == 0 ||\r\n      (this.barcodesList[this.barcodesList.length - 1].stockName != null &&\r\n        this.barcodesList[this.barcodesList.length - 1].stockName != \" \")\r\n    ) {\r\n      let item = new Barcode();\r\n      item.qty = 0;\r\n      item.stockName = \" \";\r\n      this.barcodesList.push(item);\r\n    }\r\n  }\r\n  removeItem(index) {\r\n    this.barcodesList[index].stockName = null;\r\n    if (this.barcodesList.length > 0) {\r\n      setTimeout(() => {\r\n        this.barcodesList.splice(index, 1);\r\n      }, 10);\r\n    }\r\n  }\r\n  generate() {\r\n    //this.appService.setLocalItem(\"barcodes\", this.barcodesList);\r\n    // this.appService.navigate(\"admin/barcode-print\", []);\r\n  }\r\n  pop() {\r\n    console.log(\"pop method barcode list is \", this.barcodesList);\r\n    Storage.setLocalItem(\"barcodes\", this.barcodesList);\r\n    setTimeout(() => {\r\n      this.openDialog(null);\r\n    }, 10);\r\n  }\r\n  openDialog(id) {\r\n    const dialogRef = this.dialog.open(BarcodePrintComponent, {\r\n      width: \"1200px\",\r\n      height: \"850px\",\r\n      data: id\r\n    });\r\n  }\r\n  reset() {\r\n    this.barcodesList = [];\r\n    setTimeout(() => {\r\n      this.add();\r\n    }, 10);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/barcode-gen/barcode-gen.component.ts","module.exports = \"<div align=\\\"center\\\">\\r\\n  <div class=\\\"example-button-row margin\\\" style=\\\"text-align:center\\\">\\r\\n    <button md-raised-button color=\\\"accent\\\" (click)=\\\"print('barcode')\\\">\\r\\n      Print\\r\\n    </button>\\r\\n    <button md-raised-button color=\\\"accent\\\" (click)=\\\"cancel()\\\">\\r\\n      cancel\\r\\n    </button>\\r\\n  </div>\\r\\n  <div id=\\\"barcode\\\">\\r\\n    <div>\\r\\n      <div>\\r\\n        <div class=\\\"margin\\\">\\r\\n          <div style=\\\"width:70mm;padding:2mm\\\">\\r\\n            <ng-container *ngFor=\\\"let item of barcodes\\\">\\r\\n              <ng-container *ngFor=\\\"let subItem of item.qtyArray\\\">\\r\\n                <div>\\r\\n                  <ngx-barcode\\r\\n                    [bc-value]=\\\"item.barcode\\\"\\r\\n                    [bc-display-value]=\\\"true\\\"\\r\\n                  ></ngx-barcode>\\r\\n                  <span style=\\\"text-align:center\\\">{{ item.stockName }}</span>\\r\\n                </div>\\r\\n              </ng-container>\\r\\n            </ng-container>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/barcode-print/barcode-print.component.html\n// module id = ../../../../../src/app/components/admin/barcode-print/barcode-print.component.html\n// module chunks = 1","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"ngx-barcode {\\n  width: 38mm;\\n  height: 26mm; }\\n\\n.margin {\\n  margin-top: 50px;\\n  margin-bottom: 50px; }\\n\\np {\\n  font-size: 13px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/barcode-print/barcode-print.component.scss\n// module id = ../../../../../src/app/components/admin/barcode-print/barcode-print.component.scss\n// module chunks = 1","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { Barcode } from \"../../../entities/barcode.entity\";\r\nimport { AppService } from \"app/shared/service/app.service\";\r\nimport { Storage } from \"../../../shared/utils/storage\";\r\nimport { MdDialog, MdDialogRef } from \"@angular/material\";\r\nimport { BarcodeGenComponent } from \"../barcode-gen/barcode-gen.component\";\r\n\r\n@Component({\r\n  selector: \"app-barcode-print\",\r\n  templateUrl: \"./barcode-print.component.html\",\r\n  styleUrls: [\"./barcode-print.component.scss\"]\r\n})\r\nexport class BarcodePrintComponent implements OnInit {\r\n  todolist: any;\r\n  isLinear = false;\r\n  firstFormGroup: FormGroup;\r\n  secondFormGroup: FormGroup;\r\n  barcodes: any;\r\n\r\n  constructor(\r\n    private appService: AppService,\r\n    public dialog: MdDialog,\r\n    public dialogRef: MdDialogRef<BarcodePrintComponent>\r\n  ) {\r\n    this.getBarcodes();\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  getBarcodes() {\r\n    this.barcodes = Storage.getLocalItem(\"barcodes\");\r\n    console.log(\"barcode data\", this.barcodes);\r\n  }\r\n  print(barcode) {\r\n    let printContents = document.getElementById(\"barcode\").innerHTML;\r\n    let originalContents = document.body.innerHTML;\r\n\r\n    document.body.innerHTML = printContents;\r\n    // this.dialogRef.close();\r\n    window.print();\r\n    setTimeout(function() {\r\n      window.close();\r\n    }, 2000);\r\n    document.body.innerHTML = originalContents;\r\n    // this.dialogRef.close();\r\n  }\r\n  cancel() {\r\n    //let originalContents = document.body.innerHTML;\r\n    this.dialogRef.close();\r\n    // document.body.innerHTML = originalContents;\r\n  }\r\n}\r\n\r\n// }\r\n// add(barcode, stockName, qty) {\r\n//   let numberArray = Array(qty).fill(1);\r\n//   let br = new Barcode();\r\n//   br.stockName = stockName;\r\n//   br.qty = numberArray;\r\n//   br.barcode = barcode;\r\n//  // this.items.push(br);\r\n// }\r\n// // items: any[] = [\r\n//   {\r\n//     barcode: \"123456789\",\r\n//     stockName: \"Colgate Maxfresh Toothpaste 200gm\"\r\n//   },\r\n//   {\r\n//     barcode: \"789012546\",\r\n//     stockName: \"society Leaf tea 500gm\",\r\n//     qty: 3\r\n//   },\r\n//   {\r\n//     barcode: \"487630247\",\r\n//     stockName: \"Rin Supreme Smart Pack 250g*4\",\r\n//     qty: 1\r\n//   },\r\n//   {\r\n//     barcode: \"512985601\",\r\n//     stockName: \"Nirma Washing  powder 1 kg\",\r\n//     qty: 2\r\n//   },\r\n//   {\r\n//     barcode: \"827643521\",\r\n//     stockName: \"Nirma Super powder 500 gm\",\r\n//     qty: 4\r\n//   },\r\n//   {\r\n//     barcode: \"630990764\",\r\n//     stockName: \"Pantene Anti Dantdruf 100 ml\",\r\n//     qty: 2\r\n//   },\r\n//   {\r\n//     barcode: \"830990768\",\r\n//     stockName: \"Wheel Blue Powder 1 kg\",\r\n//     qty: 3\r\n//   },\r\n//   {\r\n//     barcode: \"833385595\",\r\n//     stockName: \"Wheel powder 1 kg\",\r\n//     qty: 2\r\n//   },\r\n//   {\r\n//     barcode: \"863980322\",\r\n//     stockName: \"Tide Powder 500gm\",\r\n//     qty: 1\r\n//   },\r\n//   {\r\n//     barcode: \"754653219\",\r\n//     stockName: \"Surf Excel 200 gm\",\r\n//     qty: 2\r\n//   },\r\n//   {\r\n//     barcode: \"845267092\",\r\n//     stockName: \"Surf Excel 500 gm\",\r\n//     qty: 3\r\n//   },\r\n//   {\r\n//     barcode: \"207746521\",\r\n//     stockName: \"Ariel Compact 500 gm\",\r\n//     qty: 1\r\n//   },\r\n//   {\r\n//     barcode: \"143562890\",\r\n//     stockName: \"Surf Multi Action Powder 2 Kg\",\r\n//     qty: 2\r\n//   },\r\n//   {\r\n//     barcode: \"823190473\",\r\n//     stockName: \"Vimal Multipurpose Liquid Soap 1000ml\",\r\n//     qty: 2\r\n//   },\r\n//   {\r\n//     barcode: \"845290185\",\r\n//     stockName: \"Rin Shakti Powder 1kg+Lifebuoy Red\",\r\n//     qty: 2\r\n//   },\r\n//   {\r\n//     barcode: \"145890375\",\r\n//     stockName: \"lever Ayush Body lotion 200gm\",\r\n//     qty: 4\r\n//   },\r\n//   {\r\n//     barcode: \"284148209\",\r\n//     stockName: \"Ariel Compact 500 gm + 100gm\",\r\n//     qty: 3\r\n//   },\r\n//   {\r\n//     barcode: \"778044823\",\r\n//     stockName: \"Rexona Super Saver Pack 100g*4\",\r\n//     qty: 2\r\n//   },\r\n//   {\r\n//     barcode: \"562192389\",\r\n//     stockName: \"Tide Powder 200gm\",\r\n//     qty: 1\r\n//   },\r\n//   {\r\n//     barcode: \"486741245\",\r\n//     stockName: \"Tide Powder 1kg\",\r\n//     qty: 3\r\n//   },\r\n//   {\r\n//     barcode: \"854320147\",\r\n//     stockName: \"Ariel Gain Super Soaker 500 gm\",\r\n//     qty: 2\r\n//   },\r\n//   {\r\n//     barcode: \"730990768\",\r\n//     stockName: \"Everest Dry Ginger Powder 100gm\",\r\n//     qty: 2\r\n//   },\r\n//   {\r\n//     barcode: \"098532761\",\r\n//     stockName: \"Everest Chhole Masala 50gm\",\r\n//     qty: 1\r\n//   },\r\n//   {\r\n//     barcode: \"325783486\",\r\n//     stockName: \"Everest Kitchen King 50gm\",\r\n//     qty: 2\r\n//   },\r\n\r\n//   {\r\n//     barcode: \"376289437\",\r\n//     stockName: \"Surf Excel 1kg\",\r\n//     qty: 1\r\n//   },\r\n//   {\r\n//     barcode: \"146732573\",\r\n//     stockName: \"Surf Excel Sac 22gm\",\r\n//     qty: 2\r\n//   },\r\n//   {\r\n//     barcode: \"820764563\",\r\n//     stockName: \"Wheel Blue Bar 250gm\",\r\n//     qty: 3\r\n//   },\r\n//   {\r\n//     barcode: \"234761857\",\r\n//     stockName: \"Godrej Refined Vegetable Oil 1 Lit PP\",\r\n//     qty: 3\r\n//   },\r\n//   {\r\n//     barcode: \"284367318\",\r\n//     stockName: \"Rin Sup Powder 500gm\",\r\n//     qty: 4\r\n//   },\r\n//   {\r\n//     barcode: \"467828419\",\r\n//     stockName: \"Sobisco Puff Cream Biscuits 300gm\"\r\n//   },\r\n//   {\r\n//     barcode: \"192837460\",\r\n//     stockName: \"Sobisco Prime Time Biscuits 300gm\"\r\n//   },\r\n//   {\r\n//     barcode: \"247632890\",\r\n//     stockName: \"Camel Divider\"\r\n//   },\r\n//   {\r\n//     barcode: \"465789231\",\r\n//     stockName: \"Parachute RB 100\"\r\n//   },\r\n//   {\r\n//     barcode: \"514376428\",\r\n//     stockName: \"Ariel Gain Super Soaker1kg\"\r\n//   },\r\n//   {\r\n//     barcode: \"348762184\",\r\n//     stockName: \"Wheel Blue Bar 125gm\"\r\n//   },\r\n//   {\r\n//     barcode: \"994816528\",\r\n//     stockName: \"Ariel Bar 125\"\r\n//   },\r\n//   {\r\n//     barcode: \"888676764\",\r\n//     stockName: \"Rin Supreme 400 gm\"\r\n//   },\r\n//   {\r\n//     barcode: \"627354628\",\r\n//     stockName: \"Wheel Green Cake 250 gm\"\r\n//   },\r\n//   {\r\n//     barcode: \"944022077\",\r\n//     stockName: \"Parle Melody Coconut 100gm\"\r\n//   },\r\n//   {\r\n//     barcode: \"834129365\",\r\n//     stockName: \"Wheel Green Powder 1kg\"\r\n//   },\r\n//   {\r\n//     barcode: \"578034721\",\r\n//     stockName: \"Rin Supreme 250gm\"\r\n//   },\r\n//   {\r\n//     barcode: \"632892674\",\r\n//     stockName: \"Rin Shakti 250gm\"\r\n//   },\r\n//   {\r\n//     barcode: \"834672128\",\r\n//     stockName: \"Lifebuoy Plus 100GM\"\r\n//   },\r\n//   {\r\n//     barcode: \"712648490\",\r\n//     stockName: \"Liril Lime Fresh 125gm\"\r\n//   },\r\n//   {\r\n//     barcode: \"672428391\",\r\n//     stockName: \"Savlon soap 75gm\"\r\n//   },\r\n//   {\r\n//     barcode: \"182736450\",\r\n//     stockName: \"Medimix 75 gm\"\r\n//   },\r\n//   {\r\n//     barcode: \"814398474\",\r\n//     stockName: \"Real Active Apple Juice 200ml\"\r\n//   },\r\n//   {\r\n//     barcode: \"934632162\",\r\n//     stockName: \"Margo Original Neem Soap 75 gms\"\r\n//   },\r\n\r\n//   {\r\n//     barcode: \"986683785\",\r\n//     stockName: \"Liril 75gm\"\r\n//   },\r\n//   {\r\n//     barcode: \"889708370\",\r\n//     stockName: \"Moti Sandal150 gms\"\r\n//   }\r\n// ];\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/barcode-print/barcode-print.component.ts","module.exports = \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n  <h2>\\r\\n    Credit Note and Debit Note\\r\\n  </h2>\\r\\n</div>\\r\\n\\r\\n<aside id=\\\"page-content\\\" fxLayout=\\\"column\\\">\\r\\n  <md-card style=\\\"margin: 1rem\\\">\\r\\n    <form [formGroup]=\\\"crdnFrom\\\" novalidate autocomplete=\\\"off\\\">\\r\\n      <section *ngIf=\\\"isEditable\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <aside class=\\\"col-xs-4 padding-side\\\">\\r\\n            <md-select\\r\\n              placeholder=\\\"Document Type\\\"\\r\\n              (change)=\\\"onDocumentChange(crdn.documentType)\\\"\\r\\n              [formControl]=\\\"crdnFrom.controls.crdn_document_type\\\"\\r\\n              [(ngModel)]=\\\"crdn.documentType\\\"\\r\\n            >\\r\\n              <md-option\\r\\n                *ngFor=\\\"let type of documentTypes\\\"\\r\\n                [value]=\\\"type.value\\\"\\r\\n              >\\r\\n                {{ type.name }}\\r\\n              </md-option>\\r\\n            </md-select>\\r\\n            <md-hint>\\r\\n              <form-messages [control]=\\\"crdnFrom.controls.crdn_document_type\\\">\\r\\n              </form-messages>\\r\\n            </md-hint>\\r\\n          </aside>\\r\\n          <div class=\\\"row \\\" *ngIf=\\\"showCreditNote\\\">\\r\\n            <div class=\\\"col-xs-4 padding-side\\\" style=\\\"margin-top:15px;\\\">\\r\\n              <md-input-container>\\r\\n                <input\\r\\n                  required\\r\\n                  mdInput\\r\\n                  placeholder=\\\"Receiver Name\\\"\\r\\n                  [formControl]=\\\"crdnFrom.controls.crdn_receiver_name\\\"\\r\\n                  [ngModel]=\\\"crdn.receiverName\\\"\\r\\n                  (focus)=\\\"filterCustomer(null)\\\"\\r\\n                  (keyup)=\\\"filterCustomer($event.target.value)\\\"\\r\\n                  [mdAutocomplete]=\\\"autoMobile\\\"\\r\\n                />\\r\\n                <md-autocomplete #autoMobile=\\\"mdAutocomplete\\\">\\r\\n                  <md-option\\r\\n                    *ngFor=\\\"let option of filteredCustomers\\\"\\r\\n                    [value]=\\\"option.displayName\\\"\\r\\n                    (click)=\\\"selectedCustomer(option)\\\"\\r\\n                  >\\r\\n                    {{ option.displayName }}\\r\\n                  </md-option>\\r\\n                </md-autocomplete>\\r\\n                <md-hint>\\r\\n                  <form-messages\\r\\n                    [control]=\\\"crdnFrom.controls.crdn_receiver_name\\\"\\r\\n                  >\\r\\n                  </form-messages>\\r\\n                </md-hint>\\r\\n              </md-input-container>\\r\\n            </div>\\r\\n            <div class=\\\"col-xs-4 padding-side\\\" style=\\\"margin-top:30px;\\\">\\r\\n              <md-select\\r\\n                required\\r\\n                placeholder=\\\"Choose Invoice Number\\\"\\r\\n                [formControl]=\\\"crdnFrom.controls.crdn_refund_voucher_number\\\"\\r\\n                [(ngModel)]=\\\"crdn.refundVoucherNumber\\\"\\r\\n              >\\r\\n                <md-option\\r\\n                  *ngFor=\\\"let item of salesLi\\\"\\r\\n                  [value]=\\\"item.invoiceNumber\\\"\\r\\n                  (click)=\\\"selectedSales(item)\\\"\\r\\n                  >{{ item.invoiceNumber }}\\r\\n                </md-option>\\r\\n              </md-select>\\r\\n\\r\\n              <md-hint>\\r\\n                <form-messages\\r\\n                  [control]=\\\"crdnFrom.controls.crdn_refund_voucher_number\\\"\\r\\n                >\\r\\n                </form-messages>\\r\\n              </md-hint>\\r\\n            </div>\\r\\n            <aside class=\\\"col-xs-4 padding-side\\\" style=\\\"margin-top:15px;\\\">\\r\\n              <md-input-container>\\r\\n                <input\\r\\n                  readonly\\r\\n                  mdInput\\r\\n                  placeholder=\\\" Customer GSTIN\\\"\\r\\n                  [formControl]=\\\"crdnFrom.controls.crdn_gst_reg_number\\\"\\r\\n                  [(ngModel)]=\\\"crdn.gstRegNumber\\\"\\r\\n                />\\r\\n                <md-hint>\\r\\n                  <form-messages\\r\\n                    [control]=\\\"crdnFrom.controls.crdn_gst_reg_number\\\"\\r\\n                  >\\r\\n                  </form-messages>\\r\\n                </md-hint>\\r\\n              </md-input-container>\\r\\n            </aside>\\r\\n            <aside class=\\\"col-xs-4 padding-side \\\" style=\\\"margin-top:15px;\\\">\\r\\n              <md-input-container>\\r\\n                <input\\r\\n                  required\\r\\n                  mdInput\\r\\n                  placeholder=\\\"Credit Note Date\\\"\\r\\n                  [formControl]=\\\"crdnFrom.controls.crdn_receipt_date\\\"\\r\\n                  [(ngModel)]=\\\"crdn.receiptDate\\\"\\r\\n                  [mdDatepicker]=\\\"receiptDateToggle\\\"\\r\\n                  readonly\\r\\n                />\\r\\n                <!-- [min]=\\\"min\\\" [max]=\\\"crdn.refundVoucherDate\\\" -->\\r\\n                <button\\r\\n                  mdSuffix\\r\\n                  [mdDatepickerToggle]=\\\"receiptDateToggle\\\"\\r\\n                ></button>\\r\\n                <md-hint>\\r\\n                  <form-messages\\r\\n                    [control]=\\\"crdnFrom.controls.crdn_receipt_date\\\"\\r\\n                  >\\r\\n                  </form-messages>\\r\\n                </md-hint>\\r\\n              </md-input-container>\\r\\n              <md-datepicker #receiptDateToggle></md-datepicker>\\r\\n            </aside>\\r\\n            <aside class=\\\"col-xs-4  padding-side\\\" style=\\\"margin-top:15px;\\\">\\r\\n              <md-input-container>\\r\\n                <input\\r\\n                  required\\r\\n                  mdInput\\r\\n                  placeholder=\\\"Refund Voucher Value\\\"\\r\\n                  [formControl]=\\\"crdnFrom.controls.crdn_refund_voucher_value\\\"\\r\\n                  [(ngModel)]=\\\"crdn.refundVoucherValue\\\"\\r\\n                />\\r\\n                <md-hint>\\r\\n                  <form-messages\\r\\n                    [control]=\\\"crdnFrom.controls.crdn_refund_voucher_value\\\"\\r\\n                  >\\r\\n                  </form-messages>\\r\\n                </md-hint>\\r\\n              </md-input-container>\\r\\n            </aside>\\r\\n            <aside class=\\\"col-xs-4  padding-side\\\" style=\\\"margin-top:30px;\\\">\\r\\n              <md-select\\r\\n                class=\\\"col-xs-12\\\"\\r\\n                placeholder=\\\"GST Tax\\\"\\r\\n                [formControl]=\\\"crdnFrom.controls.crdn_applicable_taxrate\\\"\\r\\n                [(ngModel)]=\\\"crdn.applicableTaxRate\\\"\\r\\n              >\\r\\n                <md-option *ngFor=\\\"let item of taxTypes\\\" [value]=\\\"item.value\\\">\\r\\n                  {{ item.key }}\\r\\n                </md-option>\\r\\n              </md-select>\\r\\n\\r\\n              <md-hint>\\r\\n                <form-messages\\r\\n                  [control]=\\\"crdnFrom.controls.crdn_applicable_taxrate\\\"\\r\\n                >\\r\\n                </form-messages>\\r\\n              </md-hint>\\r\\n            </aside>\\r\\n            <aside\\r\\n              class=\\\"col-xs-4 padding-side \\\"\\r\\n              style=\\\"margin-top:15px;margin-bottom: 15px\\\"\\r\\n            >\\r\\n              <md-input-container>\\r\\n                <input\\r\\n                  required\\r\\n                  mdInput\\r\\n                  readonly\\r\\n                  placeholder=\\\"Taxable Value\\\"\\r\\n                  [formControl]=\\\"crdnFrom.controls.crdn_taxable_value\\\"\\r\\n                  [(ngModel)]=\\\"crdn.taxableValue\\\"\\r\\n                />\\r\\n                <md-hint>\\r\\n                  <form-messages\\r\\n                    [control]=\\\"crdnFrom.controls.crdn_taxable_value\\\"\\r\\n                  >\\r\\n                  </form-messages>\\r\\n                </md-hint>\\r\\n              </md-input-container>\\r\\n            </aside>\\r\\n            <aside class=\\\"col-xs-4 padding-side \\\" style=\\\"margin-top:15px;\\\">\\r\\n              <md-input-container>\\r\\n                <input\\r\\n                  mdInput\\r\\n                  readonly\\r\\n                  placeholder=\\\"Cess Amount\\\"\\r\\n                  [formControl]=\\\"crdnFrom.controls.crdn_cess_amount\\\"\\r\\n                  [(ngModel)]=\\\"crdn.cessAmount\\\"\\r\\n                />\\r\\n                <md-hint>\\r\\n                  <form-messages [control]=\\\"crdnFrom.controls.crdn_cess_amount\\\">\\r\\n                  </form-messages>\\r\\n                </md-hint>\\r\\n              </md-input-container>\\r\\n            </aside>\\r\\n            <aside class=\\\"col-xs-4\\\" style=\\\"margin-top:15px;\\\">\\r\\n              <md-input-container>\\r\\n                <input\\r\\n                  mdInput\\r\\n                  placeholder=\\\"Reason For Return\\\"\\r\\n                  [formControl]=\\\"crdnFrom.controls.crdn_reason\\\"\\r\\n                  [(ngModel)]=\\\"crdn.reason\\\"\\r\\n                />\\r\\n                <md-hint>\\r\\n                  <form-messages [control]=\\\"crdnFrom.controls.crdn_reason\\\">\\r\\n                  </form-messages>\\r\\n                </md-hint>\\r\\n              </md-input-container>\\r\\n            </aside>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\" *ngIf=\\\"showDebitNote\\\">\\r\\n            <aside class=\\\"col-xs-4  padding-side\\\" style=\\\"margin-top:15px;\\\">\\r\\n              <md-input-container>\\r\\n                <input\\r\\n                  required\\r\\n                  mdInput\\r\\n                  placeholder=\\\"Supplier Name\\\"\\r\\n                  [formControl]=\\\"crdnFrom.controls.pi_supplier\\\"\\r\\n                  [(ngModel)]=\\\"supplierSelected\\\"\\r\\n                  (focus)=\\\"filterSupplier(null)\\\"\\r\\n                  (keyup)=\\\"filterSupplier($event.target.value)\\\"\\r\\n                  [mdAutocomplete]=\\\"autoMobile\\\"\\r\\n                />\\r\\n                <md-autocomplete #autoMobile=\\\"mdAutocomplete\\\">\\r\\n                  <md-option\\r\\n                    *ngFor=\\\"let option of filteredSuppliers\\\"\\r\\n                    [value]=\\\"option.displayName\\\"\\r\\n                    (click)=\\\"selectedSupplier(option)\\\"\\r\\n                  >\\r\\n                    {{ option.displayName }}\\r\\n                  </md-option>\\r\\n                </md-autocomplete>\\r\\n                <md-hint>\\r\\n                  <form-messages [control]=\\\"crdnFrom.controls.pi_supplier\\\">\\r\\n                  </form-messages>\\r\\n                </md-hint>\\r\\n              </md-input-container>\\r\\n            </aside>\\r\\n            <aside class=\\\"col-xs-4  padding-side\\\" style=\\\"margin-top:30px;\\\">\\r\\n              <md-select\\r\\n                required\\r\\n                placeholder=\\\"Choose PI Number\\\"\\r\\n                [formControl]=\\\"crdnFrom.controls.crdn_refund_voucher\\\"\\r\\n                [(ngModel)]=\\\"crdn.purchaseInvoice\\\"\\r\\n              >\\r\\n                <md-option\\r\\n                  *ngFor=\\\"let item of purchaseLi\\\"\\r\\n                  [value]=\\\"item.purchaseInvoiceNo\\\"\\r\\n                  (click)=\\\"selectedpurchaseInvoice(item)\\\"\\r\\n                  >{{ item.purchaseInvoiceNo }}\\r\\n                </md-option>\\r\\n              </md-select>\\r\\n              <md-hint>\\r\\n                <form-messages\\r\\n                  [control]=\\\"crdnFrom.controls.crdn_refund_voucher\\\"\\r\\n                >\\r\\n                </form-messages>\\r\\n              </md-hint>\\r\\n            </aside>\\r\\n            <aside class=\\\"col-xs-4  padding-side \\\" style=\\\"margin-top:15px;\\\">\\r\\n              <md-input-container>\\r\\n                <input\\r\\n                  readonly\\r\\n                  mdInput\\r\\n                  placeholder=\\\" Supplier GSTIN\\\"\\r\\n                  [formControl]=\\\"crdnFrom.controls.crdn_gst_reg\\\"\\r\\n                  [(ngModel)]=\\\"crdn.gstNo\\\"\\r\\n                />\\r\\n                <md-hint>\\r\\n                  <form-messages [control]=\\\"crdnFrom.controls.crdn_gst_reg\\\">\\r\\n                  </form-messages>\\r\\n                </md-hint>\\r\\n              </md-input-container>\\r\\n            </aside>\\r\\n            <aside class=\\\"col-xs-4 padding-side\\\" style=\\\"margin-top:15px;\\\">\\r\\n              <md-input-container>\\r\\n                <input\\r\\n                  required\\r\\n                  mdInput\\r\\n                  placeholder=\\\"Debit Note Date\\\"\\r\\n                  [formControl]=\\\"crdnFrom.controls.debit_receipt_date\\\"\\r\\n                  [(ngModel)]=\\\"crdn.receiptDate\\\"\\r\\n                  [mdDatepicker]=\\\"receiptDateToggle\\\"\\r\\n                  readonly\\r\\n                />\\r\\n                <button\\r\\n                  mdSuffix\\r\\n                  [mdDatepickerToggle]=\\\"receiptDateToggle\\\"\\r\\n                ></button>\\r\\n                <md-hint>\\r\\n                  <form-messages\\r\\n                    [control]=\\\"crdnFrom.controls.debit_receipt_date\\\"\\r\\n                  >\\r\\n                  </form-messages>\\r\\n                </md-hint>\\r\\n              </md-input-container>\\r\\n              <md-datepicker #receiptDateToggle></md-datepicker>\\r\\n            </aside>\\r\\n            <aside class=\\\"col-xs-4  padding-side\\\" style=\\\"margin-top:15px;\\\">\\r\\n              <md-input-container>\\r\\n                <input\\r\\n                  required\\r\\n                  mdInput\\r\\n                  placeholder=\\\"Refund Voucher Value\\\"\\r\\n                  [formControl]=\\\"crdnFrom.controls.crdn_refund_voucher\\\"\\r\\n                  [(ngModel)]=\\\"crdn.refundVoucher\\\"\\r\\n                />\\r\\n                <md-hint>\\r\\n                  <form-messages\\r\\n                    [control]=\\\"crdnFrom.controls.crdn_refund_voucher\\\"\\r\\n                  >\\r\\n                  </form-messages>\\r\\n                </md-hint>\\r\\n              </md-input-container>\\r\\n            </aside>\\r\\n            <aside class=\\\"col-xs-4 padding-side \\\" style=\\\"margin-top:30px;\\\">\\r\\n              <md-select\\r\\n                class=\\\"col-xs-12 \\\"\\r\\n                placeholder=\\\"GST Tax\\\"\\r\\n                [formControl]=\\\"crdnFrom.controls.crdn_applicable_tax\\\"\\r\\n                [(ngModel)]=\\\"crdn.applicableTax\\\"\\r\\n              >\\r\\n                <md-option *ngFor=\\\"let item of taxTypes\\\" [value]=\\\"item.value\\\">\\r\\n                  {{ item.key }}\\r\\n                </md-option>\\r\\n              </md-select>\\r\\n\\r\\n              <md-hint>\\r\\n                <form-messages\\r\\n                  [control]=\\\"crdnFrom.controls.crdn_applicable_tax\\\"\\r\\n                >\\r\\n                </form-messages>\\r\\n              </md-hint>\\r\\n            </aside>\\r\\n            <aside class=\\\"col-xs-4  padding-side \\\" style=\\\"margin-top:15px;\\\">\\r\\n              <md-input-container>\\r\\n                <input\\r\\n                  mdInput\\r\\n                  placeholder=\\\"Taxable Value\\\"\\r\\n                  [formControl]=\\\"crdnFrom.controls.crdn_taxable\\\"\\r\\n                  [(ngModel)]=\\\"crdn.taxable\\\"\\r\\n                />\\r\\n                <md-hint>\\r\\n                  <form-messages [control]=\\\"crdnFrom.controls.crdn_taxable\\\">\\r\\n                  </form-messages>\\r\\n                </md-hint>\\r\\n              </md-input-container>\\r\\n            </aside>\\r\\n            <aside class=\\\"col-xs-4  padding-side\\\" style=\\\"margin-top:15px;\\\">\\r\\n              <md-input-container>\\r\\n                <input\\r\\n                  mdInput\\r\\n                  readonly\\r\\n                  placeholder=\\\"Cess Amount\\\"\\r\\n                  [formControl]=\\\"crdnFrom.controls.crdn_cess_damount\\\"\\r\\n                  [(ngModel)]=\\\"crdn.cess\\\"\\r\\n                />\\r\\n                <md-hint>\\r\\n                  <form-messages\\r\\n                    [control]=\\\"crdnFrom.controls.crdn_cess_damount\\\"\\r\\n                  >\\r\\n                  </form-messages>\\r\\n                </md-hint>\\r\\n              </md-input-container>\\r\\n            </aside>\\r\\n            <aside class=\\\"col-xs-4  padding-side\\\" style=\\\"margin-top:15px;\\\">\\r\\n              <md-input-container>\\r\\n                <input\\r\\n                  mdInput\\r\\n                  placeholder=\\\"Reason For Return\\\"\\r\\n                  [formControl]=\\\"crdnFrom.controls.crdn_dreason\\\"\\r\\n                  [(ngModel)]=\\\"crdn.reason\\\"\\r\\n                />\\r\\n                <md-hint>\\r\\n                  <form-messages [control]=\\\"crdnFrom.controls.crdn_dreason\\\">\\r\\n                  </form-messages>\\r\\n                </md-hint>\\r\\n              </md-input-container>\\r\\n            </aside>\\r\\n          </div>\\r\\n        </div>\\r\\n      </section>\\r\\n    </form>\\r\\n    <!-- <div *ngIf=\\\"isEditable\\\" fxLayout=\\\"row\\\" style=\\\"padding: 1rem;\\\">\\r\\n      <div class=\\\"col-xs-12 end-xs\\\">\\r\\n        <button\\r\\n          md-raised-button\\r\\n          color=\\\"accent\\\"\\r\\n          [disabled]=\\\"!crdnFrom.valid\\\"\\r\\n          (click)=\\\"save()\\\"\\r\\n        >\\r\\n          Save\\r\\n        </button>\\r\\n        <button md-raised-button color=\\\"accent\\\" class=\\\"\\\" (click)=\\\"clearForm()\\\">\\r\\n          Clear\\r\\n        </button>\\r\\n      </div>\\r\\n    </div> -->\\r\\n  </md-card>\\r\\n\\r\\n  <app-products-servrvice-toggle\\r\\n    [(itemSalesSelected)]=\\\"itemSalesSelected\\\"\\r\\n    (outputProductToggle)=\\\"changeProductService($event)\\\"\\r\\n    (outputServiceToggle)=\\\"changeProductService($event)\\\"\\r\\n    (addProductEmitter)=\\\"addProduct($event)\\\"\\r\\n    (addServiceEmitter)=\\\"addService($event)\\\"\\r\\n    (clearEmitter)=\\\"clear()\\\"\\r\\n    (addItemEmitter)=\\\"addItem()\\\"\\r\\n  >\\r\\n  </app-products-servrvice-toggle>\\r\\n  <app-products-table [(itemSalesSelected)]=\\\"itemSalesSelected\\\">\\r\\n  </app-products-table>\\r\\n  <app-service-table [(itemSalesSelected)]=\\\"itemSalesSelected\\\">\\r\\n  </app-service-table>\\r\\n\\r\\n  <div\\r\\n    *ngIf=\\\"isEditable\\\"\\r\\n    fxLayout=\\\"row\\\"\\r\\n    style=\\\"padding: 1rem;margin-bottom: 5rem\\\"\\r\\n  >\\r\\n    <div class=\\\"col-xs-12 end-xs\\\">\\r\\n      <button\\r\\n        md-raised-button\\r\\n        color=\\\"accent\\\"\\r\\n        [disabled]=\\\"!crdnFrom.valid\\\"\\r\\n        (click)=\\\"save()\\\"\\r\\n      >\\r\\n        Save\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n</aside>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/crdn/crdn-edit/crdn-edit.component.html\n// module id = ../../../../../src/app/components/admin/crdn/crdn-edit/crdn-edit.component.html\n// module chunks = 1","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".row {\\n  margin-top: 20px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/crdn/crdn-edit/crdn-edit.component.scss\n// module id = ../../../../../src/app/components/admin/crdn/crdn-edit/crdn-edit.component.scss\n// module chunks = 1","import { AppService } from \"./../../../../shared/service/app.service\";\r\nimport { Component, OnInit, Input, Output } from \"@angular/core\";\r\n\r\nimport { CRDN } from \"./../../../../entities/crdn.entity\";\r\nimport { Service } from \"./../../../../entities/Service.entity\";\r\nimport { ProductComponent } from \"./../../../product/product.component\";\r\nimport { CRDNFormGroup } from \"../../../../forms/crdn.form\";\r\nimport { RestService } from \"../../../../common/rest.service\";\r\nimport { StockItem } from \"../../../../entities/stockitem.entity\";\r\nimport { Util } from \"app/shared/utils/util\";\r\nimport { Customer } from \"app/entities/customer.entity\";\r\nimport { Storage } from \"../../../../shared/utils/storage\";\r\nimport { Sales } from \"../../../../entities/sales.entity\";\r\n\r\nimport { Item } from \"app/entities/item.entity\";\r\nimport { Payment } from \"app/entities/payment\";\r\nimport { SupplierManagement } from \"app/entities/suppliermanagement\";\r\nimport { PurchaseInvoice } from \"app/entities/purchaseinvoice.entity\";\r\nimport { Subject } from \"rxjs/Subject\";\r\nimport { CustomerPayment } from \"../../../../entities/customerpayment.entity\";\r\nimport { CustomerTax } from \"../../../../entities/customertax.entity\";\r\nimport { Address } from \"../../../../entities/address.entity\";\r\n\r\n@Component({\r\n  selector: \"app-crdn-edit\",\r\n  templateUrl: \"./crdn-edit.component.html\",\r\n  styleUrls: [\"./crdn-edit.component.scss\"]\r\n})\r\nexport class CrdnEditComponent implements OnInit {\r\n  crdnFrom: any = CRDNFormGroup.init();\r\n  isProductToggle: boolean;\r\n  // crdn: CRDN;\r\n\r\n  @Input() selectedItem: any;\r\n  customerMobile: String;\r\n\r\n  itemSelected: Item;\r\n\r\n  customers: Customer[] = [];\r\n  taxTypes: any[] = [];\r\n\r\n  documentTypes: any[] = [];\r\n  crdn: CRDN = new CRDN();\r\n  isEditable: boolean;\r\n  isRecordFound: boolean = false;\r\n  public showControls: boolean = false;\r\n  min: Date;\r\n  max: Date;\r\n  isEdit: boolean = false;\r\n\r\n  productSubTotal: any = 0;\r\n  serviceSubTotal: any = 0;\r\n  addProductItem: Subject<any> = new Subject();\r\n  addServiceItem: Subject<any> = new Subject();\r\n  services: Service[] = [];\r\n  itemSalesSelected: Sales;\r\n  constructor(\r\n    private appService: AppService,\r\n    private restService: RestService\r\n  ) {\r\n    this.itemSalesSelected = new Sales();\r\n    // console.log(this.sales.items);\r\n    this.customer = new Customer();\r\n    // this.crdn = new CRDN();\r\n    CRDNFormGroup.edit(this.crdnFrom);\r\n\r\n    let isEditable = this.appService.getParam(\"isEditable\");\r\n    if (isEditable != undefined) {\r\n      let selectedItemInvoice: any = Storage.getLocalItem(\"selectedItem\");\r\n      this.crdn = selectedItemInvoice;\r\n      let selectedItemPurchaseInvoice: any = Storage.getLocalItem(\r\n        \"selectedItem\"\r\n      );\r\n      this.purchaseInvoice = selectedItemPurchaseInvoice;\r\n    } else {\r\n      this.isEdit = true;\r\n    }\r\n    this.retriveServices();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.init();\r\n    this.retriveCustomer();\r\n    this.retriveSuppliers();\r\n    this.changeProductService(true);\r\n  }\r\n\r\n  init() {\r\n    this.loadTaxTypes();\r\n    this.isEditable = true;\r\n    this.documentTypes = this.appService.getcrdnDocTypes();\r\n    this.crdn.companyId = this.appService.getBranch().id;\r\n    if (this.appService.getSessionUser().id)\r\n      this.crdn.userId = this.appService.getSessionUser().id;\r\n    else this.crdn.userId = 0;\r\n    this.isProductToggle = true;\r\n    CRDNFormGroup.edit(this.crdnFrom);\r\n  }\r\n\r\n  editCRDN(id: any, isEdit: any) {\r\n    this.restService.getCRDN(id).subscribe(result => {\r\n      if (result) {\r\n        this.isEditable = isEdit == \"true\" ? true : false;\r\n        this.crdn = result;\r\n        this.isProductToggle = this.crdn.productId == null ? false : true;\r\n        this.isRecordFound = true;\r\n        if (this.isProductToggle) {\r\n          this.isProductToggle = true;\r\n          this.crdn.serviceId = null;\r\n        } else {\r\n          this.isProductToggle = false;\r\n          this.crdn.productId = null;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  valid() {\r\n    if (this.isProductToggle) this.crdn.serviceId = null;\r\n    else this.crdn.productId = null;\r\n    return true;\r\n  }\r\n  save() {\r\n    if (!this.valid()) return;\r\n    console.log(\"Request:\" + JSON.stringify(this.crdn));\r\n    this.restService.crdnSave(this.crdn).subscribe(result => {\r\n      if (result) {\r\n        this.crdn = result;\r\n        this.appService.showMessage(\"Saved successfully.\");\r\n        this.crdnFrom.reset();\r\n        this.appService.navigate(\"admin/crdn-search\", []);\r\n      }\r\n    });\r\n  }\r\n\r\n  clearForm() {\r\n    this.isRecordFound = false;\r\n    this.crdn = new CRDN();\r\n    this.crdnFrom.reset();\r\n  }\r\n\r\n  retriveCustomer() {\r\n    this.restService\r\n      .searchUnpaidCutomerFrmInvoiceForPayment()\r\n      .subscribe(result => {\r\n        if (result) {\r\n          this.customers = result;\r\n          this.customers.forEach(item => {\r\n            item.gstRegNumber =\r\n              item.gstRegNumber == \"\" ? \"Not Registered\" : item.gstRegNumber;\r\n            if (item.businessName != null) {\r\n              if (item.businessName.length == 0) {\r\n                item.displayName =\r\n                  item.firstName + \" \" + item.lastName + \" \" + item.mobile;\r\n              } else {\r\n                item.displayName = item.businessName + \" \" + item.mobile;\r\n              }\r\n            } else {\r\n              item.displayName =\r\n                item.firstName + \" \" + item.lastName + \" \" + item.mobile;\r\n            }\r\n            this.crdnFrom.gst_reg_number = item.gstNo;\r\n          });\r\n        }\r\n      });\r\n  }\r\n  customer: Customer;\r\n  salesLi: any[] = [];\r\n  purchaseLi: any[] = [];\r\n\r\n  selectedCustomer(item: Customer) {\r\n    this.customer = item;\r\n    this.crdnFrom.customer = this.customer;\r\n    if (this.crdnFrom.customer.businessName != null) {\r\n      if (this.crdnFrom.customer.businessName.length == 0) {\r\n        this.crdnFrom.customer.displayName =\r\n          this.crdnFrom.customer.firstName +\r\n          \" \" +\r\n          this.crdnFrom.customer.lastName +\r\n          \" \" +\r\n          this.crdnFrom.customer.mobile;\r\n      } else {\r\n        this.crdnFrom.customer.displayName =\r\n          this.crdnFrom.customer.businessName +\r\n          \" \" +\r\n          this.crdnFrom.customer.mobile;\r\n      }\r\n    } else {\r\n      this.crdnFrom.customer.displayName =\r\n        this.crdnFrom.customer.businessName +\r\n        \" \" +\r\n        this.crdnFrom.customer.mobile;\r\n      this.crdnFrom.customer.displayName =\r\n        this.crdnFrom.customer.firstName +\r\n        \" \" +\r\n        this.crdnFrom.customer.lastName +\r\n        \" \" +\r\n        this.crdnFrom.customer.mobile;\r\n    }\r\n\r\n    this.retriveInvoices(item.id);\r\n    console.log(item);\r\n  }\r\n  customerId: number = 0;\r\n  retriveInvoices(customerId) {\r\n    this.salesLi = null;\r\n    this.restService\r\n      .searchInvoiceByCutomerIdForPayment(customerId)\r\n      .subscribe(result => {\r\n        if (result) {\r\n          this.salesLi = result;\r\n          console.log(this.salesLi);\r\n        }\r\n      });\r\n  }\r\n\r\n  filteredCustomers: any[] = [];\r\n  filteredSuppliers: any[] = [];\r\n\r\n  filterCustomer(val: string) {\r\n    this.filteredCustomers =\r\n      val && val != \"\"\r\n        ? this.customers.filter(\r\n            s =>\r\n              s.displayName.toLowerCase().indexOf(val.toLowerCase()) >= 0 ||\r\n              s.mobile.toLowerCase().indexOf(val.toLowerCase()) >= 0\r\n          )\r\n        : this.customers;\r\n    console.log(this.customers);\r\n    this.crdnFrom.invoiceNumber = null;\r\n  }\r\n  selectedSales(item: Sales) {\r\n    console.log(item);\r\n    this.itemSalesSelected = item;\r\n    this.crdn.refundVoucherNumber = item.invoiceNumber;\r\n    // this.crdnFrom.amount = item.total;\r\n    this.crdn.gstRegNumber = item.customer.gstNo;\r\n    this.crdn.taxableValue = item.totalBeforeTax;\r\n    this.crdn.cessAmount = item.cessAmount;\r\n  }\r\n\r\n  selectedpurchaseInvoice(item: PurchaseInvoice) {\r\n    this.purchaseInvoice = item;\r\n\r\n    // this.crdn.refundVoucherNumber = item.purchaseInvoiceNo;\r\n    // this.crdnFrom.amount = item.total;\r\n    this.crdn.gstNo = item.supplier.gstin;\r\n    this.crdn.taxable = item.totalPurchaseAmount;\r\n    console.log(\"crdn gstn \", this.crdn.gstNo);\r\n    console.log(\"taxable is \", this.crdn.taxable);\r\n    // this.crdn.cessAmount = item.cessAmount;\r\n  }\r\n\r\n  showCreditNote = false;\r\n  showDebitNote = false;\r\n\r\n  onDocumentChange(name) {\r\n    console.log(\"click\");\r\n    console.log(name);\r\n    if (name == \"C\") {\r\n      console.log(this.showCreditNote);\r\n      CRDNFormGroup.c(this.crdnFrom);\r\n\r\n      this.crdn = new CRDN();\r\n      this.isRecordFound = false;\r\n      CRDNFormGroup.edit(this.crdnFrom);\r\n      this.showCreditNote = true;\r\n      console.log(this.showCreditNote);\r\n      this.showDebitNote = false;\r\n      this.crdn.receiptDate = null;\r\n      this.crdn.refundVoucherDate = null;\r\n      this.crdnFrom.invoiceNumber = null;\r\n      this.crdn.reason = null;\r\n      this.crdn.cessAmount = null;\r\n      this.crdnFrom.gst_reg_number = null;\r\n      this.crdn.applicableTaxRate = null;\r\n      this.crdn.taxableValue = null;\r\n    } else if (name == \"D\") {\r\n      this.crdn = new CRDN();\r\n      CRDNFormGroup.d(this.crdnFrom);\r\n      this.isRecordFound = false;\r\n\r\n      CRDNFormGroup.d(this.crdnFrom);\r\n      this.showCreditNote = false;\r\n      this.showDebitNote = true;\r\n      this.crdn.applicableTaxRate = null;\r\n      this.crdn.taxableValue = null;\r\n      this.crdn.receiptDate = null;\r\n      this.crdn.refundVoucherDate = null;\r\n      this.crdnFrom.invoiceNumber = null;\r\n      this.crdn.reason = null;\r\n      this.crdn.cessAmount = null;\r\n      this.crdnFrom.gst_reg_number = null;\r\n    } else {\r\n      CRDNFormGroup.edit(this.crdnFrom);\r\n      this.showCreditNote = false;\r\n      this.showDebitNote = false;\r\n    }\r\n  }\r\n\r\n  suppliers: SupplierManagement[] = [];\r\n\r\n  retriveSuppliers() {\r\n    this.restService.retriveSupplier().subscribe(result => {\r\n      if (result) {\r\n        this.suppliers = result;\r\n\r\n        this.suppliers.forEach(item => {\r\n          item.gstin = item.gstin == \"\" ? \"Not Registered\" : item.gstin;\r\n          if (item.companyName != null) {\r\n            if (item.companyName.length == 0) {\r\n              item.displayName =\r\n                item.firstName + \" \" + item.lastName + \" \" + item.mobileNumber;\r\n            } else {\r\n              item.displayName = item.companyName + \" \" + item.mobileNumber;\r\n            }\r\n          } else {\r\n            item.displayName =\r\n              item.firstName + \" \" + item.lastName + \" \" + item.mobileNumber;\r\n          }\r\n          this.crdnFrom.gst_reg_number = item.gstin;\r\n        });\r\n      }\r\n    });\r\n  }\r\n  purchaseInvoice: PurchaseInvoice = new PurchaseInvoice();\r\n  supplierSelected: string;\r\n\r\n  selectedSupplier(item: PurchaseInvoice) {\r\n    console.log(item);\r\n    this.crdnFrom.supplierList = this.supplierList;\r\n\r\n    if (this.crdnFrom.supplierList.companyName != null) {\r\n      if (this.crdnFrom.supplierList.companyName.length == 0) {\r\n        this.crdnFrom.supplierList.displayName =\r\n          this.crdnFrom.supp.businessName +\r\n          \" \" +\r\n          this.crdnFrom.supplierList.mobileNumber;\r\n      } else {\r\n        this.crdnFrom.supplierList.displayName =\r\n          this.crdnFrom.supplierList.firstName +\r\n          \" \" +\r\n          this.crdnFrom.supplierList.lastName +\r\n          \" \" +\r\n          this.crdnFrom.supplierList.mobileNumber;\r\n      }\r\n    } else {\r\n      this.crdnFrom.supplierList.displayName =\r\n        this.crdnFrom.supplierList.companyName +\r\n        \" \" +\r\n        this.crdnFrom.supplierList.mobile;\r\n      this.crdnFrom.supplierList.displayName =\r\n        this.crdnFrom.supplierList.firstName +\r\n        \" \" +\r\n        this.crdnFrom.supplierList.lastName +\r\n        \" \" +\r\n        this.crdnFrom.supplierList.mobileNumber;\r\n    }\r\n\r\n    this.retrivePurchaseInvoice(item.id);\r\n  }\r\n\r\n  supplierId: number = 0;\r\n  retrivePurchaseInvoice(supplierId) {\r\n    this.purchaseLi = null;\r\n    this.restService\r\n      .searchPurchaseInvoiceBySupplierIdForPayment(supplierId)\r\n      .subscribe(result => {\r\n        if (result) {\r\n          this.purchaseLi = result;\r\n          console.log(this.purchaseLi);\r\n        }\r\n      });\r\n  }\r\n\r\n  // filteredSuppliers: any[] = [];\r\n  supplierList: any[] = [];\r\n\r\n  iseditable: string = \"true\";\r\n\r\n  filterSupplier(val: string) {\r\n    // if (this.iseditable == \"true\") {\r\n    this.filteredSuppliers =\r\n      val && val != \"\"\r\n        ? this.suppliers.filter(\r\n            s =>\r\n              s.companyName.toLowerCase().indexOf(val.toLowerCase()) >= 0 ||\r\n              s.mobileNumber.toLowerCase().indexOf(val.toLowerCase()) >= 0\r\n          )\r\n        : this.suppliers;\r\n    console.log(this.suppliers);\r\n    this.crdnFrom.purchaseInvoiceNo = null;\r\n  }\r\n  // selectedPurchaseInvoices(item: PurchaseInvoice) {\r\n  //   this.purchaseInvoice = item;\r\n  //   this.crdn.taxable = item.purchaseSubTotal;\r\n  //   this.purchaseInvoice.gstin = item.gstin;\r\n  //   console.log(this.purchaseInvoice);\r\n  //   console.log(this.purchaseInvoice);\r\n\r\n  //   // this.crdn.purchaseInvoice = item.purchaseInvoiceNo;\r\n  // }\r\n  loadTaxTypes() {\r\n    this.restService\r\n      .dataloadFromFile(\"./assets/json/common.json\")\r\n      .subscribe(results => {\r\n        this.taxTypes = results[\"Tax\"];\r\n        console.log(this.taxTypes);\r\n      });\r\n  }\r\n  // public isInvalid: boolean;\r\n  // public isvalid: boolean;\r\n  // public onChange(event: any): void {\r\n  //   this.isInvalid =\r\n  //     this.crdnFrom.crdn.taxableValue < this.crdnFrom.crdn.refundVoucherValue;\r\n  // }\r\n\r\n  // changeProductService(flipProduct: boolean) {\r\n  //   setTimeout(() => {\r\n  //     if (!this.itemSalesSelected.isProduct) {\r\n  //       this.productSubTotal = 0;\r\n  //       this.itemSalesSelected.productItems = [];\r\n  //       // this.changeGrandCalculate();\r\n  //     }\r\n  //     if (!this.itemSalesSelected.isService) {\r\n  //       this.serviceSubTotal = 0;\r\n  //       this.itemSalesSelected.serviceItems = [];\r\n  //       // this.changeGrandCalculate();\r\n  //     }\r\n\r\n  //     console.log(this.itemSalesSelected.productItems);\r\n  //     if (\r\n  //       this.itemSalesSelected.isProduct &&\r\n  //       this.itemSalesSelected.productItems != null &&\r\n  //       this.itemSalesSelected.productItems.length == 0\r\n  //     ) {\r\n  //       this.addProduct();\r\n  //     }\r\n  //     if (\r\n  //       this.itemSalesSelected.isService &&\r\n  //       this.itemSalesSelected.serviceItems != null &&\r\n  //       this.itemSalesSelected.serviceItems.length == 0\r\n  //     ) {\r\n  //       console.log(\"isService is true\");\r\n  //       this.addService();\r\n  //     }\r\n  //   }, 10);\r\n  // }\r\n  changeProductService(flipProduct: boolean) {\r\n    setTimeout(() => {\r\n      if (!this.itemSalesSelected.isProduct) {\r\n        this.productSubTotal = 0;\r\n        this.itemSalesSelected.items = [];\r\n        // this.changeGrandCalculate();\r\n      }\r\n      if (!this.itemSalesSelected.isService) {\r\n        this.serviceSubTotal = 0;\r\n        this.itemSalesSelected.serviceItems = [];\r\n        // this.changeGrandCalculate();\r\n      }\r\n\r\n      console.log(this.itemSalesSelected.items);\r\n      if (\r\n        this.itemSalesSelected.isProduct &&\r\n        this.itemSalesSelected.items != null &&\r\n        this.itemSalesSelected.items.length == 0\r\n      ) {\r\n        this.addProduct();\r\n      }\r\n      if (\r\n        this.itemSalesSelected.isService &&\r\n        this.itemSalesSelected.items != null &&\r\n        this.itemSalesSelected.items.length == 0\r\n      ) {\r\n        console.log(\"isService is true\");\r\n        this.addService();\r\n      }\r\n    }, 10);\r\n  }\r\n  addProduct() {\r\n    console.log(\"add product\");\r\n    // setTimeout(() => {\r\n    this.addProductItem.next();\r\n    // }, 10);\r\n  }\r\n  addService() {\r\n    console.log(\"add service\");\r\n    setTimeout(() => {\r\n      this.addServiceItem.next();\r\n    }, 10);\r\n  }\r\n  retriveServices() {\r\n    this.restService.retriveServices().subscribe(result => {\r\n      if (result) {\r\n        this.services = result;\r\n      } else {\r\n        this.services = [];\r\n      }\r\n    });\r\n  }\r\n  salesData() {\r\n    let productItems = [];\r\n    let serviceItems = [];\r\n\r\n    if (this.itemSalesSelected.isProduct) {\r\n      productItems = this.itemSalesSelected.items.filter(item => {\r\n        if (item.stockItemId.id != null) {\r\n          item.service = null;\r\n          return item;\r\n        }\r\n      });\r\n    }\r\n    if (this.itemSalesSelected.isService) {\r\n      serviceItems = this.itemSalesSelected.items.filter(item => {\r\n        if (item.service) {\r\n          if (item.service.id != null) {\r\n            item.stockItemId.id = null;\r\n            return item;\r\n          }\r\n        }\r\n      });\r\n    }\r\n    this.itemSalesSelected.items = [...productItems, ...serviceItems];\r\n\r\n    if (\r\n      this.itemSalesSelected.items == null ||\r\n      this.itemSalesSelected.items.length == 0\r\n    ) {\r\n      this.appService.showMessage(\r\n        \"Please select atleast one product or service.\"\r\n      );\r\n    }\r\n    if (this.itemSalesSelected.customer.id == null) {\r\n      if (!this.itemSalesSelected.customer.address) {\r\n        this.itemSalesSelected.customer.address = new Address();\r\n      }\r\n      this.itemSalesSelected.customer.address.lane = this.itemSalesSelected.customer.inlineAddress;\r\n      if (this.itemSalesSelected.isBillingAddress) {\r\n        this.itemSalesSelected.customer.shippingAddress = this.itemSalesSelected.customer.address;\r\n      } else {\r\n        this.itemSalesSelected.customer.shippingAddress = this.itemSalesSelected.address;\r\n      }\r\n      this.itemSalesSelected.customer.customerPayment = new CustomerPayment();\r\n      this.itemSalesSelected.customer.customerTax = new CustomerTax();\r\n    }\r\n    this.itemSalesSelected.userId = 1; // this.appService.getSessionUser().id;\r\n    console.log(this.appService.getSessionUser());\r\n  }\r\n\r\n  // itemCalculate(item: Item) {\r\n  //   //this.commonItemCalculate(item);\r\n  //   this.changeGrandCalculate();\r\n  // }\r\n  // getProductSubTotal(subTotal: any) {\r\n  //   console.log(\"in add invoice getProductSubTotal() \", subTotal);\r\n  //   this.productSubTotal = subTotal;\r\n  //   this.changeGrandCalculate();\r\n  // }\r\n  // getServiceSubTotal(subTotal: any) {\r\n  //   this.serviceSubTotal = subTotal;\r\n  //   this.changeGrandCalculate();\r\n  // }\r\n  // changeGrandCalculate($event?) {\r\n  //   this.itemSalesSelected.subTotal = this.productSubTotal + this.serviceSubTotal;\r\n  //   console.log(\"in add invoice changeGrandCalculate() \", this.itemSalesSelected.subTotal);\r\n  //   if (this.itemSalesSelected.subTotal) {\r\n  //     this.itemSalesSelected.cessValue = this.itemSalesSelected.subTotal * (this.itemSalesSelected.cess / 100);\r\n  //     this.itemSalesSelected.total = this.itemSalesSelected.subTotal + this.itemSalesSelected.cessValue;\r\n  //   }\r\n  //   this.itemSalesSelected.cessValue = this.itemSalesSelected.subTotal * (this.itemSalesSelected.cess / 100);\r\n  //   this.itemSalesSelected.total = this.itemSalesSelected.subTotal + this.itemSalesSelected.cessValue;\r\n  //   console.log(\"total is \", this.itemSalesSelected.total);\r\n  // }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/crdn/crdn-edit/crdn-edit.component.ts","import {\r\n  Component,\r\n  Inject,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ViewChild,\r\n  ElementRef\r\n} from \"@angular/core\";\r\nimport { MdDialog, MdDialogRef, MD_DIALOG_DATA } from \"@angular/material\";\r\nimport { RestService } from \"./../../../../common/rest.service\";\r\nimport { AppService } from \"../../../../shared/service/app.service\";\r\n\r\nimport {\r\n  TdDataTableService,\r\n  TdDataTableSortingOrder,\r\n  ITdDataTableSortChangeEvent,\r\n  ITdDataTableColumn\r\n} from \"@covalent/core\";\r\n@Component({\r\n  selector: \"crdn-delete-dialog\",\r\n  template: `\r\n    <h2 style=\"color:#000;\">Delete Confirmation</h2>\r\n    <hr style=\"background:#fff;\" />\r\n    <br />\r\n    <p style=\"font-size:16px;\">\r\n      Are you sure you want to delete?\r\n    </p>\r\n    <br /><br />\r\n    <button\r\n      md-button\r\n      color=\"primary\"\r\n      (click)=\"ok()\"\r\n      style=\"background:#ffc107; color:#fff;\"\r\n    >\r\n      Yes\r\n    </button>\r\n    <button\r\n      md-button\r\n      color=\"primary\"\r\n      (click)=\"cancel()\"\r\n      style=\"float:right; background:#ffc107; color:#fff;\"\r\n    >\r\n      No\r\n    </button>\r\n  `\r\n})\r\nexport class CRDNDeleteDialog {\r\n  myData: any;\r\n  constructor(\r\n    private restService: RestService,\r\n    private appService: AppService,\r\n    public dialogRef: MdDialogRef<CRDNDeleteDialog>,\r\n    @Inject(MD_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.myData = data;\r\n  }\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  //   ok() {\r\n  //     this.restService.crdnDelete(this.myData).subscribe(result => {\r\n  //       this.dialogRef.close();\r\n  //     });\r\n  //   }\r\n  ok() {\r\n    this.restService.crdnDelete(this.myData).subscribe(result => {\r\n      this.dialogRef.close();\r\n      this.appService.showMessage(\"CRDN Management Deleted Successfully \");\r\n    });\r\n  }\r\n  cancel() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/crdn/crdn-search/crdn-delete-dialog.component.ts","module.exports = \"<div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"space-around center\\\" align=\\\"center\\\">\\r\\n  <div\\r\\n    fxFlex=\\\"100\\\"\\r\\n    fxFlex.md=\\\"100\\\"\\r\\n    fxFlex.lg=\\\"100\\\"\\r\\n    fxFlex.xs=\\\"100\\\"\\r\\n    fxFlex.sm=\\\"100\\\"\\r\\n  >\\r\\n    <button md-raised-button color=\\\"accent\\\" (click)=\\\"print('component1')\\\">\\r\\n      Print\\r\\n    </button>\\r\\n    <button md-raised-button color=\\\"accent\\\" (click)=\\\"cancel()\\\">\\r\\n      Cancel\\r\\n    </button>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div id=\\\"component1\\\">\\r\\n  <div\\r\\n    fxLayout=\\\"row wrap\\\"\\r\\n    fxLayoutAlign=\\\"start start\\\"\\r\\n    style=\\\"margin-top:15px;margin-bottom:5px\\\"\\r\\n  >\\r\\n    <div\\r\\n      fxFlex=\\\"100\\\"\\r\\n      fxFlex.md=\\\"100\\\"\\r\\n      fxFlex.lg=\\\"100\\\"\\r\\n      fxFlex.xs=\\\"100\\\"\\r\\n      fxFlex.sm=\\\"100\\\"\\r\\n    >\\r\\n      <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n        <div\\r\\n          fxFlex=\\\"50\\\"\\r\\n          fxFlex.md=\\\"50\\\"\\r\\n          fxFlex.lg=\\\"50\\\"\\r\\n          fxFlex.xs=\\\"100\\\"\\r\\n          fxFlex.sm=\\\"100\\\"\\r\\n        >\\r\\n          <span\\r\\n            style=\\\"font-size:15px;font-family:arial, sans-serif;font-weight:600;\\\"\\r\\n            >{{ companyInfo.name }}</span\\r\\n          >\\r\\n        </div>\\r\\n        <div\\r\\n          fxFlex=\\\"50\\\"\\r\\n          fxFlex.md=\\\"50\\\"\\r\\n          fxFlex.lg=\\\"50\\\"\\r\\n          fxFlex.xs=\\\"100\\\"\\r\\n          fxFlex.sm=\\\"100\\\"\\r\\n        >\\r\\n          <span\\r\\n            style=\\\"font-size:15px;font-family:arial, sans-serif;font-weight:600;float:right\\\"\\r\\n            >Total : ₹ {{ dataSource.refundVoucherValue }}</span\\r\\n          >\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div\\r\\n    fxLayout=\\\"row wrap\\\"\\r\\n    fxLayoutAlign=\\\"start start\\\"\\r\\n    style=\\\"margin-top:5px;margin-bottom:5px\\\"\\r\\n  >\\r\\n    <div\\r\\n      fxFlex=\\\"100\\\"\\r\\n      fxFlex.md=\\\"100\\\"\\r\\n      fxFlex.lg=\\\"100\\\"\\r\\n      fxFlex.xs=\\\"100\\\"\\r\\n      fxFlex.sm=\\\"100\\\"\\r\\n    >\\r\\n      <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n        <div\\r\\n          fxFlex=\\\"50\\\"\\r\\n          fxFlex.md=\\\"50\\\"\\r\\n          fxFlex.lg=\\\"50\\\"\\r\\n          fxFlex.xs=\\\"100\\\"\\r\\n          fxFlex.sm=\\\"100\\\"\\r\\n        >\\r\\n          <div fxLayoutGap=\\\"30px\\\">\\r\\n            <span\\r\\n              style=\\\"font-size:12px;font-family:arial, sans-serif;font-weight:700;\\\"\\r\\n              >GSTIN\\r\\n            </span>\\r\\n\\r\\n            <span style=\\\"font-size:12px;font-family:arial, sans-serif\\\">\\r\\n              {{ companyInfo.gstin }}</span\\r\\n            >\\r\\n          </div>\\r\\n        </div>\\r\\n        <div\\r\\n          fxFlex=\\\"50\\\"\\r\\n          fxFlex.md=\\\"50\\\"\\r\\n          fxFlex.lg=\\\"50\\\"\\r\\n          fxFlex.xs=\\\"100\\\"\\r\\n          fxFlex.sm=\\\"100\\\"\\r\\n        >\\r\\n          <div style=\\\"float:right\\\">\\r\\n            <span\\r\\n              style=\\\"font-family:arial, sans-serif;font-size:12px;font-weight:700\\\"\\r\\n              >Receipt Date :\\r\\n            </span>\\r\\n            <span\\r\\n              style=\\\"font-family:arial, sans-serif;font-size:12px;float:right\\\"\\r\\n              >{{ dataSource.receiptDate }}</span\\r\\n            >\\r\\n            <br />\\r\\n            <span\\r\\n              style=\\\"font-family:arial, sans-serif;font-size:12px;font-weight:700\\\"\\r\\n              >Receipt No :\\r\\n            </span>\\r\\n            <span\\r\\n              style=\\\"font-family:arial, sans-serif;font-size:12px;float:right\\\"\\r\\n              >{{ dataSource.receiptNumber }}</span\\r\\n            >\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n    <div\\r\\n      fxFlex=\\\"100\\\"\\r\\n      fxFlex.md=\\\"100\\\"\\r\\n      fxFlex.lg=\\\"100\\\"\\r\\n      fxFlex.xs=\\\"100\\\"\\r\\n      fxFlex.sm=\\\"100\\\"\\r\\n    >\\r\\n      <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"30\\\">\\r\\n          <div\\r\\n            style=\\\"width:100%; border:1px solid rgb(102, 98, 98);margin-top:15px\\\"\\r\\n          ></div>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"40\\\">\\r\\n          <div style=\\\"text-align: center;\\\">\\r\\n            <span\\r\\n              align=\\\"center\\\"\\r\\n              style=\\\"font-family:arial, sans-serif;font-size:28px;\\\"\\r\\n              >CREDIT NOTE</span\\r\\n            >\\r\\n          </div>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"30\\\">\\r\\n          <div\\r\\n            style=\\\"width:100%; border:1px solid rgb(102, 98, 98);margin-top:15px\\\"\\r\\n          ></div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n    <div\\r\\n      fxFlex=\\\"100\\\"\\r\\n      fxFlex.md=\\\"100\\\"\\r\\n      fxFlex.lg=\\\"100\\\"\\r\\n      fxFlex.xs=\\\"100\\\"\\r\\n      fxFlex.sm=\\\"100\\\"\\r\\n    >\\r\\n      <div\\r\\n        fxFlex=\\\"70\\\"\\r\\n        fxFlex.md=\\\"70\\\"\\r\\n        fxFlex.lg=\\\"70\\\"\\r\\n        fxFlex.xs=\\\"100\\\"\\r\\n        fxFlex.sm=\\\"100\\\"\\r\\n      >\\r\\n        <div\\r\\n          style=\\\"font-weight: 600;padding-top:10px;font-family:arial, sans-serif;font-size:12px;font-weight:700\\\"\\r\\n        >\\r\\n          Payment Received From\\r\\n        </div>\\r\\n        <div style=\\\"font-family:arial, sans-serif;font-size:12px\\\">\\r\\n          Sai Reddy\\r\\n        </div>\\r\\n\\r\\n        <div style=\\\"font-family:arial, sans-serif;font-size:12px\\\">\\r\\n          Theru Bajar\\r\\n          <span style=\\\"font-family:arial, sans-serif;font-size:12px\\\"\\r\\n            >Lakshmi Pet\\r\\n          </span>\\r\\n        </div>\\r\\n\\r\\n        <div style=\\\"font-family:arial, sans-serif;font-size:12px\\\">\\r\\n          Yemmiganur\\r\\n        </div>\\r\\n\\r\\n        <div style=\\\"font-family:arial, sans-serif;font-size:12px\\\">\\r\\n          Kurnool\\r\\n        </div>\\r\\n\\r\\n        <div style=\\\"font-family:arial, sans-serif;font-size:12px\\\">\\r\\n          Andhra Pradseh -\\r\\n\\r\\n          <span style=\\\"font-family:arial, sans-serif;font-size:12px\\\">\\r\\n            518360\\r\\n          </span>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div\\r\\n        fxFlex=\\\"30\\\"\\r\\n        fxFlex.md=\\\"30\\\"\\r\\n        fxFlex.lg=\\\"30\\\"\\r\\n        fxFlex.xs=\\\"100\\\"\\r\\n        fxFlex.sm=\\\"100\\\"\\r\\n      >\\r\\n        <div\\r\\n          style=\\\"font-weight:700;padding-top:10px;font-family:arial, sans-serif;font-size:12px\\\"\\r\\n        >\\r\\n          Attention : Sai Kumar\\r\\n        </div>\\r\\n\\r\\n        <span\\r\\n          style=\\\"font-weight:700;font-family:arial, sans-serif;font-size:12px\\\"\\r\\n          >Due Date :</span\\r\\n        >\\r\\n        <span style=\\\"padding: 3px;font-family:arial, sans-serif;font-size:12px\\\">\\r\\n          03-04-1996\\r\\n        </span>\\r\\n        <br />\\r\\n        <span\\r\\n          style=\\\"font-weight:700;font-family:arial, sans-serif;font-size:12px\\\"\\r\\n          >Place Of Supply :</span\\r\\n        >\\r\\n        <span style=\\\"padding: 3px;font-family:arial, sans-serif;font-size:12px\\\">\\r\\n          Telangana\\r\\n        </span>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div style=\\\"margin-top:10px\\\"></div>\\r\\n  <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n    <div\\r\\n      fxFlex=\\\"100\\\"\\r\\n      fxFlex.md=\\\"100\\\"\\r\\n      fxFlex.lg=\\\"100\\\"\\r\\n      fxFlex.xs=\\\"100\\\"\\r\\n      fxFlex.sm=\\\"100\\\"\\r\\n    >\\r\\n      <table style=\\\"width:100%;text-align:left;border-collapse: collapse;\\\">\\r\\n        <tr>\\r\\n          <th style=\\\" border: 1px solid #dddddd;padding:4px\\\">ITEM NAME</th>\\r\\n          <th style=\\\" border: 1px solid #dddddd;padding:4px\\\">QTY</th>\\r\\n          <th style=\\\" border: 1px solid #dddddd;padding:4px\\\">RATE</th>\\r\\n          <th style=\\\" border: 1px solid #dddddd;padding:4px\\\">TOTAL</th>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td style=\\\" border: 1px solid #dddddd;padding:4px\\\">Chocolate</td>\\r\\n          <td style=\\\" border: 1px solid #dddddd;padding:4px\\\">10</td>\\r\\n          <td style=\\\" border: 1px solid #dddddd;padding:4px\\\">20</td>\\r\\n          <td style=\\\" border: 1px solid #dddddd;padding:4px\\\">\\r\\n            {{ dataSource.refundVoucherValue }}\\r\\n          </td>\\r\\n        </tr>\\r\\n      </table>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div style=\\\"margin-bottom: 10px\\\"></div>\\r\\n  <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n    <div\\r\\n      fxFlex=\\\"100\\\"\\r\\n      fxFlex.md=\\\"100\\\"\\r\\n      fxFlex.lg=\\\"100\\\"\\r\\n      fxFlex.xs=\\\"100\\\"\\r\\n      fxFlex.sm=\\\"100\\\"\\r\\n    >\\r\\n      <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n        <div\\r\\n          fxFlex=\\\"80\\\"\\r\\n          fxFlex.md=\\\"80\\\"\\r\\n          fxFlex.lg=\\\"80\\\"\\r\\n          fxFlex.xs=\\\"100\\\"\\r\\n          fxFlex.sm=\\\"100\\\"\\r\\n        >\\r\\n          <div style=\\\"text-align: right;padding:0px 10px\\\">\\r\\n            <span\\r\\n              style=\\\"font-family:arial, sans-serif;font-size:14px;font-weight:600\\\"\\r\\n            >\\r\\n              Total :\\r\\n            </span>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div\\r\\n          fxFlex=\\\"20\\\"\\r\\n          fxFlex.md=\\\"20\\\"\\r\\n          fxFlex.lg=\\\"20\\\"\\r\\n          fxFlex.xs=\\\"100\\\"\\r\\n          fxFlex.sm=\\\"100\\\"\\r\\n        >\\r\\n          <div style=\\\"text-align: right;padding:0px 10px\\\">\\r\\n            <span\\r\\n              style=\\\"font-family:arial, sans-serif;font-size:13px;font-weight:500\\\"\\r\\n            >\\r\\n              ₹ {{ dataSource.refundVoucherValue }}\\r\\n            </span>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div style=\\\"margin-bottom: 10px\\\"></div>\\r\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n    <div\\r\\n      fxFlex=\\\"100\\\"\\r\\n      fxFlex.md=\\\"100\\\"\\r\\n      fxFlex.lg=\\\"100\\\"\\r\\n      fxFlex.xs=\\\"100\\\"\\r\\n      fxFlex.sm=\\\"100\\\"\\r\\n    >\\r\\n      <span\\r\\n        style=\\\"padding-bottom:10px;font-family: arial,sans-serif;font-size:12px;font-weight:700\\\"\\r\\n        >Notes:</span\\r\\n      >\\r\\n      <div style=\\\"margin-bottom: 5px\\\"></div>\\r\\n      <p\\r\\n        style=\\\"padding-bottom:10px;font-family: arial,sans-serif;font-size:12px\\\"\\r\\n      >\\r\\n        1. All disputes are subject to Hyderabad jurisdiction only.\\r\\n      </p>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start end\\\">\\r\\n    <div\\r\\n      fxFlex=\\\"50\\\"\\r\\n      fxFlex.md=\\\"50\\\"\\r\\n      fxFlex.lg=\\\"50\\\"\\r\\n      fxFlex.xs=\\\"100\\\"\\r\\n      fxFlex.sm=\\\"100\\\"\\r\\n    >\\r\\n      <span\\r\\n        style=\\\"font-size: 12px;\\r\\n    padding: 7px;\\r\\n    float: left;\\r\\n    font-family: arial,sans-serif;font-weight:700\\\"\\r\\n        >Thank you for your business</span\\r\\n      >\\r\\n    </div>\\r\\n    <div\\r\\n      fxFlex=\\\"50\\\"\\r\\n      fxFlex.md=\\\"50\\\"\\r\\n      fxFlex.lg=\\\"50\\\"\\r\\n      fxFlex.xs=\\\"100\\\"\\r\\n      fxFlex.sm=\\\"100\\\"\\r\\n    >\\r\\n      <span\\r\\n        style=\\\"float:right;\\r\\n    font-size: 12px;\\r\\n    padding: 5px;\\r\\n    font-family: arial,sans-serif;font-weight:700;\\\"\\r\\n        >Powered by\\r\\n        <svg\\r\\n          id=\\\"svg\\\"\\r\\n          version=\\\"1.1\\\"\\r\\n          width=\\\"15\\\"\\r\\n          height=\\\"15\\\"\\r\\n          viewBox=\\\"0 0 400 530\\\"\\r\\n          xmlns=\\\"http://www.w3.org/2000/svg\\\"\\r\\n          xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\r\\n          style=\\\"vertical-align: middle\\\"\\r\\n        >\\r\\n          <g id=\\\"svgg\\\">\\r\\n            <path\\r\\n              id=\\\"path0\\\"\\r\\n              d=\\\"M341.500 7.872 C 339.355 7.958,337.600 8.176,337.600 8.356 C 337.600 8.536,335.485 8.808,332.900 8.962 C 330.315 9.115,328.140 9.411,328.067 9.620 C 327.993 9.829,327.318 10.000,326.567 10.000 C 325.815 10.000,325.200 10.163,325.200 10.362 C 325.200 10.562,324.300 10.849,323.200 11.000 C 322.100 11.151,321.200 11.424,321.200 11.606 C 321.200 11.788,320.660 12.055,320.000 12.200 C 319.340 12.345,318.800 12.610,318.800 12.788 C 318.800 12.967,318.370 13.221,317.844 13.353 C 314.952 14.079,316.432 14.800,320.813 14.800 C 323.471 14.800,325.200 14.958,325.200 15.200 C 325.200 15.420,324.570 15.600,323.800 15.600 C 323.030 15.600,322.400 15.756,322.400 15.947 C 322.400 16.138,321.654 16.395,320.742 16.517 C 319.831 16.639,318.976 16.907,318.842 17.112 C 318.709 17.317,317.925 17.609,317.100 17.760 C 316.275 17.912,315.600 18.188,315.600 18.373 C 315.600 18.558,314.790 18.831,313.800 18.979 C 312.810 19.128,312.000 19.418,312.000 19.625 C 312.000 19.831,311.550 20.000,311.000 20.000 C 310.450 20.000,310.000 20.160,310.000 20.355 C 310.000 20.550,309.190 20.831,308.200 20.979 C 307.210 21.128,306.400 21.405,306.400 21.596 C 306.400 21.786,305.410 22.066,304.200 22.217 C 302.990 22.368,302.000 22.635,302.000 22.809 C 302.000 22.983,301.100 23.249,300.000 23.400 C 298.900 23.551,298.000 23.817,298.000 23.991 C 298.000 24.165,297.653 24.397,297.230 24.508 C 296.688 24.650,296.523 24.544,296.674 24.151 C 296.792 23.844,297.318 23.485,297.844 23.353 C 298.370 23.221,298.800 22.967,298.800 22.788 C 298.800 22.610,299.340 22.345,300.000 22.200 C 300.660 22.055,301.200 21.791,301.200 21.614 C 301.200 21.436,302.010 21.169,303.000 21.021 C 303.990 20.872,304.800 20.582,304.800 20.375 C 304.800 20.169,305.430 20.000,306.200 20.000 C 306.970 20.000,307.600 19.836,307.600 19.635 C 307.600 19.434,308.320 19.149,309.200 19.000 C 310.080 18.851,310.800 18.585,310.800 18.408 C 310.800 18.231,311.255 17.973,311.810 17.833 C 313.418 17.430,315.048 15.600,313.800 15.600 C 313.470 15.600,313.200 15.763,313.200 15.962 C 313.200 16.162,312.300 16.449,311.200 16.600 C 310.100 16.751,309.200 17.027,309.200 17.213 C 309.200 17.399,308.390 17.672,307.400 17.821 C 306.410 17.969,305.600 18.234,305.600 18.408 C 305.600 18.583,303.890 18.854,301.800 19.010 C 299.710 19.167,298.000 19.454,298.000 19.648 C 298.000 19.841,297.370 20.000,296.600 20.000 C 295.830 20.000,295.200 20.163,295.200 20.362 C 295.200 20.562,294.300 20.849,293.200 21.000 C 292.100 21.151,291.200 21.424,291.200 21.606 C 291.200 21.788,290.660 22.055,290.000 22.200 C 289.340 22.345,288.800 22.610,288.800 22.788 C 288.800 22.967,288.370 23.221,287.844 23.353 C 284.952 24.079,286.432 24.800,290.813 24.800 C 293.471 24.800,295.200 24.958,295.200 25.200 C 295.200 25.420,294.750 25.600,294.200 25.600 C 293.650 25.600,293.200 25.763,293.200 25.962 C 293.200 26.162,292.300 26.449,291.200 26.600 C 290.100 26.751,289.200 27.027,289.200 27.213 C 289.200 27.399,288.390 27.672,287.400 27.821 C 286.410 27.969,285.600 28.236,285.600 28.414 C 285.600 28.591,285.060 28.855,284.400 29.000 C 283.740 29.145,283.200 29.429,283.200 29.632 C 283.200 29.834,282.930 30.000,282.600 30.000 C 282.270 30.000,282.000 30.160,282.000 30.357 C 282.000 30.553,281.550 30.826,281.000 30.964 C 280.450 31.102,280.000 31.392,280.000 31.608 C 280.000 31.823,279.739 32.000,279.419 32.000 C 279.100 32.000,278.227 32.630,277.479 33.400 C 276.731 34.170,275.986 34.800,275.824 34.800 C 275.661 34.800,277.535 32.801,279.989 30.358 C 282.442 27.915,284.339 25.805,284.203 25.670 C 284.067 25.534,283.831 25.620,283.678 25.861 C 283.525 26.102,282.815 26.426,282.100 26.582 C 281.385 26.737,280.800 27.009,280.800 27.187 C 280.800 27.365,280.170 27.629,279.400 27.774 C 278.630 27.918,278.000 28.208,278.000 28.418 C 278.000 28.628,277.724 28.800,277.387 28.800 C 277.051 28.800,276.671 29.070,276.545 29.400 C 276.418 29.730,276.064 30.000,275.757 30.000 C 275.451 30.000,275.200 30.163,275.200 30.362 C 275.200 30.562,274.300 30.849,273.200 31.000 C 272.100 31.151,271.200 31.424,271.200 31.606 C 271.200 31.788,270.660 32.055,270.000 32.200 C 269.340 32.345,268.800 32.610,268.800 32.788 C 268.800 32.967,268.370 33.221,267.844 33.353 C 264.952 34.079,266.432 34.800,270.813 34.800 C 273.471 34.800,275.200 34.958,275.200 35.200 C 275.200 35.420,274.570 35.600,273.800 35.600 C 273.030 35.600,272.400 35.756,272.400 35.947 C 272.400 36.138,271.654 36.395,270.742 36.517 C 269.831 36.639,268.976 36.907,268.842 37.112 C 268.709 37.317,267.925 37.609,267.100 37.760 C 266.275 37.912,265.600 38.191,265.600 38.381 C 265.600 38.570,263.890 38.854,261.800 39.010 C 259.710 39.167,258.000 39.454,258.000 39.648 C 258.000 39.841,257.370 40.000,256.600 40.000 C 255.830 40.000,255.200 40.160,255.200 40.355 C 255.200 40.551,254.570 40.829,253.800 40.974 C 253.030 41.118,252.400 41.394,252.400 41.586 C 252.400 41.779,251.860 42.055,251.200 42.200 C 250.540 42.345,250.000 42.610,250.000 42.788 C 250.000 42.967,249.507 43.237,248.904 43.388 C 248.301 43.540,247.716 43.805,247.604 43.978 C 247.492 44.151,246.953 44.432,246.407 44.602 C 245.750 44.808,246.942 43.392,249.932 40.414 C 252.417 37.940,254.339 35.805,254.203 35.670 C 254.067 35.534,253.829 35.629,253.674 35.880 C 253.519 36.131,252.899 36.460,252.296 36.612 C 251.693 36.763,251.200 37.033,251.200 37.212 C 251.200 37.390,250.660 37.655,250.000 37.800 C 249.340 37.945,248.800 38.215,248.800 38.400 C 248.800 38.585,248.260 38.855,247.600 39.000 C 246.940 39.145,246.400 39.429,246.400 39.632 C 246.400 39.834,246.130 40.000,245.800 40.000 C 245.470 40.000,245.200 40.163,245.200 40.362 C 245.200 40.562,244.300 40.849,243.200 41.000 C 242.100 41.151,241.200 41.424,241.200 41.606 C 241.200 41.788,240.660 42.055,240.000 42.200 C 239.340 42.345,238.800 42.610,238.800 42.788 C 238.800 42.967,238.370 43.221,237.844 43.353 C 234.952 44.079,236.432 44.800,240.813 44.800 C 243.471 44.800,245.200 44.958,245.200 45.200 C 245.200 45.420,244.750 45.600,244.200 45.600 C 243.650 45.600,243.200 45.759,243.200 45.954 C 243.200 46.149,242.210 46.432,241.000 46.583 C 239.790 46.734,238.800 47.022,238.800 47.224 C 238.800 47.426,238.080 47.706,237.200 47.846 C 236.320 47.987,235.600 48.245,235.600 48.419 C 235.600 48.594,235.060 48.855,234.400 49.000 C 233.740 49.145,233.200 49.429,233.200 49.632 C 233.200 49.834,232.930 50.000,232.600 50.000 C 232.270 50.000,232.000 50.160,232.000 50.357 C 232.000 50.553,231.550 50.826,231.000 50.964 C 230.450 51.102,230.000 51.392,230.000 51.608 C 230.000 51.823,229.739 52.000,229.419 52.000 C 229.100 52.000,228.227 52.630,227.479 53.400 C 226.731 54.170,225.986 54.800,225.824 54.800 C 225.661 54.800,227.535 52.801,229.989 50.358 C 232.442 47.915,234.339 45.805,234.203 45.670 C 234.067 45.534,233.831 45.620,233.678 45.861 C 233.525 46.102,232.815 46.426,232.100 46.582 C 231.385 46.737,230.800 47.009,230.800 47.187 C 230.800 47.365,230.170 47.629,229.400 47.774 C 228.630 47.918,228.000 48.208,228.000 48.418 C 228.000 48.628,227.724 48.800,227.387 48.800 C 227.051 48.800,226.671 49.070,226.545 49.400 C 226.418 49.730,226.064 50.000,225.757 50.000 C 225.451 50.000,225.200 50.163,225.200 50.362 C 225.200 50.562,224.300 50.849,223.200 51.000 C 222.100 51.151,221.200 51.424,221.200 51.606 C 221.200 51.788,220.660 52.055,220.000 52.200 C 219.340 52.345,218.800 52.610,218.800 52.788 C 218.800 52.967,218.370 53.221,217.844 53.353 C 214.952 54.079,216.432 54.800,220.813 54.800 C 223.471 54.800,225.200 54.958,225.200 55.200 C 225.200 55.420,224.570 55.600,223.800 55.600 C 223.030 55.600,222.400 55.759,222.400 55.954 C 222.400 56.149,221.365 56.437,220.100 56.595 C 218.835 56.752,217.700 57.042,217.577 57.239 C 217.455 57.436,215.970 57.714,214.277 57.857 C 212.585 58.000,211.200 58.250,211.200 58.413 C 211.200 58.575,210.210 58.832,209.000 58.983 C 207.790 59.134,206.800 59.425,206.800 59.629 C 206.800 59.833,206.440 60.000,206.000 60.000 C 205.560 60.000,205.200 60.160,205.200 60.355 C 205.200 60.551,204.570 60.829,203.800 60.974 C 203.030 61.118,202.400 61.394,202.400 61.586 C 202.400 61.779,201.860 62.055,201.200 62.200 C 200.540 62.345,200.000 62.610,200.000 62.788 C 200.000 62.967,199.507 63.237,198.904 63.388 C 198.301 63.540,197.716 63.805,197.604 63.978 C 197.492 64.151,196.953 64.432,196.407 64.602 C 195.750 64.808,196.942 63.392,199.932 60.414 C 202.417 57.940,204.339 55.805,204.203 55.670 C 204.067 55.534,203.829 55.629,203.674 55.880 C 203.519 56.131,202.899 56.460,202.296 56.612 C 201.693 56.763,201.200 57.033,201.200 57.212 C 201.200 57.390,200.660 57.655,200.000 57.800 C 199.340 57.945,198.800 58.215,198.800 58.400 C 198.800 58.585,198.260 58.855,197.600 59.000 C 196.940 59.145,196.400 59.429,196.400 59.632 C 196.400 59.834,196.130 60.000,195.800 60.000 C 195.470 60.000,195.200 60.163,195.200 60.362 C 195.200 60.562,194.300 60.849,193.200 61.000 C 192.100 61.151,191.200 61.424,191.200 61.606 C 191.200 61.788,190.660 62.055,190.000 62.200 C 189.340 62.345,188.800 62.610,188.800 62.788 C 188.800 62.967,188.370 63.221,187.844 63.353 C 184.952 64.079,186.432 64.800,190.813 64.800 C 193.471 64.800,195.200 64.958,195.200 65.200 C 195.200 65.420,194.750 65.600,194.200 65.600 C 193.650 65.600,193.200 65.759,193.200 65.954 C 193.200 66.149,192.210 66.432,191.000 66.583 C 189.790 66.734,188.800 67.022,188.800 67.224 C 188.800 67.426,188.080 67.706,187.200 67.846 C 186.320 67.987,185.600 68.245,185.600 68.419 C 185.600 68.594,185.060 68.855,184.400 69.000 C 183.740 69.145,183.200 69.429,183.200 69.632 C 183.200 69.834,182.930 70.000,182.600 70.000 C 182.270 70.000,182.000 70.160,182.000 70.357 C 182.000 70.553,181.550 70.826,181.000 70.964 C 180.450 71.102,180.000 71.392,180.000 71.608 C 180.000 71.823,179.739 72.000,179.419 72.000 C 179.100 72.000,178.227 72.630,177.479 73.400 C 176.731 74.170,175.986 74.800,175.824 74.800 C 175.661 74.800,177.535 72.801,179.989 70.358 C 182.442 67.915,184.339 65.805,184.203 65.670 C 184.067 65.534,183.831 65.620,183.678 65.861 C 183.525 66.102,182.815 66.426,182.100 66.582 C 181.385 66.737,180.800 67.009,180.800 67.187 C 180.800 67.365,180.170 67.629,179.400 67.774 C 178.630 67.918,178.000 68.208,178.000 68.418 C 178.000 68.628,177.724 68.800,177.387 68.800 C 177.051 68.800,176.671 69.070,176.545 69.400 C 176.355 69.893,175.328 70.000,170.757 70.000 C 167.701 70.000,165.200 70.163,165.200 70.362 C 165.200 70.562,164.300 70.849,163.200 71.000 C 162.100 71.151,161.200 71.424,161.200 71.606 C 161.200 71.788,160.660 72.055,160.000 72.200 C 159.340 72.345,158.800 72.610,158.800 72.788 C 158.800 72.967,158.370 73.221,157.844 73.353 C 154.952 74.079,156.432 74.800,160.813 74.800 C 163.471 74.800,165.200 74.958,165.200 75.200 C 165.200 75.420,164.840 75.600,164.400 75.600 C 163.960 75.600,163.600 75.760,163.600 75.955 C 163.600 76.151,162.970 76.429,162.200 76.574 C 161.430 76.718,160.800 76.988,160.800 77.174 C 160.800 77.359,160.170 77.629,159.400 77.774 C 158.630 77.918,158.000 78.208,158.000 78.418 C 158.000 78.628,157.724 78.800,157.387 78.800 C 157.051 78.800,156.671 79.070,156.545 79.400 C 156.418 79.730,156.064 80.000,155.757 80.000 C 155.451 80.000,155.200 80.160,155.200 80.355 C 155.200 80.551,154.570 80.829,153.800 80.974 C 153.030 81.118,152.400 81.394,152.400 81.586 C 152.400 81.779,151.860 82.055,151.200 82.200 C 150.540 82.345,150.000 82.610,150.000 82.788 C 150.000 82.967,149.507 83.237,148.904 83.388 C 148.301 83.540,147.716 83.805,147.604 83.978 C 147.492 84.151,146.953 84.432,146.407 84.602 C 145.750 84.808,146.942 83.392,149.932 80.414 C 152.417 77.940,154.339 75.805,154.203 75.670 C 154.067 75.534,153.829 75.629,153.674 75.880 C 153.519 76.131,152.899 76.460,152.296 76.612 C 151.693 76.763,151.200 77.033,151.200 77.212 C 151.200 77.390,150.660 77.655,150.000 77.800 C 149.340 77.945,148.800 78.215,148.800 78.400 C 148.800 78.585,148.260 78.855,147.600 79.000 C 146.940 79.145,146.400 79.429,146.400 79.632 C 146.400 79.834,146.130 80.000,145.800 80.000 C 145.470 80.000,145.200 80.163,145.200 80.362 C 145.200 80.562,144.300 80.849,143.200 81.000 C 142.100 81.151,141.200 81.424,141.200 81.606 C 141.200 81.788,140.660 82.055,140.000 82.200 C 139.340 82.345,138.800 82.610,138.800 82.788 C 138.800 82.967,138.370 83.221,137.844 83.353 C 134.952 84.079,136.432 84.800,140.813 84.800 C 143.471 84.800,145.200 84.958,145.200 85.200 C 145.200 85.420,144.840 85.600,144.400 85.600 C 143.960 85.600,143.600 85.760,143.600 85.955 C 143.600 86.151,142.970 86.429,142.200 86.574 C 141.430 86.718,140.800 86.988,140.800 87.174 C 140.800 87.359,140.170 87.629,139.400 87.774 C 138.630 87.918,138.000 88.208,138.000 88.418 C 138.000 88.628,137.724 88.800,137.387 88.800 C 137.051 88.800,136.671 89.070,136.545 89.400 C 136.418 89.730,136.146 90.000,135.940 90.000 C 135.398 90.000,132.643 92.618,125.000 100.397 C 124.780 100.621,123.565 101.797,122.300 103.010 C 121.035 104.224,120.000 105.483,120.000 105.808 C 120.000 106.134,119.834 106.400,119.632 106.400 C 119.429 106.400,119.145 106.940,119.000 107.600 C 118.855 108.260,118.585 108.800,118.400 108.800 C 118.215 108.800,117.945 109.340,117.800 110.000 C 117.655 110.660,117.385 111.200,117.200 111.200 C 117.015 111.200,116.745 111.740,116.600 112.400 C 116.455 113.060,116.184 113.600,115.998 113.600 C 115.811 113.600,115.576 113.915,115.476 114.300 C 115.375 114.685,115.272 113.065,115.246 110.700 C 115.221 108.335,115.033 106.400,114.829 106.400 C 114.258 106.400,113.200 107.588,113.200 108.229 C 113.200 108.543,113.034 108.800,112.832 108.800 C 112.629 108.800,112.345 109.340,112.200 110.000 C 112.055 110.660,111.791 111.200,111.614 111.200 C 111.436 111.200,111.169 112.010,111.021 113.000 C 110.872 113.990,110.582 114.800,110.375 114.800 C 110.157 114.800,110.000 117.541,110.000 121.367 C 110.000 125.901,109.860 127.980,109.547 128.084 C 109.237 128.188,109.029 130.944,108.888 136.805 C 108.733 143.255,108.549 145.509,108.141 145.916 C 107.844 146.214,107.600 146.695,107.600 146.986 C 107.600 147.277,107.330 147.618,107.000 147.745 C 106.670 147.871,106.400 148.251,106.400 148.587 C 106.400 148.924,106.232 149.200,106.027 149.200 C 105.822 149.200,105.545 149.544,105.411 149.965 C 105.233 150.525,104.639 150.802,103.184 151.002 C 102.093 151.152,101.200 151.424,101.200 151.606 C 101.200 151.788,100.660 152.055,100.000 152.200 C 99.340 152.345,98.800 152.610,98.800 152.788 C 98.800 152.967,98.370 153.221,97.844 153.353 C 94.952 154.079,96.432 154.800,100.813 154.800 C 103.471 154.800,105.200 154.958,105.200 155.200 C 105.200 155.420,104.750 155.600,104.200 155.600 C 103.650 155.600,103.200 155.759,103.200 155.954 C 103.200 156.149,102.210 156.432,101.000 156.583 C 99.790 156.734,98.800 157.022,98.800 157.224 C 98.800 157.426,98.080 157.706,97.200 157.846 C 96.320 157.987,95.600 158.239,95.600 158.406 C 95.600 158.573,94.790 158.831,93.800 158.979 C 92.810 159.128,92.000 159.418,92.000 159.625 C 92.000 159.831,91.550 160.000,91.000 160.000 C 90.450 160.000,90.000 160.160,90.000 160.355 C 90.000 160.550,89.190 160.831,88.200 160.979 C 87.210 161.128,86.400 161.405,86.400 161.596 C 86.400 161.786,85.410 162.066,84.200 162.217 C 82.990 162.368,82.000 162.635,82.000 162.809 C 82.000 162.983,81.100 163.249,80.000 163.400 C 78.900 163.551,78.000 163.817,78.000 163.991 C 78.000 164.165,77.653 164.397,77.230 164.508 C 76.688 164.650,76.523 164.544,76.674 164.151 C 76.792 163.844,77.318 163.485,77.844 163.353 C 78.370 163.221,78.800 162.967,78.800 162.788 C 78.800 162.610,79.340 162.345,80.000 162.200 C 80.660 162.055,81.200 161.788,81.200 161.606 C 81.200 161.424,82.100 161.151,83.200 161.000 C 84.300 160.849,85.200 160.562,85.200 160.362 C 85.200 160.163,85.740 160.000,86.400 160.000 C 87.060 160.000,87.600 159.836,87.600 159.635 C 87.600 159.434,88.320 159.149,89.200 159.000 C 90.080 158.851,90.800 158.585,90.800 158.408 C 90.800 158.231,91.255 157.973,91.810 157.833 C 93.418 157.430,95.048 155.600,93.800 155.600 C 93.470 155.600,93.200 155.763,93.200 155.962 C 93.200 156.162,92.300 156.449,91.200 156.600 C 90.100 156.751,89.200 157.027,89.200 157.213 C 89.200 157.399,88.390 157.672,87.400 157.821 C 86.410 157.969,85.600 158.234,85.600 158.408 C 85.600 158.583,83.890 158.854,81.800 159.010 C 79.710 159.167,78.000 159.454,78.000 159.648 C 78.000 159.841,77.370 160.000,76.600 160.000 C 75.830 160.000,75.200 160.163,75.200 160.362 C 75.200 160.562,74.300 160.849,73.200 161.000 C 72.100 161.151,71.200 161.424,71.200 161.606 C 71.200 161.788,70.660 162.055,70.000 162.200 C 69.340 162.345,68.800 162.610,68.800 162.788 C 68.800 162.967,68.370 163.221,67.844 163.353 C 64.952 164.079,66.432 164.800,70.813 164.800 C 73.471 164.800,75.200 164.958,75.200 165.200 C 75.200 165.420,74.570 165.600,73.800 165.600 C 73.030 165.600,72.400 165.762,72.400 165.961 C 72.400 166.159,71.320 166.447,70.000 166.600 C 68.680 166.753,67.600 167.020,67.600 167.193 C 67.600 167.366,66.610 167.632,65.400 167.783 C 64.190 167.934,63.200 168.222,63.200 168.424 C 63.200 168.626,62.480 168.906,61.600 169.046 C 60.720 169.187,60.000 169.459,60.000 169.651 C 60.000 169.843,59.730 170.000,59.400 170.000 C 59.070 170.000,58.800 170.166,58.800 170.368 C 58.800 170.571,58.260 170.855,57.600 171.000 C 56.940 171.145,56.400 171.416,56.400 171.603 C 56.400 171.790,55.410 172.066,54.200 172.217 C 52.990 172.368,52.000 172.635,52.000 172.809 C 52.000 172.983,51.100 173.249,50.000 173.400 C 48.900 173.551,48.000 173.817,48.000 173.991 C 48.000 174.165,47.653 174.397,47.230 174.508 C 46.688 174.650,46.523 174.544,46.674 174.151 C 46.792 173.844,47.318 173.485,47.844 173.353 C 48.370 173.221,48.800 172.967,48.800 172.788 C 48.800 172.610,49.340 172.345,50.000 172.200 C 50.660 172.055,51.200 171.788,51.200 171.606 C 51.200 171.424,52.100 171.151,53.200 171.000 C 54.300 170.849,55.200 170.562,55.200 170.362 C 55.200 170.163,55.470 170.000,55.800 170.000 C 56.130 170.000,56.400 169.834,56.400 169.632 C 56.400 169.429,56.940 169.145,57.600 169.000 C 58.260 168.855,58.800 168.585,58.800 168.400 C 58.800 168.215,59.340 167.945,60.000 167.800 C 60.660 167.655,61.200 167.384,61.200 167.198 C 61.200 167.011,61.515 166.765,61.900 166.650 C 62.285 166.536,61.790 166.544,60.800 166.668 C 59.810 166.793,58.940 167.053,58.866 167.248 C 58.793 167.442,58.028 167.714,57.166 167.852 C 56.305 167.990,55.600 168.242,55.600 168.414 C 55.600 168.585,53.890 168.854,51.800 169.010 C 49.710 169.167,48.000 169.454,48.000 169.648 C 48.000 169.841,47.370 170.000,46.600 170.000 C 45.830 170.000,45.200 170.163,45.200 170.362 C 45.200 170.562,44.300 170.849,43.200 171.000 C 42.100 171.151,41.200 171.424,41.200 171.606 C 41.200 171.788,40.660 172.055,40.000 172.200 C 39.340 172.345,38.800 172.610,38.800 172.788 C 38.800 172.967,38.370 173.221,37.844 173.353 C 34.952 174.079,36.432 174.800,40.813 174.800 C 43.471 174.800,45.200 174.958,45.200 175.200 C 45.200 175.420,44.750 175.600,44.200 175.600 C 43.650 175.600,43.200 175.759,43.200 175.954 C 43.200 176.149,42.210 176.432,41.000 176.583 C 39.790 176.734,38.800 177.022,38.800 177.224 C 38.800 177.426,38.080 177.706,37.200 177.846 C 36.320 177.987,35.600 178.245,35.600 178.419 C 35.600 178.594,35.060 178.855,34.400 179.000 C 33.740 179.145,33.200 179.429,33.200 179.632 C 33.200 179.834,32.930 180.000,32.600 180.000 C 32.270 180.000,32.000 180.160,32.000 180.357 C 32.000 180.553,31.550 180.826,31.000 180.964 C 30.450 181.102,30.000 181.392,30.000 181.608 C 30.000 181.823,29.739 182.000,29.419 182.000 C 29.100 182.000,28.227 182.630,27.479 183.400 C 26.731 184.170,25.986 184.800,25.824 184.800 C 25.661 184.800,27.535 182.801,29.989 180.358 C 32.442 177.915,34.339 175.805,34.203 175.670 C 34.067 175.534,33.831 175.620,33.678 175.861 C 33.525 176.102,32.815 176.426,32.100 176.582 C 31.385 176.737,30.800 177.009,30.800 177.187 C 30.800 177.365,30.170 177.629,29.400 177.774 C 28.630 177.918,28.000 178.208,28.000 178.418 C 28.000 178.628,27.724 178.800,27.387 178.800 C 27.051 178.800,26.671 179.070,26.545 179.400 C 26.418 179.730,26.064 180.000,25.757 180.000 C 25.451 180.000,25.200 180.168,25.200 180.373 C 25.200 180.578,24.802 180.872,24.315 181.027 C 23.290 181.352,21.473 183.083,21.089 184.100 C 20.944 184.485,20.639 184.800,20.413 184.800 C 20.186 184.800,20.000 185.250,20.000 185.800 C 20.000 186.350,19.833 186.800,19.629 186.800 C 19.425 186.800,19.134 187.790,18.983 189.000 C 18.832 190.210,18.568 191.200,18.396 191.200 C 18.225 191.200,17.954 192.865,17.795 194.900 C 17.635 196.935,17.329 198.711,17.114 198.847 C 16.880 198.995,16.699 203.119,16.662 209.145 C 16.614 216.884,16.485 219.196,16.100 219.197 C 15.701 219.199,15.600 250.548,15.600 374.600 L 15.600 530.000 120.600 530.000 L 225.600 530.000 225.600 527.405 L 225.600 524.809 227.200 524.554 C 228.080 524.413,228.800 524.155,228.800 523.981 C 228.800 523.806,229.340 523.545,230.000 523.400 C 230.660 523.255,231.200 522.985,231.200 522.800 C 231.200 522.615,231.740 522.345,232.400 522.200 C 233.060 522.055,233.600 521.774,233.600 521.576 C 233.600 521.378,234.050 521.102,234.600 520.964 C 235.150 520.826,235.600 520.553,235.600 520.357 C 235.600 520.160,235.870 520.000,236.200 520.000 C 236.530 520.000,236.800 519.834,236.800 519.632 C 236.800 519.429,237.340 519.145,238.000 519.000 C 238.660 518.855,239.200 518.591,239.200 518.413 C 239.200 518.235,239.830 517.971,240.600 517.826 C 241.370 517.682,242.000 517.411,242.000 517.225 C 242.000 517.039,242.493 516.763,243.096 516.612 C 243.699 516.460,244.319 516.131,244.474 515.880 C 244.629 515.629,244.901 515.578,245.078 515.766 C 245.255 515.955,245.174 516.190,244.897 516.289 C 244.621 516.388,243.607 517.285,242.645 518.282 C 240.497 520.509,240.517 520.489,238.248 522.679 C 236.153 524.702,236.094 524.805,237.200 524.516 C 237.640 524.401,238.000 524.156,238.000 523.971 C 238.000 523.787,238.630 523.518,239.400 523.374 C 240.170 523.229,240.800 522.971,240.800 522.799 C 240.800 522.627,241.293 522.363,241.896 522.212 C 242.499 522.060,243.122 521.726,243.281 521.468 C 243.474 521.154,245.547 520.958,249.585 520.871 C 252.924 520.800,255.600 520.577,255.600 520.371 C 255.600 520.167,256.050 520.000,256.600 520.000 C 257.150 520.000,257.600 519.836,257.600 519.635 C 257.600 519.434,258.320 519.149,259.200 519.000 C 260.080 518.851,260.800 518.585,260.800 518.408 C 260.800 518.231,261.255 517.973,261.810 517.833 C 262.727 517.603,264.400 516.290,264.400 515.800 C 264.400 515.690,262.420 515.600,260.000 515.600 C 255.554 515.600,254.086 515.052,257.200 514.554 C 258.080 514.413,258.800 514.155,258.800 513.981 C 258.800 513.806,259.340 513.545,260.000 513.400 C 260.660 513.255,261.200 512.985,261.200 512.800 C 261.200 512.615,261.740 512.345,262.400 512.200 C 263.060 512.055,263.600 511.774,263.600 511.576 C 263.600 511.378,264.050 511.102,264.600 510.964 C 265.150 510.826,265.600 510.553,265.600 510.357 C 265.600 510.160,265.870 510.000,266.200 510.000 C 266.530 510.000,266.800 509.834,266.800 509.632 C 266.800 509.429,267.340 509.145,268.000 509.000 C 268.660 508.855,269.200 508.591,269.200 508.413 C 269.200 508.235,269.830 507.971,270.600 507.826 C 271.370 507.682,272.000 507.411,272.000 507.225 C 272.000 507.039,272.493 506.763,273.096 506.612 C 273.699 506.460,274.319 506.131,274.474 505.880 C 274.629 505.629,274.901 505.578,275.078 505.766 C 275.255 505.955,275.174 506.190,274.897 506.289 C 274.621 506.388,273.607 507.285,272.645 508.282 C 270.497 510.509,270.517 510.489,268.248 512.679 C 266.153 514.702,266.094 514.805,267.200 514.516 C 267.640 514.401,268.000 514.156,268.000 513.971 C 268.000 513.787,268.630 513.518,269.400 513.374 C 270.170 513.229,270.800 512.965,270.800 512.787 C 270.800 512.609,271.340 512.345,272.000 512.200 C 272.660 512.055,273.200 511.785,273.200 511.600 C 273.200 511.415,273.740 511.145,274.400 511.000 C 275.060 510.855,275.600 510.571,275.600 510.368 C 275.600 510.166,276.050 510.000,276.600 510.000 C 277.150 510.000,277.600 509.836,277.600 509.635 C 277.600 509.434,278.320 509.149,279.200 509.000 C 280.080 508.851,280.800 508.585,280.800 508.408 C 280.800 508.231,281.255 507.973,281.810 507.833 C 282.727 507.603,284.400 506.290,284.400 505.800 C 284.400 505.690,282.420 505.600,280.000 505.600 C 275.799 505.600,274.297 505.142,276.600 504.564 C 277.150 504.426,277.600 504.153,277.600 503.957 C 277.600 503.760,277.810 503.600,278.066 503.600 C 278.547 503.600,278.877 503.329,281.103 501.103 C 283.329 498.877,283.600 498.547,283.600 498.066 C 283.600 497.810,283.780 497.600,284.000 497.600 C 284.220 497.600,284.400 497.330,284.400 497.000 C 284.400 496.670,284.568 496.400,284.773 496.400 C 284.978 496.400,285.260 496.040,285.400 495.601 C 285.539 495.161,286.091 494.692,286.627 494.558 C 287.162 494.423,287.600 494.153,287.600 493.957 C 287.600 493.760,287.810 493.600,288.066 493.600 C 288.547 493.600,288.877 493.329,291.103 491.103 C 293.329 488.877,293.600 488.547,293.600 488.066 C 293.600 487.810,293.780 487.600,294.000 487.600 C 294.220 487.600,294.400 487.407,294.400 487.171 C 294.400 486.936,294.670 486.473,295.000 486.143 C 295.533 485.610,295.600 486.035,295.600 489.971 C 295.600 492.407,295.690 494.400,295.800 494.400 C 296.290 494.400,297.603 492.727,297.833 491.810 C 297.973 491.255,298.231 490.800,298.408 490.800 C 298.585 490.800,298.851 490.080,299.000 489.200 C 299.149 488.320,299.434 487.600,299.635 487.600 C 299.836 487.600,300.000 487.150,300.000 486.600 C 300.000 486.050,300.166 485.600,300.368 485.600 C 300.571 485.600,300.855 485.060,301.000 484.400 C 301.145 483.740,301.415 483.200,301.600 483.200 C 301.785 483.200,302.055 482.660,302.200 482.000 C 302.345 481.340,302.609 480.800,302.787 480.800 C 302.965 480.800,303.229 480.170,303.374 479.400 C 303.518 478.630,303.787 478.000,303.971 478.000 C 304.156 478.000,304.401 477.640,304.516 477.200 C 304.806 476.091,304.704 476.150,302.627 478.300 C 301.618 479.345,300.610 480.380,300.387 480.600 C 296.899 484.049,295.946 484.880,295.727 484.661 C 295.584 484.517,295.662 484.400,295.902 484.400 C 296.141 484.400,296.455 483.860,296.600 483.200 C 296.745 482.540,297.021 482.000,297.214 482.000 C 297.406 482.000,297.682 481.370,297.826 480.600 C 297.971 479.830,298.235 479.200,298.413 479.200 C 298.591 479.200,298.855 478.660,299.000 478.000 C 299.145 477.340,299.429 476.800,299.632 476.800 C 299.834 476.800,300.000 476.530,300.000 476.200 C 300.000 475.870,300.164 475.600,300.364 475.600 C 300.564 475.600,300.856 474.070,301.011 472.200 C 301.167 470.330,301.429 468.800,301.593 468.800 C 301.756 468.800,301.988 467.591,302.106 466.113 C 302.225 464.635,302.520 463.360,302.762 463.279 C 303.003 463.199,303.314 462.428,303.452 461.566 C 303.590 460.705,303.836 460.000,304.000 460.000 C 304.163 460.000,304.419 459.078,304.569 457.951 C 304.896 455.482,305.338 454.982,307.523 454.613 C 308.445 454.457,309.200 454.186,309.200 454.009 C 309.200 453.833,309.830 453.571,310.600 453.426 C 311.370 453.282,312.000 452.992,312.000 452.782 C 312.000 452.572,312.230 452.400,312.511 452.400 C 312.792 452.400,313.330 452.040,313.707 451.600 C 314.084 451.160,314.664 450.800,314.996 450.800 C 315.328 450.800,315.600 450.620,315.600 450.400 C 315.600 450.180,315.870 450.000,316.200 450.000 C 316.530 450.000,316.800 449.834,316.800 449.632 C 316.800 449.429,317.340 449.145,318.000 449.000 C 318.660 448.855,319.200 448.591,319.200 448.413 C 319.200 448.235,319.830 447.971,320.600 447.826 C 321.370 447.682,322.000 447.411,322.000 447.225 C 322.000 447.039,322.493 446.763,323.096 446.612 C 323.699 446.460,324.319 446.131,324.474 445.880 C 324.629 445.629,324.901 445.578,325.078 445.766 C 325.255 445.955,325.174 446.190,324.897 446.289 C 324.621 446.388,323.607 447.285,322.645 448.282 C 320.490 450.517,320.408 450.598,318.196 452.732 C 316.156 454.699,316.097 454.804,317.200 454.516 C 317.640 454.401,318.000 454.156,318.000 453.971 C 318.000 453.787,318.630 453.518,319.400 453.374 C 320.170 453.229,320.800 452.965,320.800 452.787 C 320.800 452.609,321.340 452.345,322.000 452.200 C 322.660 452.055,323.200 451.785,323.200 451.600 C 323.200 451.415,323.740 451.145,324.400 451.000 C 325.060 450.855,325.600 450.571,325.600 450.368 C 325.600 450.166,326.050 450.000,326.600 450.000 C 327.150 450.000,327.600 449.836,327.600 449.635 C 327.600 449.434,328.320 449.149,329.200 449.000 C 330.080 448.851,330.800 448.585,330.800 448.408 C 330.800 448.231,331.255 447.973,331.810 447.833 C 332.727 447.603,334.400 446.290,334.400 445.800 C 334.400 445.690,332.420 445.600,330.000 445.600 C 325.327 445.600,324.121 445.042,327.800 444.583 C 329.010 444.432,330.000 444.172,330.000 444.005 C 330.000 443.839,330.720 443.587,331.600 443.446 C 332.480 443.306,333.200 443.036,333.200 442.846 C 333.200 442.657,333.920 442.387,334.800 442.246 C 335.680 442.106,336.400 441.827,336.400 441.627 C 336.400 441.427,336.940 441.145,337.600 441.000 C 338.260 440.855,338.800 440.571,338.800 440.368 C 338.800 440.166,339.070 440.000,339.400 440.000 C 339.730 440.000,340.000 439.832,340.000 439.627 C 340.000 439.422,340.377 439.134,340.838 438.988 C 341.300 438.841,342.384 437.993,343.248 437.103 C 344.111 436.213,344.949 435.625,345.109 435.797 C 345.269 435.969,345.174 436.190,344.897 436.289 C 344.621 436.388,343.607 437.285,342.645 438.282 C 340.490 440.517,340.408 440.598,338.196 442.732 C 336.064 444.787,336.092 444.707,337.600 444.485 C 338.260 444.388,338.800 444.164,338.800 443.986 C 338.800 443.809,339.340 443.545,340.000 443.400 C 340.660 443.255,341.200 442.990,341.200 442.812 C 341.200 442.633,341.672 442.368,342.248 442.224 C 342.825 442.079,343.558 441.699,343.877 441.380 C 344.328 440.929,345.694 440.800,350.029 440.800 C 353.476 440.800,355.600 440.648,355.600 440.400 C 355.600 440.180,356.050 440.000,356.600 440.000 C 357.150 440.000,357.600 439.836,357.600 439.635 C 357.600 439.434,358.320 439.149,359.200 439.000 C 360.080 438.851,360.800 438.585,360.800 438.408 C 360.800 438.231,361.255 437.973,361.810 437.833 C 362.727 437.603,364.400 436.290,364.400 435.800 C 364.400 435.690,362.420 435.600,360.000 435.600 C 355.554 435.600,354.086 435.052,357.200 434.554 C 358.080 434.413,358.800 434.155,358.800 433.981 C 358.800 433.806,359.340 433.545,360.000 433.400 C 360.660 433.255,361.200 432.985,361.200 432.800 C 361.200 432.615,361.740 432.345,362.400 432.200 C 363.060 432.055,363.600 431.774,363.600 431.576 C 363.600 431.378,364.050 431.102,364.600 430.964 C 365.150 430.826,365.600 430.553,365.600 430.357 C 365.600 430.160,365.870 430.000,366.200 430.000 C 366.530 430.000,366.800 429.834,366.800 429.632 C 366.800 429.429,367.340 429.145,368.000 429.000 C 368.660 428.855,369.200 428.591,369.200 428.413 C 369.200 428.235,369.830 427.971,370.600 427.826 C 371.370 427.682,372.000 427.411,372.000 427.225 C 372.000 427.039,372.493 426.763,373.096 426.612 C 373.699 426.460,374.319 426.131,374.474 425.880 C 374.629 425.629,374.901 425.578,375.078 425.766 C 375.255 425.955,375.174 426.190,374.897 426.289 C 374.621 426.388,373.584 427.308,372.593 428.334 C 370.389 430.617,370.509 430.497,368.248 432.679 C 366.153 434.702,366.094 434.805,367.200 434.516 C 367.640 434.401,368.000 434.156,368.000 433.971 C 368.000 433.787,368.630 433.518,369.400 433.374 C 370.170 433.229,370.800 432.965,370.800 432.787 C 370.800 432.609,371.340 432.345,372.000 432.200 C 372.660 432.055,373.200 431.785,373.200 431.600 C 373.200 431.415,373.740 431.145,374.400 431.000 C 375.060 430.855,375.600 430.571,375.600 430.368 C 375.600 430.166,376.050 430.000,376.600 430.000 C 377.150 430.000,377.600 429.836,377.600 429.635 C 377.600 429.434,378.320 429.149,379.200 429.000 C 380.080 428.851,380.800 428.585,380.800 428.408 C 380.800 428.231,381.255 427.973,381.810 427.833 C 382.727 427.603,384.400 426.290,384.400 425.800 C 384.400 425.690,382.420 425.600,380.000 425.600 C 375.554 425.600,374.086 425.052,377.200 424.554 C 378.080 424.413,378.800 424.155,378.800 423.981 C 378.800 423.806,379.340 423.545,380.000 423.400 C 380.660 423.255,381.200 422.990,381.200 422.812 C 381.200 422.633,381.672 422.368,382.248 422.224 C 382.825 422.079,383.558 421.699,383.877 421.380 C 384.887 420.370,386.800 421.159,386.800 422.586 C 386.800 422.877,387.070 423.218,387.400 423.345 C 387.730 423.471,388.000 423.851,388.000 424.187 C 388.000 424.524,388.165 424.800,388.366 424.800 C 388.567 424.800,388.858 426.150,389.013 427.800 C 389.167 429.450,389.453 430.800,389.647 430.800 C 389.841 430.800,390.000 431.340,390.000 432.000 C 390.000 433.745,389.345 433.470,389.046 431.600 C 388.906 430.720,388.632 430.000,388.439 430.000 C 388.245 430.000,387.973 429.547,387.834 428.994 C 387.567 427.929,386.434 426.400,385.911 426.400 C 385.443 426.400,385.537 427.512,386.019 427.673 C 386.250 427.750,386.545 428.845,386.675 430.106 C 386.805 431.368,387.038 432.400,387.192 432.400 C 387.346 432.400,387.595 437.027,387.744 442.681 C 387.893 448.336,388.170 453.061,388.358 453.181 C 388.547 453.302,388.779 457.619,388.875 462.775 C 389.001 469.522,389.183 472.194,389.525 472.308 C 389.866 472.422,390.000 474.320,390.000 479.033 C 390.000 482.645,390.160 485.600,390.355 485.600 C 390.550 485.600,390.831 486.410,390.979 487.400 C 391.128 488.390,391.398 489.200,391.580 489.200 C 391.762 489.200,392.029 489.830,392.174 490.600 C 392.318 491.370,392.608 492.000,392.818 492.000 C 393.028 492.000,393.200 492.230,393.200 492.511 C 393.200 492.982,394.555 494.400,395.005 494.400 C 395.112 494.400,395.200 492.420,395.200 490.000 L 395.200 485.600 397.600 485.600 L 400.000 485.600 400.000 247.800 L 400.000 10.000 396.233 10.000 C 394.162 10.000,392.407 9.828,392.333 9.617 C 392.260 9.407,390.220 9.110,387.800 8.958 C 385.380 8.806,383.281 8.497,383.135 8.273 C 382.868 7.863,349.655 7.543,341.500 7.872 M364.700 9.098 C 362.335 9.169,358.465 9.169,356.100 9.098 C 353.735 9.028,355.670 8.970,360.400 8.970 C 365.130 8.970,367.065 9.028,364.700 9.098 M351.200 9.600 C 351.200 9.820,350.480 10.000,349.600 10.000 C 348.720 10.000,348.000 9.820,348.000 9.600 C 348.000 9.380,348.720 9.200,349.600 9.200 C 350.480 9.200,351.200 9.380,351.200 9.600 M372.400 9.600 C 372.400 9.820,371.680 10.000,370.800 10.000 C 369.920 10.000,369.200 9.820,369.200 9.600 C 369.200 9.380,369.920 9.200,370.800 9.200 C 371.680 9.200,372.400 9.380,372.400 9.600 M345.200 10.343 C 345.200 10.531,343.540 10.811,341.511 10.964 C 339.481 11.117,337.726 11.389,337.611 11.568 C 337.495 11.747,336.185 12.022,334.700 12.179 C 333.215 12.335,332.000 12.612,332.000 12.794 C 332.000 12.976,331.100 13.249,330.000 13.400 C 328.900 13.551,328.000 13.817,328.000 13.991 C 328.000 14.165,327.653 14.397,327.230 14.508 C 326.688 14.650,326.523 14.544,326.674 14.151 C 326.792 13.844,327.318 13.485,327.844 13.353 C 328.370 13.221,328.800 12.967,328.800 12.788 C 328.800 12.610,329.340 12.345,330.000 12.200 C 330.660 12.055,331.200 11.788,331.200 11.606 C 331.200 11.424,332.100 11.151,333.200 11.000 C 334.300 10.849,335.200 10.562,335.200 10.362 C 335.200 10.163,337.450 10.000,340.200 10.000 C 342.950 10.000,345.200 10.154,345.200 10.343 M385.600 10.355 C 385.600 10.550,386.410 10.831,387.400 10.979 C 388.390 11.128,389.200 11.398,389.200 11.580 C 389.200 11.762,389.830 12.029,390.600 12.174 C 391.370 12.318,392.000 12.608,392.000 12.818 C 392.000 13.028,392.230 13.200,392.511 13.200 C 392.792 13.200,393.344 13.576,393.737 14.035 C 394.436 14.852,394.431 14.864,393.526 14.581 C 393.017 14.422,392.505 14.145,392.388 13.965 C 392.271 13.785,391.416 13.516,390.488 13.368 C 389.560 13.219,388.800 12.955,388.800 12.781 C 388.800 12.606,387.585 12.335,386.100 12.179 C 384.615 12.022,383.305 11.747,383.189 11.568 C 383.074 11.389,381.319 11.117,379.289 10.964 C 373.982 10.563,374.748 10.000,380.600 10.000 C 383.350 10.000,385.600 10.160,385.600 10.355 M372.467 15.975 C 372.540 16.182,374.445 16.401,376.700 16.463 C 379.708 16.545,380.800 16.712,380.800 17.088 C 380.800 17.369,381.025 17.603,381.300 17.607 C 382.240 17.620,383.600 19.482,383.600 20.756 C 383.600 21.468,383.814 22.014,384.100 22.032 C 384.500 22.057,384.500 22.104,384.100 22.265 C 383.508 22.504,383.419 24.400,384.000 24.400 C 384.574 24.400,384.494 25.489,383.900 25.767 C 383.500 25.953,383.500 26.047,383.900 26.233 C 384.496 26.512,384.565 27.478,384.002 27.667 C 383.783 27.740,383.486 29.735,383.341 32.100 C 383.177 34.790,382.914 36.402,382.639 36.406 C 382.398 36.409,382.470 36.589,382.800 36.806 C 383.270 37.115,383.291 37.271,382.894 37.527 C 382.575 37.734,382.335 39.080,382.243 41.173 C 382.146 43.394,381.916 44.620,381.549 44.877 C 381.124 45.174,381.113 45.307,381.500 45.464 C 382.089 45.703,382.169 46.675,381.616 46.867 C 381.404 46.940,381.133 48.710,381.014 50.800 C 380.894 52.890,380.617 54.660,380.398 54.733 C 380.179 54.807,380.000 56.007,380.000 57.400 C 380.000 59.036,379.823 60.016,379.500 60.167 C 379.100 60.353,379.100 60.447,379.500 60.633 C 380.104 60.915,380.162 61.879,379.586 62.071 C 379.333 62.156,379.078 65.149,378.926 69.805 C 378.791 73.982,378.523 77.503,378.331 77.629 C 378.133 77.759,377.984 138.230,377.988 217.143 C 377.993 347.794,377.951 356.444,377.314 356.688 C 376.354 357.057,375.200 358.101,375.200 358.601 C 375.200 358.833,374.840 359.283,374.400 359.600 C 373.960 359.917,373.600 360.409,373.600 360.692 C 373.600 360.976,373.240 361.516,372.800 361.893 C 372.360 362.270,372.000 362.808,372.000 363.089 C 372.000 363.370,371.730 363.600,371.400 363.600 C 371.070 363.600,370.800 363.768,370.800 363.973 C 370.800 364.178,370.404 364.472,369.920 364.625 C 369.436 364.779,368.390 365.601,367.597 366.452 C 366.769 367.340,365.779 368.000,365.277 368.000 C 364.795 368.000,364.400 368.166,364.400 368.368 C 364.400 368.571,363.860 368.855,363.200 369.000 C 362.540 369.145,362.000 369.429,362.000 369.632 C 362.000 369.834,361.550 370.000,361.000 370.000 C 360.450 370.000,360.000 370.153,360.000 370.341 C 360.000 370.528,358.528 370.795,356.728 370.934 C 354.928 371.073,353.353 371.350,353.228 371.551 C 353.103 371.751,351.605 372.046,349.900 372.205 C 348.195 372.364,346.800 372.642,346.800 372.822 C 346.800 373.003,345.990 373.272,345.000 373.421 C 344.010 373.569,343.200 373.836,343.200 374.014 C 343.200 374.191,342.660 374.455,342.000 374.600 C 341.193 374.777,340.800 375.106,340.800 375.605 C 340.800 376.018,340.409 376.470,339.919 376.626 C 339.434 376.780,338.791 377.152,338.490 377.453 C 338.189 377.754,337.686 378.000,337.371 378.000 C 337.057 378.000,336.800 378.164,336.800 378.365 C 336.800 378.566,336.080 378.851,335.200 379.000 C 334.320 379.149,333.600 379.434,333.600 379.635 C 333.600 379.836,333.240 380.000,332.800 380.000 C 332.360 380.000,332.000 380.168,332.000 380.373 C 332.000 380.577,330.560 380.871,328.800 381.024 C 327.040 381.178,325.600 381.447,325.600 381.623 C 325.600 381.799,324.610 382.066,323.400 382.217 C 322.190 382.368,321.200 382.628,321.200 382.795 C 321.200 382.961,320.480 383.213,319.600 383.354 C 318.720 383.494,318.000 383.773,318.000 383.973 C 318.000 384.173,317.468 384.453,316.818 384.596 C 316.155 384.742,315.529 385.195,315.391 385.628 C 315.256 386.053,314.838 386.400,314.462 386.400 C 314.086 386.400,313.470 386.760,313.093 387.200 C 312.716 387.640,312.136 388.000,311.804 388.000 C 311.472 388.000,311.200 388.166,311.200 388.368 C 311.200 388.571,310.660 388.855,310.000 389.000 C 309.340 389.145,308.800 389.429,308.800 389.632 C 308.800 389.834,308.260 390.000,307.600 390.000 C 306.940 390.000,306.400 390.159,306.400 390.353 C 306.400 390.548,305.230 390.832,303.800 390.985 C 302.246 391.152,301.198 391.452,301.194 391.732 C 301.190 392.003,301.022 391.948,300.794 391.600 C 300.512 391.170,300.315 391.130,300.100 391.459 C 299.935 391.712,298.765 392.048,297.500 392.205 C 296.235 392.363,295.200 392.628,295.200 392.795 C 295.200 392.961,294.480 393.213,293.600 393.354 C 292.720 393.494,292.000 393.787,292.000 394.005 C 292.000 394.222,291.738 394.400,291.418 394.400 C 291.098 394.400,290.386 394.850,289.836 395.400 C 289.286 395.950,288.688 396.400,288.507 396.400 C 288.326 396.400,287.870 396.760,287.493 397.200 C 287.116 397.640,286.536 398.000,286.204 398.000 C 285.872 398.000,285.600 398.180,285.600 398.400 C 285.600 398.620,285.144 398.800,284.587 398.800 C 284.031 398.800,283.471 399.070,283.345 399.400 C 283.216 399.736,282.621 400.000,281.991 400.000 C 281.372 400.000,280.796 400.211,280.710 400.469 C 280.433 401.300,265.200 401.480,265.200 400.652 C 265.200 400.269,264.874 400.000,264.408 400.000 C 263.902 400.000,263.527 399.648,263.372 399.029 C 263.237 398.495,262.874 397.961,262.564 397.841 C 262.254 397.722,262.000 397.169,262.000 396.613 C 262.000 396.056,261.823 395.600,261.606 395.600 C 261.351 395.600,261.175 382.322,261.106 357.933 C 261.022 328.231,260.894 320.231,260.500 320.100 C 260.225 320.008,260.000 319.759,260.000 319.547 C 260.000 318.996,257.410 316.400,256.860 316.400 C 256.607 316.400,256.400 316.220,256.400 316.000 C 256.400 315.780,256.130 315.600,255.800 315.600 C 255.470 315.600,255.200 315.870,255.200 316.200 C 255.200 316.530,255.020 316.800,254.800 316.800 C 254.580 316.800,254.400 317.070,254.400 317.400 C 254.400 317.730,254.228 318.000,254.018 318.000 C 253.808 318.000,253.518 318.630,253.374 319.400 C 253.229 320.170,252.965 320.800,252.787 320.800 C 252.609 320.800,252.345 321.340,252.200 322.000 C 252.055 322.660,251.771 323.200,251.568 323.200 C 251.366 323.200,251.200 323.476,251.200 323.813 C 251.200 324.149,250.930 324.529,250.600 324.655 C 250.270 324.782,250.000 325.207,250.000 325.600 C 250.000 325.993,249.730 326.418,249.400 326.545 C 249.070 326.671,248.800 326.958,248.800 327.183 C 248.800 327.679,247.538 329.200,247.126 329.200 C 246.652 329.200,243.200 332.685,243.200 333.164 C 243.200 333.404,243.028 333.600,242.818 333.600 C 242.608 333.600,242.318 334.230,242.174 335.000 C 242.029 335.770,241.751 336.400,241.555 336.400 C 241.360 336.400,241.200 336.747,241.200 337.171 C 241.200 337.596,240.930 338.213,240.600 338.543 C 240.270 338.873,240.000 339.260,240.000 339.402 C 240.000 339.824,237.859 341.824,237.100 342.111 C 236.715 342.256,236.400 342.561,236.400 342.787 C 236.400 343.014,236.158 343.200,235.861 343.200 C 234.861 343.200,233.563 344.718,233.328 346.164 C 233.200 346.954,232.955 347.600,232.783 347.600 C 232.611 347.600,232.349 348.320,232.200 349.200 C 232.051 350.080,231.766 350.800,231.565 350.800 C 231.364 350.800,231.200 351.019,231.200 351.287 C 231.200 351.555,230.783 352.140,230.272 352.587 C 229.762 353.034,229.228 353.715,229.085 354.100 C 228.942 354.485,228.549 354.800,228.213 354.800 C 227.876 354.800,227.600 355.070,227.600 355.400 C 227.600 356.075,226.213 357.600,225.600 357.600 C 225.380 357.600,225.200 357.870,225.200 358.200 C 225.200 358.530,225.020 358.800,224.800 358.800 C 224.580 358.800,224.400 359.070,224.400 359.400 C 224.400 359.730,224.223 360.000,224.008 360.000 C 223.792 360.000,223.502 360.450,223.364 361.000 C 223.226 361.550,222.967 362.000,222.788 362.000 C 222.610 362.000,222.348 362.525,222.207 363.167 C 222.066 363.808,221.692 364.433,221.376 364.554 C 221.059 364.676,220.800 365.191,220.800 365.699 C 220.800 366.207,220.440 366.883,220.000 367.200 C 219.560 367.517,219.200 367.967,219.200 368.199 C 219.200 368.704,217.757 370.000,217.195 370.000 C 216.978 370.000,216.800 370.186,216.800 370.413 C 216.800 370.639,216.485 370.944,216.100 371.090 C 215.228 371.420,214.400 372.219,214.400 372.729 C 214.400 372.941,214.130 373.218,213.800 373.345 C 213.470 373.471,213.200 373.851,213.200 374.187 C 213.200 374.524,213.036 374.800,212.835 374.800 C 212.634 374.800,212.349 375.520,212.200 376.400 C 212.051 377.280,211.785 378.000,211.608 378.000 C 211.431 378.000,211.174 378.450,211.036 379.000 C 210.898 379.550,210.608 380.000,210.392 380.000 C 210.177 380.000,210.000 380.194,210.000 380.431 C 210.000 381.141,207.777 383.140,206.680 383.416 C 206.118 383.557,205.561 383.926,205.441 384.236 C 205.322 384.546,204.859 384.800,204.413 384.800 C 203.924 384.800,203.600 385.063,203.600 385.460 C 203.600 386.269,201.262 388.600,200.071 388.978 C 199.592 389.130,199.200 389.422,199.200 389.627 C 199.200 389.832,198.945 390.000,198.633 390.000 C 198.322 390.000,197.996 390.211,197.910 390.469 C 197.605 391.385,193.757 391.102,192.887 390.100 C 192.458 389.605,191.942 389.200,191.742 389.200 C 191.302 389.200,190.000 387.733,190.000 387.238 C 190.000 387.044,189.730 386.782,189.400 386.655 C 189.070 386.529,188.800 386.149,188.800 385.813 C 188.800 385.041,187.542 383.762,186.439 383.413 C 185.978 383.266,185.600 383.002,185.600 382.826 C 185.600 382.650,184.839 382.403,183.909 382.278 C 182.978 382.154,182.155 381.866,182.079 381.638 C 182.004 381.411,181.325 381.110,180.571 380.968 C 179.817 380.827,179.200 380.565,179.200 380.386 C 179.200 380.208,178.660 379.522,178.000 378.862 C 177.340 378.202,176.800 377.462,176.800 377.218 C 176.800 376.974,176.530 376.671,176.200 376.545 C 175.870 376.418,175.600 375.988,175.600 375.589 C 175.600 375.108,175.195 374.775,174.400 374.600 C 173.740 374.455,173.200 374.194,173.200 374.019 C 173.200 373.845,172.480 373.587,171.600 373.446 C 170.720 373.306,170.000 373.032,170.000 372.839 C 170.000 372.645,169.550 372.374,169.000 372.236 C 168.450 372.098,168.000 371.822,168.000 371.624 C 168.000 371.426,167.468 371.147,166.818 371.004 C 166.168 370.861,165.533 370.418,165.406 370.020 C 165.280 369.621,164.636 369.187,163.976 369.055 C 162.804 368.821,160.800 367.075,160.800 366.289 C 160.800 365.759,159.203 364.400,158.582 364.400 C 158.309 364.400,157.982 364.130,157.855 363.800 C 157.729 363.470,157.349 363.200,157.013 363.200 C 156.676 363.200,156.400 363.020,156.400 362.800 C 156.400 362.580,156.158 362.400,155.861 362.400 C 155.565 362.400,154.907 362.040,154.400 361.600 C 153.893 361.160,153.247 360.800,152.966 360.800 C 152.684 360.800,152.340 360.440,152.200 360.000 C 151.664 358.310,150.800 359.945,150.800 362.650 C 150.800 363.173,150.620 363.600,150.400 363.600 C 150.136 363.600,150.000 377.533,150.000 404.600 C 150.000 431.667,150.136 445.600,150.400 445.600 C 150.620 445.600,150.800 445.848,150.800 446.152 C 150.800 446.906,153.855 450.000,154.600 450.000 C 154.930 450.000,155.200 450.180,155.200 450.400 C 155.200 450.620,155.470 450.800,155.800 450.800 C 156.130 450.800,156.400 450.620,156.400 450.400 C 156.400 450.180,157.030 450.000,157.800 450.000 C 158.570 450.000,159.200 449.845,159.200 449.656 C 159.200 449.466,160.144 449.200,161.298 449.063 C 162.451 448.926,163.456 448.631,163.531 448.407 C 163.606 448.183,164.090 448.000,164.608 448.000 C 165.140 448.000,166.039 447.475,166.675 446.794 C 169.924 443.312,170.763 442.591,172.031 442.195 C 172.564 442.028,173.118 441.708,173.263 441.482 C 173.408 441.257,175.433 440.987,177.763 440.884 C 180.093 440.780,182.000 440.539,182.000 440.348 C 182.000 440.156,182.990 440.000,184.200 440.000 C 185.410 440.000,186.400 439.834,186.400 439.632 C 186.400 439.429,186.940 439.145,187.600 439.000 C 188.260 438.855,188.800 438.571,188.800 438.368 C 188.800 438.166,189.059 438.000,189.375 438.000 C 189.691 438.000,190.456 437.457,191.075 436.794 C 194.858 432.739,195.279 432.429,197.390 432.139 C 198.385 432.003,199.200 431.753,199.200 431.584 C 199.200 431.415,201.090 431.148,203.400 430.991 C 205.710 430.833,207.600 430.546,207.600 430.352 C 207.600 430.158,208.320 430.000,209.200 430.000 C 210.080 430.000,210.800 429.841,210.800 429.646 C 210.800 429.451,211.823 429.164,213.073 429.008 C 215.250 428.736,215.475 428.593,218.418 425.607 C 220.107 423.892,221.919 422.355,222.445 422.191 C 222.970 422.026,223.528 421.691,223.685 421.446 C 223.863 421.168,225.934 420.947,229.185 420.860 C 232.053 420.783,234.400 420.558,234.400 420.360 C 234.400 420.162,234.940 420.000,235.600 420.000 C 236.260 420.000,236.800 419.834,236.800 419.632 C 236.800 419.429,237.340 419.145,238.000 419.000 C 238.660 418.855,239.200 418.571,239.200 418.368 C 239.200 418.166,239.566 418.000,240.013 418.000 C 240.459 418.000,240.922 417.746,241.041 417.436 C 241.161 417.126,241.695 416.763,242.229 416.628 C 242.797 416.486,243.200 416.092,243.200 415.681 C 243.200 414.816,244.446 413.704,245.794 413.366 C 246.347 413.227,246.800 412.973,246.800 412.802 C 246.800 412.631,247.655 412.363,248.700 412.206 C 249.745 412.050,250.723 411.723,250.873 411.481 C 251.246 410.879,259.529 410.844,259.915 411.442 C 260.072 411.686,260.901 412.014,261.757 412.171 C 262.614 412.329,263.572 412.715,263.886 413.029 C 264.200 413.343,264.894 413.600,265.429 413.600 C 265.963 413.600,266.400 413.757,266.400 413.948 C 266.400 414.140,267.480 414.419,268.800 414.568 L 271.200 414.840 271.200 416.387 C 271.200 417.249,271.421 418.023,271.700 418.136 C 272.076 418.289,272.052 418.444,271.600 418.763 C 271.193 419.051,271.161 419.190,271.500 419.194 C 271.814 419.198,272.000 419.783,272.000 420.767 C 272.000 421.645,271.780 422.422,271.500 422.536 C 271.119 422.691,271.137 422.834,271.575 423.139 C 272.016 423.446,272.182 424.832,272.288 429.070 C 272.365 432.142,272.598 434.659,272.813 434.733 C 273.326 434.910,273.314 436.800,272.800 436.800 C 272.217 436.800,272.309 439.891,272.900 440.167 C 273.300 440.353,273.300 440.447,272.900 440.633 C 272.625 440.762,272.400 441.122,272.400 441.433 C 272.400 441.745,272.625 442.003,272.900 442.006 C 273.260 442.011,273.244 442.111,272.845 442.364 C 272.468 442.602,272.296 443.497,272.306 445.157 C 272.317 446.993,272.182 447.600,271.761 447.600 C 271.236 447.600,271.056 448.179,271.141 449.600 C 271.165 450.003,271.104 450.036,270.955 449.700 C 270.610 448.921,270.000 449.112,270.000 450.000 C 270.000 450.440,269.820 450.800,269.600 450.800 C 269.380 450.800,269.200 450.607,269.200 450.371 C 269.200 450.136,268.917 450.226,268.571 450.571 C 268.226 450.917,267.686 451.200,267.371 451.200 C 267.057 451.200,266.800 451.380,266.800 451.600 C 266.800 451.820,266.440 452.000,266.000 452.000 C 265.560 452.000,265.200 452.250,265.200 452.555 C 265.200 452.874,264.602 453.223,263.800 453.374 C 263.030 453.518,262.400 453.808,262.400 454.018 C 262.400 454.228,261.095 454.402,259.500 454.403 C 253.562 454.411,252.400 454.716,252.400 456.268 C 252.400 457.105,252.170 457.713,251.800 457.855 C 251.470 457.982,251.200 458.516,251.200 459.043 C 251.200 459.627,250.966 460.000,250.600 460.000 C 250.270 460.000,250.000 460.180,250.000 460.400 C 250.000 460.620,249.743 460.800,249.429 460.800 C 249.114 460.800,248.613 461.044,248.316 461.342 C 248.018 461.639,246.880 462.017,245.787 462.181 C 244.694 462.344,243.706 462.630,243.591 462.815 C 243.477 463.000,241.092 463.278,238.291 463.434 C 235.491 463.590,233.200 463.871,233.200 464.058 C 233.200 464.589,232.095 464.461,231.833 463.900 C 231.647 463.500,231.553 463.500,231.367 463.900 C 231.216 464.222,230.241 464.400,228.625 464.400 C 223.348 464.400,221.200 464.813,221.200 465.828 C 221.200 466.738,220.264 468.000,219.590 468.000 C 219.395 468.000,219.119 468.625,218.976 469.390 C 218.748 470.603,218.530 470.814,217.257 471.048 C 216.456 471.195,215.695 471.476,215.568 471.672 C 215.440 471.868,214.630 472.140,213.768 472.276 C 212.905 472.412,212.102 472.672,211.981 472.854 C 211.861 473.035,208.981 473.303,205.581 473.449 C 202.182 473.596,199.340 473.869,199.267 474.058 C 199.059 474.591,198.001 474.460,197.994 473.900 C 197.990 473.554,197.897 473.536,197.694 473.840 C 197.532 474.082,196.052 474.390,194.405 474.524 C 192.758 474.659,191.347 474.959,191.269 475.192 C 191.192 475.424,190.875 475.868,190.564 476.179 C 190.254 476.489,190.000 476.949,190.000 477.200 C 190.000 477.451,189.738 477.919,189.417 478.240 C 189.096 478.561,188.887 479.043,188.951 479.312 C 189.016 479.580,188.993 479.665,188.901 479.500 C 188.593 478.948,188.057 479.192,187.800 480.000 C 187.660 480.440,187.301 480.800,187.002 480.800 C 186.702 480.800,186.215 481.042,185.919 481.339 C 185.622 481.635,184.665 482.011,183.791 482.175 C 182.917 482.339,182.088 482.658,181.948 482.884 C 181.801 483.121,179.055 483.384,175.447 483.505 C 172.011 483.620,169.200 483.843,169.200 483.999 C 169.200 484.156,167.404 484.383,165.210 484.504 C 161.019 484.734,160.000 485.170,160.000 486.729 C 160.000 487.161,159.711 487.625,159.358 487.761 C 158.992 487.901,158.815 488.263,158.946 488.603 C 159.101 489.008,158.921 489.200,158.387 489.200 C 157.867 489.200,157.600 489.471,157.600 490.000 C 157.600 490.440,157.420 490.800,157.200 490.800 C 156.980 490.800,156.800 490.607,156.800 490.371 C 156.800 490.136,156.517 490.226,156.171 490.571 C 155.826 490.917,155.363 491.200,155.143 491.200 C 154.923 491.200,154.473 491.470,154.143 491.800 C 153.813 492.130,153.031 492.400,152.405 492.400 C 151.779 492.400,151.205 492.584,151.131 492.808 C 151.056 493.033,149.106 493.324,146.797 493.455 C 144.362 493.593,142.477 493.883,142.306 494.146 C 142.095 494.471,142.011 494.458,142.006 494.100 C 142.002 493.796,141.450 493.600,140.600 493.600 C 139.750 493.600,139.198 493.796,139.194 494.100 C 139.190 494.439,139.051 494.407,138.763 494.000 C 138.444 493.548,138.289 493.524,138.136 493.900 C 138.024 494.176,137.257 494.400,136.425 494.400 C 132.084 494.400,130.000 494.873,130.000 495.857 C 130.000 496.376,129.820 496.800,129.600 496.800 C 129.380 496.800,129.200 497.070,129.200 497.400 C 129.200 497.730,128.930 498.000,128.600 498.000 C 127.879 498.000,127.785 498.786,128.500 498.832 C 128.807 498.851,128.769 498.952,128.400 499.094 C 128.070 499.221,127.530 499.631,127.200 500.005 C 126.870 500.379,126.150 500.826,125.600 500.997 C 125.050 501.168,124.495 501.470,124.368 501.668 C 124.240 501.866,123.430 502.140,122.568 502.276 C 121.705 502.412,120.898 502.678,120.774 502.866 C 120.649 503.054,117.949 503.324,114.774 503.465 C 111.312 503.618,108.880 503.897,108.700 504.161 C 108.494 504.463,108.277 504.413,108.006 504.000 C 107.789 503.670,107.609 503.598,107.606 503.841 C 107.602 504.111,106.198 504.372,103.968 504.517 C 100.236 504.759,98.800 505.474,98.800 507.090 C 98.800 507.885,97.882 508.714,96.663 509.020 C 96.094 509.163,95.508 509.658,95.362 510.121 C 94.958 511.393,94.348 511.839,92.629 512.118 C 91.769 512.257,90.944 512.568,90.795 512.807 C 90.637 513.064,88.401 513.341,85.363 513.481 C 82.350 513.620,80.062 513.903,79.870 514.160 C 79.634 514.473,79.481 514.456,79.336 514.100 C 79.108 513.536,78.000 513.411,78.000 513.948 C 78.000 514.140,76.200 514.425,74.000 514.581 C 70.289 514.844,69.266 515.191,70.500 515.767 C 70.898 515.952,70.896 516.048,70.493 516.236 C 69.549 516.675,68.833 517.620,69.039 518.157 C 69.172 518.504,68.826 518.775,68.054 518.929 C 67.366 519.067,66.760 519.495,66.618 519.944 C 66.482 520.371,65.928 520.832,65.386 520.968 C 64.844 521.104,64.400 521.392,64.400 521.608 C 64.400 521.823,64.143 522.000,63.829 522.000 C 63.514 522.000,62.985 522.272,62.653 522.604 C 62.244 523.014,60.853 523.284,58.325 523.445 C 56.276 523.576,54.499 523.845,54.375 524.044 C 54.049 524.567,40.248 524.543,40.073 524.019 C 39.996 523.789,39.543 523.597,39.067 523.593 C 37.349 523.579,36.400 521.960,36.400 519.044 C 36.400 517.548,36.226 516.400,36.000 516.400 C 35.734 516.400,35.600 462.533,35.600 355.600 C 35.600 248.667,35.734 194.800,36.000 194.800 C 36.579 194.800,36.493 193.304,35.900 193.064 C 35.553 192.923,35.531 192.760,35.829 192.530 C 36.591 191.944,36.828 190.800,36.187 190.800 C 35.864 190.800,35.600 190.620,35.600 190.400 C 35.600 190.180,36.050 190.000,36.600 190.000 C 37.833 190.000,37.841 189.630,36.631 188.631 C 35.705 187.867,35.704 187.855,36.477 187.031 C 37.212 186.247,37.285 186.240,37.772 186.900 C 38.405 187.759,38.800 187.797,38.800 187.000 C 38.800 186.670,38.620 186.400,38.400 186.400 C 38.180 186.400,38.000 186.220,38.000 186.000 C 38.000 185.780,38.270 185.600,38.600 185.600 C 38.930 185.600,39.200 185.870,39.200 186.200 C 39.200 187.029,40.662 186.956,41.203 186.100 C 41.521 185.599,41.706 185.542,41.857 185.900 C 42.105 186.491,44.400 186.582,44.400 186.000 C 44.400 185.426,45.489 185.506,45.767 186.100 C 45.953 186.500,46.047 186.500,46.233 186.100 C 46.410 185.720,48.771 185.600,56.033 185.600 C 62.144 185.600,65.600 185.456,65.600 185.200 C 65.600 184.980,65.828 184.800,66.107 184.800 C 66.481 184.800,66.605 183.896,66.577 181.381 C 66.546 178.664,66.668 177.885,67.169 177.588 C 67.726 177.258,67.730 177.168,67.200 176.813 C 66.778 176.531,66.752 176.410,67.113 176.406 C 67.394 176.403,67.729 176.670,67.855 177.000 C 68.234 177.986,69.200 177.698,69.200 176.600 C 69.200 176.050,69.380 175.600,69.600 175.600 C 69.820 175.600,70.000 175.887,70.000 176.238 C 70.000 176.941,74.061 176.675,74.333 175.953 C 74.532 175.427,75.499 175.526,75.767 176.100 C 75.953 176.500,76.047 176.500,76.233 176.100 C 76.411 175.719,78.878 175.600,86.567 175.600 L 96.667 175.600 96.667 173.365 C 96.667 171.875,96.856 171.008,97.233 170.765 C 97.718 170.453,97.713 170.341,97.200 169.993 C 96.676 169.637,96.689 169.533,97.300 169.173 C 97.685 168.946,97.997 168.544,97.994 168.280 C 97.990 167.957,97.875 167.978,97.641 168.347 C 97.361 168.789,97.131 168.731,96.447 168.047 C 95.448 167.048,95.427 166.952,96.150 166.674 C 96.487 166.545,96.681 166.716,96.650 167.114 C 96.617 167.549,96.964 167.795,97.700 167.858 C 98.554 167.931,98.800 167.779,98.800 167.176 C 98.800 166.749,98.620 166.400,98.400 166.400 C 98.180 166.400,98.000 166.220,98.000 166.000 C 98.000 165.780,98.270 165.600,98.600 165.600 C 98.930 165.600,99.200 165.793,99.200 166.029 C 99.200 166.452,100.170 167.600,100.528 167.600 C 100.630 167.600,100.826 167.150,100.964 166.600 C 101.232 165.534,102.400 165.200,102.400 166.190 C 102.400 166.856,104.878 166.587,105.148 165.891 C 105.230 165.681,105.469 165.755,105.679 166.055 C 105.975 166.478,106.106 166.488,106.264 166.100 C 106.419 165.718,108.875 165.600,116.633 165.600 C 123.144 165.600,126.800 165.456,126.800 165.200 C 126.800 164.980,127.091 164.800,127.447 164.800 C 127.888 164.800,128.029 164.556,127.892 164.030 C 127.751 163.490,127.856 163.323,128.245 163.473 C 128.817 163.692,129.053 162.608,128.500 162.299 C 128.335 162.207,128.447 162.194,128.748 162.272 C 129.118 162.366,129.230 162.159,129.093 161.636 C 128.951 161.090,129.055 160.923,129.445 161.073 C 129.769 161.197,130.000 161.031,130.000 160.676 C 130.000 160.341,130.225 159.975,130.500 159.864 C 130.874 159.712,130.883 159.577,130.536 159.329 C 130.267 159.137,131.103 158.972,132.523 158.938 C 133.898 158.905,135.038 158.686,135.120 158.440 C 135.201 158.198,135.522 158.000,135.833 158.000 C 136.145 158.000,136.414 157.685,136.432 157.300 C 136.450 156.882,136.544 156.801,136.665 157.100 C 136.900 157.683,137.872 157.771,138.067 157.226 C 138.140 157.021,139.820 156.796,141.800 156.726 L 145.400 156.600 145.525 157.900 C 145.594 158.615,145.794 159.200,145.970 159.200 C 146.145 159.200,146.399 160.131,146.534 161.270 C 146.669 162.408,146.952 163.447,147.163 163.577 C 147.375 163.708,147.673 164.757,147.825 165.908 C 147.978 167.058,148.242 168.000,148.411 168.000 C 148.580 168.000,148.845 169.260,149.000 170.800 C 149.155 172.340,149.443 173.600,149.641 173.600 C 149.852 173.600,150.000 199.202,150.000 235.600 C 150.000 270.044,149.847 297.600,149.655 297.600 C 149.466 297.600,149.190 298.780,149.042 300.223 L 148.773 302.845 150.539 304.562 C 151.510 305.506,152.597 306.390,152.953 306.526 C 153.309 306.663,153.600 306.945,153.600 307.152 C 153.600 307.360,154.320 307.651,155.200 307.800 C 156.080 307.949,156.800 308.234,156.800 308.435 C 156.800 308.636,157.256 308.800,157.813 308.800 C 158.369 308.800,158.929 309.070,159.055 309.400 C 159.182 309.730,159.545 310.000,159.862 310.000 C 160.550 310.000,162.400 311.907,162.400 312.616 C 162.400 312.890,162.670 313.218,163.000 313.345 C 163.330 313.471,163.600 314.031,163.600 314.587 C 163.600 315.314,163.814 315.600,164.357 315.600 C 164.774 315.600,165.218 315.870,165.345 316.200 C 165.471 316.530,166.031 316.800,166.587 316.800 C 167.144 316.800,167.600 316.964,167.600 317.165 C 167.600 317.366,168.320 317.651,169.200 317.800 C 170.080 317.949,170.800 318.234,170.800 318.435 C 170.800 318.636,171.076 318.800,171.413 318.800 C 171.749 318.800,172.129 319.070,172.255 319.400 C 172.382 319.730,172.654 320.000,172.860 320.000 C 173.213 320.000,173.682 320.331,174.985 321.500 C 175.292 321.775,175.673 322.000,175.831 322.000 C 176.274 322.000,178.800 324.705,178.800 325.180 C 178.800 325.411,179.070 325.600,179.400 325.600 C 179.730 325.600,180.000 325.777,180.000 325.992 C 180.000 326.208,180.437 326.494,180.971 326.628 C 181.505 326.763,182.039 327.126,182.159 327.436 C 182.278 327.746,182.636 328.000,182.954 328.000 C 183.273 328.000,183.597 328.191,183.675 328.424 C 183.862 328.986,186.402 329.044,186.742 328.494 C 186.888 328.257,187.501 327.940,188.104 327.788 C 188.707 327.637,189.200 327.353,189.200 327.157 C 189.200 326.960,189.566 326.800,190.013 326.800 C 190.459 326.800,190.929 326.530,191.055 326.200 C 191.182 325.870,191.459 325.600,191.671 325.600 C 192.181 325.600,192.980 324.772,193.310 323.900 C 193.456 323.515,193.937 323.200,194.380 323.200 C 194.898 323.200,195.271 322.855,195.428 322.229 C 195.563 321.695,195.926 321.161,196.236 321.041 C 196.546 320.922,196.800 320.459,196.800 320.013 C 196.800 319.566,196.980 319.200,197.200 319.200 C 197.420 319.200,197.600 318.924,197.600 318.587 C 197.600 318.251,197.865 317.873,198.189 317.749 C 198.513 317.624,198.893 316.910,199.034 316.161 C 199.174 315.413,199.449 314.800,199.645 314.800 C 199.840 314.800,200.000 314.530,200.000 314.200 C 200.000 313.870,200.180 313.600,200.400 313.600 C 200.620 313.600,200.800 313.393,200.800 313.140 C 200.800 312.888,201.430 312.069,202.200 311.321 C 202.970 310.573,203.600 309.790,203.600 309.581 C 203.600 309.371,203.897 309.200,204.260 309.200 C 205.333 309.200,207.629 306.531,207.879 304.993 C 208.003 304.227,208.247 303.600,208.421 303.600 C 208.594 303.600,208.855 303.060,209.000 302.400 C 209.145 301.740,209.429 301.200,209.632 301.200 C 209.834 301.200,210.000 301.006,210.000 300.768 C 210.000 300.027,213.442 296.855,214.548 296.577 C 215.220 296.409,215.600 296.040,215.600 295.557 C 215.600 295.140,215.772 294.800,215.982 294.800 C 216.192 294.800,216.482 294.170,216.626 293.400 C 216.771 292.630,217.041 292.000,217.226 292.000 C 217.412 292.000,217.682 291.370,217.826 290.600 C 217.971 289.830,218.249 289.200,218.445 289.200 C 218.640 289.200,218.800 288.924,218.800 288.587 C 218.800 288.251,219.070 287.871,219.400 287.745 C 219.730 287.618,220.000 287.264,220.000 286.957 C 220.000 286.651,220.168 286.400,220.373 286.400 C 220.578 286.400,220.873 286.001,221.027 285.514 C 221.349 284.502,224.518 281.200,225.168 281.200 C 225.406 281.200,225.600 280.930,225.600 280.600 C 225.600 280.270,225.777 280.000,225.992 280.000 C 226.208 280.000,226.494 279.563,226.628 279.029 C 226.763 278.495,227.126 277.961,227.436 277.841 C 227.746 277.722,228.000 277.349,228.000 277.013 C 228.000 276.676,228.160 276.400,228.355 276.400 C 228.551 276.400,228.829 275.770,228.974 275.000 C 229.118 274.230,229.408 273.600,229.618 273.600 C 229.828 273.600,230.000 273.330,230.000 273.000 C 230.000 272.670,230.180 272.400,230.400 272.400 C 230.620 272.400,230.800 272.124,230.800 271.787 C 230.800 271.451,231.063 271.074,231.385 270.950 C 231.706 270.827,232.078 270.383,232.211 269.964 C 232.344 269.545,232.891 269.092,233.427 268.958 C 233.962 268.823,234.400 268.572,234.400 268.400 C 234.400 268.228,234.847 267.974,235.394 267.837 C 236.007 267.683,236.483 267.207,236.637 266.594 C 236.774 266.047,237.045 265.600,237.239 265.600 C 237.432 265.600,237.706 264.880,237.846 264.000 C 237.987 263.120,238.259 262.400,238.451 262.400 C 238.643 262.400,238.800 262.053,238.800 261.629 C 238.800 261.204,239.070 260.587,239.400 260.257 C 239.730 259.927,240.000 259.540,240.000 259.397 C 240.000 259.078,243.448 255.600,243.764 255.600 C 244.239 255.600,245.600 254.200,245.600 253.711 C 245.600 253.430,245.766 253.200,245.968 253.200 C 246.171 253.200,246.455 252.660,246.600 252.000 C 246.745 251.340,247.009 250.800,247.187 250.800 C 247.365 250.800,247.629 250.170,247.774 249.400 C 247.918 248.630,248.208 248.000,248.418 248.000 C 248.628 248.000,248.800 247.724,248.800 247.387 C 248.800 247.051,249.070 246.671,249.400 246.545 C 249.730 246.418,250.000 245.974,250.000 245.557 C 250.000 245.141,250.180 244.800,250.400 244.800 C 250.620 244.800,250.800 244.596,250.800 244.347 C 250.800 243.881,254.555 240.000,255.006 240.000 C 255.397 240.000,256.217 239.073,256.510 238.300 C 256.656 237.915,256.958 237.600,257.183 237.600 C 257.407 237.600,257.706 236.880,257.846 236.000 C 257.987 235.120,258.233 234.400,258.393 234.400 C 258.553 234.400,258.798 233.186,258.936 231.702 C 259.075 230.218,259.371 228.943,259.594 228.869 C 259.817 228.794,260.000 228.223,260.000 227.600 C 260.000 226.977,260.197 226.401,260.439 226.320 C 260.689 226.237,260.971 224.674,261.095 222.687 C 261.215 220.769,261.467 219.200,261.656 219.200 C 261.845 219.200,262.000 218.570,262.000 217.800 C 262.000 217.030,261.820 216.400,261.600 216.400 C 261.336 216.400,261.200 202.472,261.200 175.416 C 261.200 138.655,261.135 134.378,260.572 133.916 C 260.226 133.632,259.646 133.085,259.283 132.700 C 258.920 132.315,258.392 132.000,258.111 132.000 C 257.830 132.000,257.600 131.832,257.600 131.627 C 257.600 131.422,257.195 131.128,256.700 130.973 C 256.205 130.819,255.668 130.491,255.506 130.246 C 255.292 129.922,255.211 129.925,255.206 130.258 C 255.202 130.540,253.967 130.826,252.000 131.000 C 250.240 131.156,248.800 131.432,248.800 131.613 C 248.800 131.794,247.810 132.066,246.600 132.217 C 245.390 132.368,244.400 132.649,244.400 132.841 C 244.400 133.033,243.680 133.306,242.800 133.446 C 241.920 133.587,241.200 133.840,241.200 134.008 C 241.200 134.176,240.750 134.426,240.200 134.564 C 239.650 134.702,239.200 134.992,239.200 135.208 C 239.200 135.423,238.930 135.600,238.600 135.600 C 238.270 135.600,238.000 135.766,238.000 135.968 C 238.000 136.171,237.460 136.455,236.800 136.600 C 236.140 136.745,235.600 137.021,235.600 137.214 C 235.600 137.406,234.925 137.688,234.100 137.840 C 233.275 137.991,232.496 138.274,232.370 138.468 C 232.243 138.662,231.208 138.931,230.070 139.066 C 228.931 139.201,228.000 139.466,228.000 139.656 C 228.000 139.845,227.370 140.000,226.600 140.000 C 225.830 140.000,225.200 140.161,225.200 140.358 C 225.200 140.555,223.760 140.844,222.000 141.000 C 220.240 141.156,218.800 141.424,218.800 141.596 C 218.800 141.767,217.810 142.032,216.600 142.183 C 215.390 142.334,214.400 142.602,214.400 142.778 C 214.400 142.954,213.680 143.213,212.800 143.354 C 211.920 143.494,211.200 143.773,211.200 143.973 C 211.200 144.173,210.660 144.455,210.000 144.600 C 209.340 144.745,208.800 145.029,208.800 145.232 C 208.800 145.434,208.530 145.600,208.200 145.600 C 207.870 145.600,207.600 145.777,207.600 145.992 C 207.600 146.208,207.150 146.498,206.600 146.636 C 206.050 146.774,205.600 147.027,205.600 147.198 C 205.600 147.369,204.790 147.631,203.800 147.779 C 202.810 147.928,202.000 148.205,202.000 148.396 C 202.000 148.586,201.010 148.866,199.800 149.017 C 198.590 149.168,197.600 149.451,197.600 149.646 C 197.600 149.841,196.880 150.000,196.000 150.000 C 195.120 150.000,194.400 150.161,194.400 150.358 C 194.400 150.555,192.960 150.844,191.200 151.000 C 189.440 151.156,188.000 151.424,188.000 151.596 C 188.000 151.767,187.010 152.032,185.800 152.183 C 184.590 152.334,183.600 152.605,183.600 152.784 C 183.600 152.964,182.970 153.229,182.200 153.374 C 181.430 153.518,180.800 153.808,180.800 154.018 C 180.800 154.228,180.434 154.400,179.987 154.400 C 179.541 154.400,179.071 154.670,178.945 155.000 C 178.818 155.330,178.464 155.600,178.157 155.600 C 177.851 155.600,177.600 155.766,177.600 155.968 C 177.600 156.171,177.060 156.455,176.400 156.600 C 175.740 156.745,175.200 157.013,175.200 157.197 C 175.200 157.380,174.480 157.651,173.600 157.800 C 172.720 157.949,172.000 158.214,172.000 158.389 C 172.000 158.564,170.830 158.832,169.400 158.985 C 167.970 159.138,166.800 159.429,166.800 159.632 C 166.800 159.834,166.080 160.000,165.200 160.000 C 164.320 160.000,163.600 160.159,163.600 160.353 C 163.600 160.547,162.070 160.833,160.200 160.989 C 158.330 161.144,156.800 161.436,156.800 161.636 C 156.800 162.168,155.633 162.081,154.985 161.500 C 153.843 160.475,153.228 160.000,153.047 160.000 C 152.944 160.000,151.750 158.917,150.393 157.593 L 147.926 155.187 147.707 142.693 C 147.587 135.822,147.331 130.098,147.138 129.973 C 146.466 129.536,146.533 106.019,147.207 105.550 C 147.655 105.240,147.677 105.089,147.300 104.936 C 146.706 104.695,146.624 103.600,147.200 103.600 C 147.661 103.600,147.751 101.351,147.300 101.099 C 147.135 101.007,147.245 100.994,147.544 101.070 C 147.929 101.168,148.023 100.943,147.863 100.305 C 147.600 99.248,149.275 97.352,150.049 97.830 C 150.316 97.995,150.776 97.792,151.107 97.361 C 151.556 96.777,151.739 96.727,151.894 97.145 C 152.040 97.538,152.177 97.562,152.382 97.230 C 152.569 96.927,155.027 96.684,159.533 96.522 C 163.310 96.386,166.400 96.123,166.400 95.938 C 166.400 95.752,167.210 95.600,168.200 95.600 C 169.213 95.600,170.000 95.413,170.000 95.171 C 170.000 94.936,170.272 94.471,170.604 94.139 C 170.936 93.807,171.104 93.368,170.978 93.164 C 170.610 92.568,171.201 91.200,171.827 91.200 C 172.142 91.200,172.400 90.930,172.400 90.600 C 172.400 90.270,172.580 90.000,172.800 90.000 C 173.020 90.000,173.221 89.685,173.246 89.300 C 173.291 88.633,173.302 88.633,173.476 89.300 C 173.746 90.335,174.400 90.150,174.400 89.038 C 174.400 88.179,174.628 88.044,176.500 87.789 C 177.655 87.632,178.728 87.300,178.885 87.052 C 179.077 86.748,181.861 86.554,187.385 86.459 C 191.903 86.381,195.600 86.156,195.600 85.959 C 195.600 85.762,195.793 85.600,196.029 85.600 C 196.839 85.600,197.470 84.585,197.693 82.922 C 197.900 81.380,198.119 80.955,199.500 79.415 C 199.775 79.108,200.000 78.676,200.000 78.456 C 200.000 77.894,201.425 77.503,202.500 77.769 C 202.995 77.892,203.175 77.889,202.900 77.763 C 201.504 77.122,203.058 76.867,210.000 76.600 C 214.180 76.439,217.600 76.148,217.600 75.954 C 217.600 75.759,218.301 75.600,219.157 75.600 C 220.172 75.600,220.795 75.391,220.945 75.000 C 221.085 74.635,220.945 74.400,220.587 74.400 C 220.264 74.400,220.000 74.220,220.000 74.000 C 220.000 73.780,220.463 73.600,221.029 73.600 C 221.977 73.600,222.007 73.550,221.409 72.951 C 221.052 72.595,220.814 72.025,220.880 71.685 C 221.043 70.846,222.000 70.574,222.000 71.367 C 222.000 71.715,221.790 72.000,221.533 72.000 C 221.277 72.000,221.189 72.122,221.338 72.271 C 221.690 72.624,223.024 71.185,223.378 70.069 C 223.542 69.554,223.984 69.200,224.464 69.200 C 224.915 69.200,225.360 68.873,225.467 68.464 C 225.606 67.935,226.066 67.712,227.101 67.673 C 227.893 67.643,228.660 67.426,228.806 67.191 C 228.972 66.921,232.103 66.677,237.235 66.533 C 241.726 66.407,245.460 66.146,245.533 65.952 C 245.607 65.758,246.102 65.600,246.633 65.600 C 247.165 65.600,247.623 65.375,247.651 65.100 C 247.679 64.825,247.746 64.158,247.800 63.617 C 247.855 63.076,248.102 62.566,248.349 62.484 C 248.597 62.401,248.800 62.001,248.800 61.595 C 248.800 61.189,249.099 60.558,249.465 60.192 C 250.029 59.628,250.044 59.468,249.565 59.137 C 249.146 58.848,249.220 58.809,249.850 58.985 C 250.483 59.162,250.755 59.015,250.913 58.411 C 251.067 57.823,251.456 57.600,252.329 57.600 C 252.991 57.600,253.595 57.416,253.670 57.191 C 253.751 56.946,256.603 56.689,260.803 56.548 C 264.651 56.420,267.860 56.154,267.933 55.957 C 268.007 55.761,268.950 55.600,270.029 55.600 C 272.516 55.600,273.650 54.749,273.325 53.124 C 273.138 52.188,273.213 52.030,273.749 52.236 C 274.184 52.403,274.400 52.272,274.400 51.843 C 274.400 51.186,274.998 50.959,275.301 51.500 C 275.393 51.665,275.416 51.580,275.351 51.312 C 275.287 51.043,275.496 50.561,275.817 50.240 C 276.138 49.919,276.400 49.284,276.400 48.829 C 276.400 48.049,276.964 47.796,278.305 47.971 C 278.583 48.008,278.918 47.759,279.048 47.419 C 279.332 46.679,281.048 46.590,281.336 47.300 C 281.491 47.681,281.635 47.663,281.940 47.224 C 282.253 46.774,283.772 46.614,288.871 46.492 C 292.462 46.406,295.460 46.170,295.533 45.968 C 295.607 45.766,296.192 45.600,296.833 45.600 C 297.863 45.600,298.000 45.459,298.000 44.400 C 298.000 43.740,298.180 43.200,298.400 43.200 C 298.862 43.200,298.950 41.350,298.500 41.099 C 298.335 41.007,298.410 40.980,298.668 41.041 C 299.308 41.191,301.005 39.667,300.609 39.297 C 300.434 39.134,300.210 39.225,300.112 39.500 C 300.014 39.775,299.663 40.000,299.333 40.000 C 298.420 40.000,298.941 39.018,299.931 38.872 C 300.409 38.802,300.800 38.593,300.800 38.407 C 300.800 38.222,301.565 37.942,302.500 37.786 C 303.435 37.630,304.295 37.352,304.412 37.170 C 304.529 36.987,307.769 36.721,311.612 36.579 C 315.455 36.436,318.660 36.158,318.733 35.960 C 318.807 35.762,319.596 35.600,320.487 35.600 C 321.684 35.600,322.341 35.349,322.998 34.640 C 323.487 34.112,324.228 33.616,324.644 33.537 C 325.219 33.428,325.429 32.986,325.523 31.697 C 325.607 30.542,325.830 30.000,326.223 30.000 C 326.571 30.000,326.800 29.605,326.800 29.005 C 326.800 28.153,327.031 27.973,328.400 27.754 C 329.280 27.613,330.000 27.296,330.001 27.049 C 330.001 26.741,332.045 26.557,336.500 26.463 C 340.338 26.382,343.102 26.159,343.251 25.918 C 343.407 25.665,343.586 25.717,343.721 26.055 C 343.900 26.502,344.016 26.492,344.370 26.000 C 344.752 25.467,344.844 25.467,345.194 26.000 C 345.457 26.401,345.590 26.434,345.594 26.100 C 345.597 25.825,346.050 25.600,346.600 25.600 C 347.503 25.600,347.604 25.435,347.645 23.900 C 347.753 19.794,347.844 19.594,350.683 17.206 C 351.304 16.684,352.400 16.680,352.400 17.200 C 352.400 17.420,352.580 17.600,352.800 17.600 C 353.020 17.600,353.200 17.346,353.200 17.036 C 353.200 16.606,353.884 16.466,356.097 16.445 C 357.691 16.431,359.055 16.234,359.130 16.009 C 359.306 15.483,372.280 15.450,372.467 15.975 M132.804 86.697 C 131.630 87.157,127.136 91.717,126.689 92.900 C 126.544 93.285,126.497 93.600,126.584 93.600 C 126.800 93.600,133.600 86.787,133.600 86.571 C 133.600 86.379,133.622 86.376,132.804 86.697 M122.804 96.697 C 121.630 97.157,117.136 101.717,116.689 102.900 C 116.544 103.285,116.497 103.600,116.584 103.600 C 116.800 103.600,123.600 96.787,123.600 96.571 C 123.600 96.379,123.622 96.376,122.804 96.697 M114.900 126.665 C 114.625 126.776,114.400 127.122,114.400 127.433 C 114.400 127.745,114.240 128.000,114.045 128.000 C 113.850 128.000,113.563 128.855,113.406 129.900 C 113.250 130.945,112.921 131.924,112.676 132.076 C 112.391 132.253,112.172 134.682,112.066 138.854 C 111.944 143.661,111.757 145.500,111.350 145.907 C 111.048 146.210,110.800 146.702,110.800 147.002 C 110.800 147.301,110.449 147.657,110.020 147.794 C 109.592 147.930,109.118 148.428,108.968 148.902 C 108.817 149.375,108.424 150.033,108.094 150.363 C 107.561 150.896,107.529 150.854,107.801 149.981 C 107.970 149.442,108.249 148.908,108.422 148.796 C 108.595 148.684,108.860 148.099,109.012 147.496 C 109.163 146.893,109.447 146.400,109.643 146.400 C 109.840 146.400,110.000 143.790,110.000 140.600 C 110.000 137.252,110.159 134.800,110.375 134.800 C 110.582 134.800,110.872 133.990,111.021 133.000 C 111.169 132.010,111.436 131.200,111.614 131.200 C 111.791 131.200,112.055 130.660,112.200 130.000 C 112.345 129.340,112.629 128.800,112.832 128.800 C 113.034 128.800,113.200 128.543,113.200 128.229 C 113.200 127.523,114.291 126.389,114.929 126.432 C 115.260 126.454,115.252 126.523,114.900 126.665 M36.680 187.336 C 36.348 188.201,37.106 189.146,37.563 188.436 C 37.951 187.834,37.721 186.800,37.200 186.800 C 37.027 186.800,36.793 187.041,36.680 187.336 M390.964 449.289 C 391.117 451.319,391.393 453.074,391.577 453.189 C 391.761 453.305,391.978 456.782,392.059 460.916 C 392.156 465.879,392.358 468.529,392.654 468.716 C 392.900 468.872,393.230 469.765,393.386 470.700 C 393.542 471.635,393.834 472.400,394.035 472.400 C 394.236 472.400,394.400 472.655,394.400 472.967 C 394.400 473.278,394.625 473.614,394.900 473.712 C 395.175 473.810,395.282 474.018,395.138 474.174 C 394.796 474.544,393.200 473.174,393.200 472.511 C 393.200 472.230,393.028 472.000,392.818 472.000 C 392.608 472.000,392.318 471.370,392.174 470.600 C 392.029 469.830,391.762 469.200,391.580 469.200 C 391.398 469.200,391.128 468.390,390.979 467.400 C 390.831 466.410,390.550 465.600,390.355 465.600 C 390.158 465.600,390.000 461.146,390.000 455.600 C 390.000 445.487,390.453 442.522,390.964 449.289 M305.600 460.200 C 305.600 465.495,305.505 465.390,308.045 462.900 C 310.775 460.223,310.706 460.292,312.679 458.248 C 313.661 457.232,314.629 456.400,314.832 456.400 C 315.034 456.400,315.200 456.220,315.200 456.000 C 315.200 455.756,313.333 455.600,310.400 455.600 L 305.600 455.600 305.600 460.200 M285.600 500.200 C 285.600 505.495,285.505 505.390,288.045 502.900 C 290.775 500.223,290.706 500.292,292.679 498.248 C 293.661 497.232,294.629 496.400,294.832 496.400 C 295.034 496.400,295.200 496.220,295.200 496.000 C 295.200 495.756,293.333 495.600,290.400 495.600 L 285.600 495.600 285.600 500.200 \\\"\\r\\n              stroke=\\\"none\\\"\\r\\n              fill=\\\"#94cc54\\\"\\r\\n              fill-rule=\\\"evenodd\\\"\\r\\n            ></path>\\r\\n            <path\\r\\n              id=\\\"path1\\\"\\r\\n              d=\\\"M140.300 156.710 C 139.035 156.782,138.000 157.011,138.000 157.220 C 138.000 157.781,136.900 157.682,136.665 157.100 C 136.544 156.801,136.450 156.882,136.432 157.300 C 136.414 157.685,136.145 158.000,135.833 158.000 C 135.522 158.000,135.201 158.198,135.120 158.440 C 135.038 158.686,133.898 158.905,132.523 158.938 C 131.103 158.972,130.267 159.137,130.536 159.329 C 130.883 159.577,130.874 159.712,130.500 159.864 C 130.225 159.975,130.000 160.341,130.000 160.676 C 130.000 161.031,129.769 161.197,129.445 161.073 C 129.055 160.923,128.951 161.090,129.093 161.636 C 129.230 162.159,129.118 162.366,128.748 162.272 C 128.447 162.194,128.335 162.207,128.500 162.299 C 129.053 162.608,128.817 163.692,128.245 163.473 C 127.856 163.323,127.751 163.490,127.892 164.030 C 128.029 164.556,127.888 164.800,127.447 164.800 C 127.091 164.800,126.800 164.980,126.800 165.200 C 126.800 165.456,123.144 165.600,116.633 165.600 C 108.875 165.600,106.419 165.718,106.264 166.100 C 106.106 166.488,105.975 166.478,105.679 166.055 C 105.469 165.755,105.230 165.681,105.148 165.891 C 104.878 166.587,102.400 166.856,102.400 166.190 C 102.400 165.200,101.232 165.534,100.964 166.600 C 100.826 167.150,100.630 167.600,100.528 167.600 C 100.170 167.600,99.200 166.452,99.200 166.029 C 99.200 165.793,98.930 165.600,98.600 165.600 C 98.270 165.600,98.000 165.780,98.000 166.000 C 98.000 166.220,98.180 166.400,98.400 166.400 C 98.620 166.400,98.800 166.749,98.800 167.176 C 98.800 167.779,98.554 167.931,97.700 167.858 C 96.964 167.795,96.617 167.549,96.650 167.114 C 96.681 166.716,96.487 166.545,96.150 166.674 C 95.427 166.952,95.448 167.048,96.447 168.047 C 97.131 168.731,97.361 168.789,97.641 168.347 C 97.875 167.978,97.990 167.957,97.994 168.280 C 97.997 168.544,97.685 168.946,97.300 169.173 C 96.689 169.533,96.676 169.637,97.200 169.993 C 97.713 170.341,97.718 170.453,97.233 170.765 C 96.856 171.008,96.667 171.875,96.667 173.365 L 96.667 175.600 86.567 175.600 C 78.878 175.600,76.411 175.719,76.233 176.100 C 76.047 176.500,75.953 176.500,75.767 176.100 C 75.499 175.526,74.532 175.427,74.333 175.953 C 74.061 176.675,70.000 176.941,70.000 176.238 C 70.000 175.887,69.820 175.600,69.600 175.600 C 69.380 175.600,69.200 176.050,69.200 176.600 C 69.200 177.698,68.234 177.986,67.855 177.000 C 67.729 176.670,67.394 176.403,67.113 176.406 C 66.752 176.410,66.778 176.531,67.200 176.813 C 67.730 177.168,67.726 177.258,67.169 177.588 C 66.668 177.885,66.546 178.664,66.577 181.381 C 66.605 183.896,66.481 184.800,66.107 184.800 C 65.828 184.800,65.600 184.980,65.600 185.200 C 65.600 185.456,62.144 185.600,56.033 185.600 C 48.771 185.600,46.410 185.720,46.233 186.100 C 46.047 186.500,45.953 186.500,45.767 186.100 C 45.489 185.506,44.400 185.426,44.400 186.000 C 44.400 186.582,42.105 186.491,41.857 185.900 C 41.706 185.542,41.521 185.599,41.203 186.100 C 40.662 186.956,39.200 187.029,39.200 186.200 C 39.200 185.870,38.930 185.600,38.600 185.600 C 38.270 185.600,38.000 185.780,38.000 186.000 C 38.000 186.220,38.180 186.400,38.400 186.400 C 38.620 186.400,38.800 186.670,38.800 187.000 C 38.800 187.797,38.405 187.759,37.772 186.900 C 37.285 186.240,37.212 186.247,36.477 187.031 C 35.704 187.855,35.705 187.867,36.631 188.631 C 37.841 189.630,37.833 190.000,36.600 190.000 C 36.050 190.000,35.600 190.180,35.600 190.400 C 35.600 190.620,35.864 190.800,36.187 190.800 C 36.828 190.800,36.591 191.944,35.829 192.530 C 35.531 192.760,35.553 192.923,35.900 193.064 C 36.493 193.304,36.579 194.800,36.000 194.800 C 35.734 194.800,35.600 248.667,35.600 355.600 C 35.600 462.533,35.734 516.400,36.000 516.400 C 36.226 516.400,36.403 517.571,36.407 519.100 C 36.414 522.028,37.363 523.600,39.123 523.600 C 39.569 523.600,39.996 523.789,40.073 524.019 C 40.248 524.543,54.049 524.567,54.375 524.044 C 54.499 523.845,56.276 523.576,58.325 523.445 C 60.853 523.284,62.244 523.014,62.653 522.604 C 62.985 522.272,63.514 522.000,63.829 522.000 C 64.143 522.000,64.400 521.823,64.400 521.608 C 64.400 521.392,64.844 521.104,65.386 520.968 C 65.928 520.832,66.482 520.371,66.618 519.944 C 66.760 519.495,67.366 519.067,68.054 518.929 C 68.826 518.775,69.172 518.504,69.039 518.157 C 68.833 517.620,69.549 516.675,70.493 516.236 C 70.896 516.048,70.898 515.952,70.500 515.767 C 69.266 515.191,70.289 514.844,74.000 514.581 C 76.200 514.425,78.000 514.140,78.000 513.948 C 78.000 513.411,79.108 513.536,79.336 514.100 C 79.481 514.456,79.634 514.473,79.870 514.160 C 80.062 513.903,82.350 513.620,85.363 513.481 C 88.401 513.341,90.637 513.064,90.795 512.807 C 90.944 512.568,91.769 512.257,92.629 512.118 C 94.348 511.839,94.958 511.393,95.362 510.121 C 95.508 509.658,96.094 509.163,96.663 509.020 C 97.882 508.714,98.800 507.885,98.800 507.090 C 98.800 505.474,100.236 504.759,103.968 504.517 C 106.198 504.372,107.602 504.111,107.606 503.841 C 107.609 503.598,107.789 503.670,108.006 504.000 C 108.277 504.413,108.494 504.463,108.700 504.161 C 108.880 503.897,111.312 503.618,114.774 503.465 C 117.949 503.324,120.649 503.054,120.774 502.866 C 120.898 502.678,121.705 502.412,122.568 502.276 C 123.430 502.140,124.240 501.866,124.368 501.668 C 124.495 501.470,125.050 501.168,125.600 500.997 C 126.150 500.826,126.870 500.379,127.200 500.005 C 127.530 499.631,128.070 499.221,128.400 499.094 C 128.769 498.952,128.807 498.851,128.500 498.832 C 127.785 498.786,127.879 498.000,128.600 498.000 C 128.930 498.000,129.200 497.730,129.200 497.400 C 129.200 497.070,129.380 496.800,129.600 496.800 C 129.820 496.800,130.000 496.376,130.000 495.857 C 130.000 494.873,132.084 494.400,136.425 494.400 C 137.257 494.400,138.024 494.176,138.136 493.900 C 138.289 493.524,138.444 493.548,138.763 494.000 C 139.051 494.407,139.190 494.439,139.194 494.100 C 139.198 493.796,139.750 493.600,140.600 493.600 C 141.450 493.600,142.002 493.796,142.006 494.100 C 142.011 494.458,142.095 494.471,142.306 494.146 C 142.477 493.883,144.362 493.593,146.797 493.455 C 149.106 493.324,151.056 493.033,151.131 492.808 C 151.205 492.584,151.779 492.400,152.405 492.400 C 153.031 492.400,153.813 492.130,154.143 491.800 C 154.473 491.470,154.923 491.200,155.143 491.200 C 155.363 491.200,155.826 490.917,156.171 490.571 C 156.517 490.226,156.800 490.136,156.800 490.371 C 156.800 490.607,156.980 490.800,157.200 490.800 C 157.420 490.800,157.600 490.440,157.600 490.000 C 157.600 489.471,157.867 489.200,158.387 489.200 C 158.921 489.200,159.101 489.008,158.946 488.603 C 158.815 488.263,158.992 487.901,159.358 487.761 C 159.711 487.625,160.000 487.161,160.000 486.729 C 160.000 485.170,161.019 484.734,165.210 484.504 C 167.404 484.383,169.200 484.156,169.200 483.999 C 169.200 483.843,172.011 483.620,175.447 483.505 C 179.055 483.384,181.801 483.121,181.948 482.884 C 182.088 482.658,182.917 482.339,183.791 482.175 C 184.665 482.011,185.622 481.635,185.919 481.339 C 186.215 481.042,186.702 480.800,187.002 480.800 C 187.301 480.800,187.660 480.440,187.800 480.000 C 188.057 479.192,188.593 478.948,188.901 479.500 C 188.993 479.665,189.016 479.580,188.951 479.312 C 188.887 479.043,189.096 478.561,189.417 478.240 C 189.738 477.919,190.000 477.451,190.000 477.200 C 190.000 476.949,190.254 476.489,190.564 476.179 C 190.875 475.868,191.192 475.424,191.269 475.192 C 191.347 474.959,192.758 474.659,194.405 474.524 C 196.052 474.390,197.532 474.082,197.694 473.840 C 197.897 473.536,197.990 473.554,197.994 473.900 C 198.001 474.460,199.059 474.591,199.267 474.058 C 199.340 473.869,202.182 473.596,205.581 473.449 C 208.981 473.303,211.861 473.035,211.981 472.854 C 212.102 472.672,212.905 472.412,213.768 472.276 C 214.630 472.140,215.440 471.868,215.568 471.672 C 215.695 471.476,216.456 471.195,217.257 471.048 C 218.530 470.814,218.748 470.603,218.976 469.390 C 219.119 468.625,219.395 468.000,219.590 468.000 C 220.264 468.000,221.200 466.738,221.200 465.828 C 221.200 464.813,223.348 464.400,228.625 464.400 C 230.241 464.400,231.216 464.222,231.367 463.900 C 231.553 463.500,231.647 463.500,231.833 463.900 C 232.095 464.461,233.200 464.589,233.200 464.058 C 233.200 463.871,235.491 463.590,238.291 463.434 C 241.092 463.278,243.477 463.000,243.591 462.815 C 243.706 462.630,244.694 462.344,245.787 462.181 C 246.880 462.017,248.018 461.639,248.316 461.342 C 248.613 461.044,249.114 460.800,249.429 460.800 C 249.743 460.800,250.000 460.620,250.000 460.400 C 250.000 460.180,250.270 460.000,250.600 460.000 C 250.966 460.000,251.200 459.627,251.200 459.043 C 251.200 458.516,251.470 457.982,251.800 457.855 C 252.170 457.713,252.400 457.105,252.400 456.268 C 252.400 454.716,253.562 454.411,259.500 454.403 C 261.095 454.402,262.400 454.228,262.400 454.018 C 262.400 453.808,263.030 453.518,263.800 453.374 C 264.602 453.223,265.200 452.874,265.200 452.555 C 265.200 452.250,265.560 452.000,266.000 452.000 C 266.440 452.000,266.800 451.820,266.800 451.600 C 266.800 451.380,267.057 451.200,267.371 451.200 C 267.686 451.200,268.226 450.917,268.571 450.571 C 268.917 450.226,269.200 450.136,269.200 450.371 C 269.200 450.607,269.380 450.800,269.600 450.800 C 269.820 450.800,270.000 450.440,270.000 450.000 C 270.000 449.112,270.610 448.921,270.955 449.700 C 271.104 450.036,271.165 450.003,271.141 449.600 C 271.056 448.179,271.236 447.600,271.761 447.600 C 272.182 447.600,272.317 446.993,272.306 445.157 C 272.296 443.497,272.468 442.602,272.845 442.364 C 273.244 442.111,273.260 442.011,272.900 442.006 C 272.251 441.998,272.251 440.936,272.900 440.633 C 273.300 440.447,273.300 440.353,272.900 440.167 C 272.309 439.891,272.217 436.800,272.800 436.800 C 273.314 436.800,273.326 434.910,272.813 434.733 C 272.598 434.659,272.365 432.142,272.288 429.070 C 272.182 424.832,272.016 423.446,271.575 423.139 C 271.137 422.834,271.119 422.691,271.500 422.536 C 271.780 422.422,272.000 421.645,272.000 420.767 C 272.000 419.783,271.814 419.198,271.500 419.194 C 271.161 419.190,271.193 419.051,271.600 418.763 C 272.052 418.444,272.076 418.289,271.700 418.136 C 271.421 418.023,271.200 417.249,271.200 416.387 L 271.200 414.840 268.800 414.568 C 267.480 414.419,266.400 414.140,266.400 413.948 C 266.400 413.757,265.963 413.600,265.429 413.600 C 264.894 413.600,264.200 413.343,263.886 413.029 C 263.572 412.715,262.614 412.329,261.757 412.171 C 260.901 412.014,260.072 411.686,259.915 411.442 C 259.529 410.844,251.246 410.879,250.873 411.481 C 250.723 411.723,249.745 412.050,248.700 412.206 C 247.655 412.363,246.800 412.631,246.800 412.802 C 246.800 412.973,246.347 413.227,245.794 413.366 C 244.446 413.704,243.200 414.816,243.200 415.681 C 243.200 416.092,242.797 416.486,242.229 416.628 C 241.695 416.763,241.161 417.126,241.041 417.436 C 240.922 417.746,240.459 418.000,240.013 418.000 C 239.566 418.000,239.200 418.166,239.200 418.368 C 239.200 418.571,238.660 418.855,238.000 419.000 C 237.340 419.145,236.800 419.429,236.800 419.632 C 236.800 419.834,236.260 420.000,235.600 420.000 C 234.940 420.000,234.400 420.162,234.400 420.360 C 234.400 420.558,232.053 420.783,229.185 420.860 C 225.934 420.947,223.863 421.168,223.685 421.446 C 223.528 421.691,222.970 422.026,222.445 422.191 C 221.919 422.355,220.107 423.892,218.418 425.607 C 215.475 428.593,215.250 428.736,213.073 429.008 C 211.823 429.164,210.800 429.451,210.800 429.646 C 210.800 429.841,210.080 430.000,209.200 430.000 C 208.320 430.000,207.600 430.158,207.600 430.352 C 207.600 430.546,205.710 430.833,203.400 430.991 C 201.090 431.148,199.200 431.415,199.200 431.584 C 199.200 431.753,198.385 432.003,197.390 432.139 C 195.279 432.429,194.858 432.739,191.075 436.794 C 190.456 437.457,189.691 438.000,189.375 438.000 C 189.059 438.000,188.800 438.166,188.800 438.368 C 188.800 438.571,188.260 438.855,187.600 439.000 C 186.940 439.145,186.400 439.429,186.400 439.632 C 186.400 439.834,185.410 440.000,184.200 440.000 C 182.990 440.000,182.000 440.156,182.000 440.348 C 182.000 440.539,180.093 440.780,177.763 440.884 C 175.433 440.987,173.408 441.257,173.263 441.482 C 173.118 441.708,172.564 442.028,172.031 442.195 C 170.763 442.591,169.924 443.312,166.675 446.794 C 166.039 447.475,165.140 448.000,164.608 448.000 C 164.090 448.000,163.606 448.183,163.531 448.407 C 163.456 448.631,162.451 448.926,161.298 449.063 C 160.144 449.200,159.200 449.466,159.200 449.656 C 159.200 449.845,158.570 450.000,157.800 450.000 C 157.030 450.000,156.400 450.180,156.400 450.400 C 156.400 450.620,156.130 450.800,155.800 450.800 C 155.470 450.800,155.200 450.620,155.200 450.400 C 155.200 450.180,154.930 450.000,154.600 450.000 C 153.855 450.000,150.800 446.906,150.800 446.152 C 150.800 445.848,150.620 445.600,150.400 445.600 C 149.823 445.600,149.849 363.717,150.426 363.525 C 151.062 363.313,151.132 357.115,150.500 356.902 C 150.225 356.809,150.000 356.388,150.000 355.966 C 150.000 355.097,146.995 352.000,146.152 352.000 C 145.848 352.000,145.600 351.834,145.600 351.632 C 145.600 351.429,145.060 351.145,144.400 351.000 C 143.740 350.855,143.200 350.571,143.200 350.368 C 143.200 350.166,142.930 350.000,142.600 350.000 C 142.270 350.000,142.000 349.832,142.000 349.627 C 142.000 349.422,141.595 349.128,141.100 348.973 C 140.605 348.819,139.011 347.457,137.557 345.946 C 136.104 344.436,134.619 343.200,134.257 343.200 C 133.896 343.200,133.600 343.034,133.600 342.832 C 133.600 342.629,133.075 342.348,132.433 342.207 C 131.792 342.066,131.167 341.692,131.046 341.376 C 130.924 341.059,130.459 340.800,130.013 340.800 C 129.566 340.800,129.200 340.620,129.200 340.400 C 129.200 340.180,128.930 340.000,128.600 340.000 C 128.270 340.000,128.000 339.820,128.000 339.600 C 128.000 339.380,127.724 339.200,127.387 339.200 C 127.051 339.200,126.671 338.930,126.545 338.600 C 126.418 338.270,126.060 338.000,125.749 338.000 C 125.438 338.000,123.968 336.765,122.482 335.256 C 120.997 333.746,119.380 332.384,118.891 332.229 C 118.401 332.073,118.000 331.793,118.000 331.605 C 118.000 331.417,117.460 331.145,116.800 331.000 C 116.140 330.855,115.600 330.571,115.600 330.368 C 115.600 330.166,115.330 330.000,115.000 330.000 C 114.670 330.000,114.400 329.840,114.400 329.643 C 114.400 329.447,113.950 329.174,113.400 329.036 C 112.850 328.898,112.400 328.608,112.400 328.392 C 112.400 328.177,112.170 328.000,111.889 328.000 C 111.402 328.000,110.000 326.639,110.000 326.167 C 110.000 326.044,109.730 325.673,109.400 325.343 C 109.070 325.013,108.800 324.396,108.800 323.971 C 108.800 323.547,108.634 323.200,108.432 323.200 C 108.229 323.200,107.945 322.660,107.800 322.000 C 107.655 321.340,107.391 320.800,107.213 320.800 C 107.035 320.800,106.771 320.170,106.626 319.400 C 106.482 318.630,106.186 318.000,105.969 318.000 C 105.752 318.000,105.458 317.685,105.315 317.300 C 105.172 316.915,104.683 316.261,104.228 315.846 C 103.650 315.320,103.552 315.038,103.903 314.912 C 104.759 314.605,108.000 311.169,108.000 310.568 C 108.000 310.256,108.177 310.000,108.392 310.000 C 108.608 310.000,108.898 309.550,109.036 309.000 C 109.174 308.450,109.447 308.000,109.643 308.000 C 109.840 308.000,110.000 307.730,110.000 307.400 C 110.000 307.070,110.166 306.800,110.368 306.800 C 110.571 306.800,110.855 306.260,111.000 305.600 C 111.145 304.940,111.429 304.400,111.632 304.400 C 111.834 304.400,112.000 304.144,112.000 303.831 C 112.000 303.172,115.148 300.000,115.802 300.000 C 116.230 300.000,118.000 297.894,118.000 297.384 C 118.000 297.110,118.270 296.782,118.600 296.655 C 118.930 296.529,119.200 296.072,119.200 295.640 C 119.200 295.207,119.542 294.745,119.960 294.613 C 120.378 294.480,120.827 293.948,120.957 293.430 C 121.099 292.865,121.594 292.388,122.197 292.237 C 122.748 292.098,123.200 291.808,123.200 291.592 C 123.200 291.377,123.457 291.200,123.771 291.200 C 124.086 291.200,124.626 290.917,124.971 290.571 C 125.317 290.226,125.600 290.134,125.600 290.367 C 125.600 290.600,126.320 290.906,127.200 291.046 C 128.080 291.187,128.800 291.440,128.800 291.608 C 128.800 291.776,129.250 292.026,129.800 292.164 C 130.350 292.302,130.800 292.592,130.800 292.808 C 130.800 293.023,131.005 293.200,131.256 293.200 C 131.507 293.200,132.500 294.010,133.462 295.000 C 134.424 295.990,135.460 296.800,135.763 296.800 C 136.066 296.800,136.418 297.070,136.545 297.400 C 136.671 297.730,137.051 298.000,137.387 298.000 C 137.724 298.000,138.000 298.172,138.000 298.382 C 138.000 298.592,138.624 298.881,139.386 299.024 C 140.211 299.179,140.865 299.575,141.001 300.002 C 141.126 300.397,141.715 300.843,142.310 300.992 C 142.905 301.141,143.504 301.444,143.640 301.665 C 143.776 301.885,144.966 302.163,146.284 302.283 L 148.680 302.500 148.940 301.200 C 149.083 300.485,149.200 299.382,149.200 298.750 C 149.200 298.118,149.380 297.600,149.600 297.600 C 149.865 297.600,150.000 276.667,150.000 235.600 C 150.000 199.202,149.852 173.600,149.641 173.600 C 149.443 173.600,149.155 172.340,149.000 170.800 C 148.845 169.260,148.580 168.000,148.411 168.000 C 148.242 168.000,147.978 167.058,147.825 165.908 C 147.673 164.757,147.375 163.708,147.163 163.577 C 146.952 163.447,146.669 162.408,146.534 161.270 C 146.399 160.131,146.145 159.200,145.970 159.200 C 145.794 159.200,145.594 158.622,145.525 157.916 C 145.386 156.489,145.158 156.436,140.300 156.710 M37.720 187.336 C 38.052 188.201,37.294 189.146,36.837 188.436 C 36.449 187.834,36.679 186.800,37.200 186.800 C 37.373 186.800,37.607 187.041,37.720 187.336 \\\"\\r\\n              stroke=\\\"none\\\"\\r\\n              fill=\\\"#4cbbeb\\\"\\r\\n              fill-rule=\\\"evenodd\\\"\\r\\n            ></path>\\r\\n            <path\\r\\n              id=\\\"path2\\\"\\r\\n              d=\\\"M356.100 9.098 C 358.465 9.169,362.335 9.169,364.700 9.098 C 367.065 9.028,365.130 8.970,360.400 8.970 C 355.670 8.970,353.735 9.028,356.100 9.098 M348.000 9.600 C 348.000 9.820,348.720 10.000,349.600 10.000 C 350.480 10.000,351.200 9.820,351.200 9.600 C 351.200 9.380,350.480 9.200,349.600 9.200 C 348.720 9.200,348.000 9.380,348.000 9.600 M369.200 9.600 C 369.200 9.820,369.920 10.000,370.800 10.000 C 371.680 10.000,372.400 9.820,372.400 9.600 C 372.400 9.380,371.680 9.200,370.800 9.200 C 369.920 9.200,369.200 9.380,369.200 9.600 M335.200 10.362 C 335.200 10.562,334.300 10.849,333.200 11.000 C 332.100 11.151,331.200 11.424,331.200 11.606 C 331.200 11.788,330.660 12.055,330.000 12.200 C 329.340 12.345,328.800 12.610,328.800 12.788 C 328.800 12.967,328.370 13.221,327.844 13.353 C 327.318 13.485,326.792 13.844,326.674 14.151 C 326.523 14.544,326.688 14.650,327.230 14.508 C 327.653 14.397,328.000 14.165,328.000 13.991 C 328.000 13.817,328.900 13.551,330.000 13.400 C 331.100 13.249,332.000 12.976,332.000 12.794 C 332.000 12.612,333.215 12.335,334.700 12.179 C 336.185 12.022,337.495 11.747,337.611 11.568 C 337.726 11.389,339.481 11.117,341.511 10.964 C 346.818 10.563,346.052 10.000,340.200 10.000 C 337.450 10.000,335.200 10.163,335.200 10.362 M375.600 10.343 C 375.600 10.531,377.260 10.811,379.289 10.964 C 381.319 11.117,383.074 11.389,383.189 11.568 C 383.305 11.747,384.615 12.022,386.100 12.179 C 387.585 12.335,388.800 12.606,388.800 12.781 C 388.800 12.955,389.560 13.219,390.488 13.368 C 391.416 13.516,392.271 13.785,392.388 13.965 C 392.505 14.145,393.017 14.422,393.526 14.581 C 394.431 14.864,394.436 14.852,393.737 14.035 C 393.344 13.576,392.792 13.200,392.511 13.200 C 392.230 13.200,392.000 13.028,392.000 12.818 C 392.000 12.608,391.370 12.318,390.600 12.174 C 389.830 12.029,389.200 11.762,389.200 11.580 C 389.200 11.398,388.390 11.128,387.400 10.979 C 386.410 10.831,385.600 10.550,385.600 10.355 C 385.600 10.160,383.350 10.000,380.600 10.000 C 377.850 10.000,375.600 10.154,375.600 10.343 M314.125 16.205 C 313.424 16.957,312.389 17.688,311.825 17.829 C 311.261 17.971,310.800 18.231,310.800 18.408 C 310.800 18.585,310.080 18.851,309.200 19.000 C 308.320 19.149,307.600 19.434,307.600 19.635 C 307.600 19.836,306.970 20.000,306.200 20.000 C 305.430 20.000,304.800 20.169,304.800 20.375 C 304.800 20.582,303.990 20.872,303.000 21.021 C 302.010 21.169,301.200 21.436,301.200 21.614 C 301.200 21.791,300.660 22.055,300.000 22.200 C 299.340 22.345,298.800 22.610,298.800 22.788 C 298.800 22.967,298.370 23.221,297.844 23.353 C 297.318 23.485,296.792 23.844,296.674 24.151 C 296.523 24.544,296.688 24.650,297.230 24.508 C 297.653 24.397,298.000 24.165,298.000 23.991 C 298.000 23.817,298.900 23.551,300.000 23.400 C 301.100 23.249,302.000 22.983,302.000 22.809 C 302.000 22.635,302.990 22.368,304.200 22.217 C 305.410 22.066,306.400 21.786,306.400 21.596 C 306.400 21.405,307.210 21.128,308.200 20.979 C 309.190 20.831,310.000 20.550,310.000 20.355 C 310.000 20.160,310.450 20.000,311.000 20.000 C 311.550 20.000,312.000 19.831,312.000 19.625 C 312.000 19.418,312.810 19.128,313.800 18.979 C 314.790 18.831,315.600 18.558,315.600 18.373 C 315.600 18.188,316.275 17.912,317.100 17.760 C 317.925 17.609,318.709 17.317,318.842 17.112 C 318.976 16.907,319.831 16.639,320.742 16.517 C 321.654 16.395,322.400 16.138,322.400 15.947 C 322.400 15.756,323.030 15.600,323.800 15.600 C 324.570 15.600,325.200 15.420,325.200 15.200 C 325.200 14.954,323.313 14.807,320.300 14.819 L 315.400 14.838 314.125 16.205 M280.468 29.825 C 277.755 32.561,275.667 34.800,275.828 34.800 C 275.988 34.800,276.731 34.170,277.479 33.400 C 278.227 32.630,279.100 32.000,279.419 32.000 C 279.739 32.000,280.000 31.823,280.000 31.608 C 280.000 31.392,280.450 31.102,281.000 30.964 C 281.550 30.826,282.000 30.553,282.000 30.357 C 282.000 30.160,282.270 30.000,282.600 30.000 C 282.930 30.000,283.200 29.834,283.200 29.632 C 283.200 29.429,283.740 29.145,284.400 29.000 C 285.060 28.855,285.600 28.591,285.600 28.414 C 285.600 28.236,286.410 27.969,287.400 27.821 C 288.390 27.672,289.200 27.399,289.200 27.213 C 289.200 27.027,290.100 26.751,291.200 26.600 C 292.300 26.449,293.200 26.162,293.200 25.962 C 293.200 25.763,293.650 25.600,294.200 25.600 C 294.750 25.600,295.200 25.420,295.200 25.200 C 295.200 24.954,293.317 24.810,290.300 24.825 L 285.400 24.851 280.468 29.825 M250.413 39.880 C 247.152 43.169,245.768 44.802,246.413 44.601 C 246.956 44.431,247.492 44.151,247.604 43.978 C 247.716 43.805,248.301 43.540,248.904 43.388 C 249.507 43.237,250.000 42.967,250.000 42.788 C 250.000 42.610,250.540 42.345,251.200 42.200 C 251.860 42.055,252.400 41.779,252.400 41.586 C 252.400 41.394,253.030 41.118,253.800 40.974 C 254.570 40.829,255.200 40.551,255.200 40.355 C 255.200 40.160,255.830 40.000,256.600 40.000 C 257.370 40.000,258.000 39.841,258.000 39.648 C 258.000 39.454,259.710 39.167,261.800 39.010 C 263.890 38.854,265.600 38.570,265.600 38.381 C 265.600 38.191,266.275 37.912,267.100 37.760 C 267.925 37.609,268.709 37.317,268.842 37.112 C 268.976 36.907,269.831 36.639,270.742 36.517 C 271.654 36.395,272.400 36.138,272.400 35.947 C 272.400 35.756,273.030 35.600,273.800 35.600 C 274.570 35.600,275.200 35.420,275.200 35.200 C 275.200 34.943,271.650 34.809,265.300 34.825 L 255.400 34.851 250.413 39.880 M230.468 49.825 C 227.755 52.561,225.667 54.800,225.828 54.800 C 225.988 54.800,226.731 54.170,227.479 53.400 C 228.227 52.630,229.100 52.000,229.419 52.000 C 229.739 52.000,230.000 51.823,230.000 51.608 C 230.000 51.392,230.450 51.102,231.000 50.964 C 231.550 50.826,232.000 50.553,232.000 50.357 C 232.000 50.160,232.270 50.000,232.600 50.000 C 232.930 50.000,233.200 49.834,233.200 49.632 C 233.200 49.429,233.740 49.145,234.400 49.000 C 235.060 48.855,235.600 48.594,235.600 48.419 C 235.600 48.245,236.320 47.987,237.200 47.846 C 238.080 47.706,238.800 47.426,238.800 47.224 C 238.800 47.022,239.790 46.734,241.000 46.583 C 242.210 46.432,243.200 46.149,243.200 45.954 C 243.200 45.759,243.650 45.600,244.200 45.600 C 244.750 45.600,245.200 45.420,245.200 45.200 C 245.200 44.954,243.317 44.810,240.300 44.825 L 235.400 44.851 230.468 49.825 M200.413 59.880 C 197.152 63.169,195.768 64.802,196.413 64.601 C 196.956 64.431,197.492 64.151,197.604 63.978 C 197.716 63.805,198.301 63.540,198.904 63.388 C 199.507 63.237,200.000 62.967,200.000 62.788 C 200.000 62.610,200.540 62.345,201.200 62.200 C 201.860 62.055,202.400 61.779,202.400 61.586 C 202.400 61.394,203.030 61.118,203.800 60.974 C 204.570 60.829,205.200 60.551,205.200 60.355 C 205.200 60.160,205.560 60.000,206.000 60.000 C 206.440 60.000,206.800 59.833,206.800 59.629 C 206.800 59.425,207.790 59.134,209.000 58.983 C 210.210 58.832,211.200 58.575,211.200 58.413 C 211.200 58.250,212.585 58.000,214.277 57.857 C 215.970 57.714,217.455 57.436,217.577 57.239 C 217.700 57.042,218.835 56.752,220.100 56.595 C 221.365 56.437,222.400 56.149,222.400 55.954 C 222.400 55.759,223.030 55.600,223.800 55.600 C 224.570 55.600,225.200 55.420,225.200 55.200 C 225.200 54.943,221.650 54.809,215.300 54.825 L 205.400 54.851 200.413 59.880 M180.468 69.825 C 177.755 72.561,175.667 74.800,175.828 74.800 C 175.988 74.800,176.731 74.170,177.479 73.400 C 178.227 72.630,179.100 72.000,179.419 72.000 C 179.739 72.000,180.000 71.823,180.000 71.608 C 180.000 71.392,180.450 71.102,181.000 70.964 C 181.550 70.826,182.000 70.553,182.000 70.357 C 182.000 70.160,182.270 70.000,182.600 70.000 C 182.930 70.000,183.200 69.834,183.200 69.632 C 183.200 69.429,183.740 69.145,184.400 69.000 C 185.060 68.855,185.600 68.594,185.600 68.419 C 185.600 68.245,186.320 67.987,187.200 67.846 C 188.080 67.706,188.800 67.426,188.800 67.224 C 188.800 67.022,189.790 66.734,191.000 66.583 C 192.210 66.432,193.200 66.149,193.200 65.954 C 193.200 65.759,193.650 65.600,194.200 65.600 C 194.750 65.600,195.200 65.420,195.200 65.200 C 195.200 64.954,193.317 64.810,190.300 64.825 L 185.400 64.851 180.468 69.825 M150.413 79.880 C 147.152 83.169,145.768 84.802,146.413 84.601 C 146.956 84.431,147.492 84.151,147.604 83.978 C 147.716 83.805,148.301 83.540,148.904 83.388 C 149.507 83.237,150.000 82.967,150.000 82.788 C 150.000 82.610,150.540 82.345,151.200 82.200 C 151.860 82.055,152.400 81.779,152.400 81.586 C 152.400 81.394,153.030 81.118,153.800 80.974 C 154.570 80.829,155.200 80.551,155.200 80.355 C 155.200 80.160,155.451 80.000,155.757 80.000 C 156.064 80.000,156.418 79.730,156.545 79.400 C 156.671 79.070,157.051 78.800,157.387 78.800 C 157.724 78.800,158.000 78.628,158.000 78.418 C 158.000 78.208,158.630 77.918,159.400 77.774 C 160.170 77.629,160.800 77.359,160.800 77.174 C 160.800 76.988,161.430 76.718,162.200 76.574 C 162.970 76.429,163.600 76.151,163.600 75.955 C 163.600 75.760,163.960 75.600,164.400 75.600 C 164.840 75.600,165.200 75.420,165.200 75.200 C 165.200 74.954,163.317 74.810,160.300 74.825 L 155.400 74.851 150.413 79.880 M125.300 94.990 L 115.200 105.129 115.246 110.065 C 115.272 112.779,115.375 114.685,115.476 114.300 C 115.576 113.915,115.811 113.600,115.998 113.600 C 116.184 113.600,116.455 113.060,116.600 112.400 C 116.745 111.740,117.015 111.200,117.200 111.200 C 117.385 111.200,117.655 110.660,117.800 110.000 C 117.945 109.340,118.215 108.800,118.400 108.800 C 118.585 108.800,118.855 108.260,119.000 107.600 C 119.145 106.940,119.429 106.400,119.632 106.400 C 119.834 106.400,120.000 106.134,120.000 105.808 C 120.000 105.483,121.035 104.224,122.300 103.010 C 123.565 101.797,124.756 100.644,124.947 100.449 C 132.246 93.001,135.404 90.000,135.940 90.000 C 136.146 90.000,136.418 89.730,136.545 89.400 C 136.671 89.070,137.051 88.800,137.387 88.800 C 137.724 88.800,138.000 88.628,138.000 88.418 C 138.000 88.208,138.630 87.918,139.400 87.774 C 140.170 87.629,140.800 87.359,140.800 87.174 C 140.800 86.988,141.430 86.718,142.200 86.574 C 142.970 86.429,143.600 86.151,143.600 85.955 C 143.600 85.760,143.960 85.600,144.400 85.600 C 144.840 85.600,145.200 85.420,145.200 85.200 C 145.200 84.954,143.317 84.810,140.300 84.826 L 135.400 84.851 125.300 94.990 M113.829 127.029 C 113.483 127.374,113.200 127.914,113.200 128.229 C 113.200 128.543,113.034 128.800,112.832 128.800 C 112.629 128.800,112.345 129.340,112.200 130.000 C 112.055 130.660,111.791 131.200,111.614 131.200 C 111.436 131.200,111.169 132.010,111.021 133.000 C 110.872 133.990,110.582 134.800,110.375 134.800 C 110.159 134.800,110.000 137.252,110.000 140.600 C 110.000 143.790,109.840 146.400,109.643 146.400 C 109.447 146.400,109.163 146.893,109.012 147.496 C 108.860 148.099,108.595 148.684,108.422 148.796 C 108.249 148.908,107.970 149.442,107.801 149.981 C 107.529 150.854,107.561 150.896,108.094 150.363 C 108.424 150.033,108.817 149.375,108.968 148.902 C 109.118 148.428,109.592 147.930,110.020 147.794 C 110.449 147.657,110.800 147.301,110.800 147.002 C 110.800 146.702,111.048 146.210,111.350 145.907 C 111.757 145.500,111.944 143.661,112.066 138.854 C 112.172 134.682,112.391 132.253,112.676 132.076 C 112.921 131.924,113.250 130.945,113.406 129.900 C 113.563 128.855,113.850 128.000,114.045 128.000 C 114.240 128.000,114.400 127.745,114.400 127.433 C 114.400 127.122,114.625 126.776,114.900 126.665 C 115.252 126.523,115.260 126.454,114.929 126.432 C 114.669 126.414,114.174 126.683,113.829 127.029 M94.125 156.205 C 93.424 156.957,92.389 157.688,91.825 157.829 C 91.261 157.971,90.800 158.231,90.800 158.408 C 90.800 158.585,90.080 158.851,89.200 159.000 C 88.320 159.149,87.600 159.434,87.600 159.635 C 87.600 159.836,87.060 160.000,86.400 160.000 C 85.740 160.000,85.200 160.163,85.200 160.362 C 85.200 160.562,84.300 160.849,83.200 161.000 C 82.100 161.151,81.200 161.424,81.200 161.606 C 81.200 161.788,80.660 162.055,80.000 162.200 C 79.340 162.345,78.800 162.610,78.800 162.788 C 78.800 162.967,78.370 163.221,77.844 163.353 C 77.318 163.485,76.792 163.844,76.674 164.151 C 76.523 164.544,76.688 164.650,77.230 164.508 C 77.653 164.397,78.000 164.165,78.000 163.991 C 78.000 163.817,78.900 163.551,80.000 163.400 C 81.100 163.249,82.000 162.983,82.000 162.809 C 82.000 162.635,82.990 162.368,84.200 162.217 C 85.410 162.066,86.400 161.786,86.400 161.596 C 86.400 161.405,87.210 161.128,88.200 160.979 C 89.190 160.831,90.000 160.550,90.000 160.355 C 90.000 160.160,90.450 160.000,91.000 160.000 C 91.550 160.000,92.000 159.831,92.000 159.625 C 92.000 159.418,92.810 159.128,93.800 158.979 C 94.790 158.831,95.600 158.573,95.600 158.406 C 95.600 158.239,96.320 157.987,97.200 157.846 C 98.080 157.706,98.800 157.426,98.800 157.224 C 98.800 157.022,99.790 156.734,101.000 156.583 C 102.210 156.432,103.200 156.149,103.200 155.954 C 103.200 155.759,103.650 155.600,104.200 155.600 C 104.750 155.600,105.200 155.420,105.200 155.200 C 105.200 154.954,103.313 154.807,100.300 154.819 L 95.400 154.838 94.125 156.205 M65.200 165.200 C 65.200 165.420,64.840 165.600,64.400 165.600 C 63.960 165.600,63.600 165.766,63.600 165.968 C 63.600 166.171,63.060 166.455,62.400 166.600 C 61.740 166.745,61.200 167.015,61.200 167.200 C 61.200 167.385,60.660 167.655,60.000 167.800 C 59.340 167.945,58.800 168.215,58.800 168.400 C 58.800 168.585,58.260 168.855,57.600 169.000 C 56.940 169.145,56.400 169.429,56.400 169.632 C 56.400 169.834,56.130 170.000,55.800 170.000 C 55.470 170.000,55.200 170.163,55.200 170.362 C 55.200 170.562,54.300 170.849,53.200 171.000 C 52.100 171.151,51.200 171.424,51.200 171.606 C 51.200 171.788,50.660 172.055,50.000 172.200 C 49.340 172.345,48.800 172.610,48.800 172.788 C 48.800 172.967,48.370 173.221,47.844 173.353 C 47.318 173.485,46.792 173.844,46.674 174.151 C 46.523 174.544,46.688 174.650,47.230 174.508 C 47.653 174.397,48.000 174.165,48.000 173.991 C 48.000 173.817,48.900 173.551,50.000 173.400 C 51.100 173.249,52.000 172.983,52.000 172.809 C 52.000 172.635,52.990 172.368,54.200 172.217 C 55.410 172.066,56.400 171.790,56.400 171.603 C 56.400 171.416,56.940 171.145,57.600 171.000 C 58.260 170.855,58.800 170.571,58.800 170.368 C 58.800 170.166,59.070 170.000,59.400 170.000 C 59.730 170.000,60.000 169.843,60.000 169.651 C 60.000 169.459,60.720 169.187,61.600 169.046 C 62.480 168.906,63.200 168.626,63.200 168.424 C 63.200 168.222,64.190 167.934,65.400 167.783 C 66.610 167.632,67.600 167.366,67.600 167.193 C 67.600 167.020,68.680 166.753,70.000 166.600 C 71.320 166.447,72.400 166.159,72.400 165.961 C 72.400 165.762,73.030 165.600,73.800 165.600 C 74.570 165.600,75.200 165.420,75.200 165.200 C 75.200 164.955,73.267 164.800,70.200 164.800 C 67.133 164.800,65.200 164.955,65.200 165.200 M30.468 179.825 C 27.755 182.561,25.667 184.800,25.828 184.800 C 25.988 184.800,26.731 184.170,27.479 183.400 C 28.227 182.630,29.100 182.000,29.419 182.000 C 29.739 182.000,30.000 181.823,30.000 181.608 C 30.000 181.392,30.450 181.102,31.000 180.964 C 31.550 180.826,32.000 180.553,32.000 180.357 C 32.000 180.160,32.270 180.000,32.600 180.000 C 32.930 180.000,33.200 179.834,33.200 179.632 C 33.200 179.429,33.740 179.145,34.400 179.000 C 35.060 178.855,35.600 178.594,35.600 178.419 C 35.600 178.245,36.320 177.987,37.200 177.846 C 38.080 177.706,38.800 177.426,38.800 177.224 C 38.800 177.022,39.790 176.734,41.000 176.583 C 42.210 176.432,43.200 176.149,43.200 175.954 C 43.200 175.759,43.650 175.600,44.200 175.600 C 44.750 175.600,45.200 175.420,45.200 175.200 C 45.200 174.954,43.317 174.810,40.300 174.825 L 35.400 174.851 30.468 179.825 M284.900 207.898 C 284.625 207.991,284.400 208.322,284.400 208.633 C 284.400 208.945,284.223 209.200,284.008 209.200 C 283.792 209.200,283.502 209.650,283.364 210.200 C 283.226 210.750,282.965 211.200,282.784 211.200 C 282.602 211.200,282.331 211.588,282.180 212.062 C 282.030 212.537,281.477 213.322,280.953 213.808 C 280.429 214.294,280.000 214.896,280.000 215.146 C 280.000 215.396,279.820 215.600,279.600 215.600 C 279.380 215.600,279.200 215.856,279.200 216.169 C 279.200 216.894,276.914 219.200,276.196 219.200 C 275.898 219.200,275.543 219.551,275.406 219.980 C 275.270 220.408,274.826 220.865,274.419 220.994 C 274.012 221.123,273.568 221.672,273.432 222.214 C 273.296 222.756,273.008 223.200,272.792 223.200 C 272.577 223.200,272.400 223.476,272.400 223.813 C 272.400 224.149,272.151 224.521,271.847 224.637 C 271.543 224.754,271.181 225.558,271.042 226.425 C 270.904 227.291,270.613 228.000,270.395 228.000 C 270.178 228.000,270.000 228.188,270.000 228.417 C 270.000 228.646,269.817 229.051,269.594 229.317 C 267.945 231.278,267.206 231.944,266.393 232.202 C 265.881 232.365,265.268 232.659,265.031 232.855 C 263.078 234.475,262.453 235.247,262.213 236.339 C 262.061 237.033,261.785 237.600,261.600 237.600 C 261.415 237.600,261.153 238.105,261.017 238.722 C 260.881 239.340,260.417 240.099,259.985 240.411 C 259.553 240.722,259.200 241.138,259.200 241.335 C 259.200 241.853,256.178 244.800,255.647 244.800 C 255.401 244.800,255.200 245.148,255.200 245.573 C 255.200 245.998,254.853 246.456,254.428 246.591 C 253.995 246.729,253.542 247.355,253.396 248.018 C 253.253 248.668,252.974 249.200,252.776 249.200 C 252.578 249.200,252.302 249.650,252.164 250.200 C 252.026 250.750,251.772 251.200,251.600 251.200 C 251.428 251.200,251.174 251.650,251.036 252.200 C 250.898 252.750,250.608 253.200,250.392 253.200 C 250.177 253.200,250.000 253.470,250.000 253.800 C 250.000 254.130,249.840 254.400,249.643 254.400 C 249.447 254.400,249.168 254.874,249.023 255.452 C 248.745 256.558,245.573 260.000,244.832 260.000 C 244.594 260.000,244.400 260.194,244.400 260.431 C 244.400 260.668,243.860 261.402,243.200 262.062 C 242.540 262.722,242.000 263.518,242.000 263.831 C 242.000 264.144,241.822 264.400,241.605 264.400 C 241.387 264.400,241.095 265.115,240.955 265.989 C 240.786 267.047,240.451 267.657,239.951 267.816 C 239.538 267.947,239.200 268.297,239.200 268.593 C 239.200 269.279,236.312 272.400,235.677 272.400 C 235.415 272.400,235.200 272.568,235.200 272.773 C 235.200 272.978,234.840 273.260,234.400 273.400 C 233.960 273.540,233.600 273.899,233.600 274.198 C 233.600 274.498,233.358 274.985,233.061 275.281 C 232.765 275.578,232.397 276.491,232.243 277.310 C 232.090 278.130,231.811 278.800,231.625 278.800 C 231.439 278.800,231.174 279.250,231.036 279.800 C 230.898 280.350,230.608 280.800,230.392 280.800 C 230.177 280.800,230.000 281.070,230.000 281.400 C 230.000 281.730,229.820 282.000,229.600 282.000 C 229.380 282.000,229.200 282.207,229.200 282.460 C 229.200 282.712,228.566 283.567,227.791 284.360 C 225.458 286.746,225.200 287.052,225.200 287.439 C 225.200 287.643,224.750 288.148,224.200 288.561 C 223.650 288.974,223.200 289.628,223.200 290.013 C 223.200 290.399,222.930 290.818,222.600 290.945 C 222.270 291.071,222.000 291.451,222.000 291.787 C 222.000 292.124,221.834 292.400,221.632 292.400 C 221.429 292.400,221.145 292.940,221.000 293.600 C 220.855 294.260,220.571 294.800,220.368 294.800 C 220.166 294.800,220.000 295.141,220.000 295.557 C 220.000 295.974,219.730 296.418,219.400 296.545 C 219.070 296.671,218.800 296.974,218.800 297.218 C 218.800 297.462,218.260 298.202,217.600 298.862 C 216.940 299.522,216.400 300.228,216.400 300.431 C 216.400 300.634,216.158 300.800,215.862 300.800 C 215.150 300.800,213.200 302.494,213.200 303.113 C 213.200 303.381,213.023 303.600,212.808 303.600 C 212.592 303.600,212.302 304.050,212.164 304.600 C 212.026 305.150,211.776 305.600,211.608 305.600 C 211.440 305.600,211.189 306.308,211.051 307.173 C 210.877 308.260,210.552 308.825,210.000 309.000 C 209.560 309.140,209.200 309.539,209.200 309.887 C 209.200 310.594,206.981 312.895,205.900 313.308 C 205.515 313.455,205.200 313.748,205.200 313.960 C 205.200 314.173,204.859 314.454,204.442 314.587 C 203.972 314.736,203.585 315.355,203.424 316.214 C 203.281 316.976,203.006 317.600,202.814 317.600 C 202.621 317.600,202.345 318.140,202.200 318.800 C 202.055 319.460,201.785 320.000,201.600 320.000 C 201.415 320.000,201.153 320.505,201.017 321.122 C 200.881 321.740,200.417 322.499,199.985 322.811 C 199.553 323.122,199.200 323.613,199.200 323.901 C 199.200 324.189,198.930 324.529,198.600 324.655 C 198.270 324.782,198.000 325.163,198.000 325.502 C 198.000 326.277,195.632 328.609,194.471 328.978 C 193.992 329.130,193.600 329.422,193.600 329.627 C 193.600 329.832,193.330 330.000,193.000 330.000 C 192.670 330.000,192.400 330.178,192.400 330.395 C 192.400 330.613,191.680 330.906,190.800 331.046 C 189.920 331.187,189.200 331.451,189.200 331.633 C 189.200 331.815,188.570 332.082,187.800 332.226 C 187.030 332.371,186.400 332.649,186.400 332.845 C 186.400 333.040,185.950 333.200,185.400 333.200 C 184.850 333.200,184.400 333.043,184.400 332.851 C 184.400 332.659,183.680 332.387,182.800 332.246 C 181.920 332.106,181.200 331.832,181.200 331.639 C 181.200 331.445,180.750 331.174,180.200 331.036 C 179.650 330.898,179.200 330.608,179.200 330.392 C 179.200 330.177,178.930 330.000,178.600 330.000 C 178.270 330.000,178.000 329.820,178.000 329.600 C 178.000 329.380,177.724 329.200,177.387 329.200 C 177.051 329.200,176.671 328.930,176.545 328.600 C 176.418 328.270,176.056 328.000,175.740 328.000 C 175.424 328.000,174.115 326.920,172.832 325.600 C 171.548 324.280,170.225 323.200,169.892 323.200 C 169.558 323.200,169.182 322.930,169.055 322.600 C 168.929 322.270,168.549 322.000,168.213 322.000 C 167.876 322.000,167.600 321.834,167.600 321.632 C 167.600 321.429,167.060 321.145,166.400 321.000 C 165.740 320.855,165.200 320.571,165.200 320.368 C 165.200 320.166,164.859 320.000,164.443 320.000 C 164.026 320.000,163.582 319.730,163.455 319.400 C 163.329 319.070,163.026 318.800,162.782 318.800 C 162.317 318.800,160.000 316.644,160.000 316.211 C 160.000 315.759,157.331 313.200,156.860 313.200 C 156.607 313.200,156.400 313.023,156.400 312.808 C 156.400 312.592,155.950 312.302,155.400 312.164 C 154.850 312.026,154.400 311.772,154.400 311.600 C 154.400 311.428,153.950 311.174,153.400 311.036 C 152.850 310.898,152.400 310.622,152.400 310.423 C 152.400 310.224,151.860 309.522,151.200 308.862 C 150.540 308.202,150.000 307.483,150.000 307.264 C 150.000 307.046,149.816 306.805,149.591 306.730 C 149.365 306.655,149.065 305.877,148.923 305.000 C 148.587 302.934,148.197 302.591,145.818 302.264 C 144.732 302.116,143.742 301.829,143.618 301.629 C 143.494 301.428,142.905 301.141,142.310 300.992 C 141.715 300.843,141.126 300.397,141.001 300.002 C 140.865 299.575,140.211 299.179,139.386 299.024 C 138.624 298.881,138.000 298.592,138.000 298.382 C 138.000 298.172,137.724 298.000,137.387 298.000 C 137.051 298.000,136.671 297.730,136.545 297.400 C 136.418 297.070,136.066 296.800,135.763 296.800 C 135.460 296.800,134.424 295.990,133.462 295.000 C 132.500 294.010,131.507 293.200,131.256 293.200 C 131.005 293.200,130.800 293.023,130.800 292.808 C 130.800 292.592,130.350 292.302,129.800 292.164 C 129.250 292.026,128.800 291.776,128.800 291.608 C 128.800 291.440,128.080 291.187,127.200 291.046 C 126.320 290.906,125.600 290.600,125.600 290.367 C 125.600 290.134,125.317 290.226,124.971 290.571 C 124.626 290.917,124.086 291.200,123.771 291.200 C 123.457 291.200,123.200 291.377,123.200 291.592 C 123.200 291.808,122.748 292.098,122.197 292.237 C 121.594 292.388,121.099 292.865,120.957 293.430 C 120.827 293.948,120.378 294.480,119.960 294.613 C 119.542 294.745,119.200 295.207,119.200 295.640 C 119.200 296.072,118.930 296.529,118.600 296.655 C 118.270 296.782,118.000 297.110,118.000 297.384 C 118.000 297.894,116.230 300.000,115.802 300.000 C 115.148 300.000,112.000 303.172,112.000 303.831 C 112.000 304.144,111.834 304.400,111.632 304.400 C 111.429 304.400,111.145 304.940,111.000 305.600 C 110.855 306.260,110.571 306.800,110.368 306.800 C 110.166 306.800,110.000 307.070,110.000 307.400 C 110.000 307.730,109.840 308.000,109.643 308.000 C 109.447 308.000,109.174 308.450,109.036 309.000 C 108.898 309.550,108.608 310.000,108.392 310.000 C 108.177 310.000,108.000 310.256,108.000 310.568 C 108.000 311.169,104.759 314.605,103.903 314.912 C 103.560 315.035,103.686 315.347,104.300 315.893 C 104.795 316.333,105.200 316.903,105.200 317.159 C 105.200 317.416,105.465 317.727,105.789 317.851 C 106.113 317.976,106.493 318.690,106.634 319.439 C 106.774 320.187,107.035 320.800,107.213 320.800 C 107.391 320.800,107.655 321.340,107.800 322.000 C 107.945 322.660,108.229 323.200,108.432 323.200 C 108.634 323.200,108.800 323.547,108.800 323.971 C 108.800 324.396,109.070 325.013,109.400 325.343 C 109.730 325.673,110.000 326.044,110.000 326.167 C 110.000 326.639,111.402 328.000,111.889 328.000 C 112.170 328.000,112.400 328.177,112.400 328.392 C 112.400 328.608,112.850 328.898,113.400 329.036 C 113.950 329.174,114.400 329.447,114.400 329.643 C 114.400 329.840,114.670 330.000,115.000 330.000 C 115.330 330.000,115.600 330.166,115.600 330.368 C 115.600 330.571,116.140 330.855,116.800 331.000 C 117.460 331.145,118.000 331.417,118.000 331.605 C 118.000 331.793,118.401 332.073,118.891 332.229 C 119.380 332.384,120.997 333.746,122.482 335.256 C 123.968 336.765,125.438 338.000,125.749 338.000 C 126.060 338.000,126.418 338.270,126.545 338.600 C 126.671 338.930,127.051 339.200,127.387 339.200 C 127.724 339.200,128.000 339.380,128.000 339.600 C 128.000 339.820,128.270 340.000,128.600 340.000 C 128.930 340.000,129.200 340.180,129.200 340.400 C 129.200 340.620,129.566 340.800,130.013 340.800 C 130.459 340.800,130.924 341.059,131.046 341.376 C 131.167 341.692,131.792 342.066,132.433 342.207 C 133.075 342.348,133.600 342.629,133.600 342.832 C 133.600 343.034,133.896 343.200,134.257 343.200 C 134.619 343.200,136.104 344.436,137.557 345.946 C 139.011 347.457,140.605 348.819,141.100 348.973 C 141.595 349.128,142.000 349.422,142.000 349.627 C 142.000 349.832,142.270 350.000,142.600 350.000 C 142.930 350.000,143.200 350.166,143.200 350.368 C 143.200 350.571,143.740 350.855,144.400 351.000 C 145.060 351.145,145.600 351.429,145.600 351.632 C 145.600 351.834,145.848 352.000,146.152 352.000 C 147.012 352.000,150.000 355.106,150.000 356.000 C 150.000 356.440,150.160 356.800,150.357 356.800 C 150.553 356.800,150.826 357.250,150.964 357.800 C 151.210 358.781,152.204 359.182,152.467 358.406 C 152.652 357.860,156.410 357.768,156.739 358.302 C 156.887 358.541,157.501 358.860,158.104 359.012 C 158.707 359.163,159.200 359.447,159.200 359.643 C 159.200 359.840,159.560 360.000,160.000 360.000 C 160.440 360.000,160.800 360.180,160.800 360.400 C 160.800 360.620,161.033 360.800,161.319 360.800 C 161.604 360.800,162.279 361.332,162.819 361.983 C 163.358 362.634,164.115 363.174,164.500 363.183 C 164.885 363.192,165.200 363.470,165.200 363.800 C 165.200 364.130,165.470 364.400,165.800 364.400 C 166.130 364.400,166.400 364.670,166.400 365.000 C 166.400 365.330,166.589 365.600,166.819 365.600 C 167.050 365.600,167.635 366.025,168.119 366.544 C 168.604 367.064,169.405 367.616,169.900 367.771 C 170.395 367.927,170.800 368.207,170.800 368.395 C 170.800 368.583,171.340 368.855,172.000 369.000 C 172.660 369.145,173.200 369.429,173.200 369.632 C 173.200 369.834,173.470 370.000,173.800 370.000 C 174.130 370.000,174.400 370.160,174.400 370.357 C 174.400 370.553,174.874 370.832,175.452 370.977 C 176.031 371.123,177.336 372.044,178.352 373.025 C 180.613 375.207,180.618 375.212,182.078 376.752 C 182.729 377.439,183.441 378.000,183.659 378.000 C 183.878 378.000,184.327 378.270,184.657 378.600 C 184.987 378.930,185.604 379.200,186.029 379.200 C 186.453 379.200,186.800 379.380,186.800 379.600 C 186.800 379.820,187.070 380.000,187.400 380.000 C 187.730 380.000,188.000 380.180,188.000 380.400 C 188.000 380.620,188.242 380.800,188.539 380.800 C 188.835 380.800,189.493 381.160,190.000 381.600 C 190.507 382.040,191.153 382.400,191.434 382.400 C 191.716 382.400,192.067 382.782,192.215 383.248 C 192.636 384.573,195.128 386.802,195.871 386.518 C 196.223 386.382,197.472 385.311,198.647 384.136 C 199.821 382.961,201.037 382.000,201.349 382.000 C 201.660 382.000,202.018 381.730,202.145 381.400 C 202.271 381.070,202.651 380.800,202.987 380.800 C 203.324 380.800,203.600 380.620,203.600 380.400 C 203.600 380.180,203.870 380.000,204.200 380.000 C 204.945 380.000,208.000 376.906,208.000 376.152 C 208.000 375.848,208.166 375.600,208.368 375.600 C 208.571 375.600,208.855 375.060,209.000 374.400 C 209.145 373.740,209.429 373.200,209.632 373.200 C 209.834 373.200,210.000 372.930,210.000 372.600 C 210.000 372.270,210.180 372.000,210.400 372.000 C 210.620 372.000,210.800 371.758,210.800 371.461 C 210.800 371.165,211.160 370.507,211.600 370.000 C 212.040 369.493,212.400 368.847,212.400 368.566 C 212.400 368.284,212.805 367.927,213.300 367.771 C 214.400 367.426,216.800 364.958,216.800 364.172 C 216.800 363.857,216.966 363.600,217.168 363.600 C 217.371 363.600,217.655 363.060,217.800 362.400 C 217.945 361.740,218.210 361.200,218.388 361.200 C 218.567 361.200,218.826 360.750,218.964 360.200 C 219.102 359.650,219.392 359.200,219.608 359.200 C 219.823 359.200,220.000 358.930,220.000 358.600 C 220.000 358.270,220.166 358.000,220.368 358.000 C 220.571 358.000,220.855 357.460,221.000 356.800 C 221.145 356.140,221.417 355.600,221.605 355.600 C 221.793 355.600,222.069 355.212,222.220 354.738 C 222.506 353.836,224.272 352.000,224.854 352.000 C 225.490 352.000,226.800 350.622,226.800 349.954 C 226.800 349.586,227.070 349.182,227.400 349.055 C 227.730 348.929,228.000 348.549,228.000 348.213 C 228.000 347.876,228.177 347.600,228.392 347.600 C 228.608 347.600,228.898 347.150,229.036 346.600 C 229.174 346.050,229.447 345.600,229.643 345.600 C 229.840 345.600,230.000 345.330,230.000 345.000 C 230.000 344.670,230.160 344.400,230.357 344.400 C 230.553 344.400,230.832 343.927,230.977 343.349 C 231.122 342.771,231.772 341.767,232.420 341.118 C 233.069 340.469,233.600 339.784,233.600 339.596 C 233.600 339.408,233.998 339.128,234.485 338.973 C 235.728 338.578,237.510 336.699,237.823 335.451 C 237.968 334.873,238.233 334.400,238.412 334.400 C 238.590 334.400,238.855 333.860,239.000 333.200 C 239.145 332.540,239.429 332.000,239.632 332.000 C 239.834 332.000,240.000 331.730,240.000 331.400 C 240.000 331.070,240.180 330.800,240.400 330.800 C 240.620 330.800,240.800 330.434,240.800 329.987 C 240.800 329.541,241.070 329.071,241.400 328.945 C 241.730 328.818,242.000 328.471,242.000 328.174 C 242.000 327.877,243.080 326.567,244.400 325.264 C 245.720 323.960,246.800 322.692,246.800 322.447 C 246.800 322.201,246.977 322.000,247.192 322.000 C 247.408 322.000,247.698 321.550,247.836 321.000 C 247.974 320.450,248.228 320.000,248.400 320.000 C 248.572 320.000,248.826 319.550,248.964 319.000 C 249.102 318.450,249.392 318.000,249.608 318.000 C 249.823 318.000,250.000 317.730,250.000 317.400 C 250.000 317.070,250.166 316.800,250.368 316.800 C 250.571 316.800,250.855 316.260,251.000 315.600 C 251.145 314.940,251.429 314.400,251.632 314.400 C 251.834 314.400,252.000 314.144,252.000 313.831 C 252.000 313.186,254.251 310.800,254.859 310.800 C 255.442 310.800,256.254 309.891,256.574 308.881 C 256.728 308.397,257.007 308.000,257.195 308.000 C 257.383 308.000,257.655 307.460,257.800 306.800 C 257.945 306.140,258.206 305.600,258.381 305.600 C 258.555 305.600,258.813 304.880,258.954 304.000 C 259.094 303.120,259.387 302.400,259.605 302.400 C 259.822 302.400,260.000 302.130,260.000 301.800 C 260.000 301.470,260.180 301.200,260.400 301.200 C 260.620 301.200,260.800 300.952,260.800 300.648 C 260.800 299.944,263.832 296.800,264.511 296.800 C 265.326 296.800,266.445 295.235,266.684 293.758 C 266.805 293.011,267.047 292.400,267.221 292.400 C 267.394 292.400,267.655 291.860,267.800 291.200 C 267.945 290.540,268.210 290.000,268.388 290.000 C 268.567 290.000,268.826 289.550,268.964 289.000 C 269.102 288.450,269.392 288.000,269.608 288.000 C 269.823 288.000,270.000 287.730,270.000 287.400 C 270.000 287.070,270.160 286.800,270.357 286.800 C 270.553 286.800,270.826 286.350,270.964 285.800 C 271.102 285.250,271.392 284.800,271.608 284.800 C 271.823 284.800,272.003 284.575,272.007 284.300 C 272.015 283.690,273.742 282.000,274.356 282.000 C 274.964 282.000,276.400 280.517,276.400 279.889 C 276.400 279.608,276.760 279.070,277.200 278.693 C 277.640 278.316,278.000 277.736,278.000 277.404 C 278.000 277.072,278.166 276.800,278.368 276.800 C 278.571 276.800,278.855 276.260,279.000 275.600 C 279.145 274.940,279.429 274.400,279.632 274.400 C 279.834 274.400,280.000 274.130,280.000 273.800 C 280.000 273.470,280.180 273.200,280.400 273.200 C 280.620 273.200,280.800 272.960,280.800 272.667 C 280.800 272.000,283.717 268.800,284.325 268.800 C 285.235 268.800,287.499 266.061,287.766 264.638 C 287.915 263.847,288.185 263.200,288.367 263.200 C 288.549 263.200,288.806 262.523,288.938 261.696 C 289.072 260.858,289.538 259.933,289.989 259.608 C 290.435 259.286,290.800 258.863,290.800 258.668 C 290.800 258.229,292.487 256.416,292.904 256.407 C 293.400 256.396,295.600 254.152,295.600 253.657 C 295.600 253.406,295.760 253.200,295.957 253.200 C 296.153 253.200,296.426 252.750,296.564 252.200 C 296.702 251.650,296.978 251.200,297.176 251.200 C 297.374 251.200,297.655 250.660,297.800 250.000 C 297.945 249.340,298.210 248.800,298.388 248.800 C 298.567 248.800,298.835 248.316,298.983 247.724 C 299.132 247.132,299.576 246.367,299.970 246.024 C 300.363 245.681,300.824 244.963,300.992 244.429 C 301.291 243.482,303.620 240.800,304.144 240.800 C 304.604 240.800,306.800 238.532,306.800 238.057 C 306.800 237.806,306.977 237.600,307.192 237.600 C 307.408 237.600,307.698 237.150,307.836 236.600 C 307.974 236.050,308.234 235.600,308.415 235.600 C 308.595 235.600,308.866 234.610,309.017 233.400 C 309.168 232.190,309.451 231.200,309.646 231.200 C 309.841 231.200,310.000 230.930,310.000 230.600 C 310.000 230.270,310.157 230.000,310.349 230.000 C 310.541 230.000,310.810 229.300,310.947 228.444 C 311.083 227.588,311.467 226.783,311.798 226.656 C 313.042 226.179,311.530 223.200,310.043 223.200 C 309.799 223.200,308.900 222.480,308.046 221.600 C 307.192 220.720,306.369 220.000,306.216 220.000 C 306.063 220.000,305.398 219.460,304.738 218.800 C 304.078 218.140,303.282 217.600,302.969 217.600 C 302.656 217.600,302.400 217.343,302.400 217.028 C 302.400 216.242,300.000 213.774,298.900 213.429 C 298.405 213.273,298.000 212.993,298.000 212.805 C 298.000 212.617,297.460 212.345,296.800 212.200 C 296.140 212.055,295.600 211.784,295.600 211.597 C 295.600 211.410,294.610 211.134,293.400 210.983 C 292.190 210.832,291.200 210.549,291.200 210.354 C 291.200 210.159,290.750 210.000,290.200 210.000 C 289.650 210.000,289.200 209.834,289.200 209.632 C 289.200 209.429,288.660 209.145,288.000 209.000 C 287.340 208.855,286.800 208.592,286.800 208.415 C 286.800 208.011,285.565 207.675,284.900 207.898 M383.877 421.380 C 383.558 421.699,382.825 422.079,382.248 422.224 C 381.672 422.368,381.200 422.633,381.200 422.812 C 381.200 422.990,380.660 423.255,380.000 423.400 C 379.340 423.545,378.800 423.806,378.800 423.981 C 378.800 424.155,378.080 424.413,377.200 424.554 C 373.969 425.070,375.605 425.600,380.431 425.600 C 385.739 425.600,387.142 426.235,387.823 428.949 C 387.968 429.527,388.245 430.000,388.439 430.000 C 388.632 430.000,388.906 430.720,389.046 431.600 C 389.345 433.470,390.000 433.745,390.000 432.000 C 390.000 431.340,389.841 430.800,389.647 430.800 C 389.453 430.800,389.167 429.450,389.013 427.800 C 388.858 426.150,388.567 424.800,388.366 424.800 C 388.165 424.800,388.000 424.524,388.000 424.187 C 388.000 423.851,387.730 423.471,387.400 423.345 C 387.070 423.218,386.800 422.877,386.800 422.586 C 386.800 421.159,384.887 420.370,383.877 421.380 M374.400 425.968 C 374.400 426.171,373.860 426.455,373.200 426.600 C 372.540 426.745,372.000 427.021,372.000 427.214 C 372.000 427.406,371.370 427.682,370.600 427.826 C 369.830 427.971,369.200 428.235,369.200 428.413 C 369.200 428.591,368.660 428.855,368.000 429.000 C 367.340 429.145,366.800 429.429,366.800 429.632 C 366.800 429.834,366.530 430.000,366.200 430.000 C 365.870 430.000,365.600 430.160,365.600 430.357 C 365.600 430.553,365.150 430.826,364.600 430.964 C 364.050 431.102,363.600 431.378,363.600 431.576 C 363.600 431.774,363.060 432.055,362.400 432.200 C 361.740 432.345,361.200 432.615,361.200 432.800 C 361.200 432.985,360.660 433.255,360.000 433.400 C 359.340 433.545,358.800 433.806,358.800 433.981 C 358.800 434.155,358.080 434.413,357.200 434.554 C 353.969 435.070,355.605 435.600,360.432 435.600 L 365.264 435.600 367.680 433.248 C 370.629 430.377,370.491 430.515,372.679 428.248 C 373.661 427.232,374.629 426.400,374.832 426.400 C 375.034 426.400,375.200 426.220,375.200 426.000 C 375.200 425.780,375.020 425.600,374.800 425.600 C 374.580 425.600,374.400 425.766,374.400 425.968 M343.146 437.172 C 342.347 438.022,341.312 438.838,340.846 438.985 C 340.381 439.133,340.000 439.422,340.000 439.627 C 340.000 439.832,339.730 440.000,339.400 440.000 C 339.070 440.000,338.800 440.166,338.800 440.368 C 338.800 440.571,338.260 440.855,337.600 441.000 C 336.940 441.145,336.400 441.427,336.400 441.627 C 336.400 441.827,335.680 442.106,334.800 442.246 C 333.920 442.387,333.200 442.657,333.200 442.846 C 333.200 443.036,332.480 443.306,331.600 443.446 C 330.720 443.587,330.000 443.839,330.000 444.005 C 330.000 444.172,329.010 444.432,327.800 444.583 C 323.986 445.059,325.385 445.600,330.432 445.600 L 335.264 445.600 337.680 443.248 C 340.629 440.377,340.491 440.515,342.679 438.248 C 343.661 437.232,344.629 436.400,344.832 436.400 C 345.034 436.400,345.200 436.220,345.200 436.000 C 345.200 435.275,344.620 435.606,343.146 437.172 M324.400 445.968 C 324.400 446.171,323.860 446.455,323.200 446.600 C 322.540 446.745,322.000 447.021,322.000 447.214 C 322.000 447.406,321.370 447.682,320.600 447.826 C 319.830 447.971,319.200 448.235,319.200 448.413 C 319.200 448.591,318.660 448.855,318.000 449.000 C 317.340 449.145,316.800 449.429,316.800 449.632 C 316.800 449.834,316.530 450.000,316.200 450.000 C 315.870 450.000,315.600 450.180,315.600 450.400 C 315.600 450.620,315.328 450.800,314.996 450.800 C 314.664 450.800,314.084 451.160,313.707 451.600 C 313.330 452.040,312.792 452.400,312.511 452.400 C 312.230 452.400,312.000 452.572,312.000 452.782 C 312.000 452.992,311.370 453.282,310.600 453.426 C 309.830 453.571,309.200 453.833,309.200 454.009 C 309.200 454.186,308.445 454.457,307.523 454.613 C 305.338 454.982,304.896 455.482,304.569 457.951 C 304.419 459.078,304.163 460.000,304.000 460.000 C 303.836 460.000,303.590 460.705,303.452 461.566 C 303.314 462.428,303.003 463.199,302.762 463.279 C 302.520 463.360,302.225 464.635,302.106 466.113 C 301.988 467.591,301.756 468.800,301.593 468.800 C 301.429 468.800,301.167 470.330,301.011 472.200 C 300.856 474.070,300.564 475.600,300.364 475.600 C 300.164 475.600,300.000 475.870,300.000 476.200 C 300.000 476.530,299.834 476.800,299.632 476.800 C 299.429 476.800,299.145 477.340,299.000 478.000 C 298.855 478.660,298.591 479.200,298.413 479.200 C 298.235 479.200,297.971 479.830,297.826 480.600 C 297.682 481.370,297.406 482.000,297.214 482.000 C 297.021 482.000,296.745 482.540,296.600 483.200 C 296.455 483.860,296.141 484.400,295.902 484.400 C 295.662 484.400,295.584 484.517,295.727 484.661 C 295.947 484.880,296.919 484.032,300.439 480.548 C 300.690 480.299,301.954 479.009,303.248 477.680 L 305.600 475.264 305.600 465.432 L 305.600 455.600 310.432 455.600 L 315.264 455.600 317.680 453.248 C 320.629 450.377,320.491 450.515,322.679 448.248 C 323.661 447.232,324.629 446.400,324.832 446.400 C 325.034 446.400,325.200 446.220,325.200 446.000 C 325.200 445.780,325.020 445.600,324.800 445.600 C 324.580 445.600,324.400 445.766,324.400 445.968 M390.000 455.600 C 390.000 461.146,390.158 465.600,390.355 465.600 C 390.550 465.600,390.831 466.410,390.979 467.400 C 391.128 468.390,391.398 469.200,391.580 469.200 C 391.762 469.200,392.029 469.830,392.174 470.600 C 392.318 471.370,392.608 472.000,392.818 472.000 C 393.028 472.000,393.200 472.230,393.200 472.511 C 393.200 473.174,394.796 474.544,395.138 474.174 C 395.282 474.018,395.175 473.810,394.900 473.712 C 394.625 473.614,394.400 473.278,394.400 472.967 C 394.400 472.655,394.236 472.400,394.035 472.400 C 393.834 472.400,393.542 471.635,393.386 470.700 C 393.230 469.765,392.900 468.872,392.654 468.716 C 392.358 468.529,392.156 465.879,392.059 460.916 C 391.978 456.782,391.761 453.305,391.577 453.189 C 391.393 453.074,391.117 451.319,390.964 449.289 C 390.453 442.522,390.000 445.487,390.000 455.600 M294.900 486.198 C 294.625 486.511,294.400 486.954,294.400 487.183 C 294.400 487.412,294.220 487.600,294.000 487.600 C 293.780 487.600,293.600 487.810,293.600 488.066 C 293.600 488.547,293.329 488.877,291.103 491.103 C 288.877 493.329,288.547 493.600,288.066 493.600 C 287.810 493.600,287.600 493.760,287.600 493.957 C 287.600 494.153,287.162 494.423,286.627 494.558 C 286.091 494.692,285.539 495.161,285.400 495.601 C 285.260 496.040,284.978 496.400,284.773 496.400 C 284.568 496.400,284.400 496.670,284.400 497.000 C 284.400 497.330,284.220 497.600,284.000 497.600 C 283.780 497.600,283.600 497.810,283.600 498.066 C 283.600 498.547,283.329 498.877,281.103 501.103 C 278.877 503.329,278.547 503.600,278.066 503.600 C 277.810 503.600,277.600 503.760,277.600 503.957 C 277.600 504.153,277.150 504.426,276.600 504.564 C 274.192 505.169,275.858 505.600,280.600 505.600 L 285.600 505.600 285.600 500.600 L 285.600 495.600 290.600 495.600 L 295.600 495.600 295.600 490.600 C 295.600 487.850,295.555 485.607,295.500 485.615 C 295.445 485.624,295.175 485.886,294.900 486.198 M395.200 490.600 L 395.200 495.600 397.600 495.600 L 400.000 495.600 400.000 490.600 L 400.000 485.600 397.600 485.600 L 395.200 485.600 395.200 490.600 M274.400 505.968 C 274.400 506.171,273.860 506.455,273.200 506.600 C 272.540 506.745,272.000 507.021,272.000 507.214 C 272.000 507.406,271.370 507.682,270.600 507.826 C 269.830 507.971,269.200 508.235,269.200 508.413 C 269.200 508.591,268.660 508.855,268.000 509.000 C 267.340 509.145,266.800 509.429,266.800 509.632 C 266.800 509.834,266.530 510.000,266.200 510.000 C 265.870 510.000,265.600 510.160,265.600 510.357 C 265.600 510.553,265.150 510.826,264.600 510.964 C 264.050 511.102,263.600 511.378,263.600 511.576 C 263.600 511.774,263.060 512.055,262.400 512.200 C 261.740 512.345,261.200 512.615,261.200 512.800 C 261.200 512.985,260.660 513.255,260.000 513.400 C 259.340 513.545,258.800 513.806,258.800 513.981 C 258.800 514.155,258.080 514.413,257.200 514.554 C 253.969 515.070,255.605 515.600,260.432 515.600 L 265.264 515.600 267.680 513.248 C 270.629 510.377,270.491 510.515,272.679 508.248 C 273.661 507.232,274.629 506.400,274.832 506.400 C 275.034 506.400,275.200 506.220,275.200 506.000 C 275.200 505.780,275.020 505.600,274.800 505.600 C 274.580 505.600,274.400 505.766,274.400 505.968 M244.400 515.968 C 244.400 516.171,243.860 516.455,243.200 516.600 C 242.540 516.745,242.000 517.021,242.000 517.214 C 242.000 517.406,241.370 517.682,240.600 517.826 C 239.830 517.971,239.200 518.235,239.200 518.413 C 239.200 518.591,238.660 518.855,238.000 519.000 C 237.340 519.145,236.800 519.429,236.800 519.632 C 236.800 519.834,236.530 520.000,236.200 520.000 C 235.870 520.000,235.600 520.160,235.600 520.357 C 235.600 520.553,235.150 520.826,234.600 520.964 C 234.050 521.102,233.600 521.378,233.600 521.576 C 233.600 521.774,233.060 522.055,232.400 522.200 C 231.740 522.345,231.200 522.615,231.200 522.800 C 231.200 522.985,230.660 523.255,230.000 523.400 C 229.340 523.545,228.800 523.806,228.800 523.981 C 228.800 524.155,228.080 524.413,227.200 524.554 L 225.600 524.809 225.600 527.405 L 225.600 530.000 230.600 530.000 L 235.600 530.000 235.600 527.608 C 235.600 525.219,235.602 525.215,237.900 523.010 C 240.480 520.535,240.256 520.758,242.679 518.248 C 243.661 517.232,244.629 516.400,244.832 516.400 C 245.034 516.400,245.200 516.220,245.200 516.000 C 245.200 515.780,245.020 515.600,244.800 515.600 C 244.580 515.600,244.400 515.766,244.400 515.968 \\\"\\r\\n              stroke=\\\"none\\\"\\r\\n              fill=\\\"#f0f7f4\\\"\\r\\n              fill-rule=\\\"evenodd\\\"\\r\\n            ></path>\\r\\n            <path\\r\\n              id=\\\"path3\\\"\\r\\n              d=\\\"M361.133 15.957 C 361.060 16.153,359.322 16.388,357.272 16.479 C 354.621 16.596,353.427 16.811,353.141 17.222 C 352.835 17.662,352.691 17.681,352.536 17.300 C 352.295 16.706,351.200 16.624,351.200 17.200 C 351.200 17.420,350.956 17.600,350.658 17.600 C 349.894 17.600,348.000 19.439,348.000 20.181 C 348.000 20.521,348.225 20.803,348.500 20.806 C 348.840 20.810,348.813 20.931,348.414 21.183 C 347.877 21.523,347.722 22.219,347.632 24.700 C 347.608 25.385,347.361 25.600,346.600 25.600 C 346.050 25.600,345.597 25.825,345.594 26.100 C 345.590 26.434,345.457 26.401,345.194 26.000 C 344.844 25.467,344.756 25.467,344.400 26.000 C 344.067 26.499,343.941 26.508,343.648 26.055 C 343.455 25.755,343.230 25.684,343.148 25.897 C 343.067 26.111,340.147 26.391,336.637 26.521 C 333.138 26.650,330.168 26.920,330.037 27.120 C 329.907 27.321,329.125 27.609,328.300 27.760 C 327.049 27.990,326.800 28.199,326.800 29.018 C 326.800 29.607,326.569 30.000,326.223 30.000 C 325.830 30.000,325.607 30.542,325.523 31.697 C 325.429 32.986,325.219 33.428,324.644 33.537 C 324.228 33.616,323.487 34.112,322.998 34.640 C 322.341 35.349,321.684 35.600,320.487 35.600 C 319.596 35.600,318.807 35.762,318.733 35.960 C 318.660 36.158,315.455 36.436,311.612 36.579 C 307.769 36.721,304.529 36.987,304.412 37.170 C 304.295 37.352,303.435 37.630,302.500 37.786 C 301.565 37.942,300.800 38.222,300.800 38.407 C 300.800 38.593,300.409 38.802,299.931 38.872 C 299.454 38.942,298.989 39.225,298.898 39.500 C 298.683 40.154,299.878 40.154,300.112 39.500 C 300.210 39.225,300.434 39.134,300.609 39.297 C 301.005 39.667,299.308 41.191,298.668 41.041 C 298.410 40.980,298.335 41.007,298.500 41.099 C 298.950 41.350,298.862 43.200,298.400 43.200 C 298.180 43.200,298.000 43.740,298.000 44.400 C 298.000 45.459,297.863 45.600,296.833 45.600 C 296.192 45.600,295.607 45.766,295.533 45.968 C 295.460 46.170,292.462 46.406,288.871 46.492 C 283.772 46.614,282.253 46.774,281.940 47.224 C 281.635 47.663,281.491 47.681,281.336 47.300 C 281.048 46.590,279.332 46.679,279.048 47.419 C 278.918 47.759,278.583 48.008,278.305 47.971 C 276.964 47.796,276.400 48.049,276.400 48.829 C 276.400 49.284,276.138 49.919,275.817 50.240 C 275.496 50.561,275.287 51.043,275.351 51.312 C 275.416 51.580,275.393 51.665,275.301 51.500 C 274.998 50.959,274.400 51.186,274.400 51.843 C 274.400 52.272,274.184 52.403,273.749 52.236 C 273.213 52.030,273.138 52.188,273.325 53.124 C 273.650 54.749,272.516 55.600,270.029 55.600 C 268.950 55.600,268.007 55.761,267.933 55.957 C 267.860 56.154,264.651 56.420,260.803 56.548 C 256.603 56.689,253.751 56.946,253.670 57.191 C 253.595 57.416,252.991 57.600,252.329 57.600 C 251.456 57.600,251.067 57.823,250.913 58.411 C 250.755 59.015,250.483 59.162,249.850 58.985 C 249.220 58.809,249.146 58.848,249.565 59.137 C 250.044 59.468,250.029 59.628,249.465 60.192 C 249.099 60.558,248.800 61.189,248.800 61.595 C 248.800 62.001,248.597 62.401,248.349 62.484 C 248.102 62.566,247.855 63.076,247.800 63.617 C 247.746 64.158,247.679 64.825,247.651 65.100 C 247.623 65.375,247.165 65.600,246.633 65.600 C 246.102 65.600,245.607 65.758,245.533 65.952 C 245.460 66.146,241.726 66.407,237.235 66.533 C 232.745 66.659,228.965 66.925,228.835 67.123 C 228.706 67.322,227.925 67.609,227.100 67.760 C 226.181 67.930,225.600 68.261,225.600 68.618 C 225.600 68.965,225.214 69.200,224.643 69.200 C 223.667 69.200,223.200 69.858,223.200 71.233 C 223.200 71.655,222.975 72.003,222.700 72.006 C 221.628 72.019,220.941 72.761,221.600 73.194 C 222.112 73.530,222.097 73.589,221.492 73.594 C 220.938 73.599,220.839 73.817,221.036 74.600 C 221.276 75.558,221.210 75.600,219.443 75.600 C 218.430 75.600,217.600 75.759,217.600 75.954 C 217.600 76.148,214.180 76.439,210.000 76.600 C 203.058 76.867,201.504 77.122,202.900 77.763 C 203.175 77.889,202.995 77.892,202.500 77.769 C 201.434 77.505,200.000 77.892,200.000 78.444 C 200.000 78.816,199.660 79.297,198.460 80.625 C 198.164 80.953,197.819 81.979,197.695 82.905 C 197.470 84.583,196.841 85.600,196.029 85.600 C 195.793 85.600,195.600 85.762,195.600 85.959 C 195.600 86.156,191.903 86.381,187.385 86.459 C 181.861 86.554,179.077 86.748,178.885 87.052 C 178.728 87.300,177.655 87.632,176.500 87.789 C 174.628 88.044,174.400 88.179,174.400 89.038 C 174.400 90.150,173.746 90.335,173.476 89.300 C 173.302 88.633,173.291 88.633,173.246 89.300 C 173.221 89.685,173.020 90.000,172.800 90.000 C 172.580 90.000,172.400 90.270,172.400 90.600 C 172.400 90.930,172.142 91.200,171.827 91.200 C 171.201 91.200,170.610 92.568,170.978 93.164 C 171.104 93.368,170.936 93.807,170.604 94.139 C 170.272 94.471,170.000 94.936,170.000 95.171 C 170.000 95.413,169.213 95.600,168.200 95.600 C 167.210 95.600,166.400 95.752,166.400 95.938 C 166.400 96.123,163.310 96.386,159.533 96.522 C 155.027 96.684,152.569 96.927,152.382 97.230 C 152.177 97.562,152.040 97.538,151.894 97.145 C 151.739 96.727,151.556 96.777,151.107 97.361 C 150.760 97.812,150.321 97.998,150.030 97.819 C 149.741 97.640,149.227 97.850,148.781 98.328 C 148.244 98.905,148.165 99.199,148.512 99.340 C 148.885 99.492,148.875 99.627,148.470 99.912 C 148.178 100.117,147.839 101.031,147.717 101.942 C 147.595 102.854,147.338 103.600,147.147 103.600 C 146.611 103.600,146.737 104.708,147.300 104.936 C 147.677 105.089,147.655 105.240,147.207 105.550 C 146.533 106.019,146.466 129.536,147.138 129.973 C 147.331 130.098,147.587 135.822,147.707 142.693 L 147.926 155.187 150.393 157.593 C 151.750 158.917,152.944 160.000,153.047 160.000 C 153.228 160.000,153.843 160.475,154.985 161.500 C 155.633 162.081,156.800 162.168,156.800 161.636 C 156.800 161.436,158.330 161.144,160.200 160.989 C 162.070 160.833,163.600 160.547,163.600 160.353 C 163.600 160.159,164.320 160.000,165.200 160.000 C 166.080 160.000,166.800 159.834,166.800 159.632 C 166.800 159.429,167.970 159.138,169.400 158.985 C 170.830 158.832,172.000 158.564,172.000 158.389 C 172.000 158.214,172.720 157.949,173.600 157.800 C 174.480 157.651,175.200 157.380,175.200 157.197 C 175.200 157.013,175.740 156.745,176.400 156.600 C 177.060 156.455,177.600 156.171,177.600 155.968 C 177.600 155.766,177.851 155.600,178.157 155.600 C 178.464 155.600,178.818 155.330,178.945 155.000 C 179.071 154.670,179.541 154.400,179.987 154.400 C 180.434 154.400,180.800 154.228,180.800 154.018 C 180.800 153.808,181.430 153.518,182.200 153.374 C 182.970 153.229,183.600 152.964,183.600 152.784 C 183.600 152.605,184.590 152.334,185.800 152.183 C 187.010 152.032,188.000 151.767,188.000 151.596 C 188.000 151.424,189.440 151.156,191.200 151.000 C 192.960 150.844,194.400 150.555,194.400 150.358 C 194.400 150.161,195.120 150.000,196.000 150.000 C 196.880 150.000,197.600 149.841,197.600 149.646 C 197.600 149.451,198.590 149.168,199.800 149.017 C 201.010 148.866,202.000 148.586,202.000 148.396 C 202.000 148.205,202.810 147.928,203.800 147.779 C 204.790 147.631,205.600 147.369,205.600 147.198 C 205.600 147.027,206.050 146.774,206.600 146.636 C 207.150 146.498,207.600 146.208,207.600 145.992 C 207.600 145.777,207.870 145.600,208.200 145.600 C 208.530 145.600,208.800 145.434,208.800 145.232 C 208.800 145.029,209.340 144.745,210.000 144.600 C 210.660 144.455,211.200 144.173,211.200 143.973 C 211.200 143.773,211.920 143.494,212.800 143.354 C 213.680 143.213,214.400 142.954,214.400 142.778 C 214.400 142.602,215.390 142.334,216.600 142.183 C 217.810 142.032,218.800 141.767,218.800 141.596 C 218.800 141.424,220.240 141.156,222.000 141.000 C 223.760 140.844,225.200 140.555,225.200 140.358 C 225.200 140.161,225.830 140.000,226.600 140.000 C 227.370 140.000,228.000 139.845,228.000 139.656 C 228.000 139.466,228.931 139.201,230.070 139.066 C 231.208 138.931,232.243 138.662,232.370 138.468 C 232.496 138.274,233.275 137.991,234.100 137.840 C 234.925 137.688,235.600 137.406,235.600 137.214 C 235.600 137.021,236.140 136.745,236.800 136.600 C 237.460 136.455,238.000 136.171,238.000 135.968 C 238.000 135.766,238.270 135.600,238.600 135.600 C 238.930 135.600,239.200 135.423,239.200 135.208 C 239.200 134.992,239.650 134.702,240.200 134.564 C 240.750 134.426,241.200 134.176,241.200 134.008 C 241.200 133.840,241.920 133.587,242.800 133.446 C 243.680 133.306,244.400 133.033,244.400 132.841 C 244.400 132.649,245.390 132.368,246.600 132.217 C 247.810 132.066,248.800 131.794,248.800 131.613 C 248.800 131.432,250.240 131.156,252.000 131.000 C 253.967 130.826,255.202 130.540,255.206 130.258 C 255.211 129.925,255.292 129.922,255.506 130.246 C 255.668 130.491,256.205 130.819,256.700 130.973 C 257.195 131.128,257.600 131.422,257.600 131.627 C 257.600 131.832,257.830 132.000,258.111 132.000 C 258.392 132.000,258.920 132.315,259.283 132.700 C 259.646 133.085,260.226 133.632,260.572 133.916 C 261.135 134.378,261.200 138.655,261.200 175.416 C 261.200 198.050,261.354 216.400,261.544 216.400 C 261.734 216.400,261.999 217.331,262.134 218.470 C 262.269 219.608,262.549 220.645,262.758 220.774 C 262.966 220.903,263.260 221.501,263.412 222.104 C 263.563 222.707,263.847 223.200,264.043 223.200 C 264.240 223.200,264.400 223.451,264.400 223.757 C 264.400 224.064,264.670 224.418,265.000 224.545 C 265.450 224.717,265.600 224.479,265.600 223.587 C 265.600 222.934,265.764 222.400,265.965 222.400 C 266.166 222.400,266.451 221.680,266.600 220.800 C 266.749 219.920,267.015 219.200,267.192 219.200 C 267.369 219.200,267.628 218.741,267.769 218.181 C 267.910 217.620,268.615 216.585,269.336 215.881 C 270.057 215.176,270.765 214.285,270.911 213.900 C 271.056 213.515,271.451 213.200,271.787 213.200 C 272.124 213.200,272.400 213.023,272.400 212.808 C 272.400 212.592,272.850 212.302,273.400 212.164 C 273.950 212.026,274.400 211.772,274.400 211.600 C 274.400 211.428,274.850 211.174,275.400 211.036 C 276.052 210.872,276.400 210.505,276.400 209.980 C 276.400 209.537,276.670 209.071,277.000 208.945 C 277.330 208.818,277.600 208.462,277.600 208.153 C 277.600 207.845,277.960 207.284,278.400 206.907 C 278.840 206.530,279.200 205.902,279.200 205.511 C 279.200 205.120,279.380 204.800,279.600 204.800 C 279.820 204.800,280.000 204.530,280.000 204.200 C 280.000 203.870,280.186 203.600,280.413 203.600 C 280.639 203.600,280.944 203.285,281.090 202.900 C 281.433 201.994,282.224 201.200,282.784 201.200 C 283.027 201.200,283.329 200.930,283.455 200.600 C 283.582 200.270,284.011 200.000,284.409 200.000 C 284.808 200.000,285.224 199.775,285.335 199.500 C 285.496 199.100,285.543 199.100,285.568 199.500 C 285.586 199.782,286.124 200.000,286.800 200.000 C 287.460 200.000,288.000 200.172,288.000 200.382 C 288.000 200.592,288.630 200.882,289.400 201.026 C 290.170 201.171,290.800 201.449,290.800 201.645 C 290.800 201.840,291.007 202.000,291.260 202.000 C 291.512 202.000,292.314 202.585,293.041 203.300 C 294.900 205.127,295.505 205.600,295.983 205.600 C 296.212 205.600,296.400 205.769,296.400 205.975 C 296.400 206.182,297.210 206.472,298.200 206.621 C 299.190 206.769,300.000 207.031,300.000 207.202 C 300.000 207.373,300.450 207.626,301.000 207.764 C 301.550 207.902,302.000 208.178,302.000 208.376 C 302.000 208.574,302.532 208.853,303.182 208.996 C 303.845 209.142,304.471 209.595,304.609 210.028 C 304.744 210.453,305.136 210.800,305.480 210.800 C 306.068 210.800,310.000 214.459,310.000 215.006 C 310.000 215.351,311.077 216.400,311.431 216.400 C 311.590 216.400,312.331 217.030,313.079 217.800 C 313.827 218.570,314.700 219.200,315.019 219.200 C 315.339 219.200,315.600 219.380,315.600 219.600 C 315.600 219.820,315.794 220.000,316.032 220.000 C 316.594 220.000,320.000 223.406,320.000 223.968 C 320.000 224.206,320.180 224.400,320.400 224.400 C 320.620 224.400,320.800 224.940,320.800 225.600 C 320.800 226.260,320.620 226.800,320.400 226.800 C 320.180 226.800,320.000 227.070,320.000 227.400 C 320.000 227.730,319.820 228.000,319.600 228.000 C 319.380 228.000,319.200 228.272,319.200 228.605 C 319.200 228.938,318.120 230.300,316.800 231.632 C 315.480 232.965,314.400 234.222,314.400 234.427 C 314.400 234.632,314.245 234.800,314.056 234.800 C 313.866 234.800,313.601 235.731,313.466 236.870 C 313.331 238.008,313.059 239.043,312.861 239.170 C 312.663 239.296,312.374 239.985,312.218 240.700 C 312.063 241.415,311.765 242.000,311.556 242.000 C 311.346 242.000,311.057 242.306,310.914 242.680 C 310.770 243.054,309.353 244.660,307.763 246.250 C 306.173 247.839,304.754 249.513,304.610 249.970 C 304.465 250.426,304.193 250.800,304.005 250.800 C 303.817 250.800,303.548 251.325,303.407 251.967 C 303.266 252.608,302.892 253.233,302.576 253.354 C 302.259 253.476,302.000 253.851,302.000 254.187 C 302.000 254.524,301.844 254.800,301.652 254.800 C 301.461 254.800,301.206 255.408,301.086 256.151 C 300.866 257.501,297.753 261.200,296.836 261.200 C 296.596 261.200,296.400 261.360,296.400 261.557 C 296.400 261.753,295.950 262.026,295.400 262.164 C 294.850 262.302,294.400 262.682,294.400 263.008 C 294.400 263.333,294.223 263.600,294.008 263.600 C 293.792 263.600,293.502 264.050,293.364 264.600 C 293.226 265.150,292.973 265.600,292.802 265.600 C 292.631 265.600,292.369 266.410,292.221 267.400 C 292.072 268.390,291.782 269.200,291.575 269.200 C 291.369 269.200,291.200 269.498,291.200 269.861 C 291.200 270.627,288.125 273.600,287.333 273.600 C 287.040 273.600,286.800 273.780,286.800 274.000 C 286.800 274.220,286.570 274.400,286.289 274.400 C 285.555 274.400,284.400 275.870,284.400 276.805 C 284.400 277.242,284.236 277.600,284.035 277.600 C 283.834 277.600,283.549 278.320,283.400 279.200 C 283.251 280.080,282.980 280.800,282.797 280.800 C 282.613 280.800,282.348 281.325,282.207 281.967 C 282.066 282.608,281.692 283.233,281.376 283.354 C 281.059 283.476,280.800 283.811,280.800 284.099 C 280.800 284.387,280.440 284.883,280.000 285.200 C 279.560 285.517,279.200 285.985,279.200 286.240 C 279.200 286.707,276.198 290.000,275.772 290.000 C 275.379 290.000,274.400 291.121,274.400 291.571 C 274.400 291.807,274.220 292.000,274.000 292.000 C 273.780 292.000,273.600 292.276,273.600 292.613 C 273.600 292.949,273.329 293.329,272.998 293.456 C 272.667 293.583,272.283 294.388,272.147 295.244 C 272.010 296.100,271.764 296.800,271.601 296.800 C 271.438 296.800,271.200 297.446,271.072 298.236 C 270.943 299.026,270.502 299.971,270.091 300.336 C 269.681 300.701,269.228 301.315,269.085 301.700 C 268.942 302.085,268.549 302.400,268.213 302.400 C 267.876 302.400,267.600 302.568,267.600 302.773 C 267.600 302.978,267.222 303.266,266.761 303.413 C 265.317 303.871,264.400 305.109,264.400 306.600 C 264.400 307.370,264.243 308.000,264.052 308.000 C 263.860 308.000,263.580 309.248,263.430 310.774 C 263.280 312.300,262.988 313.605,262.781 313.674 C 262.574 313.743,262.287 315.465,262.143 317.500 C 261.998 319.535,261.727 321.200,261.540 321.200 C 261.353 321.200,261.200 337.940,261.200 358.400 C 261.200 382.933,261.336 395.600,261.600 395.600 C 261.820 395.600,262.000 396.056,262.000 396.613 C 262.000 397.169,262.254 397.722,262.564 397.841 C 262.874 397.961,263.237 398.495,263.372 399.029 C 263.522 399.630,263.904 400.000,264.374 400.000 C 264.792 400.000,265.209 400.225,265.301 400.500 C 265.542 401.214,280.464 401.207,280.703 400.492 C 280.793 400.222,281.372 400.000,281.991 400.000 C 282.621 400.000,283.216 399.736,283.345 399.400 C 283.471 399.070,284.031 398.800,284.587 398.800 C 285.144 398.800,285.600 398.620,285.600 398.400 C 285.600 398.180,285.872 398.000,286.204 398.000 C 286.536 398.000,287.116 397.640,287.493 397.200 C 287.870 396.760,288.326 396.400,288.507 396.400 C 288.688 396.400,289.286 395.950,289.836 395.400 C 290.386 394.850,291.098 394.400,291.418 394.400 C 291.738 394.400,292.000 394.222,292.000 394.005 C 292.000 393.787,292.720 393.494,293.600 393.354 C 294.480 393.213,295.200 392.961,295.200 392.795 C 295.200 392.628,296.235 392.363,297.500 392.205 C 298.765 392.048,299.935 391.712,300.100 391.459 C 300.315 391.130,300.512 391.170,300.794 391.600 C 301.022 391.948,301.190 392.003,301.194 391.732 C 301.198 391.452,302.246 391.152,303.800 390.985 C 305.230 390.832,306.400 390.548,306.400 390.353 C 306.400 390.159,306.940 390.000,307.600 390.000 C 308.260 390.000,308.800 389.834,308.800 389.632 C 308.800 389.429,309.340 389.145,310.000 389.000 C 310.660 388.855,311.200 388.571,311.200 388.368 C 311.200 388.166,311.472 388.000,311.804 388.000 C 312.136 388.000,312.716 387.640,313.093 387.200 C 313.470 386.760,314.086 386.400,314.462 386.400 C 314.838 386.400,315.256 386.053,315.391 385.628 C 315.529 385.195,316.155 384.742,316.818 384.596 C 317.468 384.453,318.000 384.173,318.000 383.973 C 318.000 383.773,318.720 383.494,319.600 383.354 C 320.480 383.213,321.200 382.961,321.200 382.795 C 321.200 382.628,322.190 382.368,323.400 382.217 C 324.610 382.066,325.600 381.799,325.600 381.623 C 325.600 381.447,327.040 381.178,328.800 381.024 C 330.560 380.871,332.000 380.577,332.000 380.373 C 332.000 380.168,332.360 380.000,332.800 380.000 C 333.240 380.000,333.600 379.836,333.600 379.635 C 333.600 379.434,334.320 379.149,335.200 379.000 C 336.080 378.851,336.800 378.566,336.800 378.365 C 336.800 378.164,337.057 378.000,337.371 378.000 C 337.686 378.000,338.189 377.754,338.490 377.453 C 338.791 377.152,339.434 376.780,339.919 376.626 C 340.409 376.470,340.800 376.018,340.800 375.605 C 340.800 375.106,341.193 374.777,342.000 374.600 C 342.660 374.455,343.200 374.191,343.200 374.014 C 343.200 373.836,344.010 373.569,345.000 373.421 C 345.990 373.272,346.800 373.003,346.800 372.822 C 346.800 372.642,348.195 372.364,349.900 372.205 C 351.605 372.046,353.103 371.751,353.228 371.551 C 353.353 371.350,354.928 371.073,356.728 370.934 C 358.528 370.795,360.000 370.528,360.000 370.341 C 360.000 370.153,360.450 370.000,361.000 370.000 C 361.550 370.000,362.000 369.834,362.000 369.632 C 362.000 369.429,362.540 369.145,363.200 369.000 C 363.860 368.855,364.400 368.571,364.400 368.368 C 364.400 368.166,364.795 368.000,365.277 368.000 C 365.779 368.000,366.769 367.340,367.597 366.452 C 368.390 365.601,369.436 364.779,369.920 364.625 C 370.404 364.472,370.800 364.178,370.800 363.973 C 370.800 363.768,371.070 363.600,371.400 363.600 C 371.730 363.600,372.000 363.370,372.000 363.089 C 372.000 362.808,372.360 362.270,372.800 361.893 C 373.240 361.516,373.600 360.976,373.600 360.692 C 373.600 360.409,373.960 359.917,374.400 359.600 C 374.840 359.283,375.200 358.833,375.200 358.601 C 375.200 358.101,376.354 357.057,377.314 356.688 C 377.951 356.444,377.993 347.794,377.988 217.143 C 377.984 138.230,378.133 77.759,378.331 77.629 C 378.523 77.503,378.791 73.982,378.926 69.805 C 379.078 65.149,379.333 62.156,379.586 62.071 C 380.162 61.879,380.104 60.915,379.500 60.633 C 379.100 60.447,379.100 60.353,379.500 60.167 C 379.823 60.016,380.000 59.036,380.000 57.400 C 380.000 56.007,380.179 54.807,380.398 54.733 C 380.617 54.660,380.894 52.890,381.014 50.800 C 381.133 48.710,381.404 46.940,381.616 46.867 C 382.169 46.675,382.089 45.703,381.500 45.464 C 381.113 45.307,381.124 45.174,381.549 44.877 C 381.916 44.620,382.146 43.394,382.243 41.173 C 382.335 39.080,382.575 37.734,382.894 37.527 C 383.291 37.271,383.270 37.115,382.800 36.806 C 382.470 36.589,382.403 36.409,382.652 36.406 C 382.950 36.402,383.202 34.569,383.393 31.000 C 383.552 28.030,383.844 25.600,384.041 25.600 C 384.238 25.600,384.400 25.330,384.400 25.000 C 384.400 24.670,384.220 24.400,384.000 24.400 C 383.777 24.400,383.600 23.319,383.600 21.956 C 383.600 19.475,382.622 17.625,381.300 17.607 C 381.025 17.603,380.800 17.369,380.800 17.088 C 380.800 16.712,379.708 16.545,376.700 16.463 C 374.445 16.401,372.540 16.182,372.467 15.975 C 372.296 15.496,361.312 15.478,361.133 15.957 M221.067 71.067 C 220.606 71.527,220.775 72.000,221.400 72.000 C 221.730 72.000,222.000 71.730,222.000 71.400 C 222.000 70.775,221.527 70.606,221.067 71.067 \\\"\\r\\n              stroke=\\\"none\\\"\\r\\n              fill=\\\"#fcdc04\\\"\\r\\n              fill-rule=\\\"evenodd\\\"\\r\\n            ></path>\\r\\n            <path\\r\\n              id=\\\"path4\\\"\\r\\n              d=\\\"M359.200 16.000 C 359.200 16.220,359.650 16.400,360.200 16.400 C 360.750 16.400,361.200 16.220,361.200 16.000 C 361.200 15.780,360.750 15.600,360.200 15.600 C 359.650 15.600,359.200 15.780,359.200 16.000 M383.600 27.000 C 383.600 27.330,383.780 27.600,384.000 27.600 C 384.220 27.600,384.400 27.330,384.400 27.000 C 384.400 26.670,384.220 26.400,384.000 26.400 C 383.780 26.400,383.600 26.670,383.600 27.000 M285.232 199.500 C 285.214 199.775,284.840 200.000,284.400 200.000 C 283.960 200.000,283.600 200.186,283.600 200.413 C 283.600 200.639,283.285 200.944,282.900 201.090 C 282.011 201.427,281.427 202.011,281.090 202.900 C 280.944 203.285,280.639 203.600,280.413 203.600 C 280.186 203.600,280.000 203.870,280.000 204.200 C 280.000 204.530,279.820 204.800,279.600 204.800 C 279.380 204.800,279.200 205.120,279.200 205.511 C 279.200 205.902,278.840 206.530,278.400 206.907 C 277.960 207.284,277.600 207.845,277.600 208.153 C 277.600 208.462,277.330 208.818,277.000 208.945 C 276.670 209.071,276.400 209.537,276.400 209.980 C 276.400 210.505,276.052 210.872,275.400 211.036 C 274.850 211.174,274.400 211.428,274.400 211.600 C 274.400 211.772,273.950 212.026,273.400 212.164 C 272.850 212.302,272.400 212.592,272.400 212.808 C 272.400 213.023,272.124 213.200,271.787 213.200 C 271.451 213.200,271.056 213.515,270.911 213.900 C 270.765 214.285,270.057 215.176,269.336 215.881 C 268.615 216.585,267.910 217.620,267.769 218.181 C 267.628 218.741,267.369 219.200,267.192 219.200 C 267.015 219.200,266.749 219.920,266.600 220.800 C 266.451 221.680,266.166 222.400,265.965 222.400 C 265.764 222.400,265.600 222.934,265.600 223.587 C 265.600 224.479,265.450 224.717,265.000 224.545 C 264.670 224.418,264.400 224.064,264.400 223.757 C 264.400 223.451,264.234 223.200,264.032 223.200 C 263.829 223.200,263.545 222.660,263.400 222.000 C 263.255 221.340,262.971 220.800,262.768 220.800 C 262.566 220.800,262.400 220.440,262.400 220.000 C 262.400 219.560,262.155 219.200,261.856 219.200 C 261.456 219.200,261.255 220.122,261.095 222.687 C 260.971 224.674,260.689 226.237,260.439 226.320 C 260.197 226.401,260.000 226.977,260.000 227.600 C 260.000 228.223,259.817 228.794,259.594 228.869 C 259.371 228.943,259.075 230.218,258.936 231.702 C 258.798 233.186,258.553 234.400,258.393 234.400 C 258.233 234.400,257.987 235.120,257.846 236.000 C 257.706 236.880,257.407 237.600,257.183 237.600 C 256.958 237.600,256.656 237.915,256.510 238.300 C 256.217 239.073,255.397 240.000,255.006 240.000 C 254.555 240.000,250.800 243.881,250.800 244.347 C 250.800 244.596,250.620 244.800,250.400 244.800 C 250.180 244.800,250.000 245.141,250.000 245.557 C 250.000 245.974,249.730 246.418,249.400 246.545 C 249.070 246.671,248.800 247.051,248.800 247.387 C 248.800 247.724,248.628 248.000,248.418 248.000 C 248.208 248.000,247.918 248.630,247.774 249.400 C 247.629 250.170,247.365 250.800,247.187 250.800 C 247.009 250.800,246.745 251.340,246.600 252.000 C 246.455 252.660,246.171 253.200,245.968 253.200 C 245.766 253.200,245.600 253.430,245.600 253.711 C 245.600 254.200,244.239 255.600,243.764 255.600 C 243.448 255.600,240.000 259.078,240.000 259.397 C 240.000 259.540,239.730 259.927,239.400 260.257 C 239.070 260.587,238.800 261.204,238.800 261.629 C 238.800 262.053,238.643 262.400,238.451 262.400 C 238.259 262.400,237.987 263.120,237.846 264.000 C 237.706 264.880,237.432 265.600,237.239 265.600 C 237.045 265.600,236.774 266.047,236.637 266.594 C 236.483 267.207,236.007 267.683,235.394 267.837 C 234.847 267.974,234.400 268.228,234.400 268.400 C 234.400 268.572,233.962 268.823,233.427 268.958 C 232.891 269.092,232.344 269.545,232.211 269.964 C 232.078 270.383,231.706 270.827,231.385 270.950 C 231.063 271.074,230.800 271.451,230.800 271.787 C 230.800 272.124,230.620 272.400,230.400 272.400 C 230.180 272.400,230.000 272.670,230.000 273.000 C 230.000 273.330,229.828 273.600,229.618 273.600 C 229.408 273.600,229.118 274.230,228.974 275.000 C 228.829 275.770,228.551 276.400,228.355 276.400 C 228.160 276.400,228.000 276.676,228.000 277.013 C 228.000 277.349,227.746 277.722,227.436 277.841 C 227.126 277.961,226.763 278.495,226.628 279.029 C 226.494 279.563,226.208 280.000,225.992 280.000 C 225.777 280.000,225.600 280.270,225.600 280.600 C 225.600 280.930,225.406 281.200,225.168 281.200 C 224.518 281.200,221.349 284.502,221.027 285.514 C 220.873 286.001,220.578 286.400,220.373 286.400 C 220.168 286.400,220.000 286.651,220.000 286.957 C 220.000 287.264,219.730 287.618,219.400 287.745 C 219.070 287.871,218.800 288.251,218.800 288.587 C 218.800 288.924,218.640 289.200,218.445 289.200 C 218.249 289.200,217.971 289.830,217.826 290.600 C 217.682 291.370,217.412 292.000,217.226 292.000 C 217.041 292.000,216.771 292.630,216.626 293.400 C 216.482 294.170,216.192 294.800,215.982 294.800 C 215.772 294.800,215.600 295.140,215.600 295.557 C 215.600 296.040,215.220 296.409,214.548 296.577 C 213.442 296.855,210.000 300.027,210.000 300.768 C 210.000 301.006,209.834 301.200,209.632 301.200 C 209.429 301.200,209.145 301.740,209.000 302.400 C 208.855 303.060,208.594 303.600,208.421 303.600 C 208.247 303.600,208.003 304.227,207.879 304.993 C 207.629 306.531,205.333 309.200,204.260 309.200 C 203.897 309.200,203.600 309.371,203.600 309.581 C 203.600 309.790,202.970 310.573,202.200 311.321 C 201.430 312.069,200.800 312.888,200.800 313.140 C 200.800 313.393,200.620 313.600,200.400 313.600 C 200.180 313.600,200.000 313.870,200.000 314.200 C 200.000 314.530,199.840 314.800,199.645 314.800 C 199.449 314.800,199.174 315.413,199.034 316.161 C 198.893 316.910,198.513 317.624,198.189 317.749 C 197.865 317.873,197.600 318.251,197.600 318.587 C 197.600 318.924,197.420 319.200,197.200 319.200 C 196.980 319.200,196.800 319.566,196.800 320.013 C 196.800 320.459,196.546 320.922,196.236 321.041 C 195.926 321.161,195.563 321.695,195.428 322.229 C 195.271 322.855,194.898 323.200,194.380 323.200 C 193.937 323.200,193.456 323.515,193.310 323.900 C 192.980 324.772,192.181 325.600,191.671 325.600 C 191.459 325.600,191.182 325.870,191.055 326.200 C 190.929 326.530,190.459 326.800,190.013 326.800 C 189.566 326.800,189.200 326.960,189.200 327.157 C 189.200 327.353,188.707 327.637,188.104 327.788 C 187.501 327.940,186.888 328.257,186.742 328.494 C 186.402 329.044,183.862 328.986,183.675 328.424 C 183.597 328.191,183.273 328.000,182.954 328.000 C 182.636 328.000,182.278 327.746,182.159 327.436 C 182.039 327.126,181.505 326.763,180.971 326.628 C 180.437 326.494,180.000 326.208,180.000 325.992 C 180.000 325.777,179.730 325.600,179.400 325.600 C 179.070 325.600,178.800 325.411,178.800 325.180 C 178.800 324.705,176.274 322.000,175.831 322.000 C 175.673 322.000,175.292 321.775,174.985 321.500 C 173.682 320.331,173.213 320.000,172.860 320.000 C 172.654 320.000,172.382 319.730,172.255 319.400 C 172.129 319.070,171.749 318.800,171.413 318.800 C 171.076 318.800,170.800 318.636,170.800 318.435 C 170.800 318.234,170.080 317.949,169.200 317.800 C 168.320 317.651,167.600 317.366,167.600 317.165 C 167.600 316.964,167.144 316.800,166.587 316.800 C 166.031 316.800,165.471 316.530,165.345 316.200 C 165.218 315.870,164.774 315.600,164.357 315.600 C 163.814 315.600,163.600 315.314,163.600 314.587 C 163.600 314.031,163.330 313.471,163.000 313.345 C 162.670 313.218,162.400 312.890,162.400 312.616 C 162.400 311.907,160.550 310.000,159.862 310.000 C 159.545 310.000,159.182 309.730,159.055 309.400 C 158.929 309.070,158.369 308.800,157.813 308.800 C 157.256 308.800,156.800 308.636,156.800 308.435 C 156.800 308.234,156.094 307.951,155.231 307.805 C 154.369 307.660,153.564 307.284,153.444 306.970 C 153.324 306.657,153.037 306.400,152.807 306.400 C 152.578 306.400,151.478 305.484,150.364 304.364 C 149.250 303.244,148.223 302.444,148.081 302.586 C 147.939 302.727,148.015 302.969,148.250 303.122 C 148.484 303.275,148.790 304.119,148.929 304.997 C 149.068 305.875,149.365 306.655,149.591 306.730 C 149.816 306.805,150.000 307.046,150.000 307.264 C 150.000 307.483,150.540 308.202,151.200 308.862 C 151.860 309.522,152.400 310.224,152.400 310.423 C 152.400 310.622,152.850 310.898,153.400 311.036 C 153.950 311.174,154.400 311.428,154.400 311.600 C 154.400 311.772,154.850 312.026,155.400 312.164 C 155.950 312.302,156.400 312.592,156.400 312.808 C 156.400 313.023,156.607 313.200,156.860 313.200 C 157.331 313.200,160.000 315.759,160.000 316.211 C 160.000 316.626,162.150 318.627,162.900 318.911 C 163.285 319.056,163.600 319.361,163.600 319.587 C 163.600 319.814,163.960 320.000,164.400 320.000 C 164.840 320.000,165.200 320.166,165.200 320.368 C 165.200 320.571,165.740 320.855,166.400 321.000 C 167.060 321.145,167.600 321.429,167.600 321.632 C 167.600 321.834,167.876 322.000,168.213 322.000 C 168.549 322.000,168.929 322.270,169.055 322.600 C 169.182 322.930,169.558 323.200,169.892 323.200 C 170.225 323.200,171.548 324.280,172.832 325.600 C 174.115 326.920,175.424 328.000,175.740 328.000 C 176.056 328.000,176.418 328.270,176.545 328.600 C 176.671 328.930,177.051 329.200,177.387 329.200 C 177.724 329.200,178.000 329.380,178.000 329.600 C 178.000 329.820,178.270 330.000,178.600 330.000 C 178.930 330.000,179.200 330.177,179.200 330.392 C 179.200 330.608,179.650 330.898,180.200 331.036 C 180.750 331.174,181.200 331.445,181.200 331.639 C 181.200 331.832,181.920 332.106,182.800 332.246 C 183.680 332.387,184.400 332.659,184.400 332.851 C 184.400 333.043,184.850 333.200,185.400 333.200 C 185.950 333.200,186.400 333.040,186.400 332.845 C 186.400 332.649,187.030 332.371,187.800 332.226 C 188.570 332.082,189.200 331.815,189.200 331.633 C 189.200 331.451,189.920 331.187,190.800 331.046 C 191.680 330.906,192.400 330.613,192.400 330.395 C 192.400 330.178,192.670 330.000,193.000 330.000 C 193.330 330.000,193.600 329.832,193.600 329.627 C 193.600 329.422,193.992 329.130,194.471 328.978 C 195.632 328.609,198.000 326.277,198.000 325.502 C 198.000 325.163,198.270 324.782,198.600 324.655 C 198.930 324.529,199.200 324.189,199.200 323.901 C 199.200 323.613,199.553 323.122,199.985 322.811 C 200.417 322.499,200.881 321.740,201.017 321.122 C 201.153 320.505,201.415 320.000,201.600 320.000 C 201.785 320.000,202.055 319.460,202.200 318.800 C 202.345 318.140,202.621 317.600,202.814 317.600 C 203.006 317.600,203.281 316.976,203.424 316.214 C 203.579 315.386,203.975 314.735,204.405 314.598 C 204.802 314.473,205.227 314.106,205.350 313.785 C 205.474 313.463,205.769 313.200,206.007 313.200 C 206.685 313.200,209.200 310.590,209.200 309.887 C 209.200 309.539,209.560 309.140,210.000 309.000 C 210.552 308.825,210.877 308.260,211.051 307.173 C 211.189 306.308,211.440 305.600,211.608 305.600 C 211.776 305.600,212.026 305.150,212.164 304.600 C 212.302 304.050,212.592 303.600,212.808 303.600 C 213.023 303.600,213.200 303.381,213.200 303.113 C 213.200 302.494,215.150 300.800,215.862 300.800 C 216.158 300.800,216.400 300.634,216.400 300.431 C 216.400 300.228,216.940 299.522,217.600 298.862 C 218.260 298.202,218.800 297.462,218.800 297.218 C 218.800 296.974,219.070 296.671,219.400 296.545 C 219.730 296.418,220.000 295.974,220.000 295.557 C 220.000 295.141,220.166 294.800,220.368 294.800 C 220.571 294.800,220.855 294.260,221.000 293.600 C 221.145 292.940,221.429 292.400,221.632 292.400 C 221.834 292.400,222.000 292.124,222.000 291.787 C 222.000 291.451,222.270 291.071,222.600 290.945 C 222.930 290.818,223.200 290.399,223.200 290.013 C 223.200 289.628,223.650 288.974,224.200 288.561 C 224.750 288.148,225.200 287.643,225.200 287.439 C 225.200 287.052,225.458 286.746,227.791 284.360 C 228.566 283.567,229.200 282.712,229.200 282.460 C 229.200 282.207,229.380 282.000,229.600 282.000 C 229.820 282.000,230.000 281.730,230.000 281.400 C 230.000 281.070,230.177 280.800,230.392 280.800 C 230.608 280.800,230.898 280.350,231.036 279.800 C 231.174 279.250,231.439 278.800,231.625 278.800 C 231.811 278.800,232.090 278.130,232.243 277.310 C 232.397 276.491,232.765 275.578,233.061 275.281 C 233.358 274.985,233.600 274.498,233.600 274.198 C 233.600 273.899,233.960 273.540,234.400 273.400 C 234.840 273.260,235.200 272.978,235.200 272.773 C 235.200 272.568,235.415 272.400,235.677 272.400 C 236.312 272.400,239.200 269.279,239.200 268.593 C 239.200 268.297,239.538 267.947,239.951 267.816 C 240.451 267.657,240.786 267.047,240.955 265.989 C 241.095 265.115,241.387 264.400,241.605 264.400 C 241.822 264.400,242.000 264.144,242.000 263.831 C 242.000 263.518,242.540 262.722,243.200 262.062 C 243.860 261.402,244.400 260.668,244.400 260.431 C 244.400 260.194,244.594 260.000,244.832 260.000 C 245.573 260.000,248.745 256.558,249.023 255.452 C 249.168 254.874,249.447 254.400,249.643 254.400 C 249.840 254.400,250.000 254.130,250.000 253.800 C 250.000 253.470,250.177 253.200,250.392 253.200 C 250.608 253.200,250.898 252.750,251.036 252.200 C 251.174 251.650,251.428 251.200,251.600 251.200 C 251.772 251.200,252.026 250.750,252.164 250.200 C 252.302 249.650,252.578 249.200,252.776 249.200 C 252.974 249.200,253.253 248.668,253.396 248.018 C 253.542 247.355,253.995 246.729,254.428 246.591 C 254.853 246.456,255.200 245.998,255.200 245.573 C 255.200 245.148,255.401 244.800,255.647 244.800 C 256.178 244.800,259.200 241.853,259.200 241.335 C 259.200 241.138,259.553 240.722,259.985 240.411 C 260.417 240.099,260.881 239.340,261.017 238.722 C 261.153 238.105,261.415 237.600,261.600 237.600 C 261.785 237.600,262.061 237.033,262.213 236.339 C 262.453 235.247,263.078 234.475,265.031 232.855 C 265.268 232.659,265.881 232.365,266.393 232.202 C 267.206 231.944,267.945 231.278,269.594 229.317 C 269.817 229.051,270.000 228.646,270.000 228.417 C 270.000 228.188,270.178 228.000,270.395 228.000 C 270.613 228.000,270.904 227.291,271.042 226.425 C 271.181 225.558,271.543 224.754,271.847 224.637 C 272.151 224.521,272.400 224.149,272.400 223.813 C 272.400 223.476,272.577 223.200,272.792 223.200 C 273.008 223.200,273.296 222.756,273.432 222.214 C 273.568 221.672,274.012 221.123,274.419 220.994 C 274.826 220.865,275.270 220.408,275.406 219.980 C 275.543 219.551,275.898 219.200,276.196 219.200 C 276.914 219.200,279.200 216.894,279.200 216.169 C 279.200 215.856,279.380 215.600,279.600 215.600 C 279.820 215.600,280.000 215.396,280.000 215.146 C 280.000 214.896,280.429 214.294,280.953 213.808 C 281.477 213.322,282.030 212.537,282.180 212.062 C 282.331 211.588,282.602 211.200,282.784 211.200 C 282.965 211.200,283.226 210.750,283.364 210.200 C 283.502 209.650,283.792 209.200,284.008 209.200 C 284.223 209.200,284.400 208.945,284.400 208.633 C 284.400 208.322,284.625 207.991,284.900 207.898 C 285.565 207.675,286.800 208.011,286.800 208.415 C 286.800 208.592,287.340 208.855,288.000 209.000 C 288.660 209.145,289.200 209.429,289.200 209.632 C 289.200 209.834,289.650 210.000,290.200 210.000 C 290.750 210.000,291.200 210.159,291.200 210.354 C 291.200 210.549,292.190 210.832,293.400 210.983 C 294.610 211.134,295.600 211.410,295.600 211.597 C 295.600 211.784,296.140 212.055,296.800 212.200 C 297.460 212.345,298.000 212.617,298.000 212.805 C 298.000 212.993,298.405 213.273,298.900 213.429 C 300.000 213.774,302.400 216.242,302.400 217.028 C 302.400 217.343,302.656 217.600,302.969 217.600 C 303.282 217.600,304.078 218.140,304.738 218.800 C 305.398 219.460,306.063 220.000,306.216 220.000 C 306.369 220.000,307.192 220.720,308.046 221.600 C 308.900 222.480,309.799 223.200,310.043 223.200 C 311.530 223.200,313.042 226.179,311.798 226.656 C 311.467 226.783,311.083 227.588,310.947 228.444 C 310.810 229.300,310.541 230.000,310.349 230.000 C 310.157 230.000,310.000 230.270,310.000 230.600 C 310.000 230.930,309.841 231.200,309.646 231.200 C 309.451 231.200,309.168 232.190,309.017 233.400 C 308.866 234.610,308.595 235.600,308.415 235.600 C 308.234 235.600,307.974 236.050,307.836 236.600 C 307.698 237.150,307.408 237.600,307.192 237.600 C 306.977 237.600,306.800 237.806,306.800 238.057 C 306.800 238.532,304.604 240.800,304.144 240.800 C 303.620 240.800,301.291 243.482,300.992 244.429 C 300.824 244.963,300.363 245.681,299.970 246.024 C 299.576 246.367,299.132 247.132,298.983 247.724 C 298.835 248.316,298.567 248.800,298.388 248.800 C 298.210 248.800,297.945 249.340,297.800 250.000 C 297.655 250.660,297.374 251.200,297.176 251.200 C 296.978 251.200,296.702 251.650,296.564 252.200 C 296.426 252.750,296.153 253.200,295.957 253.200 C 295.760 253.200,295.600 253.406,295.600 253.657 C 295.600 254.123,293.409 256.400,292.960 256.400 C 292.542 256.400,290.814 258.175,290.807 258.612 C 290.803 258.838,290.435 259.286,289.989 259.608 C 289.538 259.933,289.072 260.858,288.938 261.696 C 288.806 262.523,288.549 263.200,288.367 263.200 C 288.185 263.200,287.915 263.847,287.766 264.638 C 287.499 266.061,285.235 268.800,284.325 268.800 C 283.717 268.800,280.800 272.000,280.800 272.667 C 280.800 272.960,280.620 273.200,280.400 273.200 C 280.180 273.200,280.000 273.470,280.000 273.800 C 280.000 274.130,279.834 274.400,279.632 274.400 C 279.429 274.400,279.145 274.940,279.000 275.600 C 278.855 276.260,278.571 276.800,278.368 276.800 C 278.166 276.800,278.000 277.072,278.000 277.404 C 278.000 277.736,277.640 278.316,277.200 278.693 C 276.760 279.070,276.400 279.608,276.400 279.889 C 276.400 280.517,274.964 282.000,274.356 282.000 C 273.742 282.000,272.015 283.690,272.007 284.300 C 272.003 284.575,271.823 284.800,271.608 284.800 C 271.392 284.800,271.102 285.250,270.964 285.800 C 270.826 286.350,270.553 286.800,270.357 286.800 C 270.160 286.800,270.000 287.070,270.000 287.400 C 270.000 287.730,269.823 288.000,269.608 288.000 C 269.392 288.000,269.102 288.450,268.964 289.000 C 268.826 289.550,268.567 290.000,268.388 290.000 C 268.210 290.000,267.945 290.540,267.800 291.200 C 267.655 291.860,267.394 292.400,267.221 292.400 C 267.047 292.400,266.805 293.011,266.684 293.758 C 266.445 295.235,265.326 296.800,264.511 296.800 C 263.832 296.800,260.800 299.944,260.800 300.648 C 260.800 300.952,260.620 301.200,260.400 301.200 C 260.180 301.200,260.000 301.470,260.000 301.800 C 260.000 302.130,259.822 302.400,259.605 302.400 C 259.387 302.400,259.094 303.120,258.954 304.000 C 258.813 304.880,258.555 305.600,258.381 305.600 C 258.206 305.600,257.945 306.140,257.800 306.800 C 257.655 307.460,257.383 308.000,257.195 308.000 C 257.007 308.000,256.728 308.397,256.574 308.881 C 256.254 309.891,255.442 310.800,254.859 310.800 C 254.251 310.800,252.000 313.186,252.000 313.831 C 252.000 314.144,251.834 314.400,251.632 314.400 C 251.429 314.400,251.145 314.940,251.000 315.600 C 250.855 316.260,250.571 316.800,250.368 316.800 C 250.166 316.800,250.000 317.070,250.000 317.400 C 250.000 317.730,249.823 318.000,249.608 318.000 C 249.392 318.000,249.102 318.450,248.964 319.000 C 248.826 319.550,248.572 320.000,248.400 320.000 C 248.228 320.000,247.974 320.450,247.836 321.000 C 247.698 321.550,247.408 322.000,247.192 322.000 C 246.977 322.000,246.800 322.201,246.800 322.447 C 246.800 322.692,245.720 323.960,244.400 325.264 C 243.080 326.567,242.000 327.877,242.000 328.174 C 242.000 328.471,241.730 328.818,241.400 328.945 C 241.070 329.071,240.800 329.541,240.800 329.987 C 240.800 330.434,240.620 330.800,240.400 330.800 C 240.180 330.800,240.000 331.070,240.000 331.400 C 240.000 331.730,239.834 332.000,239.632 332.000 C 239.429 332.000,239.145 332.540,239.000 333.200 C 238.855 333.860,238.590 334.400,238.412 334.400 C 238.233 334.400,237.968 334.873,237.823 335.451 C 237.510 336.699,235.728 338.578,234.485 338.973 C 233.998 339.128,233.600 339.408,233.600 339.596 C 233.600 339.784,233.069 340.469,232.420 341.118 C 231.772 341.767,231.122 342.771,230.977 343.349 C 230.832 343.927,230.553 344.400,230.357 344.400 C 230.160 344.400,230.000 344.670,230.000 345.000 C 230.000 345.330,229.840 345.600,229.643 345.600 C 229.447 345.600,229.174 346.050,229.036 346.600 C 228.898 347.150,228.608 347.600,228.392 347.600 C 228.177 347.600,228.000 347.876,228.000 348.213 C 228.000 348.549,227.730 348.929,227.400 349.055 C 227.070 349.182,226.800 349.586,226.800 349.954 C 226.800 350.622,225.490 352.000,224.854 352.000 C 224.272 352.000,222.506 353.836,222.220 354.738 C 222.069 355.212,221.793 355.600,221.605 355.600 C 221.417 355.600,221.145 356.140,221.000 356.800 C 220.855 357.460,220.571 358.000,220.368 358.000 C 220.166 358.000,220.000 358.270,220.000 358.600 C 220.000 358.930,219.823 359.200,219.608 359.200 C 219.392 359.200,219.102 359.650,218.964 360.200 C 218.826 360.750,218.567 361.200,218.388 361.200 C 218.210 361.200,217.945 361.740,217.800 362.400 C 217.655 363.060,217.371 363.600,217.168 363.600 C 216.966 363.600,216.800 363.857,216.800 364.172 C 216.800 364.958,214.400 367.426,213.300 367.771 C 212.805 367.927,212.400 368.284,212.400 368.566 C 212.400 368.847,212.040 369.493,211.600 370.000 C 211.160 370.507,210.800 371.165,210.800 371.461 C 210.800 371.758,210.620 372.000,210.400 372.000 C 210.180 372.000,210.000 372.270,210.000 372.600 C 210.000 372.930,209.834 373.200,209.632 373.200 C 209.429 373.200,209.145 373.740,209.000 374.400 C 208.855 375.060,208.571 375.600,208.368 375.600 C 208.166 375.600,208.000 375.848,208.000 376.152 C 208.000 376.906,204.945 380.000,204.200 380.000 C 203.870 380.000,203.600 380.180,203.600 380.400 C 203.600 380.620,203.324 380.800,202.987 380.800 C 202.651 380.800,202.271 381.070,202.145 381.400 C 202.018 381.730,201.660 382.000,201.349 382.000 C 201.037 382.000,199.821 382.961,198.647 384.136 C 197.472 385.311,196.223 386.382,195.871 386.518 C 195.128 386.802,192.636 384.573,192.215 383.248 C 192.067 382.782,191.716 382.400,191.434 382.400 C 191.153 382.400,190.507 382.040,190.000 381.600 C 189.493 381.160,188.835 380.800,188.539 380.800 C 188.242 380.800,188.000 380.620,188.000 380.400 C 188.000 380.180,187.730 380.000,187.400 380.000 C 187.070 380.000,186.800 379.820,186.800 379.600 C 186.800 379.380,186.453 379.200,186.029 379.200 C 185.604 379.200,184.987 378.930,184.657 378.600 C 184.327 378.270,183.878 378.000,183.659 378.000 C 183.441 378.000,182.729 377.439,182.078 376.752 C 178.506 372.985,176.506 371.242,175.452 370.977 C 174.874 370.832,174.400 370.553,174.400 370.357 C 174.400 370.160,174.130 370.000,173.800 370.000 C 173.470 370.000,173.200 369.834,173.200 369.632 C 173.200 369.429,172.660 369.145,172.000 369.000 C 171.340 368.855,170.800 368.583,170.800 368.395 C 170.800 368.207,170.395 367.927,169.900 367.771 C 169.405 367.616,168.604 367.064,168.119 366.544 C 167.635 366.025,167.050 365.600,166.819 365.600 C 166.589 365.600,166.400 365.330,166.400 365.000 C 166.400 364.670,166.130 364.400,165.800 364.400 C 165.470 364.400,165.200 364.130,165.200 363.800 C 165.200 363.470,164.885 363.192,164.500 363.183 C 164.115 363.174,163.358 362.634,162.819 361.983 C 162.279 361.332,161.604 360.800,161.319 360.800 C 161.033 360.800,160.800 360.620,160.800 360.400 C 160.800 360.180,160.440 360.000,160.000 360.000 C 159.560 360.000,159.200 359.840,159.200 359.643 C 159.200 359.447,158.707 359.163,158.104 359.012 C 157.501 358.860,156.887 358.541,156.739 358.302 C 156.410 357.768,152.652 357.860,152.467 358.406 C 152.393 358.623,152.065 358.800,151.738 358.800 C 151.225 358.800,151.230 358.887,151.771 359.429 C 152.117 359.774,152.400 360.224,152.400 360.429 C 152.400 360.633,152.642 360.800,152.939 360.800 C 153.235 360.800,153.893 361.160,154.400 361.600 C 154.907 362.040,155.565 362.400,155.861 362.400 C 156.158 362.400,156.400 362.580,156.400 362.800 C 156.400 363.020,156.676 363.200,157.013 363.200 C 157.349 363.200,157.729 363.470,157.855 363.800 C 157.982 364.130,158.309 364.400,158.582 364.400 C 159.203 364.400,160.800 365.759,160.800 366.289 C 160.800 367.075,162.804 368.821,163.976 369.055 C 164.636 369.187,165.280 369.621,165.406 370.020 C 165.533 370.418,166.168 370.861,166.818 371.004 C 167.468 371.147,168.000 371.426,168.000 371.624 C 168.000 371.822,168.450 372.098,169.000 372.236 C 169.550 372.374,170.000 372.645,170.000 372.839 C 170.000 373.032,170.720 373.306,171.600 373.446 C 172.480 373.587,173.200 373.845,173.200 374.019 C 173.200 374.194,173.740 374.455,174.400 374.600 C 175.225 374.781,175.600 375.103,175.600 375.632 C 175.600 376.054,175.786 376.400,176.013 376.400 C 176.239 376.400,176.544 376.715,176.689 377.100 C 176.835 377.485,177.459 378.309,178.077 378.931 C 178.695 379.553,179.200 380.208,179.200 380.386 C 179.200 380.565,179.817 380.827,180.571 380.968 C 181.325 381.110,182.004 381.411,182.079 381.638 C 182.155 381.866,182.978 382.154,183.909 382.278 C 184.839 382.403,185.600 382.650,185.600 382.826 C 185.600 383.002,185.978 383.266,186.439 383.413 C 187.542 383.762,188.800 385.041,188.800 385.813 C 188.800 386.149,189.070 386.529,189.400 386.655 C 189.730 386.782,190.000 387.044,190.000 387.238 C 190.000 387.733,191.302 389.200,191.742 389.200 C 191.942 389.200,192.458 389.605,192.887 390.100 C 193.757 391.102,197.605 391.385,197.910 390.469 C 197.996 390.211,198.322 390.000,198.633 390.000 C 198.945 390.000,199.200 389.832,199.200 389.627 C 199.200 389.422,199.592 389.130,200.071 388.978 C 201.262 388.600,203.600 386.269,203.600 385.460 C 203.600 385.063,203.924 384.800,204.413 384.800 C 204.859 384.800,205.322 384.546,205.441 384.236 C 205.561 383.926,206.118 383.557,206.680 383.416 C 207.777 383.140,210.000 381.141,210.000 380.431 C 210.000 380.194,210.177 380.000,210.392 380.000 C 210.608 380.000,210.898 379.550,211.036 379.000 C 211.174 378.450,211.431 378.000,211.608 378.000 C 211.785 378.000,212.051 377.280,212.200 376.400 C 212.349 375.520,212.634 374.800,212.835 374.800 C 213.036 374.800,213.200 374.524,213.200 374.187 C 213.200 373.851,213.470 373.471,213.800 373.345 C 214.130 373.218,214.400 372.941,214.400 372.729 C 214.400 372.204,215.440 371.200,215.984 371.200 C 216.227 371.200,216.529 370.930,216.655 370.600 C 216.782 370.270,217.044 370.000,217.238 370.000 C 217.766 370.000,219.200 368.684,219.200 368.199 C 219.200 367.967,219.560 367.517,220.000 367.200 C 220.440 366.883,220.800 366.207,220.800 365.699 C 220.800 365.191,221.059 364.676,221.376 364.554 C 221.692 364.433,222.066 363.808,222.207 363.167 C 222.348 362.525,222.610 362.000,222.788 362.000 C 222.967 362.000,223.226 361.550,223.364 361.000 C 223.502 360.450,223.792 360.000,224.008 360.000 C 224.223 360.000,224.400 359.730,224.400 359.400 C 224.400 359.070,224.580 358.800,224.800 358.800 C 225.020 358.800,225.200 358.530,225.200 358.200 C 225.200 357.870,225.380 357.600,225.600 357.600 C 226.213 357.600,227.600 356.075,227.600 355.400 C 227.600 355.070,227.876 354.800,228.213 354.800 C 228.549 354.800,228.942 354.485,229.085 354.100 C 229.228 353.715,229.762 353.034,230.272 352.587 C 230.783 352.140,231.200 351.555,231.200 351.287 C 231.200 351.019,231.364 350.800,231.565 350.800 C 231.766 350.800,232.051 350.080,232.200 349.200 C 232.349 348.320,232.611 347.600,232.783 347.600 C 232.955 347.600,233.200 346.954,233.328 346.164 C 233.563 344.718,234.861 343.200,235.861 343.200 C 236.158 343.200,236.400 343.014,236.400 342.787 C 236.400 342.561,236.715 342.256,237.100 342.111 C 237.859 341.824,240.000 339.824,240.000 339.402 C 240.000 339.260,240.270 338.873,240.600 338.543 C 240.930 338.213,241.200 337.596,241.200 337.171 C 241.200 336.747,241.360 336.400,241.555 336.400 C 241.751 336.400,242.029 335.770,242.174 335.000 C 242.318 334.230,242.608 333.600,242.818 333.600 C 243.028 333.600,243.200 333.404,243.200 333.164 C 243.200 332.685,246.652 329.200,247.126 329.200 C 247.538 329.200,248.800 327.679,248.800 327.183 C 248.800 326.958,249.070 326.671,249.400 326.545 C 249.730 326.418,250.000 325.993,250.000 325.600 C 250.000 325.207,250.270 324.782,250.600 324.655 C 250.930 324.529,251.200 324.149,251.200 323.813 C 251.200 323.476,251.366 323.200,251.568 323.200 C 251.771 323.200,252.055 322.660,252.200 322.000 C 252.345 321.340,252.609 320.800,252.787 320.800 C 252.965 320.800,253.229 320.170,253.374 319.400 C 253.518 318.630,253.808 318.000,254.018 318.000 C 254.228 318.000,254.400 317.730,254.400 317.400 C 254.400 317.070,254.580 316.800,254.800 316.800 C 255.020 316.800,255.200 316.530,255.200 316.200 C 255.200 315.870,255.470 315.600,255.800 315.600 C 256.130 315.600,256.400 315.780,256.400 316.000 C 256.400 316.220,256.607 316.400,256.860 316.400 C 257.428 316.400,260.000 319.004,260.000 319.580 C 260.000 319.811,260.180 320.000,260.400 320.000 C 260.620 320.000,260.800 320.270,260.800 320.600 C 260.800 320.930,261.043 321.200,261.340 321.200 C 261.736 321.200,261.950 320.210,262.143 317.500 C 262.287 315.465,262.574 313.743,262.781 313.674 C 262.988 313.605,263.280 312.300,263.430 310.774 C 263.580 309.248,263.860 308.000,264.052 308.000 C 264.243 308.000,264.400 307.370,264.400 306.600 C 264.400 305.109,265.317 303.871,266.761 303.413 C 267.222 303.266,267.600 302.978,267.600 302.773 C 267.600 302.568,267.876 302.400,268.213 302.400 C 268.549 302.400,268.942 302.085,269.085 301.700 C 269.228 301.315,269.681 300.701,270.091 300.336 C 270.502 299.971,270.943 299.026,271.072 298.236 C 271.200 297.446,271.438 296.800,271.601 296.800 C 271.764 296.800,272.010 296.100,272.147 295.244 C 272.283 294.388,272.667 293.583,272.998 293.456 C 273.329 293.329,273.600 292.949,273.600 292.613 C 273.600 292.276,273.780 292.000,274.000 292.000 C 274.220 292.000,274.400 291.807,274.400 291.571 C 274.400 291.121,275.379 290.000,275.772 290.000 C 276.198 290.000,279.200 286.707,279.200 286.240 C 279.200 285.985,279.560 285.517,280.000 285.200 C 280.440 284.883,280.800 284.387,280.800 284.099 C 280.800 283.811,281.059 283.476,281.376 283.354 C 281.692 283.233,282.066 282.608,282.207 281.967 C 282.348 281.325,282.613 280.800,282.797 280.800 C 282.980 280.800,283.251 280.080,283.400 279.200 C 283.549 278.320,283.834 277.600,284.035 277.600 C 284.236 277.600,284.400 277.242,284.400 276.805 C 284.400 275.870,285.555 274.400,286.289 274.400 C 286.570 274.400,286.800 274.220,286.800 274.000 C 286.800 273.780,287.040 273.600,287.333 273.600 C 288.125 273.600,291.200 270.627,291.200 269.861 C 291.200 269.498,291.369 269.200,291.575 269.200 C 291.782 269.200,292.072 268.390,292.221 267.400 C 292.369 266.410,292.631 265.600,292.802 265.600 C 292.973 265.600,293.226 265.150,293.364 264.600 C 293.502 264.050,293.792 263.600,294.008 263.600 C 294.223 263.600,294.400 263.333,294.400 263.008 C 294.400 262.682,294.850 262.302,295.400 262.164 C 295.950 262.026,296.400 261.753,296.400 261.557 C 296.400 261.360,296.596 261.200,296.836 261.200 C 297.753 261.200,300.866 257.501,301.086 256.151 C 301.206 255.408,301.461 254.800,301.652 254.800 C 301.844 254.800,302.000 254.524,302.000 254.187 C 302.000 253.851,302.259 253.476,302.576 253.354 C 302.892 253.233,303.266 252.608,303.407 251.967 C 303.548 251.325,303.817 250.800,304.005 250.800 C 304.193 250.800,304.465 250.426,304.610 249.970 C 304.754 249.513,306.173 247.839,307.763 246.250 C 309.353 244.660,310.770 243.054,310.914 242.680 C 311.057 242.306,311.346 242.000,311.556 242.000 C 311.765 242.000,312.063 241.415,312.218 240.700 C 312.374 239.985,312.663 239.296,312.861 239.170 C 313.059 239.043,313.331 238.008,313.466 236.870 C 313.601 235.731,313.866 234.800,314.056 234.800 C 314.245 234.800,314.400 234.632,314.400 234.427 C 314.400 234.222,315.480 232.965,316.800 231.632 C 318.120 230.300,319.200 228.938,319.200 228.605 C 319.200 228.272,319.380 228.000,319.600 228.000 C 319.820 228.000,320.000 227.730,320.000 227.400 C 320.000 227.070,320.180 226.800,320.400 226.800 C 320.620 226.800,320.800 226.260,320.800 225.600 C 320.800 224.940,320.620 224.400,320.400 224.400 C 320.180 224.400,320.000 224.206,320.000 223.968 C 320.000 223.406,316.594 220.000,316.032 220.000 C 315.794 220.000,315.600 219.820,315.600 219.600 C 315.600 219.380,315.339 219.200,315.019 219.200 C 314.700 219.200,313.827 218.570,313.079 217.800 C 312.331 217.030,311.590 216.400,311.431 216.400 C 311.077 216.400,310.000 215.351,310.000 215.006 C 310.000 214.459,306.068 210.800,305.480 210.800 C 305.136 210.800,304.744 210.453,304.609 210.028 C 304.471 209.595,303.845 209.142,303.182 208.996 C 302.532 208.853,302.000 208.574,302.000 208.376 C 302.000 208.178,301.550 207.902,301.000 207.764 C 300.450 207.626,300.000 207.373,300.000 207.202 C 300.000 207.031,299.190 206.769,298.200 206.621 C 297.210 206.472,296.400 206.182,296.400 205.975 C 296.400 205.769,296.212 205.600,295.983 205.600 C 295.505 205.600,294.900 205.127,293.041 203.300 C 292.314 202.585,291.512 202.000,291.260 202.000 C 291.007 202.000,290.800 201.840,290.800 201.645 C 290.800 201.449,290.170 201.171,289.400 201.026 C 288.630 200.882,288.000 200.592,288.000 200.382 C 288.000 200.172,287.475 200.000,286.833 200.000 C 286.192 200.000,285.576 199.775,285.465 199.500 C 285.304 199.100,285.257 199.100,285.232 199.500 \\\"\\r\\n              stroke=\\\"none\\\"\\r\\n              fill=\\\"#e1e471\\\"\\r\\n              fill-rule=\\\"evenodd\\\"\\r\\n            ></path>\\r\\n          </g>\\r\\n        </svg>\\r\\n        Right Invoices</span\\r\\n      >\\r\\n    </div>\\r\\n  </div>\\r\\n  <div style=\\\"margin-bottom:5px\\\"></div>\\r\\n  <hr />\\r\\n  <div style=\\\"margin-bottom:5px\\\"></div>\\r\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n    <div\\r\\n      fxFlex=\\\"100\\\"\\r\\n      fxFlex.md=\\\"100\\\"\\r\\n      fxFlex.lg=\\\"100\\\"\\r\\n      fxFlex.xs=\\\"100\\\"\\r\\n      fxFlex.sm=\\\"100\\\"\\r\\n    >\\r\\n      <p\\r\\n        style=\\\"font-family: arial,sans-serif;font-size: 12px;text-align: center;\\\"\\r\\n      >\\r\\n        <span>{{ companyInfo.name }},</span>\\r\\n        <span>{{ companyInfo.address.city }},</span>\\r\\n        <span>Street No : {{ companyInfo.address.street }},</span>\\r\\n        <span>{{ companyInfo.address.city }},</span>\\r\\n        <span>\\r\\n          {{ companyInfo.address.state }} -\\r\\n          {{ companyInfo.address.zipCode }}</span\\r\\n        >\\r\\n      </p>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <!-- <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n      <div\\r\\n        fxFlex=\\\"50\\\"\\r\\n        fxFlex.md=\\\"50\\\"\\r\\n        fxFlex.lg=\\\"50\\\"\\r\\n        fxFlex.xs=\\\"100\\\"\\r\\n        fxFlex.sm=\\\"100\\\"\\r\\n      >\\r\\n        <h4 style=\\\"font-weight: 600;padding-top:15px\\\">Payment Received From</h4>\\r\\n        <hr />\\r\\n        <h4 class=\\\"customerDetails\\\">{{ dataSource.customer.businessName }}</h4>\\r\\n        <h4 class=\\\"customerDetails\\\">\\r\\n          {{ dataSource.customer.address.lane }}\\r\\n          {{ dataSource.customer.address.street }}\\r\\n        </h4>\\r\\n        <h4 class=\\\"customerDetails\\\">\\r\\n          {{ dataSource.customer.address.area }}\\r\\n        </h4>\\r\\n        <h4 class=\\\"customerDetails\\\">\\r\\n          {{ dataSource.customer.address.city }}\\r\\n        </h4>\\r\\n        <h4 class=\\\"customerDetails\\\">\\r\\n          {{ dataSource.customer.address.state }} -\\r\\n          {{ dataSource.customer.address.zipCode }}\\r\\n        </h4>\\r\\n      </div>\\r\\n      <div\\r\\n        fxFlex=\\\"50\\\"\\r\\n        fxFlex.md=\\\"50\\\"\\r\\n        fxFlex.lg=\\\"50\\\"\\r\\n        fxFlex.xs=\\\"100\\\"\\r\\n        fxFlex.sm=\\\"100\\\"\\r\\n      >\\r\\n        <h4 style=\\\"font-weight: 600;padding-top:15px\\\">\\r\\n          Attention:\\r\\n        </h4>\\r\\n        <hr />\\r\\n        <h4 class=\\\"customerDetails\\\">Phone: {{ dataSource.customer.mobile }}</h4>\\r\\n        <h4 class=\\\"customerDetails\\\">Email: {{ dataSource.customer.email }}</h4>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div style=\\\"padding-bottom:20px\\\"></div>\\r\\n\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n     \\r\\n      <table>\\r\\n        <tr>\\r\\n          <th>ITEM NAME</th>\\r\\n          <th>QTY</th>\\r\\n          <th>RATE</th>\\r\\n          <th>TOTAL</th>\\r\\n        </tr>\\r\\n        <tr *ngFor=\\\"let row of stockItemDataSource\\\">\\r\\n          <td>{{ row.stockItem.productName }}</td>\\r\\n          <td class=\\\"td\\\">{{ row.qty }}</td>\\r\\n          <td class=\\\"td\\\">{{ row.rate }}</td>\\r\\n          <td class=\\\"td\\\">{{ row.itemTotal }}</td>\\r\\n        </tr>\\r\\n      </table>\\r\\n    </div>\\r\\n    <div style=\\\"padding-bottom:20px\\\"></div>\\r\\n\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start end\\\">\\r\\n      <div\\r\\n        flex-offset=\\\"50\\\"\\r\\n        fxFlex=\\\"42\\\"\\r\\n        fxFlex.md=\\\"42\\\"\\r\\n        fxFlex.lg=\\\"42\\\"\\r\\n        fxFlex.xs=\\\"100\\\"\\r\\n        fxFlex.sm=\\\"100\\\"\\r\\n      >\\r\\n       \\r\\n        <div fxLayout=\\\"row\\\">\\r\\n          <div\\r\\n            fxFlex=\\\"50\\\"\\r\\n            fxFlex.md=\\\"50\\\"\\r\\n            fxFlex.lg=\\\"50\\\"\\r\\n            fxFlex.xs=\\\"100\\\"\\r\\n            fxFlex.sm=\\\"100\\\"\\r\\n          >\\r\\n            <h4 class=\\\"head4\\\">Amount</h4>\\r\\n          </div>\\r\\n          <div\\r\\n            fxFlex=\\\"50\\\"\\r\\n            fxFlex.md=\\\"50\\\"\\r\\n            fxFlex.lg=\\\"50\\\"\\r\\n            fxFlex.xs=\\\"100\\\"\\r\\n            fxFlex.sm=\\\"100\\\"\\r\\n          >\\r\\n            <input\\r\\n              mdInput\\r\\n              type=\\\"number\\\"\\r\\n              class=\\\"input2\\\"\\r\\n              [ngModel]=\\\"dataSource.totalAmount\\\"\\r\\n              [ngModelOptions]=\\\"{ standalone: true }\\\"\\r\\n              readonly\\r\\n            />\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n      <div\\r\\n        fxFlex=\\\"100\\\"\\r\\n        fxFlex.md=\\\"100\\\"\\r\\n        fxFlex.lg=\\\"100\\\"\\r\\n        fxFlex.xs=\\\"100\\\"\\r\\n        fxFlex.sm=\\\"100\\\"\\r\\n      >\\r\\n        <input type=\\\"text\\\" class=\\\"input\\\" />\\r\\n        <h4 class=\\\"head2\\\">Authorized Signature</h4>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n      <div\\r\\n        fxFlex=\\\"100\\\"\\r\\n        fxFlex.md=\\\"100\\\"\\r\\n        fxFlex.lg=\\\"100\\\"\\r\\n        fxFlex.xs=\\\"100\\\"\\r\\n        fxFlex.sm=\\\"100\\\"\\r\\n      >\\r\\n        <h4 style=\\\"padding-bottom:20px\\\">Notes:</h4>\\r\\n        <p style=\\\"padding-bottom:15px\\\">\\r\\n          1. All disputes are subject to Hyderabad jurisdiction only.\\r\\n        </p>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n      <div\\r\\n        fxFlex=\\\"50\\\"\\r\\n        fxFlex.md=\\\"100\\\"\\r\\n        fxFlex.lg=\\\"100\\\"\\r\\n        fxFlex.xs=\\\"100\\\"\\r\\n        fxFlex.sm=\\\"100\\\"\\r\\n      >\\r\\n        <h4 class=\\\"head5\\\">Thank you for your business</h4>\\r\\n      </div>\\r\\n      <div\\r\\n        fxFlex=\\\"50\\\"\\r\\n        fxFlex.md=\\\"100\\\"\\r\\n        fxFlex.lg=\\\"100\\\"\\r\\n        fxFlex.xs=\\\"100\\\"\\r\\n        fxFlex.sm=\\\"100\\\"\\r\\n      >\\r\\n        <h4 class=\\\"head6\\\">Powered by Right Invoices</h4>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n      <div\\r\\n        fxFlex=\\\"100\\\"\\r\\n        fxFlex.md=\\\"100\\\"\\r\\n        fxFlex.lg=\\\"100\\\"\\r\\n        fxFlex.xs=\\\"100\\\"\\r\\n        fxFlex.sm=\\\"100\\\"\\r\\n      >\\r\\n        <p style=\\\"text-align:center\\\">\\r\\n          Perennial Code Pvt. Ltd, Street No: 7, HYDERABAD, Telangana - 500090\\r\\n        </p>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>  -->\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/crdn/crdn-search/crdn-dialog-content.component.html\n// module id = ../../../../../src/app/components/admin/crdn/crdn-search/crdn-dialog-content.component.html\n// module chunks = 1","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/crdn/crdn-search/crdn-dialog-content.component.scss\n// module id = ../../../../../src/app/components/admin/crdn/crdn-search/crdn-dialog-content.component.scss\n// module chunks = 1","import { Component, Inject } from \"@angular/core\";\r\nimport { MdDialogRef, MD_DIALOG_DATA } from \"@angular/material\";\r\nimport { RestService } from \"../../../../common/rest.service\";\r\nimport { AppService } from \"../../../../shared/service/app.service\";\r\nimport { Storage } from \"../../../../shared/utils/storage\";\r\n\r\n@Component({\r\n  selector: \"app-crdn-dialog-content.component.html\",\r\n  templateUrl: \"./crdn-dialog-content.component.html\",\r\n  styleUrls: [\"./crdn-dialog-content.component.scss\"]\r\n})\r\nexport class CrdnDialogContentComponent {\r\n  id: any;\r\n  sales: any;\r\n  dataSource: any;\r\n  companyInfo: any;\r\n  stockItemDataSource: any[] = [];\r\n  servicesDataSource: any;\r\n  selectedItem: any;\r\n  constructor(\r\n    private restService: RestService,\r\n    private appService: AppService,\r\n    public dialogRef: MdDialogRef<CrdnDialogContentComponent>,\r\n    @Inject(MD_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.companyInfo = Storage.getSessionUser().company;\r\n    console.log(\"this.companyInfo\", this.companyInfo);\r\n    this.dataSource = Storage.getLocalItem(\"selectedItem\");\r\n    console.log(this.dataSource);\r\n    this.getCrdnList();\r\n    this.stockItemDataSource = this.dataSource.productId;\r\n    console.log(\" this.stockItemDataSource \", this.stockItemDataSource);\r\n  }\r\n\r\n  getCrdnList() {\r\n    this.dataSource = Storage.getLocalItem(\"selectedItem\");\r\n    console.log(\"Payments data\", this.dataSource);\r\n  }\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  ok() {\r\n    this.restService.invoiceDelete(this.id).subscribe(result => {\r\n      this.dialogRef.close();\r\n      this.appService.showMessage(\"Invoice Deleted Successfully \");\r\n    });\r\n  }\r\n\r\n  print(cmpName) {\r\n    const printContent = document.getElementById(\"component1\");\r\n    const WindowPrt = window.open(\r\n      \"\",\r\n      \"\",\r\n      \"left=0,top=0,width=900,height=900,toolbar=0,scrollbars=0,status=0\"\r\n    );\r\n    WindowPrt.document.write(printContent.innerHTML);\r\n    WindowPrt.document.close();\r\n    WindowPrt.focus();\r\n    WindowPrt.print();\r\n    WindowPrt.close();\r\n  }\r\n\r\n  cancel() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/crdn/crdn-search/crdn-dialog-content.component.ts","module.exports = \"<div id=\\\"page-header\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n  <h2>CRDN Management</h2>\\r\\n</div>\\r\\n\\r\\n<aside id=\\\"page-content\\\" style=\\\"overflow:auto; margin-bottom: 50px\\\">\\r\\n  <div class=\\\"padding-side\\\" style=\\\"margin: 20px 0px;\\\">\\r\\n    <md-toolbar color=\\\"primary\\\">\\r\\n      <md-input-container class=\\\"padding-side\\\">\\r\\n        <input\\r\\n          mdInput\\r\\n          placeholder=\\\"CRDN No\\\"\\r\\n          [(ngModel)]=\\\"searchObj.crdnNumber\\\"\\r\\n          [formControl]=\\\"searchField\\\"\\r\\n          (keyup)=\\\"callDataSourceFilter()\\\"\\r\\n        />\\r\\n      </md-input-container>\\r\\n      <md-input-container class=\\\"padding-side\\\">\\r\\n        <input\\r\\n          mdInput\\r\\n          placeholder=\\\"Receiver Name\\\"\\r\\n          [(ngModel)]=\\\"searchObj.receiverName\\\"\\r\\n          (keyup)=\\\"callDataSource()\\\"\\r\\n        />\\r\\n      </md-input-container>\\r\\n      <div class=\\\"padding-side\\\">\\r\\n        <md-select\\r\\n          placeholder=\\\"Type\\\"\\r\\n          [(ngModel)]=\\\"searchObj.crdnType\\\"\\r\\n          (change)=\\\"callDataSource()\\\"\\r\\n        >\\r\\n          <md-option [value]=\\\"null\\\">All</md-option>\\r\\n          <md-option *ngFor=\\\"let type of documentTypes\\\" [value]=\\\"type.value\\\">\\r\\n            {{ type.name }}\\r\\n          </md-option>\\r\\n        </md-select>\\r\\n      </div>\\r\\n    </md-toolbar>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row center-xs padding\\\">\\r\\n    <md-card class=\\\"col-xs-12 \\\">\\r\\n      <md-card-content class=\\\"start-xs\\\">\\r\\n        <md-table\\r\\n          #table\\r\\n          [dataSource]=\\\"dataSource\\\"\\r\\n          mdSort\\r\\n          style=\\\"height: 500px; overflow-y: auto\\\"\\r\\n        >\\r\\n          <ng-container cdkColumnDef=\\\"crdnNumber\\\">\\r\\n            <md-header-cell\\r\\n              *cdkHeaderCellDef\\r\\n              md-sort-header\\r\\n              style=\\\"position: sticky; top: 0\\\"\\r\\n            >\\r\\n              CRDN No\\r\\n            </md-header-cell>\\r\\n            <md-cell *cdkCellDef=\\\"let row\\\" (click)=\\\"viewCRDN(row)\\\">\\r\\n              {{ row.crdnNumber }}\\r\\n            </md-cell>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container cdkColumnDef=\\\"documentType\\\">\\r\\n            <md-header-cell\\r\\n              *cdkHeaderCellDef\\r\\n              md-sort-header\\r\\n              style=\\\"position: sticky; top:0\\\"\\r\\n            >\\r\\n              Document Type\\r\\n            </md-header-cell>\\r\\n            <md-cell *cdkCellDef=\\\"let row\\\" (click)=\\\"viewCRDN(row)\\\">\\r\\n              {{ getDocTypeDescription(row.documentType) }}\\r\\n            </md-cell>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container cdkColumnDef=\\\"receiverName\\\">\\r\\n            <md-header-cell\\r\\n              *cdkHeaderCellDef\\r\\n              md-sort-header\\r\\n              style=\\\"position: sticky; top:0\\\"\\r\\n            >\\r\\n              Receiver Name\\r\\n            </md-header-cell>\\r\\n            <md-cell *cdkCellDef=\\\"let row\\\" (click)=\\\"viewCRDN(row)\\\">\\r\\n              {{ row.receiverName }}\\r\\n            </md-cell>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container cdkColumnDef=\\\"refundVoucherValue\\\">\\r\\n            <md-header-cell\\r\\n              *cdkHeaderCellDef\\r\\n              md-sort-header\\r\\n              style=\\\"position: sticky; top:0\\\"\\r\\n            >\\r\\n              Refund Value\\r\\n            </md-header-cell>\\r\\n            <md-cell *cdkCellDef=\\\"let row\\\" (click)=\\\"viewCRDN(row)\\\">\\r\\n              {{ row.refundVoucherValue }}\\r\\n            </md-cell>\\r\\n          </ng-container>\\r\\n          <ng-container cdkColumnDef=\\\"action\\\">\\r\\n            <md-header-cell\\r\\n              *cdkHeaderCellDef\\r\\n              fxLayoutAlign=\\\"end center\\\"\\r\\n              style=\\\"position: sticky; top: 0\\\"\\r\\n              >Action</md-header-cell\\r\\n            >\\r\\n            <md-cell\\r\\n              *cdkCellDef=\\\"let row\\\"\\r\\n              (click)=\\\"selectItem(row)\\\"\\r\\n              fxLayoutAlign=\\\"end center\\\"\\r\\n            >\\r\\n              <md-icon color=\\\"accent\\\" [mdMenuTriggerFor]=\\\"sendMenu\\\"\\r\\n                >more_vert</md-icon\\r\\n              >\\r\\n            </md-cell>\\r\\n          </ng-container>\\r\\n\\r\\n          <md-header-row *cdkHeaderRowDef=\\\"displayedColumns\\\"></md-header-row>\\r\\n          <md-row *cdkRowDef=\\\"let row; columns: displayedColumns\\\"></md-row>\\r\\n        </md-table>\\r\\n      </md-card-content>\\r\\n    </md-card>\\r\\n    <md-paginator\\r\\n      #paginator\\r\\n      style=\\\"width: 100%;\\\"\\r\\n      [length]=\\\"dataSource.data?.length\\\"\\r\\n      [pageIndex]=\\\"0\\\"\\r\\n      [pageSize]=\\\"10\\\"\\r\\n      [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"\\r\\n    >\\r\\n    </md-paginator>\\r\\n  </div>\\r\\n  <md-menu #sendMenu=\\\"mdMenu\\\" style=\\\"padding:1rem;\\\">\\r\\n    <button md-menu-item (click)=\\\"view()\\\">View</button>\\r\\n    <button md-menu-item (click)=\\\"edit()\\\">Edit</button>\\r\\n    <button md-menu-item (click)=\\\"delete()\\\">Delete</button>\\r\\n    <button md-menu-item (click)=\\\"pop()\\\">Print</button>\\r\\n  </md-menu>\\r\\n</aside>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/crdn/crdn-search/crdn-search.component.html\n// module id = ../../../../../src/app/components/admin/crdn/crdn-search/crdn-search.component.html\n// module chunks = 1","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/crdn/crdn-search/crdn-search.component.scss\n// module id = ../../../../../src/app/components/admin/crdn/crdn-search/crdn-search.component.scss\n// module chunks = 1","import { CRDNDeleteDialog } from \"./crdn-delete-dialog.component\";\r\nimport { DialogContentExampleDialogCustomer } from \"./../../custommangement/DialogContentExampleDialogCustomer\";\r\nimport { MdSort, MdPaginator, MdDialog } from \"@angular/material\";\r\nimport { Component, OnInit, ViewChild, AfterViewInit } from \"@angular/core\";\r\n\r\nimport { RestService } from \"app/common/rest.service\";\r\nimport { AppService } from \"app/shared/service/app.service\";\r\nimport { CRDNDataSource } from \"./crdn-search.datasource\";\r\nimport { analyzeAndValidateNgModules } from \"@angular/compiler\";\r\nimport { CRDNFormGroup } from \"app/forms/crdn.form\";\r\nimport { FormBuilder, FormGroup, FormControl } from \"@angular/forms\";\r\nimport { Storage } from \"../../../../shared/utils/storage\";\r\nimport { CrdnDialogContentComponent } from \"./crdn-dialog-content.component\";\r\n\r\n@Component({\r\n  selector: \"app-crdn-search\",\r\n  templateUrl: \"./crdn-search.component.html\",\r\n  styleUrls: [\"./crdn-search.component.scss\"]\r\n})\r\nexport class CrdnSearchComponent implements OnInit {\r\n  crdnFrom: FormGroup;\r\n  searchObj: any = {};\r\n  documentTypes: any[] = [];\r\n  selectedItemForView: any = null;\r\n  selectedItem: any = null;\r\n  searchField: FormControl;\r\n\r\n  @ViewChild(MdSort) sort: MdSort;\r\n  @ViewChild(MdPaginator) paginator: MdPaginator;\r\n  dataSource: CRDNDataSource = null;\r\n  displayedColumns: any[] = [\r\n    \"crdnNumber\",\r\n    \"documentType\",\r\n    \"receiverName\",\r\n    \"refundVoucherValue\",\r\n    \"action\"\r\n  ];\r\n  constructor(\r\n    private appService: AppService,\r\n    private restService: RestService,\r\n    public dialog: MdDialog\r\n  ) {\r\n    // this.crdnFrom = new FormBuilder().group({\r\n    //   \"crdnNumber\": this.searchObj.crdnNumber\r\n    //   });\r\n    //   this.crdnFrom.valueChanges\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.searchField = new FormControl();\r\n    this.documentTypes = this.appService.getcrdnDocTypes();\r\n    this.searchObj.crdnType = null;\r\n    this.searchObj.crdnNumber = null;\r\n    this.callDataSource();\r\n  }\r\n\r\n  callDataSourceFilter() {\r\n    console.log(\"executing crdn filter\");\r\n    //   this.dataSource.setSearchObj(this.se)\r\n  }\r\n  callDataSource() {\r\n    this.dataSource = new CRDNDataSource(\r\n      this.restService,\r\n      this.searchObj,\r\n      this.sort,\r\n      this.paginator,\r\n      this.searchField\r\n    );\r\n    // this.dataSource.getDataList();\r\n  }\r\n\r\n  selectItem(item: any) {\r\n    this.selectedItem = item;\r\n  }\r\n\r\n  viewCRDN(row) {\r\n    this.selectedItemForView = row;\r\n    this.appService.navigate(\"./admin/crdn-edit\", [\r\n      { id: this.selectedItemForView.id, isEditable: false }\r\n    ]);\r\n    console.log(row);\r\n    console.log(this.searchObj);\r\n    // if (this.searchObj.type == \"Inventory\") {\r\n    //   this.appService.navigate(\"./admin/inventory-edit\", [\r\n    //     { id: this.selectedItemForView.id, isEditable: false }\r\n    //   ]);\r\n    // } else if (this.searchObj.type == \"NonInventory\") {\r\n    //   this.appService.navigate(\"./admin/noninventory-edit\", [\r\n    //     { id: this.selectedItemForView.id, isEditable: false }\r\n    //   ]);\r\n    // } else {\r\n    //   this.appService.navigate(\"./admin/service-edit\", [\r\n    //     { id: this.selectedItemForView.id, isEditable: false }\r\n    //   ]);\r\n    // }\r\n  }\r\n\r\n  getDocTypeDescription(val: string) {\r\n    let docType = this.documentTypes.filter(\r\n      s => s.value.toLowerCase() == val.toLowerCase()\r\n    );\r\n    if (docType && docType[0]) return docType[0].name;\r\n    else return \"\";\r\n  }\r\n\r\n  openDialog(id) {\r\n    const dialogRef = this.dialog.open(CRDNDeleteDialog, {\r\n      width: \"500px\",\r\n      height: \"250px\",\r\n      data: this.selectedItem.id\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.clearAll();\r\n    });\r\n  }\r\n\r\n  pop() {\r\n    Storage.setLocalItem(\"selectedItem\", this.selectedItem);\r\n    setTimeout(() => {\r\n      this.opens(null);\r\n    }, 10);\r\n  }\r\n  opens(id) {\r\n    // let pageLayoutId : string = Storage.getLocalItem('pageLayoutId');\r\n    let companyInfo = Storage.getSessionUser();\r\n\r\n    let pageLayoutId = companyInfo.company.settingPayload.printLayoutId;\r\n    if (parseInt(pageLayoutId) == 1) {\r\n      const dialogRef = this.dialog.open(CrdnDialogContentComponent, {\r\n        width: \"600px\",\r\n        data: id\r\n      });\r\n    }\r\n  }\r\n\r\n  public clearAll() {\r\n    this.searchObj = {};\r\n    this.dataSource = new CRDNDataSource(\r\n      this.restService,\r\n      {},\r\n      this.sort,\r\n      this.paginator,\r\n      this.searchField\r\n    );\r\n  }\r\n\r\n  view() {\r\n    this.appService.navigate(\"./admin/crdn-edit\", [\r\n      { id: this.selectedItem.id, isEditable: false }\r\n    ]);\r\n  }\r\n\r\n  edit() {\r\n    this.appService.navigate(\"./admin/crdn-edit\", [\r\n      { id: this.selectedItem.id, isEditable: true }\r\n    ]);\r\n  }\r\n\r\n  delete() {\r\n    this.openDialog({ id: this.selectedItem.id });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/crdn/crdn-search/crdn-search.component.ts","import { Component, OnInit, Output, EventEmitter } from \"@angular/core\";\r\nimport { DataSource } from \"@angular/cdk\";\r\nimport { AppService } from \"../../../../shared/service/app.service\";\r\nimport { AnimationService } from \"../../../../shared/service/animation.service\";\r\nimport { RestService } from \"../../../../common/rest.service\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport \"rxjs/add/operator/startWith\";\r\nimport \"rxjs/add/observable/merge\";\r\nimport \"rxjs/add/operator/map\";\r\nimport { MdSort, MdPaginator } from \"@angular/material\";\r\nimport { FormBuilder, FormGroup, FormControl } from \"@angular/forms\";\r\n\r\nexport class CRDNDataSource extends DataSource<any> {\r\n  private data: any[] = null;\r\n  private originaldata: any[] = [];\r\n\r\n  constructor(\r\n    private restService: RestService,\r\n    private searchObj: any,\r\n    private sort: MdSort,\r\n    private paginator: MdPaginator,\r\n    private crnForm: FormControl\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  // filterFunction() : Observable<string> {\r\n  //   return new Observable(observer);\r\n  // }\r\n\r\n  getDataList() {\r\n    //  console.log(this.searchObj);\r\n    this.restService.showLoader(true);\r\n    this.restService.searchCRDNList(this.searchObj).subscribe(results => {\r\n      if (results) {\r\n        this.data = results;\r\n        this.originaldata = results;\r\n        this.restService.showLoader(false);\r\n        console.log(this.data);\r\n      }\r\n    });\r\n  }\r\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\r\n  connected: boolean = false;\r\n  connect(): any {\r\n    const displayDataChanges = [\r\n      this.restService.searchCRDNList(this.searchObj),\r\n      this.sort.mdSortChange,\r\n      this.paginator.page,\r\n      this.crnForm.valueChanges\r\n    ];\r\n    this.connected = true;\r\n    console.log(\"im in connect yay !! \");\r\n\r\n    return Observable.merge(...displayDataChanges).map(results => {\r\n      if (this.data == null) {\r\n        this.data = results;\r\n        this.originaldata = results;\r\n      }\r\n      //return this.getSortedData();\r\n      //const myData = this.data.slice();\r\n      if (this.searchObj.crdnNumber != null) {\r\n        if (this.searchObj.crdnNumber.length == 0) {\r\n          this.data = this.originaldata;\r\n        } else {\r\n          let dataf = this.originaldata.filter(item => {\r\n            console.log(\"item is\", item);\r\n            console.log(\"item.crdnNumber\", item.crdnNumber);\r\n            console.log(\r\n              \"compare\",\r\n              item.crdnNumber.includes(this.searchObj.crdnNumber)\r\n            );\r\n            return item.crdnNumber.includes(this.searchObj.crdnNumber);\r\n          });\r\n          //console.log('after filter ', dataf)\r\n          this.data = dataf;\r\n          console.log(\"data is now \", this.data);\r\n        }\r\n      }\r\n      let myData = this.getSortedData();\r\n      // Grab the page's slice of data.\r\n      const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n      // new code\r\n\r\n      // end new code\r\n      return myData.splice(startIndex, this.paginator.pageSize);\r\n    });\r\n    // return Promise.resolve([])\r\n  }\r\n\r\n  disconnect() {}\r\n\r\n  getSortedData(): any[] {\r\n    const data = this.data.slice();\r\n    if (this.sort.active && this.sort.direction == \"\") {\r\n      return data;\r\n    }\r\n\r\n    return data.sort((a, b) => {\r\n      let propertyA: number | string | Date = \"\";\r\n      let propertyB: number | string | Date = \"\";\r\n      switch (this.sort.active) {\r\n        case \"crdnNumber\":\r\n          [propertyA, propertyB] = [a.crdnNumber, b.crdnNumber];\r\n          break;\r\n        case \"documentType\":\r\n          [propertyA, propertyB] = [a.documentType, b.documentType];\r\n          break;\r\n        case \"receiverName\":\r\n          [propertyA, propertyB] = [a.receiverName, b.receiverName];\r\n          break;\r\n        case \"refundVoucherValue\":\r\n          [propertyA, propertyB] = [a.refundVoucherValue, b.refundVoucherValue];\r\n      }\r\n      let valueA = isNaN(+propertyA) ? propertyA : +propertyA;\r\n      let valueB = isNaN(+propertyB) ? propertyB : +propertyB;\r\n\r\n      return (\r\n        (valueA < valueB ? -1 : 1) * (this.sort.direction == \"asc\" ? 1 : -1)\r\n      );\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/crdn/crdn-search/crdn-search.datasource.ts","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <h1>CREDIT NOTE</h1>\\r\\n      <div class=\\\"color\\\"></div>\\r\\n      <div class=\\\"color1\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-2\\\">\\r\\n            <img src=\\\"assets/img/icons8-azure-48.png\\\" />\\r\\n          </div>\\r\\n          <div class=\\\"col-md-6\\\">\\r\\n            <h3>Perennial Code Pvt. Ltd</h3>\\r\\n            <p>GSTIN: 29ABDCF1235A2Z5</p>\\r\\n            <p>PAN: ABDCF1235A</p>\\r\\n            <p>PHONE: 9856453432</p>\\r\\n            <p>EMAIL: info@perennialcode.com</p>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-4\\\">\\r\\n            <h4 class=\\\"head\\\">DATE: 7th July 2019</h4>\\r\\n            <hr />\\r\\n            <h4 class=\\\"head\\\">CREDIT NOTE NO. CR000021</h4>\\r\\n            <hr />\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-5\\\">\\r\\n          <h4 class=\\\"head\\\">Goods Returned From</h4>\\r\\n          <hr />\\r\\n          <h4 class=\\\"head1\\\">R & J Traders</h4>\\r\\n          <h4 class=\\\"head1\\\">34, Riche Street</h4>\\r\\n          <h4 class=\\\"head1\\\">Chennai</h4>\\r\\n          <h4 class=\\\"head1\\\">Tamil Nadu - 631603</h4>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-7\\\">\\r\\n          <h4 class=\\\"head\\\">Transaction Details</h4>\\r\\n          <hr />\\r\\n          <h4 class=\\\"head1\\\">Invoice No: PER/20-2100043</h4>\\r\\n          <h4 class=\\\"head\\\">Contact Details</h4>\\r\\n          <hr />\\r\\n          <h4 class=\\\"head1\\\">Phone: 9878765654</h4>\\r\\n          <h4 class=\\\"head1\\\">Email: suresh@rjtraders.com</h4>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <table>\\r\\n        <tr>\\r\\n          <th>RETURNED ITEM NAME</th>\\r\\n          <th>QTY</th>\\r\\n          <th>UNIT PRICE</th>\\r\\n          <th>TOTAL</th>\\r\\n        </tr>\\r\\n        <tr *ngFor=\\\"let item of items\\\">\\r\\n          <td>{{ item.name }}</td>\\r\\n          <td class=\\\"td\\\">{{ item.qty }}</td>\\r\\n          <td class=\\\"td\\\">{{ item.unitprice }}</td>\\r\\n          <td class=\\\"td\\\">{{ item.total }}</td>\\r\\n        </tr>\\r\\n      </table>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/crdn/credit-note/credit-note.component.html\n// module id = ../../../../../src/app/components/admin/crdn/credit-note/credit-note.component.html\n// module chunks = 1","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".color {\\n  width: 100%;\\n  background-color: #ff5100;\\n  height: 30px; }\\n\\n.color1 {\\n  width: 100%;\\n  background-color: #e3e6e9;\\n  height: auto;\\n  padding: 30px 0px; }\\n\\nimg {\\n  height: 70px;\\n  width: 70px; }\\n\\nh3 {\\n  font-size: 25px;\\n  font-weight: 400;\\n  margin-top: 20px; }\\n\\np {\\n  font-size: 15px;\\n  margin-top: 10px; }\\n\\nh1 {\\n  font-size: 45px;\\n  font-weight: 500;\\n  margin-bottom: 20px;\\n  margin-top: 20px;\\n  text-align: right;\\n  position: relative;\\n  right: 60px; }\\n\\n.head {\\n  font-size: 18px;\\n  margin-top: 30px;\\n  color: #2d4081; }\\n\\nhr {\\n  margin-top: 10px;\\n  width: 90%; }\\n\\n.head1 {\\n  font-size: 19px;\\n  font-weight: 400;\\n  margin-top: 10px; }\\n\\ntable {\\n  width: 100%;\\n  margin-top: 40px; }\\n\\nth {\\n  background-color: #ff5100;\\n  color: white;\\n  padding: 5px 0px;\\n  font-size: 18px;\\n  border: none; }\\n\\ntd {\\n  font-size: 16px;\\n  border: 1px solid black;\\n  padding: 4px; }\\n\\n.td {\\n  text-align: right; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/crdn/credit-note/credit-note.component.scss\n// module id = ../../../../../src/app/components/admin/crdn/credit-note/credit-note.component.scss\n// module chunks = 1","import { Component, OnInit } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"app-credit-note\",\r\n  templateUrl: \"./credit-note.component.html\",\r\n  styleUrls: [\"./credit-note.component.scss\"]\r\n})\r\nexport class CreditNoteComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n  items = [\r\n    {\r\n      name: \"House Brand Khobare Gota 200gm\",\r\n      qty: 17,\r\n      unitprice: 1.09,\r\n      total: 18.53\r\n    },\r\n    {\r\n      name: \"Britannia Marie Gold 400 gms\",\r\n      qty: 52,\r\n      unitprice: 47.02,\r\n      total: 2445.04\r\n    },\r\n    {\r\n      name: \"Spray Perfume Sonchapha 30ml\",\r\n      qty: 46,\r\n      unitprice: 46.02,\r\n      total: 2116.92\r\n    },\r\n    {\r\n      name: \"Flair Sporty MicroBall\",\r\n      qty: 87,\r\n      unitprice: 77.05,\r\n      total: 6703.35\r\n    },\r\n    {\r\n      name: \"House Brand Sugar Khadi Big 100gm\",\r\n      qty: 15,\r\n      unitprice: 11.08,\r\n      total: 166.2\r\n    },\r\n    {\r\n      name: \"Spray Perfume Sonchapha 30ml\",\r\n      qty: 98,\r\n      unitprice: 19,\r\n      total: 1862.0\r\n    },\r\n    {\r\n      name: \"ParamPara Chicken Kolhapuri Mix 100gm\",\r\n      qty: 1,\r\n      unitprice: 10.05,\r\n      total: 10.05\r\n    },\r\n    {\r\n      name: \"Surf Excel 200 gm\",\r\n      qty: 81,\r\n      unitprice: 34.03,\r\n      total: 2756.43\r\n    },\r\n    {\r\n      name: \"Sundrop Superlite Oil 5 lit Can\",\r\n      qty: 34,\r\n      unitprice: 87.09,\r\n      total: 2961.06\r\n    },\r\n    {\r\n      name: \"Cadbury Temptations Fig N Apricot 63 gm\",\r\n      qty: 68,\r\n      unitprice: 96,\r\n      total: 6528.0\r\n    },\r\n    {\r\n      name: \"Amul Cheese Spread 200gm\",\r\n      qty: 3,\r\n      unitprice: 56.02,\r\n      total: 168.06\r\n    },\r\n    {\r\n      name: \"Britannia Good Day Real Butter 200gms\",\r\n      qty: 27,\r\n      unitprice: 78.05,\r\n      total: 2107.35\r\n    }\r\n  ];\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/crdn/credit-note/credit-note.component.ts","module.exports = \"<aside style=\\\"max-width: 98%;\\\">\\r\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-evenly center\\\">\\r\\n    <div\\r\\n      fxLayout=\\\"row wrap\\\"\\r\\n      fxLayoutAlign=\\\"space-evenly center\\\"\\r\\n      class=\\\"padding-side\\\"\\r\\n      style=\\\"width: 100%; \\\"\\r\\n    >\\r\\n      <div flex=\\\"25\\\">\\r\\n        <span>Product</span>\\r\\n        <md-slide-toggle\\r\\n          color=\\\"primary\\\"\\r\\n          [(ngModel)]=\\\"itemSalesSelected.isProduct\\\"\\r\\n          (change)=\\\"changeProduct(false)\\\"\\r\\n          class=\\\"padding-side\\\"\\r\\n          [checked]=\\\"true\\\"\\r\\n        ></md-slide-toggle>\\r\\n      </div>\\r\\n      <div flex=\\\"25\\\">\\r\\n        <span>Service</span>\\r\\n        <md-slide-toggle\\r\\n          color=\\\"primary\\\"\\r\\n          [(ngModel)]=\\\"itemSalesSelected.isService\\\"\\r\\n          (change)=\\\"changeService(false)\\\"\\r\\n          class=\\\"padding-side\\\"\\r\\n        ></md-slide-toggle>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div fxFlex=\\\"50\\\" style=\\\"margin-bottom: 1em;\\\">\\r\\n      <button\\r\\n        md-raised-button\\r\\n        (click)=\\\"clear()\\\"\\r\\n        color=\\\"accent\\\"\\r\\n        flex=\\\"10\\\"\\r\\n        style=\\\"float: right;margin-right:5px;\\\"\\r\\n      >\\r\\n        Clear\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n</aside>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/crdn/products-servrvice-toggle/products-servrvice-toggle.component.html\n// module id = ../../../../../src/app/components/admin/crdn/products-servrvice-toggle/products-servrvice-toggle.component.html\n// module chunks = 1","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/crdn/products-servrvice-toggle/products-servrvice-toggle.component.scss\n// module id = ../../../../../src/app/components/admin/crdn/products-servrvice-toggle/products-servrvice-toggle.component.scss\n// module chunks = 1","import { Component, OnInit, Input, Output, EventEmitter } from \"@angular/core\";\r\nimport { Sales } from \"../../../../entities/sales.entity\";\r\nimport { RestService } from \"app/common/rest.service\";\r\nimport { AppService } from \"app/shared/service/app.service\";\r\nimport { Address } from \"app/entities/address.entity\";\r\nimport { CustomerPayment } from \"app/entities/customerpayment.entity\";\r\nimport { CustomerTax } from \"app/entities/customertax.entity\";\r\n\r\n@Component({\r\n  selector: \"app-products-servrvice-toggle\",\r\n  templateUrl: \"./products-servrvice-toggle.component.html\",\r\n  styleUrls: [\"./products-servrvice-toggle.component.scss\"]\r\n})\r\nexport class ProductsServrviceToggleComponent implements OnInit {\r\n  @Input() myForm: any;\r\n  @Input() itemSalesSelected: Sales;\r\n  @Input() showAddress: boolean = false;\r\n  @Output() outputProductToggle: EventEmitter<any> = new EventEmitter<any>();\r\n  @Output() outputServiceToggle: EventEmitter<any> = new EventEmitter<any>();\r\n  @Output() addProductEmitter: EventEmitter<any> = new EventEmitter<any>();\r\n  @Output() addServiceEmitter: EventEmitter<any> = new EventEmitter<any>();\r\n  @Output() changeGstEmitter: EventEmitter<any> = new EventEmitter<any>();\r\n  @Output() clearEmitter: EventEmitter<any> = new EventEmitter<any>();\r\n  @Output() addItemEmitter: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  clear() {\r\n    this.clearEmitter.emit();\r\n  }\r\n  add() {\r\n    this.addItemEmitter.emit();\r\n  }\r\n\r\n  constructor(\r\n    private restService: RestService,\r\n    private appService: AppService\r\n  ) {\r\n    // this.itemSalesSelected.isProduct = false;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.itemSalesSelected.isProduct = true;\r\n    this.itemSalesSelected.isService = false;\r\n    this.changeProduct(true);\r\n    this.changeService(true);\r\n  }\r\n  changeProduct(item: any) {\r\n    this.outputProductToggle.emit(item);\r\n    this.itemSalesSelected;\r\n  }\r\n  changeService(item: any) {\r\n    this.outputServiceToggle.emit(item);\r\n    this.itemSalesSelected;\r\n  }\r\n\r\n  addProduct(item: any) {\r\n    console.log(\"toggle add product\");\r\n    this.outputProductToggle.emit(item);\r\n  }\r\n  addService(item: any) {\r\n    this.outputServiceToggle.emit(item);\r\n  }\r\n\r\n  changeGst(isCgst: boolean) {\r\n    if (isCgst == true) {\r\n      this.itemSalesSelected.isCgst = this.itemSalesSelected.isIgst;\r\n      //this.toogleService.setgstValue(isCgst);\r\n    } else {\r\n      this.itemSalesSelected.isIgst = !this.itemSalesSelected.isCgst;\r\n      //this.toogleService.setgstValue(!isCgst);\r\n    }\r\n\r\n    this.changeGstEmitter.emit(isCgst);\r\n  }\r\n\r\n  changeIGst(isIgst: boolean) {\r\n    if (isIgst == false) {\r\n      this.itemSalesSelected.isIgst = this.itemSalesSelected.isCgst;\r\n    } else {\r\n      this.itemSalesSelected.isCgst = !this.itemSalesSelected.isIgst;\r\n    }\r\n\r\n    this.changeGstEmitter.emit(isIgst);\r\n  }\r\n\r\n  save() {\r\n    this.itemSalesSelected.status = \"DRAFTSAVE\";\r\n    this.salesData();\r\n    console.log(this.itemSalesSelected.items);\r\n    if (this.valid()) {\r\n      this.restService.saveInvoice(this.itemSalesSelected).subscribe(result => {\r\n        if (result) {\r\n          this.appService.showMessage(\r\n            \"Invoice generated successfully : \" + result.invoiceNumber\r\n          );\r\n          this.appService.navigate(\"admin/invoice-search\", []);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  valid() {\r\n    let returnVal = true;\r\n    if (\r\n      returnVal &&\r\n      (!this.itemSalesSelected.customer.mobile ||\r\n        this.itemSalesSelected.customer.mobile == \"0\" ||\r\n        !this.itemSalesSelected.customer.firstName)\r\n    ) {\r\n      returnVal = false;\r\n      this.appService.showMessage(\"please select customer name and mobile\");\r\n    }\r\n    return returnVal;\r\n  }\r\n  billing() {\r\n    this.itemSalesSelected.status = \"BILLING\";\r\n    this.salesData();\r\n    console.log(this.itemSalesSelected);\r\n    if (this.valid()) {\r\n      this.restService.saveInvoice(this.itemSalesSelected).subscribe(result => {\r\n        if (result) {\r\n          this.appService.showMessage(\r\n            \"Bill save successfully : \" + result.invoiceNumber\r\n          );\r\n          this.appService.navigate(\"admin/invoice-search\", []);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  salesData() {\r\n    let productItems = [];\r\n    let serviceItems = [];\r\n\r\n    if (this.itemSalesSelected.isProduct) {\r\n      productItems = this.itemSalesSelected.productItems.filter(item => {\r\n        if (item.stockItemId.id != null) {\r\n          item.service = null;\r\n          return item;\r\n        }\r\n      });\r\n    }\r\n    if (this.itemSalesSelected.isService) {\r\n      serviceItems = this.itemSalesSelected.serviceItems.filter(item => {\r\n        if (item.service) {\r\n          if (item.service.id != null) {\r\n            item.stockItemId.id = null;\r\n            return item;\r\n          }\r\n        }\r\n      });\r\n    }\r\n    this.itemSalesSelected.items = [...productItems, ...serviceItems];\r\n\r\n    if (\r\n      this.itemSalesSelected.items == null ||\r\n      this.itemSalesSelected.items.length == 0\r\n    ) {\r\n      this.appService.showMessage(\r\n        \"Please select atleast one product or service.\"\r\n      );\r\n    }\r\n    if (this.itemSalesSelected.customer.id == null) {\r\n      if (!this.itemSalesSelected.customer.address) {\r\n        this.itemSalesSelected.customer.address = new Address();\r\n      }\r\n      this.itemSalesSelected.customer.address.lane = this.itemSalesSelected.customer.inlineAddress;\r\n      if (this.itemSalesSelected.isBillingAddress) {\r\n        this.itemSalesSelected.customer.shippingAddress = this.itemSalesSelected.customer.address;\r\n      } else {\r\n        this.itemSalesSelected.customer.shippingAddress = this.itemSalesSelected.address;\r\n      }\r\n      this.itemSalesSelected.customer.customerPayment = new CustomerPayment();\r\n      this.itemSalesSelected.customer.customerTax = new CustomerTax();\r\n    }\r\n    this.itemSalesSelected.userId = 1; // this.appService.getSessionUser().id;\r\n    console.log(this.appService.getSessionUser());\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/crdn/products-servrvice-toggle/products-servrvice-toggle.component.ts","module.exports = \"<div class=\\\"padding-side\\\">\\r\\n  <md-card class=\\\"invoice-form-table\\\">\\r\\n    <div class=\\\"invoice-form-th\\\">\\r\\n      <md-list>\\r\\n        <md-list-item layout=\\\"row\\\" layout-wrap class=\\\"invoice-form-list-item\\\">\\r\\n          <span flex=\\\"5\\\"> S.no</span>\\r\\n          <span flex=\\\"20\\\">Product</span>\\r\\n          <span flex=\\\"10\\\">Qty</span>\\r\\n          <span flex=\\\"10\\\">Rate</span>\\r\\n          <span flex=\\\"10\\\">Discount</span>\\r\\n          <span flex=\\\"10\\\">Subtotal</span>\\r\\n          <span flex=\\\"10\\\">Tax Amount</span>\\r\\n          <span flex=\\\"10\\\">Cess</span>\\r\\n          <span flex=\\\"10\\\">Total</span>\\r\\n          <span flex=\\\"0\\\">&nbsp;</span>\\r\\n        </md-list-item>\\r\\n      </md-list>\\r\\n    </div>\\r\\n    <br />\\r\\n    <div\\r\\n      class=\\\"invoice-form-tb\\\"\\r\\n      [style.overflow]=\\\"'auto'\\\"\\r\\n      [style.height.px]=\\\"'300'\\\"\\r\\n    >\\r\\n      <md-list>\\r\\n        <ng-template\\r\\n          let-index=\\\"index\\\"\\r\\n          let-item\\r\\n          let-last=\\\"last\\\"\\r\\n          ngFor\\r\\n          [ngForOf]=\\\"itemSalesSelected.items\\\"\\r\\n        >\\r\\n          <md-list-item\\r\\n            layout=\\\"row\\\"\\r\\n            layout-wrap\\r\\n            (click)=\\\"selectLineItem(item, index)\\\"\\r\\n            *ngIf=\\\"item.stockItemId\\\"\\r\\n          >\\r\\n            <span flex=\\\"5\\\"> {{ index + 1 }}</span>\\r\\n            <span flex=\\\"20\\\">\\r\\n              <md-input-container style=\\\"margin-top: -4px !important;\\\">\\r\\n                <input\\r\\n                  mdInput\\r\\n                  placeholder=\\\"Choose Stock Item\\\"\\r\\n                  [(ngModel)]=\\\"item.stockItemId.productName\\\"\\r\\n                  (focus)=\\\"filterStockItems($event.target.values)\\\"\\r\\n                  (keyup)=\\\"filterStockItems($event.target.value)\\\"\\r\\n                  [mdAutocomplete]=\\\"autoStockItems\\\"\\r\\n                  [readOnly]=\\\"isEditable == 'false'\\\"\\r\\n                  [ngModelOptions]=\\\"{ standalone: true }\\\"\\r\\n                />\\r\\n                <md-autocomplete #autoStockItems=\\\"mdAutocomplete\\\">\\r\\n                  <md-option\\r\\n                    *ngFor=\\\"\\r\\n                      let fitem of filteredStockItems;\\r\\n                      let selIndex = index\\r\\n                    \\\"\\r\\n                    (click)=\\\"selectStockItem(fitem, selIndex)\\\"\\r\\n                  >\\r\\n                    {{ fitem.productName }}\\r\\n                  </md-option>\\r\\n                </md-autocomplete>\\r\\n              </md-input-container>\\r\\n            </span>\\r\\n            <span flex=\\\"15\\\">\\r\\n              <md-input-container\\r\\n                style=\\\"width:5em;  margin-top: -4px !important; padding-left: 5px\\\"\\r\\n              >\\r\\n                <input\\r\\n                  mdInput\\r\\n                  placeholder=\\\"quantity\\\"\\r\\n                  type=\\\"number\\\"\\r\\n                  [(ngModel)]=\\\"item.quantity\\\"\\r\\n                  (ngModelChange)=\\\"itemValueChange(item)\\\"\\r\\n                />\\r\\n              </md-input-container>\\r\\n            </span>\\r\\n            <span flex=\\\"10\\\">\\r\\n              <md-input-container\\r\\n                style=\\\"width:5em;  margin-top: -4px !important; padding-left: 5px\\\"\\r\\n              >\\r\\n                <input\\r\\n                  mdInput\\r\\n                  placeholder=\\\"rate\\\"\\r\\n                  type=\\\"number\\\"\\r\\n                  [(ngModel)]=\\\"item.unit\\\"\\r\\n                  (ngModelChange)=\\\"itemValueChange(item)\\\"\\r\\n                />\\r\\n              </md-input-container>\\r\\n            </span>\\r\\n            <span flex=\\\"10\\\">\\r\\n              <md-input-container\\r\\n                style=\\\"width:4em; margin-top: -4px !important;\\\"\\r\\n              >\\r\\n                <input\\r\\n                  mdInput\\r\\n                  type=\\\"text\\\"\\r\\n                  [(ngModel)]=\\\"item.discount\\\"\\r\\n                  (change)=\\\"itemValueChange(item)\\\"\\r\\n                />\\r\\n                <span mdSuffix>%</span>\\r\\n              </md-input-container>\\r\\n            </span>\\r\\n            <!-- <span flex=\\\"10\\\">\\r\\n                            {{item.discountAmount}}\\r\\n                        </span> -->\\r\\n\\r\\n            <span flex=\\\"10\\\">\\r\\n              {{ item.totalAmount }}\\r\\n            </span>\\r\\n            <span flex=\\\"15\\\">\\r\\n              {{ item.taxAmount }}\\r\\n            </span>\\r\\n            <span flex=\\\"10\\\">\\r\\n              <md-input-container\\r\\n                style=\\\"width:0em; margin-top: -4px !important;\\\"\\r\\n              >\\r\\n                <input\\r\\n                  mdInput\\r\\n                  type=\\\"text\\\"\\r\\n                  [(ngModel)]=\\\"item.cessPercent\\\"\\r\\n                  (change)=\\\"itemValueChange(item)\\\"\\r\\n                />\\r\\n                <span mdSuffix>%</span>\\r\\n              </md-input-container>\\r\\n            </span>\\r\\n            <span flex=\\\"10\\\">{{ item.totalAfterTax }}</span>\\r\\n            <span flex=\\\"0\\\" style=\\\"cursor: pointer;text-align:right;\\\">\\r\\n              <md-icon\\r\\n                color=\\\"accent\\\"\\r\\n                (click)=\\\"removeItem(index)\\\"\\r\\n                *ngIf=\\\"itemSalesSelected.items.length > 1\\\"\\r\\n                >delete</md-icon\\r\\n              >\\r\\n            </span>\\r\\n          </md-list-item>\\r\\n        </ng-template>\\r\\n      </md-list>\\r\\n      <!-- <div *ngIf=\\\"noRecords\\\">\\r\\n        <div fxLayout=\\\"row\\\" style=\\\"height:300px;width:100%\\\" class=\\\"padding-one\\\">\\r\\n          <span class=\\\"mat-caption app-alt-color\\\">\\r\\n            No Stock items &nbsp;\\r\\n          </span>\\r\\n        </div>\\r\\n      </div> -->\\r\\n\\r\\n      <div\\r\\n        layout=\\\"row\\\"\\r\\n        layout-align=\\\"space-between start\\\"\\r\\n        class=\\\"invoice-form-grand-tot\\\"\\r\\n      >\\r\\n        <div flex=\\\"30\\\">\\r\\n          <div layout=\\\"column\\\"></div>\\r\\n        </div>\\r\\n        <div flex-offset=\\\"55\\\">\\r\\n          <div layout=\\\"column\\\">\\r\\n            <div\\r\\n              class=\\\"font-14-px\\\"\\r\\n              layout=\\\"row\\\"\\r\\n              layout-align=\\\"space-between end\\\"\\r\\n              style=\\\"width: 200px; margin-bottom: 16px;\\\"\\r\\n            >\\r\\n              <span class=\\\"color-dark-gray\\\" flex=\\\"50\\\">Sub Total</span>\\r\\n              <b flex=\\\"50\\\"> {{ productSubTotal | amount }}</b>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </md-card>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/crdn/products-table/products-table.component.html\n// module id = ../../../../../src/app/components/admin/crdn/products-table/products-table.component.html\n// module chunks = 1","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/crdn/products-table/products-table.component.scss\n// module id = ../../../../../src/app/components/admin/crdn/products-table/products-table.component.scss\n// module chunks = 1","import { Component, OnInit, Input, EventEmitter, Output } from \"@angular/core\";\r\nimport { Sales } from \"../../../../entities/sales.entity\";\r\nimport { Item } from \"../../../../entities/item.entity\";\r\nimport { Subject } from \"rxjs/Subject\";\r\nimport { AppService } from \"app/shared/service/app.service\";\r\nimport { RestService } from \"app/common/rest.service\";\r\nimport { StockItem } from \"app/entities/stockitem.entity\";\r\nimport { Storage } from \"../../../../shared/utils/storage\";\r\nimport { PurchaseOrder } from \"app/entities/purchaseorder.entity\";\r\nimport { CRDN } from \"../../../../entities/crdn.entity\";\r\n\r\n@Component({\r\n  selector: \"app-products-table\",\r\n  templateUrl: \"./products-table.component.html\",\r\n  styleUrls: [\"./products-table.component.scss\"]\r\n})\r\nexport class ProductsTableComponent implements OnInit {\r\n  @Input()\r\n  myForm: any;\r\n  @Input()\r\n  isCgst: boolean;\r\n  @Input() item: Item;\r\n  @Input()\r\n  isIgst: boolean;\r\n  @Input()\r\n  itemSalesSelected: Sales;\r\n\r\n  @Input()\r\n  products: any = [];\r\n  @Input()\r\n  addItemChange: Subject<boolean>;\r\n  @Input()\r\n  gstChange: Subject<any>;\r\n  purchaseOrder: PurchaseOrder;\r\n  noRecords: boolean = false;\r\n  showMsg: boolean = false;\r\n\r\n  productName: any;\r\n  stockItemList: Item[] = [];\r\n  filteredStockItems: any[] = [];\r\n  stockItemId: any;\r\n\r\n  isEditable: string = \"true\";\r\n  productSubTotal: number;\r\n  @Output()\r\n  productSubTotalEmitter: EventEmitter<any> = new EventEmitter<any>();\r\n  productTaxTotalEmitter: EventEmitter<any> = new EventEmitter<any>();\r\n  itemSelected: Item;\r\n  itemIndex: number = 0;\r\n  fieldDisable: boolean = false;\r\n  rowCount: number = 0;\r\n  @Output()\r\n  isSubmittable: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  constructor(\r\n    private appService: AppService,\r\n    private restService: RestService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    console.log(\"harsha  \", this.itemSalesSelected);\r\n    // this.addItem();\r\n  }\r\n\r\n  selectLineItem(item, index) {\r\n    if (this.itemSelected !== item) {\r\n      this.itemSelected = item;\r\n    }\r\n    //this.selectedProductEmitter.emit(item);\r\n  }\r\n  selectStockItem(item: any, eleIndex) {\r\n    if (item && typeof item == \"object\") {\r\n      this.itemSelected.unit = item.stockItemPrice.sellingPrice;\r\n      // this.itemSelected.quantity = 1;\r\n      this.itemSelected.stockItemId.productName = item.productName;\r\n      //this.itemSelected.productCode = item.hsnCodeNames;\r\n      this.itemSelected.taxrate = item.stockItemPrice.tax.toString();\r\n      //   this.itemSelected.stockItemId = item; //+item.id;\r\n      console.log(this.itemSelected.stockItemId);\r\n      this.itemSelected.stockItemId.id = item.id;\r\n      this.itemSelected.stockItemId.uqc = item.uqc;\r\n      this.itemSelected.cgst = 0;\r\n      this.itemSelected.sgst = 0;\r\n      this.itemSelected.discount = 0;\r\n      this.itemSelected.cessPercent = 0;\r\n      this.itemSelected.quantity = 0;\r\n      // this.itemCalculate(this.itemSelected);\r\n      console.log(this.itemSelected);\r\n      this.itemSelected.stockDisplayValue = item.stockItemPrice.stockathand;\r\n      console.log(this.itemSelected.stockDisplayValue);\r\n      item.isselect = true;\r\n\r\n      //  this.fieldDisable = item.stockItemPrice.stockathand <= 0 ? true : false;\r\n      item.isNewRow = true;\r\n      // this.filteredStockItems.splice(eleIndex, 1);\r\n    }\r\n    this.addItem();\r\n  }\r\n\r\n  isInvalid: boolean;\r\n  itemValueChange(item: Item, field: string) {\r\n    // this.itemCalculate(item);\r\n    this.quantity(item);\r\n  }\r\n  quantity(item: Item) {\r\n    if (item.quantity > this.itemSelected.stockDisplayValue) {\r\n      console.log(\"iadhfkbiayhefdsddssd\");\r\n      this.itemSelected.quantity = 0;\r\n      // this.itemCalculate(item);\r\n      return (item.greaterStock = true);\r\n    } else if (item.quantity < this.itemSelected.stockDisplayValue) {\r\n      console.log(\"iadhfkbiayhefd\");\r\n      return (item.greaterStock = false);\r\n    }\r\n  }\r\n\r\n  // itemCalculate(item: Item) {\r\n  //   console.log(\"***************item C method\");\r\n  //   let total: number = 0;\r\n  //   let cessAmount: number = 0;\r\n  //   let discountAmount: number = 0;\r\n  //   let beforeTaxAmount: number = item.unit * item.quantity;\r\n  //   discountAmount = beforeTaxAmount * (item.discount / 100);\r\n  //   item.discountAmount = +discountAmount.toFixed(2) + 0.0;\r\n  //   item.totalAmount = beforeTaxAmount - item.discountAmount + 0.0;\r\n  //   total = +item.totalAmount.toFixed(2);\r\n  //   cessAmount = total * (item.cessPercent / 100);\r\n  //   item.cessAmount = +cessAmount.toFixed(2);\r\n  //   if (this.cr.isCgst) {\r\n  //     if (item.taxrate && item.taxrate != \"Nil\") {\r\n  //       item.cgst =\r\n  //         (total * (parseFloat(item.taxrate.replace(\"%\", \"\")) / 100)) / 2;\r\n  //       item.sgst =\r\n  //         (total * (parseFloat(item.taxrate.replace(\"%\", \"\")) / 100)) / 2;\r\n  //       let taxAmount: number = item.cgst + item.sgst;\r\n  //       item.taxAmount = +taxAmount.toFixed(2) + 0.0;\r\n  //       console.log(\"total is \" + total);\r\n  //       console.log(\"item.taxAmount is \" + item.taxAmount);\r\n  //       console.log(\"item.cessAmount is \" + item.cessAmount);\r\n  //       let itemAmount: number = total + item.taxAmount + item.cessAmount;\r\n  //       item.totalAfterTax = +itemAmount.toFixed(2) + 0.0;\r\n  //       console.log(item.totalAfterTax);\r\n  //     } else {\r\n  //       item.cgst = 0;\r\n  //       item.sgst = 0;\r\n  //       item.totalAfterTax = total + cessAmount;\r\n  //     }\r\n  //   }\r\n  //   if (this.sales.isIgst) {\r\n  //     if (item.taxrate && item.taxrate != \"Nil\") {\r\n  //       item.igst = total * (parseFloat(item.taxrate.replace(\"%\", \"\")) / 100);\r\n  //       item.totalAfterTax =\r\n  //         total +\r\n  //         total * (parseFloat(item.taxrate.replace(\"%\", \"\")) / 100) +\r\n  //         cessAmount;\r\n  //     } else {\r\n  //       item.igst = 0;\r\n  //       item.totalAfterTax = total + cessAmount;\r\n  //     }\r\n  //   }\r\n  //   this.sales.total = total + cessAmount;\r\n  //   this.subTotalCalc();\r\n  // }\r\n\r\n  // subTotalCalc() {\r\n  //   console.log(\"****************subtotal c method\");\r\n  //   console.log(\"product items \" + this.crdn.items);\r\n  //   let subTotal: number = 0;\r\n  //   this.productSubTotal = subTotal;\r\n  //   this.crdn.forEach(element => {\r\n  //     if (element.stockItemId != null && element.stockItemId.id != null) {\r\n  //       subTotal = subTotal + element.totalAfterTax;\r\n  //       this.productSubTotal = +subTotal.toFixed(2) + 0.0;\r\n  //       console.log(this.productSubTotal);\r\n  //       this.productSubTotalEmitter.emit(this.productSubTotal);\r\n  //     }\r\n  //   });\r\n  //   console.log(\"subTotalCalc :: productSubTotal\", this.productSubTotal);\r\n  //   if (!this.crdn) {\r\n  //     this.productSubTotal = 0;\r\n  //     this.productSubTotalEmitter.emit(this.productSubTotal);\r\n  //   }\r\n  // }\r\n\r\n  removeItem(index) {\r\n    this.itemSalesSelected.items[index].stockItemId = null;\r\n    setTimeout(() => {\r\n      this.itemSalesSelected.items.splice(index, 1);\r\n    }, 10);\r\n    this.productSubTotal = 0;\r\n    // this.subTotalCalc();\r\n    this.productSubTotalEmitter.emit(this.productSubTotal);\r\n    this.rowCount--;\r\n    this.rowCount == 1 &&\r\n    this.itemSalesSelected.items[this.rowCount - 1].stockItemId == null\r\n      ? this.isSubmittable.emit(false)\r\n      : this.isSubmittable.emit(true);\r\n  }\r\n  addItem() {\r\n    if (\r\n      this.itemSalesSelected.items.length == 0 ||\r\n      this.itemSalesSelected.items[this.itemSalesSelected.items.length - 1]\r\n        .stockItemId.id != null\r\n    ) {\r\n      let item = new Item();\r\n      item.id = null;\r\n      //item.company = this.sales.company;\r\n      //  item.product = this.newProduct();\r\n      item.unit = 0;\r\n      item.cgst = 0;\r\n      item.sgst = 0;\r\n      item.igst = 0;\r\n      item.igst = 0;\r\n      item.quantity = 0;\r\n      item.cessPercent = 0;\r\n      item.cessAmount = 0;\r\n      item.isNewRow = true;\r\n      this.itemSalesSelected.items.push(item);\r\n      if (item.quantity == null || item.quantity == 0 || item.quantity == \"\") {\r\n        this.showMsg = false;\r\n      }\r\n    }\r\n  }\r\n  // filterStockItems(val: string) {\r\n  //   if (this.isEditable == \"true\") {\r\n  //     this.filteredStockItems =\r\n  //       val && val != \"\"\r\n  //         ? this.stockItemList.filter(\r\n  //             s =>\r\n  //               s.stockItemId.productName\r\n  //                 .toLowerCase()\r\n  //                 .indexOf(val.toLowerCase()) >= 0\r\n  //           )\r\n  //         : this.stockItemList;\r\n\r\n  //     var len = this.filteredStockItems.length;\r\n\r\n  //     for (let j = 0; j < len; j++) {\r\n\r\n  //       if (this.filteredStockItems[j].isselect == true) {\r\n  //         console.log(this.filteredStockItems[j]);\r\n  //       }\r\n  //     }\r\n  //   } else {\r\n  //     this.stockItemList = [];\r\n  //   }\r\n  // }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/crdn/products-table/products-table.component.ts","module.exports = \"<div class=\\\"padding-side\\\">\\r\\n  <md-card class=\\\"invoice-form-table\\\">\\r\\n    <div class=\\\"invoice-form-th\\\">\\r\\n      <md-list>\\r\\n        <md-list-item layout=\\\"row\\\" layout-wrap class=\\\"invoice-form-list-item\\\">\\r\\n          <span flex=\\\"5\\\"> S.no</span>\\r\\n          <span flex=\\\"20\\\">Service</span>\\r\\n          <span flex=\\\"10\\\"></span>\\r\\n          <!-- // SAC Code -->\\r\\n          <span flex=\\\"5\\\"></span>\\r\\n          <span flex=\\\"10\\\">Discount</span>\\r\\n          <span flex=\\\"10\\\">Subtotal</span>\\r\\n\\r\\n          <span flex=\\\"10\\\">Tax Amount</span>\\r\\n          <span flex=\\\"10\\\">Cess</span>\\r\\n          <span flex=\\\"5\\\">Amount</span>\\r\\n          <span flex=\\\"0\\\">&nbsp;</span>\\r\\n        </md-list-item>\\r\\n      </md-list>\\r\\n    </div>\\r\\n    <br />\\r\\n\\r\\n    <div\\r\\n      class=\\\"invoice-form-tb\\\"\\r\\n      [style.overflow]=\\\"'auto'\\\"\\r\\n      [style.height.px]=\\\"'300'\\\"\\r\\n    >\\r\\n      <md-list>\\r\\n        <ng-template\\r\\n          let-index=\\\"index\\\"\\r\\n          let-item\\r\\n          let-last=\\\"last\\\"\\r\\n          ngFor\\r\\n          [ngForOf]=\\\"itemSalesSelected.items\\\"\\r\\n        >\\r\\n          <md-list-item\\r\\n            layout=\\\"row\\\"\\r\\n            (click)=\\\"selectedLineItem(item, index)\\\"\\r\\n            *ngIf=\\\"item.service\\\"\\r\\n          >\\r\\n            <span flex=\\\"5\\\"> {{ index + 1 }}</span>\\r\\n            <span flex=\\\"20\\\">\\r\\n              <md-input-container style=\\\"margin-top: -4px !important;\\\">\\r\\n                <input\\r\\n                  placeholder=\\\"Search By Service\\\"\\r\\n                  mdInput\\r\\n                  [(ngModel)]=\\\"item.service.serviceName\\\"\\r\\n                  (focus)=\\\"filterServiceItems($event.target.values)\\\"\\r\\n                  (keyup)=\\\"filterServiceItems($event.target.value)\\\"\\r\\n                  [mdAutocomplete]=\\\"autoServices\\\"\\r\\n                  [readOnly]=\\\"isEditable == 'false'\\\"\\r\\n                  [ngModelOptions]=\\\"{ standalone: true }\\\"\\r\\n                />\\r\\n                <md-autocomplete #autoServices=\\\"mdAutocomplete\\\">\\r\\n                  <md-option\\r\\n                    *ngFor=\\\"let option of filteredServices\\\"\\r\\n                    [value]=\\\"option.serviceName\\\"\\r\\n                    (click)=\\\"selectedService(option)\\\"\\r\\n                  >\\r\\n                    {{ option.serviceName }}\\r\\n                  </md-option>\\r\\n                </md-autocomplete>\\r\\n              </md-input-container>\\r\\n            </span>\\r\\n            <span flex=\\\"10\\\"></span>\\r\\n            <!-- <span flex=\\\"5\\\">\\r\\n                                <md-input-container style=\\\"width:3em;  margin-top: -4px !important; padding-left: 5px\\\">\\r\\n                                    <input mdInput type=\\\"number\\\" [(ngModel)]=\\\"item.quantity\\\" (change)=\\\"itemValueChange(item)\\\">\\r\\n                                </md-input-container>\\r\\n                            </span> -->\\r\\n            <!-- <span flex=\\\"5\\\">\\r\\n                                {{item.service.uqc}}\\r\\n                            </span> -->\\r\\n            <span flex=\\\"5\\\">\\r\\n              {{ item.service.salesUnit }}\\r\\n            </span>\\r\\n            <span flex=\\\"10\\\">\\r\\n              <md-input-container\\r\\n                style=\\\"width:4em;  margin-top: -4px !important; padding-left: 5px\\\"\\r\\n              >\\r\\n                <input\\r\\n                  mdInput\\r\\n                  type=\\\"text\\\"\\r\\n                  [(ngModel)]=\\\"item.discount\\\"\\r\\n                  (change)=\\\"itemValueChange(item)\\\"\\r\\n                />\\r\\n                <span mdSuffix>%</span>\\r\\n              </md-input-container>\\r\\n            </span>\\r\\n            <span flex=\\\"10\\\">\\r\\n              {{ item.totalAmount }}\\r\\n            </span>\\r\\n            <!-- <span flex=\\\"5\\\" *ngIf=\\\"sales.isCgst\\\">{{item.cgst | amount}}</span>\\r\\n                            <span flex=\\\"5\\\" *ngIf=\\\"sales.isCgst\\\">{{item.sgst | amount}}</span>\\r\\n                            <span flex=\\\"10\\\" *ngIf=\\\"sales.isIgst\\\">{{item.igst | amount}}</span> -->\\r\\n            <span flex=\\\"10\\\">\\r\\n              {{ item.taxAmount }}\\r\\n            </span>\\r\\n            <span flex=\\\"10\\\">\\r\\n              <md-input-container\\r\\n                style=\\\"width:4em; margin-top: -4px !important;\\\"\\r\\n              >\\r\\n                <input\\r\\n                  mdInput\\r\\n                  type=\\\"text\\\"\\r\\n                  [(ngModel)]=\\\"item.cessPercent\\\"\\r\\n                  (change)=\\\"itemValueChange(item)\\\"\\r\\n                />\\r\\n                <span mdSuffix>%</span>\\r\\n              </md-input-container>\\r\\n            </span>\\r\\n            <span flex=\\\"10\\\">{{ item.totalAfterTax | amount }}</span>\\r\\n            <span flex=\\\"0\\\" style=\\\"cursor: pointer;text-align:right;\\\">\\r\\n              <md-icon\\r\\n                color=\\\"accent\\\"\\r\\n                (click)=\\\"removeItem(index)\\\"\\r\\n                *ngIf=\\\"itemSalesSelected.items.length > 1\\\"\\r\\n                >delete</md-icon\\r\\n              >\\r\\n            </span>\\r\\n          </md-list-item>\\r\\n        </ng-template>\\r\\n      </md-list>\\r\\n      <div\\r\\n        layout=\\\"row\\\"\\r\\n        layout-align=\\\"space-between start\\\"\\r\\n        class=\\\"invoice-form-grand-tot\\\"\\r\\n      >\\r\\n        <div flex=\\\"30\\\">\\r\\n          <div layout=\\\"column\\\"></div>\\r\\n        </div>\\r\\n        <div flex-offset=\\\"55\\\">\\r\\n          <div layout=\\\"column\\\">\\r\\n            <div\\r\\n              class=\\\"font-14-px\\\"\\r\\n              layout=\\\"row\\\"\\r\\n              layout-align=\\\"space-between end\\\"\\r\\n              style=\\\"width: 200px; margin-bottom: 16px;\\\"\\r\\n            >\\r\\n              <span class=\\\"color-dark-gray\\\" flex=\\\"50\\\">Sub Total</span>\\r\\n              <b flex=\\\"50\\\"> {{ serviceSubTotal | amount }}</b>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </md-card>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/crdn/service-table/service-table.component.html\n// module id = ../../../../../src/app/components/admin/crdn/service-table/service-table.component.html\n// module chunks = 1","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/crdn/service-table/service-table.component.scss\n// module id = ../../../../../src/app/components/admin/crdn/service-table/service-table.component.scss\n// module chunks = 1","import { Component, OnInit, Input, Output, EventEmitter } from \"@angular/core\";\r\nimport { Sales } from \"../../../../entities/sales.entity\";\r\nimport { Item } from \"../../../../entities/item.entity\";\r\nimport { Subject } from \"rxjs/Subject\";\r\nimport { Service } from \"../../../../entities/Service.entity\";\r\nimport { AppService } from \"../../../../shared/service/app.service\";\r\nimport { RestService } from \"../../../../common/rest.service\";\r\nimport { Storage } from \"../../../../shared/utils/storage\";\r\n\r\n@Component({\r\n  selector: \"app-service-table\",\r\n  templateUrl: \"./service-table.component.html\",\r\n  styleUrls: [\"./service-table.component.scss\"]\r\n})\r\nexport class ServiceTableComponent implements OnInit {\r\n  @Input()\r\n  myForm: any;\r\n  @Input() item: Item;\r\n\r\n  @Input()\r\n  items: any;\r\n  @Input()\r\n  itemSalesSelected: Sales;\r\n  @Input()\r\n  services: Service[] = [];\r\n\r\n  @Input()\r\n  addItemChange: Subject<boolean>;\r\n  @Input()\r\n  gstChange: Subject<any>;\r\n  service: any;\r\n  serviceSubTotal: any;\r\n  serviceItem: any;\r\n  serviceName: any;\r\n  isEditable: string = \"true\";\r\n  noRecords: boolean = false;\r\n  filteredServices: Service[] = [];\r\n  // Service: any;\r\n\r\n  @Output()\r\n  serviceSubTotalEmitter: EventEmitter<any> = new EventEmitter<any>();\r\n  // @Output() filterProductEmitter: EventEmitter<any> = new EventEmitter<any>();\r\n  // @Output() outputEmitter: EventEmitter<any> = new EventEmitter<any>();\r\n  // @Output() selectedProductEmitter: EventEmitter<any> = new EventEmitter<any>();\r\n  itemSelected: Item;\r\n  itemIndex: number = 0;\r\n  constructor(\r\n    private appService: AppService,\r\n    private restService: RestService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    console.log(this.itemSalesSelected);\r\n    let isEditable = this.appService.getParam(\"isEditable\");\r\n    this.addItem();\r\n  }\r\n\r\n  // filterProducts(){\r\n  //   this.filterProductEmitter.emit();\r\n  // }\r\n  selectedLineItem(item: Item, index) {\r\n    console.log(index);\r\n    if (this.itemSelected == null || this.itemSelected != item) {\r\n      this.itemSelected = item;\r\n    }\r\n    this.itemIndex = index;\r\n    console.log(item);\r\n    //this.selectedProductEmitter.emit(item);\r\n  }\r\n  selectedService(item: Service) {\r\n    console.log(item);\r\n    if (item && typeof item == \"object\") {\r\n      this.itemSelected.unit = item.salesUnit;\r\n      this.itemSelected.quantity = 1;\r\n      // this.itemSelected.serviceName = item.serviceName\r\n      // this.itemSelected.serviceCode = item.serviceCode;\r\n      this.itemSelected.taxrate = item.tax;\r\n      // this.itemSelected.service.serviceName = item.serviceName;\r\n      this.itemSelected.service.id = item.id;\r\n      // this.itemSelected.service = item.id;\r\n      // this.itemSelected.productSubTotal = item.subTotal;\r\n      this.itemSelected.cgst = 0;\r\n      this.itemSelected.sgst = 0;\r\n      this.itemSelected.discount = 0;\r\n      this.itemSelected.cessPercent = 0;\r\n      console.log(this.itemSelected);\r\n      this.itemCalculate(this.itemSelected);\r\n    }\r\n    this.addItem();\r\n  }\r\n  itemValueChange(item) {\r\n    this.itemCalculate(item);\r\n  }\r\n\r\n  itemCalculate(item: Item) {\r\n    let total: number = 0;\r\n    let cessAmount: number = 0;\r\n    let discountAmount: number = 0;\r\n    let beforeTaxAmount: number = item.unit * item.quantity;\r\n    discountAmount = beforeTaxAmount * (item.discount / 100);\r\n    item.discountAmount = discountAmount;\r\n    item.discountAmount = +discountAmount.toFixed(2) + 0.0;\r\n    item.totalAmount = beforeTaxAmount - item.discountAmount + 0.0;\r\n    total = +item.totalAmount.toFixed(2);\r\n    item.cessAmount = total * (item.cessPercent / 100);\r\n    cessAmount = item.cessAmount;\r\n    if (this.itemSalesSelected.isCgst) {\r\n      if (item.taxrate && item.taxrate != \"Nil\") {\r\n        item.cgst =\r\n          (total * (parseFloat(item.taxrate.replace(\"%\", \"\")) / 100)) / 2;\r\n        item.sgst =\r\n          (total * (parseFloat(item.taxrate.replace(\"%\", \"\")) / 100)) / 2;\r\n        let taxAmount: number = item.cgst + item.sgst;\r\n        item.taxAmount = +taxAmount.toFixed(2) + 0.0;\r\n        console.log(\"total is \" + total);\r\n        console.log(\"item.taxAmount is \" + item.taxAmount);\r\n        console.log(\"item.cessAmount is \" + item.cessAmount);\r\n        let itemAmount: number = total + item.taxAmount + item.cessAmount;\r\n        item.totalAfterTax = +itemAmount.toFixed(2) + 0.0;\r\n        console.log(item.totalAfterTax);\r\n      } else {\r\n        item.cgst = 0;\r\n        item.sgst = 0;\r\n        item.totalAfterTax = total + cessAmount;\r\n      }\r\n    } else if (this.itemSalesSelected.isIgst) {\r\n      if (item.taxrate && item.taxrate != \"Nil\") {\r\n        item.igst = total * (parseFloat(item.taxrate.replace(\"%\", \"\")) / 100);\r\n        let taxAmount: number = item.cgst + item.sgst;\r\n        item.taxAmount = +taxAmount.toFixed(2) + 0.0;\r\n        console.log(\"total is \" + total);\r\n        console.log(\"item.taxAmount is \" + item.taxAmount);\r\n        console.log(\"item.cessAmount is \" + item.cessAmount);\r\n        let itemAmount: number = total + item.taxAmount + item.cessAmount;\r\n        item.totalAfterTax = +itemAmount.toFixed(2) + 0.0;\r\n        console.log(item.totalAfterTax);\r\n      } else {\r\n        item.igst = 0;\r\n        item.totalAfterTax = total + cessAmount;\r\n      }\r\n    }\r\n    this.itemSalesSelected.total = total + cessAmount;\r\n    this.subTotalCalc();\r\n  }\r\n  subTotalCalc() {\r\n    let subTotal: number = 0;\r\n    this.itemSalesSelected.items.forEach(element => {\r\n      if (element.service != null && element.service != null) {\r\n        subTotal = subTotal + element.totalAfterTax;\r\n        this.serviceSubTotal = +subTotal.toFixed(2) + 0.0;\r\n        this.serviceSubTotalEmitter.emit(this.serviceSubTotal);\r\n      }\r\n    });\r\n  }\r\n  // itemCalculate(item){\r\n  //   this.outputEmitter.emit(item);\r\n  // }\r\n  removeItem(index) {\r\n    this.itemSalesSelected.items[index].service = null;\r\n    setTimeout(() => {\r\n      this.itemSalesSelected.items.splice(index, 1);\r\n    }, 10);\r\n    this.serviceSubTotal = 0;\r\n    this.serviceSubTotalEmitter.emit(this.serviceSubTotal);\r\n    this.subTotalCalc();\r\n  }\r\n  addItem() {\r\n    if (\r\n      this.itemSalesSelected.items.length == 0 ||\r\n      this.itemSalesSelected.items[this.itemSalesSelected.items.length - 1]\r\n        .service != null\r\n    ) {\r\n      let item = new Item();\r\n      item.id = null;\r\n      //item.company = this.sales.company;\r\n      // item.service = Object.assign({}, this.service);\r\n      item.unit = 0;\r\n      item.cgst = 0;\r\n      item.sgst = 0;\r\n      item.igst = 0;\r\n      item.igst = 0;\r\n      item.cessPercent = 0;\r\n      item.cessAmount = 0;\r\n      this.itemSalesSelected.items.push(item);\r\n    }\r\n  }\r\n\r\n  serviceItemList: Service[] = [];\r\n\r\n  // serviceName: any;\r\n  // filterServices(val: string) {\r\n  //   if (val) {\r\n  //     this.serviceName = val;\r\n  //   }\r\n  //   this.filteredServices =\r\n  //     val && val != \"\"\r\n  //       ? this.services.filter(\r\n  //           s => s.serviceName.toLowerCase().indexOf(val.toLowerCase()) >= 0\r\n  //         )\r\n  //       : this.services;\r\n  // }\r\n  // serviceName: any;\r\n  // filterServiceItems(val: string) {\r\n  //   if (this.isEditable == \"true\") {\r\n  //     if (val) {\r\n  //       this.serviceName = val;\r\n  //     }\r\n  //     this.filteredServices =\r\n  //       val && val != \"\"\r\n  //         ? this.services.filter(\r\n  //             s => s.serviceName.toLowerCase().indexOf(val.toLowerCase()) >= 0\r\n  //           )\r\n  //         : this.services;\r\n  //   } else {\r\n  //     this.services = [];\r\n  //   }\r\n  //   if (this.services.length == 0) {\r\n  //     this.noRecords = true;\r\n  //   } else {\r\n  //     this.noRecords = false;\r\n  //   }\r\n  // }\r\n\r\n  // newService() {\r\n  //   let service = new Service();\r\n  //   return service;\r\n  // }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/crdn/service-table/service-table.component.ts","module.exports = \"<div fxLayout=\\\"row\\\" id=\\\"page-content\\\" style=\\\"overflow: hidden\\\">\\r\\n  <div fxFlex=\\\"100\\\">\\r\\n    <div id=\\\"page-header\\\">\\r\\n      <h1 style=\\\"text-align: center;\\\">Customer View</h1>\\r\\n      <span style=\\\"float: right; margin-right: 20%;\\\">\\r\\n        <button md-mini-fab (click)=\\\"add()\\\"><md-icon>add</md-icon></button>\\r\\n      </span>\\r\\n    </div>\\r\\n    <div id=\\\"page-content\\\">\\r\\n      <div class=\\\"padding-side\\\">\\r\\n        <h3 style=\\\"color:#409388\\\">\\r\\n          {{ customerManagement.firstName }} {{ customerManagement.lastName }}\\r\\n        </h3>\\r\\n\\r\\n        <div class=\\\"padding-height padding-side\\\">\\r\\n          <!-- <md-card > -->\\r\\n          <md-tab-group\\r\\n            style=\\\"width:100%;\\\"\\r\\n            [selectedIndex]=\\\"selectedIndex\\\"\\r\\n            (selectedTabChange)=\\\"tabChange($event)\\\"\\r\\n          >\\r\\n            <md-tab label=\\\"Transaction List\\\">\\r\\n              <app-transcation\\r\\n                [(customerId)]=\\\"customerManagement.id\\\"\\r\\n              ></app-transcation>\\r\\n            </md-tab>\\r\\n            <md-tab label=\\\"Customer Details\\\">\\r\\n              <app-details\\r\\n                [customerManagement]=\\\"customerManagement\\\"\\r\\n              ></app-details>\\r\\n            </md-tab>\\r\\n          </md-tab-group>\\r\\n          <!-- </md-card> -->\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/customerdetails/customer.details.component.html\n// module id = ../../../../../src/app/components/admin/customerdetails/customer.details.component.html\n// module chunks = 1","import { CustomManagement } from \"../../../entities/custommanagement\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { AppService } from \"../../../shared/service/app.service\";\r\nimport { AnimationService } from \"../../../shared/service/animation.service\";\r\nimport { RestService } from \"./../../../common/rest.service\";\r\nimport { Prop } from \"./../../../common/props\";\r\n\r\n@Component({\r\n  selector: \"app-customer-details\",\r\n  templateUrl: \"./customer.details.component.html\"\r\n})\r\nexport class CustomerDetailsComponent {\r\n  myForm: any;\r\n  selectedIndex: number = 1;\r\n  currentTab: String = \"Customer Details\";\r\n  customerManagement: CustomManagement = new CustomManagement();\r\n  constructor(\r\n    private appService: AppService,\r\n    private restService: RestService\r\n  ) {\r\n    let id = this.appService.getParam(\"id\");\r\n    this.customerEdit(id);\r\n  }\r\n  customerEdit(id) {\r\n    this.restService.customerEdit(id).subscribe(result => {\r\n      if (result) {\r\n        this.customerManagement = result;\r\n      }\r\n    });\r\n  }\r\n\r\n  changeCustomer($event) {\r\n    this.customerEdit($event);\r\n  }\r\n  tabChange(event: any) {\r\n    this.currentTab = event.tab.textLabel;\r\n  }\r\n  add() {\r\n    this.appService.navigate(\"admin/custom-management\", []);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/customerdetails/customer.details.component.ts","module.exports = \"<aside fxLayout=\\\"column\\\" style=\\\"height: 100vh; background-color: white; border: 1px solid #ccc;\\\">\\r\\n    <div fxLayoutAlign=\\\"center\\\">\\r\\n        <h3 >Customers</h3>\\r\\n    </div>\\r\\n    <md-divider></md-divider>\\r\\n    <div>\\r\\n        <md-list style=\\\"cursor: pointer\\\">\\r\\n            <div *ngFor=\\\"let item of dataList\\\">\\r\\n                <md-list-item (click)=\\\"onSelect(item)\\\">\\r\\n                    <h4 md-line>{{item.firstName}} {{item.lastName}}</h4>\\r\\n                    <p md-line> {{item.phone}} </p>\\r\\n                </md-list-item>\\r\\n                <md-divider></md-divider>\\r\\n            </div>\\r\\n        </md-list>\\r\\n    </div>\\r\\n</aside>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/customerdetails/customer.sidenav.component.html\n// module id = ../../../../../src/app/components/admin/customerdetails/customer.sidenav.component.html\n// module chunks = 1","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { AppService } from '../../../shared/service/app.service';\r\nimport { AnimationService } from '../../../shared/service/animation.service';\r\nimport { RestService } from './../../../common/rest.service';\r\nimport { Prop } from './../../../common/props';\r\n\r\n@Component({\r\n  selector: 'app-customer-sidenav',\r\n  templateUrl: './customer.sidenav.component.html'\r\n \r\n})\r\nexport class CustomerSideNavComponent {\r\n    mode: string;\r\n    dataList: any[] = [];\r\n  @Output() changeCustomer: EventEmitter<any> = new EventEmitter<any>();\r\nconstructor(private appService: AppService,private restService : RestService) {\r\n  this.retriveData();\r\n}\r\n  retriveData() {\r\n    this.restService.retriveCustomer()\r\n      .subscribe( results => {\r\n        this.dataList = results;\r\n      })\r\n  }\r\n\r\n  onSelect(item: any) {\r\n    this.changeCustomer.emit(item.id);\r\n  } \r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/customerdetails/customer.sidenav.component.ts","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { AppService } from \"../../../shared/service/app.service\";\r\nimport { AnimationService } from \"../../../shared/service/animation.service\";\r\nimport { RestService } from \"../../../common/rest.service\";\r\nimport { Prop } from \"../../../common/props\";\r\nimport { CustomerFormGroup } from \"../../../forms/customer.form\";\r\nimport { CustomManagement } from \"../../../entities/custommanagement\";\r\nimport { Address } from \"../../../entities/address.entity\";\r\n\r\n@Component({\r\n  selector: \"customer-edit\",\r\n  templateUrl: \"./customeredit.html\"\r\n})\r\nexport class CustomerEditComponent {\r\n  mode: string;\r\n  myForm: any = CustomerFormGroup.init();\r\n  public isEditable = false;\r\n  @Input()\r\n  customerManagement: CustomManagement;\r\n  isSameBillingAddress: boolean = false;\r\n  customerType = [\"Retail\", \"Credit\"];\r\n  paymentMethod = [\"Cash\", \"Electronic\", \"Cheque\"];\r\n  stateList: any[] = [];\r\n  filteredStates: any[] = [];\r\n\r\n  constructor(\r\n    private appService: AppService,\r\n    private restService: RestService\r\n  ) {\r\n    this.customerManagement = new CustomManagement();\r\n    this.customerManagement.billingAddress = new Address();\r\n\r\n    // this.customerManagement = new CustomManagement();\r\n    CustomerFormGroup.details(this.myForm);\r\n    CustomerFormGroup.address(this.myForm);\r\n    CustomerFormGroup.taxGroup(this.myForm);\r\n    let id = this.appService.getParam(\"id\");\r\n    this.customerEdit(id);\r\n    //console.log(this.customerManagement.companyId);\r\n  }\r\n\r\n  customerEdit(id) {\r\n    this.restService.retreiveCustomerById(id).subscribe(result => {\r\n      if (result) {\r\n        this.customerManagement = result;\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    //  this.paymentTypeLoad();\r\n    this.stateLoad();\r\n    this.changeAddress();\r\n  }\r\n\r\n  changeAddress() {\r\n    if (this.customerManagement.isShippingAddress) {\r\n      CustomerFormGroup.shippingAddress(this.myForm, false);\r\n    } else {\r\n      CustomerFormGroup.shippingAddress(this.myForm, true);\r\n    }\r\n  }\r\n\r\n  focusOutFunction() {\r\n    let array: any = [];\r\n    this.stateList.forEach(item => {\r\n      if (this.customerManagement.billingAddress.state == item[0]) {\r\n        array.push(item[0]);\r\n      }\r\n    });\r\n    console.log(array);\r\n    if (array.length == 0) {\r\n      // this.appService.showMessage('Please Select Correct State Value')\r\n      this.customerManagement.billingAddress.state = null;\r\n    }\r\n  }\r\n  save() {\r\n    console.log(\r\n      \"this.customerManagement : \" +\r\n        this.customerManagement.billingAddress.state\r\n    );\r\n    this.customerManagement.companyId = this.appService.getBranch().id;\r\n    console.log(this.customerManagement.companyId);\r\n    console.log(this.restService);\r\n    this.restService\r\n      .customerUpdate(this.customerManagement)\r\n      .subscribe(results => {\r\n        if (results) {\r\n          this.customerManagement = results;\r\n          this.appService.showMessage(\"Updated successfully.\");\r\n          this.appService.navigate(\"/admin/customersearch\", []);\r\n        }\r\n      });\r\n  }\r\n  finish() {\r\n    this.appService.navigate(\"/admin/customersearch\", []);\r\n  }\r\n\r\n  stateLoad() {\r\n    //this.restService.dataloadFromFile()\r\n    this.restService\r\n      .dataloadFromFile(\"./assets/json/common.json\")\r\n      .subscribe(results => {\r\n        this.stateList = results[\"stateList\"];\r\n        console.log(this.stateList);\r\n      });\r\n  }\r\n\r\n  filterStates(val: string) {\r\n    console.log(val);\r\n    this.filteredStates =\r\n      val && val != \"\"\r\n        ? this.stateList.filter(\r\n            s => s.value.toLowerCase().indexOf(val.toLowerCase()) >= 0\r\n          )\r\n        : this.stateList;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/customerdetails/customeredit.component.ts","module.exports = \"<div id=\\\"page-header\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n  <h2>Customer Edit form</h2>\\r\\n</div>\\r\\n\\r\\n<div id=\\\"page-content\\\" style=\\\"margin-top: 16px;margin-bottom:40px\\\">\\r\\n  <div class=\\\"row center-xs parent-container\\\">\\r\\n    <md-card class=\\\"col-xs-12 child-container padding\\\" style=\\\"max-width:950px;\\\">\\r\\n      <md-card-content class=\\\"start-xs \\\">\\r\\n        <form [formGroup]=\\\"myForm\\\" novalidate autocomplete=\\\"off\\\">\\r\\n          <!-- Editable Div Start -->\\r\\n          <div style=\\\"padding: 10px\\\">\\r\\n            <!-- <span style=\\\"font-display: inherit; height : 40px\\\">Customer GST Number :  </span> -->\\r\\n            <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n              <input\\r\\n                mdInput\\r\\n                placeholder=\\\"GST Number\\\"\\r\\n                [formControl]=\\\"myForm.controls.tax_gstNo\\\"\\r\\n                [(ngModel)]=\\\"customerManagement.gstNo\\\"\\r\\n              />\\r\\n              <md-hint>\\r\\n                <form-messages [control]=\\\"myForm.controls.tax_gstNo\\\">\\r\\n                </form-messages>\\r\\n              </md-hint>\\r\\n            </md-input-container>\\r\\n            <!-- <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n              <input\\r\\n                mdInput\\r\\n                placeholder=\\\"Discount\\\"\\r\\n                [formControl]=\\\"myForm.controls.custom_discount\\\"\\r\\n                [(ngModel)]=\\\"customerManagement.billingAddress.discount\\\"\\r\\n              />\\r\\n              <md-hint>\\r\\n                <form-messages [control]=\\\"myForm.controls.custom_discount\\\">\\r\\n                </form-messages>\\r\\n              </md-hint>\\r\\n            </md-input-container> -->\\r\\n          </div>\\r\\n          <div style=\\\"padding: 10px\\\">\\r\\n            <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n              <input\\r\\n                mdInput\\r\\n                placeholder=\\\"Customer Name\\\"\\r\\n                required\\r\\n                [formControl]=\\\"myForm.controls.custom_firstName\\\"\\r\\n                [(ngModel)]=\\\"customerManagement.firstName\\\"\\r\\n              />\\r\\n              <md-hint>\\r\\n                <form-messages [control]=\\\"myForm.controls.custom_firstName\\\">\\r\\n                </form-messages>\\r\\n              </md-hint>\\r\\n            </md-input-container>\\r\\n            <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n              <input\\r\\n                mdInput\\r\\n                placeholder=\\\"Business Name\\\"\\r\\n                [formControl]=\\\"myForm.controls.custom_businessName\\\"\\r\\n                [(ngModel)]=\\\"customerManagement.businessName\\\"\\r\\n              />\\r\\n              <md-hint>\\r\\n                <form-messages [control]=\\\"myForm.controls.custom_businessName\\\">\\r\\n                </form-messages>\\r\\n              </md-hint>\\r\\n            </md-input-container>\\r\\n\\r\\n            <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n              <input\\r\\n                mdInput\\r\\n                placeholder=\\\"Email\\\"\\r\\n                [formControl]=\\\"myForm.controls.custom_email\\\"\\r\\n                [(ngModel)]=\\\"customerManagement.email\\\"\\r\\n              />\\r\\n              <md-hint>\\r\\n                <form-messages [control]=\\\"myForm.controls.custom_email\\\">\\r\\n                </form-messages>\\r\\n              </md-hint>\\r\\n            </md-input-container>\\r\\n\\r\\n            <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n              <input\\r\\n                mdInput\\r\\n                placeholder=\\\"Mobile\\\"\\r\\n                required\\r\\n                [formControl]=\\\"myForm.controls.custom_mobile\\\"\\r\\n                [(ngModel)]=\\\"customerManagement.mobile\\\"\\r\\n              />\\r\\n              <md-hint>\\r\\n                <form-messages [control]=\\\"myForm.controls.custom_mobile\\\">\\r\\n                </form-messages>\\r\\n              </md-hint>\\r\\n            </md-input-container>\\r\\n            <span\\r\\n              class=\\\"padding-side\\\"\\r\\n              style=\\\"font-display: inherit ; display : block\\\"\\r\\n              ><ul>\\r\\n                Shipping Address\\r\\n              </ul></span\\r\\n            >\\r\\n            <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n              <input\\r\\n                mdInput\\r\\n                placeholder=\\\"Address Lane\\\"\\r\\n                [formControl]=\\\"myForm.controls.custom_address_lane\\\"\\r\\n                [(ngModel)]=\\\"customerManagement.billingAddress.lane\\\"\\r\\n              />\\r\\n              <md-hint>\\r\\n                <form-messages [control]=\\\"myForm.controls.custom_address_lane\\\">\\r\\n                </form-messages>\\r\\n              </md-hint>\\r\\n            </md-input-container>\\r\\n\\r\\n            <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n              <input\\r\\n                mdInput\\r\\n                placeholder=\\\"Street\\\"\\r\\n                [formControl]=\\\"myForm.controls.custom_address_street\\\"\\r\\n                [(ngModel)]=\\\"customerManagement.billingAddress.street\\\"\\r\\n              />\\r\\n              <md-hint>\\r\\n                <form-messages\\r\\n                  [control]=\\\"myForm.controls.custom_address_street\\\"\\r\\n                >\\r\\n                </form-messages>\\r\\n              </md-hint>\\r\\n            </md-input-container>\\r\\n\\r\\n            <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n              <input\\r\\n                mdInput\\r\\n                placeholder=\\\"Area\\\"\\r\\n                [formControl]=\\\"myForm.controls.custom_address_area\\\"\\r\\n                [(ngModel)]=\\\"customerManagement.billingAddress.area\\\"\\r\\n              />\\r\\n              <md-hint>\\r\\n                <form-messages [control]=\\\"myForm.controls.custom_address_area\\\">\\r\\n                </form-messages>\\r\\n              </md-hint>\\r\\n            </md-input-container>\\r\\n\\r\\n            <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n              <input\\r\\n                mdInput\\r\\n                placeholder=\\\"City\\\"\\r\\n                [formControl]=\\\"myForm.controls.custom_address_city\\\"\\r\\n                [(ngModel)]=\\\"customerManagement.billingAddress.city\\\"\\r\\n              />\\r\\n              <md-hint>\\r\\n                <form-messages [control]=\\\"myForm.controls.custom_address_city\\\">\\r\\n                </form-messages>\\r\\n              </md-hint>\\r\\n            </md-input-container>\\r\\n\\r\\n            <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n              <input\\r\\n                mdInput\\r\\n                required\\r\\n                placeholder=\\\"Choose State\\\"\\r\\n                [formControl]=\\\"myForm.controls.custom_address_state\\\"\\r\\n                [(ngModel)]=\\\"customerManagement.billingAddress.state\\\"\\r\\n                [mdAutocomplete]=\\\"address\\\"\\r\\n                (focus)=\\\"filterStates($event.target.value)\\\"\\r\\n                (keyup)=\\\"filterStates($event.target.value)\\\"\\r\\n              />\\r\\n              <md-autocomplete #address=\\\"mdAutocomplete\\\">\\r\\n                <md-option\\r\\n                  *ngFor=\\\"let option of filteredStates\\\"\\r\\n                  [value]=\\\"option.value\\\"\\r\\n                >\\r\\n                  {{ option.value }}\\r\\n                </md-option>\\r\\n              </md-autocomplete>\\r\\n              <md-hint>\\r\\n                <form-messages [control]=\\\"myForm.controls.custom_address_state\\\">\\r\\n                </form-messages>\\r\\n              </md-hint>\\r\\n            </md-input-container>\\r\\n\\r\\n            <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n              <input\\r\\n                mdInput\\r\\n                placeholder=\\\"Pincode\\\"\\r\\n                [formControl]=\\\"myForm.controls.custom_address_zipCode\\\"\\r\\n                [(ngModel)]=\\\"customerManagement.billingAddress.zipCode\\\"\\r\\n              />\\r\\n              <md-hint>\\r\\n                <form-messages\\r\\n                  [control]=\\\"myForm.controls.custom_address_zipCode\\\"\\r\\n                >\\r\\n                </form-messages>\\r\\n              </md-hint>\\r\\n            </md-input-container>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding: 10px\\\">\\r\\n            <span\\r\\n              class=\\\"padding-side\\\"\\r\\n              style=\\\"font-display: inherit ; display : block;\\\"\\r\\n            >\\r\\n              Billing Address\\r\\n            </span>\\r\\n\\r\\n            <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n              <input\\r\\n                mdInput\\r\\n                placeholder=\\\"Address Lane\\\"\\r\\n                [formControl]=\\\"myForm.controls.custom_shippingAddress_lane\\\"\\r\\n                [(ngModel)]=\\\"customerManagement.shippingAddress.lane\\\"\\r\\n              />\\r\\n              <md-hint>\\r\\n                <form-messages\\r\\n                  [control]=\\\"myForm.controls.custom_shippingAddress_lane\\\"\\r\\n                >\\r\\n                </form-messages>\\r\\n              </md-hint>\\r\\n            </md-input-container>\\r\\n\\r\\n            <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n              <input\\r\\n                mdInput\\r\\n                placeholder=\\\"Street\\\"\\r\\n                [formControl]=\\\"myForm.controls.custom_shippingAddress_street\\\"\\r\\n                [(ngModel)]=\\\"customerManagement.shippingAddress.street\\\"\\r\\n              />\\r\\n              <md-hint>\\r\\n                <form-messages\\r\\n                  [control]=\\\"myForm.controls.custom_shippingAddress_street\\\"\\r\\n                >\\r\\n                </form-messages>\\r\\n              </md-hint>\\r\\n            </md-input-container>\\r\\n\\r\\n            <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n              <input\\r\\n                mdInput\\r\\n                placeholder=\\\"Area\\\"\\r\\n                [formControl]=\\\"myForm.controls.custom_shippingAddress_area\\\"\\r\\n                [(ngModel)]=\\\"customerManagement.shippingAddress.area\\\"\\r\\n              />\\r\\n              <md-hint>\\r\\n                <form-messages\\r\\n                  [control]=\\\"myForm.controls.custom_shippingAddress_area\\\"\\r\\n                >\\r\\n                </form-messages>\\r\\n              </md-hint>\\r\\n            </md-input-container>\\r\\n\\r\\n            <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n              <input\\r\\n                mdInput\\r\\n                placeholder=\\\"City\\\"\\r\\n                [formControl]=\\\"myForm.controls.custom_shippingAddress_city\\\"\\r\\n                [(ngModel)]=\\\"customerManagement.shippingAddress.city\\\"\\r\\n              />\\r\\n              <md-hint>\\r\\n                <form-messages\\r\\n                  [control]=\\\"myForm.controls.custom_shippingAddress_city\\\"\\r\\n                >\\r\\n                </form-messages>\\r\\n              </md-hint>\\r\\n            </md-input-container>\\r\\n\\r\\n            <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n              <input\\r\\n                mdInput\\r\\n                required\\r\\n                placeholder=\\\"Choose State\\\"\\r\\n                [formControl]=\\\"myForm.controls.custom_shippingAddress_state\\\"\\r\\n                [(ngModel)]=\\\"customerManagement.shippingAddress.state\\\"\\r\\n                [mdAutocomplete]=\\\"shippingaddress\\\"\\r\\n                (focus)=\\\"filterStates($event.target.value)\\\"\\r\\n                (keyup)=\\\"filterStates($event.target.value)\\\"\\r\\n              />\\r\\n              <md-autocomplete #shippingaddress=\\\"mdAutocomplete\\\">\\r\\n                <md-option\\r\\n                  *ngFor=\\\"let option of filteredStates\\\"\\r\\n                  [value]=\\\"option.value\\\"\\r\\n                >\\r\\n                  {{ option.value }}\\r\\n                </md-option>\\r\\n              </md-autocomplete>\\r\\n              <md-hint>\\r\\n                <form-messages\\r\\n                  [control]=\\\"myForm.controls.custom_shippingAddress_state\\\"\\r\\n                >\\r\\n                </form-messages>\\r\\n              </md-hint>\\r\\n            </md-input-container>\\r\\n\\r\\n            <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n              <input\\r\\n                mdInput\\r\\n                placeholder=\\\"Pincode\\\"\\r\\n                [formControl]=\\\"myForm.controls.custom_shippingAddress_zipCode\\\"\\r\\n                [(ngModel)]=\\\"customerManagement.shippingAddress.zipCode\\\"\\r\\n              />\\r\\n              <md-hint>\\r\\n                <form-messages\\r\\n                  [control]=\\\"myForm.controls.custom_shippingAddress_zipCode\\\"\\r\\n                >\\r\\n                </form-messages>\\r\\n              </md-hint>\\r\\n            </md-input-container>\\r\\n            <div class=\\\"row end-xs\\\">\\r\\n              <button\\r\\n                md-raised-button\\r\\n                color=\\\"accent\\\"\\r\\n                [disabled]=\\\"!myForm.valid\\\"\\r\\n                (click)=\\\"save()\\\"\\r\\n              >\\r\\n                Update Customer\\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </md-card-content>\\r\\n    </md-card>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/customerdetails/customeredit.html\n// module id = ../../../../../src/app/components/admin/customerdetails/customeredit.html\n// module chunks = 1","module.exports = \"<!-- Editable Div Start -->\\r\\n\\r\\n<div class=\\\"row \\\">\\r\\n  <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n    <input\\r\\n      name=\\\"gstNo\\\"\\r\\n      mdInput\\r\\n      placeholder=\\\"GST Number\\\"\\r\\n      [readonly]=\\\"true\\\"\\r\\n      [(ngModel)]=\\\"customerManagement.gstNo\\\"\\r\\n    />\\r\\n  </md-input-container>\\r\\n</div>\\r\\n<div class=\\\"row \\\">\\r\\n  <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n    <input\\r\\n      name=\\\"firstName\\\"\\r\\n      mdInput\\r\\n      placeholder=\\\"Customer Name\\\"\\r\\n      [readonly]=\\\"true\\\"\\r\\n      [(ngModel)]=\\\"customerManagement.firstName\\\"\\r\\n    />\\r\\n  </md-input-container>\\r\\n  <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n    <input\\r\\n      name=\\\"companyname\\\"\\r\\n      mdInput\\r\\n      [readonly]=\\\"true\\\"\\r\\n      placeholder=\\\"Company Name\\\"\\r\\n      [formControl]=\\\"myForm.controls.custom_businessName\\\"\\r\\n      [(ngModel)]=\\\"customerManagement.businessName\\\"\\r\\n    />\\r\\n  </md-input-container>\\r\\n\\r\\n  <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n    <input\\r\\n      name=\\\"email\\\"\\r\\n      mdInput\\r\\n      [readonly]=\\\"true\\\"\\r\\n      placeholder=\\\"Email\\\"\\r\\n      [formControl]=\\\"myForm.controls.custom_email\\\"\\r\\n      [(ngModel)]=\\\"customerManagement.email\\\"\\r\\n    />\\r\\n  </md-input-container>\\r\\n\\r\\n  <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n    <input\\r\\n      name=\\\"mobile\\\"\\r\\n      mdInput\\r\\n      [readonly]=\\\"true\\\"\\r\\n      placeholder=\\\"Mobile\\\"\\r\\n      [formControl]=\\\"myForm.controls.custom_mobile\\\"\\r\\n      [(ngModel)]=\\\"customerManagement.mobile\\\"\\r\\n    />\\r\\n  </md-input-container>\\r\\n\\r\\n  <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n    <input\\r\\n      name=\\\"billingAddress-lane\\\"\\r\\n      mdInput\\r\\n      [readonly]=\\\"true\\\"\\r\\n      placeholder=\\\"Address Lane\\\"\\r\\n      [(ngModel)]=\\\"customerManagement.billingAddress.lane\\\"\\r\\n    />\\r\\n  </md-input-container>\\r\\n\\r\\n  <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n    <input\\r\\n      name=\\\"billingAddress-steet\\\"\\r\\n      mdInput\\r\\n      placeholder=\\\"Street\\\"\\r\\n      [readonly]=\\\"true\\\"\\r\\n      [(ngModel)]=\\\"customerManagement.billingAddress.street\\\"\\r\\n    />\\r\\n  </md-input-container>\\r\\n\\r\\n  <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n    <input\\r\\n      name=\\\"billingAddress-area\\\"\\r\\n      mdInput\\r\\n      placeholder=\\\"Area\\\"\\r\\n      [readonly]=\\\"true\\\"\\r\\n      [(ngModel)]=\\\"customerManagement.billingAddress.area\\\"\\r\\n    />\\r\\n  </md-input-container>\\r\\n\\r\\n  <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n    <input\\r\\n      name=\\\"billingAddress-city\\\"\\r\\n      mdInput\\r\\n      placeholder=\\\"City\\\"\\r\\n      [readonly]=\\\"true\\\"\\r\\n      [(ngModel)]=\\\"customerManagement.billingAddress.city\\\"\\r\\n    />\\r\\n  </md-input-container>\\r\\n\\r\\n  <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n    <input\\r\\n      name=\\\"billingAddress-state\\\"\\r\\n      mdInput\\r\\n      [readonly]=\\\"true\\\"\\r\\n      placeholder=\\\"Choose State\\\"\\r\\n      [(ngModel)]=\\\"customerManagement.billingAddress.state\\\"\\r\\n    />\\r\\n  </md-input-container>\\r\\n\\r\\n  <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n    <input\\r\\n      name=\\\"billingAddress-zipcode\\\"\\r\\n      mdInput\\r\\n      [readonly]=\\\"true\\\"\\r\\n      placeholder=\\\"Pincode\\\"\\r\\n      [(ngModel)]=\\\"customerManagement.billingAddress.zipCode\\\"\\r\\n    />\\r\\n  </md-input-container>\\r\\n  <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n    <input\\r\\n      name=\\\"billingAddress-discount\\\"\\r\\n      mdInput\\r\\n      [readonly]=\\\"true\\\"\\r\\n      placeholder=\\\"Discount\\\"\\r\\n      [(ngModel)]=\\\"customerManagement.billingAddress.discount\\\"\\r\\n    />\\r\\n  </md-input-container>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"title padding-hide\\\">Shipping Address</div>\\r\\n\\r\\n<div class=\\\"row \\\" *ngIf=\\\"!isSameBillingAddress\\\">\\r\\n  <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n    <input\\r\\n      name=\\\"shipping-lane\\\"\\r\\n      mdInput\\r\\n      [readonly]=\\\"true\\\"\\r\\n      placeholder=\\\"Address Lane\\\"\\r\\n      [(ngModel)]=\\\"customerManagement.shippingAddress.lane\\\"\\r\\n    />\\r\\n  </md-input-container>\\r\\n\\r\\n  <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n    <input\\r\\n      name=\\\"shipping-street\\\"\\r\\n      mdInput\\r\\n      [readonly]=\\\"true\\\"\\r\\n      placeholder=\\\"Street\\\"\\r\\n      [(ngModel)]=\\\"customerManagement.shippingAddress.street\\\"\\r\\n    />\\r\\n  </md-input-container>\\r\\n\\r\\n  <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n    <input\\r\\n      name=\\\"shipping-area\\\"\\r\\n      mdInput\\r\\n      [readonly]=\\\"true\\\"\\r\\n      placeholder=\\\"Area\\\"\\r\\n      [(ngModel)]=\\\"customerManagement.shippingAddress.area\\\"\\r\\n    />\\r\\n  </md-input-container>\\r\\n\\r\\n  <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n    <input\\r\\n      name=\\\"shipping-city\\\"\\r\\n      [readonly]=\\\"true\\\"\\r\\n      mdInput\\r\\n      placeholder=\\\"City\\\"\\r\\n      [(ngModel)]=\\\"customerManagement.shippingAddress.city\\\"\\r\\n    />\\r\\n  </md-input-container>\\r\\n\\r\\n  <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n    <input\\r\\n      name=\\\"shipping-state\\\"\\r\\n      mdInput\\r\\n      [readonly]=\\\"true\\\"\\r\\n      placeholder=\\\"Choose State\\\"\\r\\n      [(ngModel)]=\\\"customerManagement.shippingAddress.state\\\"\\r\\n    />\\r\\n  </md-input-container>\\r\\n\\r\\n  <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n    <input\\r\\n      name=\\\"shipping-zipcode\\\"\\r\\n      mdInput\\r\\n      [readonly]=\\\"true\\\"\\r\\n      placeholder=\\\"Pincode\\\"\\r\\n      [(ngModel)]=\\\"customerManagement.shippingAddress.zipCode\\\"\\r\\n    />\\r\\n  </md-input-container>\\r\\n</div>\\r\\n<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end end\\\">\\r\\n  <button\\r\\n    *ngIf=\\\"isEditable == 'false'\\\"\\r\\n    md-raised-button\\r\\n    color=\\\"accent\\\"\\r\\n    (click)=\\\"done()\\\"\\r\\n  >\\r\\n    Done\\r\\n  </button>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/customerdetails/details.component.html\n// module id = ../../../../../src/app/components/admin/customerdetails/details.component.html\n// module chunks = 1","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { AppService } from \"../../../shared/service/app.service\";\r\nimport { AnimationService } from \"../../../shared/service/animation.service\";\r\nimport { RestService } from \"./../../../common/rest.service\";\r\nimport { Prop } from \"./../../../common/props\";\r\nimport { CustomerFormGroup } from \"../../../forms/customer.form\";\r\nimport { CustomManagement } from \"./../../../entities/custommanagement\";\r\nimport { Address } from \"../../../entities/address.entity\";\r\n\r\n@Component({\r\n  selector: \"app-details\",\r\n  templateUrl: \"./details.component.html\"\r\n})\r\nexport class DetailsComponent {\r\n  mode: string;\r\n  myForm: any = CustomerFormGroup.init();\r\n  public isEditable = false;\r\n  @Input()\r\n  customerManagement: CustomManagement;\r\n  isSameBillingAddress: boolean = false;\r\n\r\n  filteredStates: any[] = [];\r\n\r\n  constructor(\r\n    private appService: AppService,\r\n    private restService: RestService\r\n  ) {\r\n    this.customerManagement = new CustomManagement();\r\n    // this.customerManagement.billingAddress = new Address();\r\n\r\n    this.customerManagement = new CustomManagement();\r\n    CustomerFormGroup.details(this.myForm);\r\n    CustomerFormGroup.address(this.myForm);\r\n    CustomerFormGroup.taxGroup(this.myForm);\r\n    this.isEditable = this.appService.getParam(\"isEditable\");\r\n  }\r\n  ngOnInit() {\r\n    //  this.paymentTypeLoad();\r\n    // this.stateLoad();\r\n    // this.changeAddress();\r\n    // this.changePinCode();\r\n    this.retreiveCustomerById();\r\n  }\r\n\r\n  changeAddress() {\r\n    if (this.customerManagement.isShippingAddress) {\r\n      CustomerFormGroup.shippingAddress(this.myForm, false);\r\n    } else {\r\n      CustomerFormGroup.shippingAddress(this.myForm, true);\r\n    }\r\n  }\r\n\r\n  // changePinCode(){\r\n  //   if(this.customerManagement.shippingAddress.zipCode == null){\r\n  //     this.customerManagement.shippingAddress.zipCode = this.customerManagement.billingAddress.zipCode;\r\n  //   }\r\n\r\n  // }\r\n\r\n  paymentTypeList: any[] = [];\r\n  paymentTypeLoad() {\r\n    this.restService.dataload(\"Payment\").subscribe(results => {\r\n      this.paymentTypeList = results;\r\n    });\r\n  }\r\n\r\n  focusOutFunction() {\r\n    let array: any = [];\r\n    this.stateList.forEach(item => {\r\n      if (this.customerManagement.billingAddress.state == item[0]) {\r\n        array.push(item[0]);\r\n      }\r\n    });\r\n    console.log(array);\r\n    if (array.length == 0) {\r\n      // this.appService.showMessage('Please Select Correct State Value')\r\n      this.customerManagement.billingAddress.state = null;\r\n    }\r\n  }\r\n  save() {\r\n    console.log(\r\n      \"this.customerManagement : \" +\r\n        this.customerManagement.billingAddress.state\r\n    );\r\n    this.restService\r\n      .customerUpdate(this.customerManagement)\r\n      .subscribe(results => {\r\n        if (results) {\r\n          this.customerManagement = results;\r\n          this.appService.showMessage(\"Updated successfully.\");\r\n        }\r\n      });\r\n  }\r\n  done() {\r\n    this.appService.navigate(\"/admin/customersearch\", []);\r\n  }\r\n  finish() {\r\n    this.appService.navigate(\"/admin/customersearch\", []);\r\n  }\r\n\r\n  stateList: any[] = [];\r\n  stateLoad() {\r\n    //this.restService.dataloadFromFile()\r\n    this.restService\r\n      .dataloadFromFile(\"./assets/json/states.json\")\r\n      .subscribe(results => {\r\n        this.stateList = results[\"states\"];\r\n        console.log(this.stateList);\r\n      });\r\n  }\r\n\r\n  filterStates(val: string) {\r\n    console.log(val);\r\n    this.filteredStates =\r\n      val && val != \"\"\r\n        ? this.stateList.filter(\r\n            s => s[0].toLowerCase().indexOf(val.toLowerCase()) >= 0\r\n          )\r\n        : this.stateList;\r\n  }\r\n\r\n  retreiveCustomerById() {\r\n    this.restService\r\n      .retreiveCustomerById(this.appService.getParam(\"id\"))\r\n      .subscribe(results => {\r\n        this.customerManagement = results;\r\n      });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/customerdetails/details.component.ts","module.exports = \"<div style=\\\"overflow-y:scroll;height:500px;overflow-x: hidden;\\\">\\r\\n  <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-around center\\\">\\r\\n    <div\\r\\n      fxFlex=\\\"100\\\"\\r\\n      fxFlex.md=\\\"100\\\"\\r\\n      fxFlex.lg=\\\"100\\\"\\r\\n      fxFlex.xs=\\\"100\\\"\\r\\n      fxFlex.sm=\\\"100\\\"\\r\\n    >\\r\\n      <button md-raised-button color=\\\"accent\\\" (click)=\\\"print()\\\">\\r\\n        Print\\r\\n      </button>\\r\\n      <button md-raised-button color=\\\"accent\\\" (click)=\\\"cancel()\\\">\\r\\n        Cancel\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div id=\\\"component1\\\">\\r\\n    <div\\r\\n      fxLayout=\\\"row wrap\\\"\\r\\n      fxLayoutAlign=\\\"start start\\\"\\r\\n      style=\\\"margin-top:15px;margin-bottom:5px\\\"\\r\\n    >\\r\\n      <div\\r\\n        fxFlex=\\\"100\\\"\\r\\n        fxFlex.md=\\\"100\\\"\\r\\n        fxFlex.lg=\\\"100\\\"\\r\\n        fxFlex.xs=\\\"100\\\"\\r\\n        fxFlex.sm=\\\"100\\\"\\r\\n      >\\r\\n        <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n          <div\\r\\n            fxFlex=\\\"50\\\"\\r\\n            fxFlex.md=\\\"50\\\"\\r\\n            fxFlex.lg=\\\"50\\\"\\r\\n            fxFlex.xs=\\\"100\\\"\\r\\n            fxFlex.sm=\\\"100\\\"\\r\\n          >\\r\\n            <span\\r\\n              style=\\\"font-size:15px;font-family:arial, sans-serif;font-weight:600;\\\"\\r\\n              >{{ companyInfo.name }}</span\\r\\n            >\\r\\n          </div>\\r\\n          <div\\r\\n            fxFlex=\\\"50\\\"\\r\\n            fxFlex.md=\\\"50\\\"\\r\\n            fxFlex.lg=\\\"50\\\"\\r\\n            fxFlex.xs=\\\"100\\\"\\r\\n            fxFlex.sm=\\\"100\\\"\\r\\n          >\\r\\n            <span\\r\\n              style=\\\"font-size:15px;font-family:arial, sans-serif;font-weight:600;float:right\\\"\\r\\n              >Total : ₹ {{ dataSource.subTotal }}</span\\r\\n            >\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div\\r\\n      fxLayout=\\\"row wrap\\\"\\r\\n      fxLayoutAlign=\\\"start start\\\"\\r\\n      style=\\\"margin-top:5px;margin-bottom:5px\\\"\\r\\n    >\\r\\n      <div\\r\\n        fxFlex=\\\"100\\\"\\r\\n        fxFlex.md=\\\"100\\\"\\r\\n        fxFlex.lg=\\\"100\\\"\\r\\n        fxFlex.xs=\\\"100\\\"\\r\\n        fxFlex.sm=\\\"100\\\"\\r\\n      >\\r\\n        <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n          <div\\r\\n            fxFlex=\\\"50\\\"\\r\\n            fxFlex.md=\\\"50\\\"\\r\\n            fxFlex.lg=\\\"50\\\"\\r\\n            fxFlex.xs=\\\"100\\\"\\r\\n            fxFlex.sm=\\\"100\\\"\\r\\n          >\\r\\n            <div fxLayoutGap=\\\"30px\\\">\\r\\n              <span\\r\\n                style=\\\"font-size:12px;font-family:arial, sans-serif;font-weight:700;\\\"\\r\\n                >GSTIN\\r\\n              </span>\\r\\n\\r\\n              <span style=\\\"font-size:12px;font-family:arial, sans-serif\\\">{{\\r\\n                companyInfo.gstin\\r\\n              }}</span>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div\\r\\n            fxFlex=\\\"50\\\"\\r\\n            fxFlex.md=\\\"50\\\"\\r\\n            fxFlex.lg=\\\"50\\\"\\r\\n            fxFlex.xs=\\\"100\\\"\\r\\n            fxFlex.sm=\\\"100\\\"\\r\\n          >\\r\\n            <div style=\\\"float:right\\\">\\r\\n              <span\\r\\n                style=\\\"font-family:arial, sans-serif;font-size:12px;font-weight:700\\\"\\r\\n                >Invoice Date :\\r\\n              </span>\\r\\n              <span\\r\\n                style=\\\"font-family:arial, sans-serif;font-size:12px;float:right\\\"\\r\\n                >{{ dataSource.invoiceDate | date }}</span\\r\\n              >\\r\\n              <br />\\r\\n              <span\\r\\n                style=\\\"font-family:arial, sans-serif;font-size:12px;font-weight:700\\\"\\r\\n                >Invoice No :\\r\\n              </span>\\r\\n              <span\\r\\n                style=\\\"font-family:arial, sans-serif;font-size:12px;float:right\\\"\\r\\n                >{{ dataSource.invoiceNumber }}</span\\r\\n              >\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n      <div\\r\\n        fxFlex=\\\"100\\\"\\r\\n        fxFlex.md=\\\"100\\\"\\r\\n        fxFlex.lg=\\\"100\\\"\\r\\n        fxFlex.xs=\\\"100\\\"\\r\\n        fxFlex.sm=\\\"100\\\"\\r\\n      >\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <div fxFlex=\\\"35\\\">\\r\\n            <div\\r\\n              style=\\\"width:100%; border:1px solid rgb(102, 98, 98);margin-top:15px\\\"\\r\\n            ></div>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"30\\\">\\r\\n            <div style=\\\"text-align: center;\\\">\\r\\n              <span\\r\\n                align=\\\"center\\\"\\r\\n                style=\\\"font-family:arial, sans-serif;font-size:28px;\\\"\\r\\n                >Tax Invoice</span\\r\\n              >\\r\\n            </div>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"35\\\">\\r\\n            <div\\r\\n              style=\\\"width:100%; border:1px solid rgb(102, 98, 98);margin-top:15px\\\"\\r\\n            ></div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div style=\\\"padding-bottom:10px\\\"></div>\\r\\n        <!-- <h3 style=\\\"font-family:arial, sans-serif;font-size:12px\\\">{{ dataSource.company.name }}</h3> -->\\r\\n\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n          <div\\r\\n            fxFlex=\\\"65\\\"\\r\\n            fxFlex.md=\\\"65\\\"\\r\\n            fxFlex.lg=\\\"65\\\"\\r\\n            fxFlex.xs=\\\"100\\\"\\r\\n            fxFlex.sm=\\\"100\\\"\\r\\n          >\\r\\n            <!-- <span style=\\\"font-family:arial, sans-serif;font-size:12px\\\">GSTIN:{{ dataSource.company.gstin }}</span>\\r\\n            <br>\\r\\n          <span style=\\\"font-family:arial, sans-serif;font-size:12px\\\">PAN: {{ dataSource.company.pan }}</span> -->\\r\\n\\r\\n            <!-- <span style=\\\"font-family:arial, sans-serif;font-size:12px\\\">PHONE: {{ dataSource.company.mobile }}</span>\\r\\n            <br>\\r\\n          <span style=\\\"font-family:arial, sans-serif;font-size:12px\\\">EMAIL: {{ dataSource.company.email }}</span> -->\\r\\n          </div>\\r\\n          <!-- </ng-container> -->\\r\\n        </div>\\r\\n\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n          <div\\r\\n            fxFlex=\\\"40\\\"\\r\\n            fxFlex.md=\\\"40\\\"\\r\\n            fxFlex.lg=\\\"40\\\"\\r\\n            fxFlex.xs=\\\"100\\\"\\r\\n            fxFlex.sm=\\\"100\\\"\\r\\n          >\\r\\n            <span\\r\\n              style=\\\"font-weight: 600;padding-top:10px;font-family:arial, sans-serif;font-size:12px;font-weight:700\\\"\\r\\n            >\\r\\n              Customer Name:\\r\\n            </span>\\r\\n            <span\\r\\n              style=\\\"font-weight: 600;padding-top:10px;font-family:arial, sans-serif;font-size:12px\\\"\\r\\n            >\\r\\n              {{ dataSource.customer.firstName | titlecase }}</span\\r\\n            >\\r\\n            <br />\\r\\n            <span\\r\\n              style=\\\"font-weight: 600;padding-top:10px;font-family:arial, sans-serif;font-size:12px;font-weight:700\\\"\\r\\n            >\\r\\n              Customer GSTIN:\\r\\n            </span>\\r\\n            <span\\r\\n              style=\\\"font-weight: 600;padding-top:10px;font-family:arial, sans-serif;font-size:12px\\\"\\r\\n              >{{ dataSource.customer.gstNo }}</span\\r\\n            >\\r\\n          </div>\\r\\n          <div\\r\\n            fxFlex=\\\"30\\\"\\r\\n            fxFlex.md=\\\"30\\\"\\r\\n            fxFlex.lg=\\\"30\\\"\\r\\n            fxFlex.xs=\\\"100\\\"\\r\\n            fxFlex.sm=\\\"100\\\"\\r\\n          >\\r\\n            <div\\r\\n              style=\\\"font-weight: 600;padding-top:10px;font-family:arial, sans-serif;font-size:12px;font-weight:700\\\"\\r\\n            >\\r\\n              Billing Address\\r\\n            </div>\\r\\n            <div style=\\\"font-family:arial, sans-serif;font-size:12px\\\">\\r\\n              {{ dataSource.customer.businessName | titlecase }}\\r\\n            </div>\\r\\n\\r\\n            <div\\r\\n              *ngIf=\\\"dataSource.customer.billingAddress.lane\\\"\\r\\n              style=\\\"font-family:arial, sans-serif;font-size:12px\\\"\\r\\n            >\\r\\n              {{ dataSource.customer.billingAddress.lane }}\\r\\n              <span\\r\\n                *ngIf=\\\"dataSource.customer.billingAddress.street\\\"\\r\\n                style=\\\"font-family:arial, sans-serif;font-size:12px\\\"\\r\\n              >\\r\\n                {{ dataSource.customer.billingAddress.street }}</span\\r\\n              >\\r\\n            </div>\\r\\n\\r\\n            <div\\r\\n              *ngIf=\\\"dataSource.customer.billingAddress.area\\\"\\r\\n              style=\\\"font-family:arial, sans-serif;font-size:12px\\\"\\r\\n            >\\r\\n              {{ dataSource.customer.billingAddress.area }}\\r\\n            </div>\\r\\n\\r\\n            <div\\r\\n              *ngIf=\\\"dataSource.customer.billingAddress.city\\\"\\r\\n              style=\\\"font-family:arial, sans-serif;font-size:12px\\\"\\r\\n            >\\r\\n              {{ dataSource.customer.billingAddress.city }}\\r\\n            </div>\\r\\n\\r\\n            <div\\r\\n              *ngIf=\\\"dataSource.customer.billingAddress.state\\\"\\r\\n              style=\\\"font-family:arial, sans-serif;font-size:12px\\\"\\r\\n            >\\r\\n              {{ dataSource.customer.billingAddress.state }} -\\r\\n\\r\\n              <span\\r\\n                *ngIf=\\\"dataSource.customer.billingAddress.zipCode\\\"\\r\\n                style=\\\"font-family:arial, sans-serif;font-size:12px\\\"\\r\\n              >\\r\\n                {{ dataSource.customer.billingAddress.zipCode }}\\r\\n              </span>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div\\r\\n            fxFlex=\\\"30\\\"\\r\\n            fxFlex.md=\\\"30\\\"\\r\\n            fxFlex.lg=\\\"30\\\"\\r\\n            fxFlex.xs=\\\"100\\\"\\r\\n            fxFlex.sm=\\\"100\\\"\\r\\n          >\\r\\n            <div\\r\\n              style=\\\"font-weight: 600;padding-top:10px;font-family:arial, sans-serif;font-size:12px;font-weight:700\\\"\\r\\n            >\\r\\n              Shipping Address\\r\\n            </div>\\r\\n\\r\\n            <div style=\\\"font-family:arial, sans-serif;font-size:12px\\\">\\r\\n              {{ dataSource.customer.businessName | titlecase }}\\r\\n            </div>\\r\\n\\r\\n            <div\\r\\n              *ngIf=\\\"dataSource.customer.shippingAddress.street\\\"\\r\\n              style=\\\"font-family:arial, sans-serif;font-size:12px\\\"\\r\\n            >\\r\\n              {{ dataSource.customer.shippingAddress.street }}\\r\\n              <span\\r\\n                *ngIf=\\\"dataSource.customer.shippingAddress.area\\\"\\r\\n                style=\\\"font-family:arial, sans-serif;font-size:12px\\\"\\r\\n              >\\r\\n                {{ dataSource.customer.shippingAddress.area }}\\r\\n              </span>\\r\\n            </div>\\r\\n\\r\\n            <div\\r\\n              *ngIf=\\\"dataSource.customer.shippingAddress.city\\\"\\r\\n              style=\\\"font-family:arial, sans-serif;font-size:12px\\\"\\r\\n            >\\r\\n              {{ dataSource.customer.shippingAddress.city }}\\r\\n            </div>\\r\\n\\r\\n            <div\\r\\n              *ngIf=\\\"dataSource.customer.shippingAddress.state\\\"\\r\\n              style=\\\"font-family:arial, sans-serif;font-size:12px\\\"\\r\\n            >\\r\\n              {{ dataSource.customer.shippingAddress.state }} -\\r\\n              <span\\r\\n                *ngIf=\\\"dataSource.customer.shippingAddress.zipCode\\\"\\r\\n                style=\\\"font-family:arial, sans-serif;font-size:12px\\\"\\r\\n              >\\r\\n                {{ dataSource.customer.shippingAddress.zipCode }}</span\\r\\n              >\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n          <div fxFlex=\\\"100\\\">\\r\\n            <div fxLayout=\\\"row wrap\\\" style=\\\"margin-top:10px;\\\">\\r\\n              <div fxFlex=\\\"33.3333\\\">\\r\\n                <span\\r\\n                  style=\\\"font-weight:700;margin-bottom:10px;font-family:arial, sans-serif;font-size:12px\\\"\\r\\n                  >Payment Terms</span\\r\\n                >\\r\\n              </div>\\r\\n              <div fxFlex=\\\"33.3333\\\">\\r\\n                <span\\r\\n                  style=\\\"font-weight:700;margin-bottom:10px;font-family:arial, sans-serif;font-size:12px\\\"\\r\\n                  >Due Date</span\\r\\n                >\\r\\n                <span\\r\\n                  style=\\\"padding: 3px;font-family:arial, sans-serif;font-size:12px\\\"\\r\\n                >\\r\\n                  {{ dataSource.dueDate | date }}\\r\\n                </span>\\r\\n              </div>\\r\\n              <div fxFlex=\\\"33.3333\\\">\\r\\n                <span\\r\\n                  style=\\\"font-weight:700;margin-bottom:10px;font-family:arial, sans-serif;font-size:12px\\\"\\r\\n                  >Place Of Supply</span\\r\\n                >\\r\\n                <span\\r\\n                  style=\\\"padding: 3px;font-family:arial, sans-serif;font-size:12px\\\"\\r\\n                >\\r\\n                  {{ dataSource.customer.shippingAddress.state }}\\r\\n                </span>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div style=\\\"padding-bottom:21px\\\"></div>\\r\\n\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n          <!-- <table *ngIf=\\\"stockItemDataSource.length <= 0\\\">\\r\\n            <tbody>\\r\\n              <tr>\\r\\n                <td>No data found</td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table> -->\\r\\n          <table\\r\\n            style=\\\" font-family: arial, sans-serif;\\r\\n      border-collapse: collapse;\\r\\n      width: 100%;font-size:12px\\\"\\r\\n            *ngIf=\\\"stockItemDataSource\\\"\\r\\n          >\\r\\n            <tr>\\r\\n              <th\\r\\n                style=\\\" border: 1px solid #dddddd;\\r\\n          text-align: left;\\r\\n          padding: 8px;font-weight:700\\\"\\r\\n              >\\r\\n                Item\\r\\n              </th>\\r\\n              <th\\r\\n                style=\\\" border: 1px solid #dddddd;\\r\\n          text-align: left;\\r\\n          padding: 8px;font-weight:700\\\"\\r\\n              >\\r\\n                Hsn\\r\\n              </th>\\r\\n              <th\\r\\n                style=\\\" border: 1px solid #dddddd;\\r\\n          text-align: left;\\r\\n          padding: 8px;font-weight:700\\\"\\r\\n              >\\r\\n                Qty\\r\\n              </th>\\r\\n              <th\\r\\n                style=\\\" border: 1px solid #dddddd;\\r\\n          text-align: left;\\r\\n          padding: 8px;font-weight:700;\\\"\\r\\n              >\\r\\n                Rate\\r\\n              </th>\\r\\n              <th\\r\\n                style=\\\" border: 1px solid #dddddd;\\r\\n          text-align: left;\\r\\n          padding: 8px;font-weight:700;\\\"\\r\\n              >\\r\\n                Discount\\r\\n              </th>\\r\\n              <th\\r\\n                style=\\\" border: 1px solid #dddddd;\\r\\n          text-align: left;\\r\\n          padding: 8px;font-weight:700;\\\"\\r\\n              >\\r\\n                Taxable Value(₹)\\r\\n              </th>\\r\\n              <th\\r\\n                style=\\\" border: 1px solid #dddddd;\\r\\n          text-align: left;\\r\\n          padding: 8px;font-weight:700;\\\"\\r\\n              >\\r\\n                SGST ₹\\r\\n              </th>\\r\\n              <th\\r\\n                style=\\\" border: 1px solid #dddddd;\\r\\n          text-align: left;\\r\\n          padding: 8px;font-weight:700;\\\"\\r\\n              >\\r\\n                CGST ₹\\r\\n              </th>\\r\\n              <th\\r\\n                style=\\\" border: 1px solid #dddddd;\\r\\n          text-align: left;\\r\\n          padding: 8px;font-weight:700;\\\"\\r\\n              >\\r\\n                IGST ₹\\r\\n              </th>\\r\\n              <th\\r\\n                style=\\\" border: 1px solid #dddddd;\\r\\n          text-align: left;\\r\\n          padding: 8px;font-weight:700;\\\"\\r\\n              >\\r\\n                CESS ₹\\r\\n              </th>\\r\\n              <th\\r\\n                style=\\\" border: 1px solid #dddddd;\\r\\n          text-align: left;\\r\\n          padding: 8px;font-weight:700;\\\"\\r\\n              >\\r\\n                Total ₹\\r\\n              </th>\\r\\n            </tr>\\r\\n            <tr *ngFor=\\\"let row of stockItemDataSource\\\">\\r\\n              <td\\r\\n                style=\\\" border: 1px solid #dddddd;\\r\\n            text-align: left;\\r\\n            padding: 8px;\\\"\\r\\n              >\\r\\n                {{ row.stockItemId.productName }}\\r\\n              </td>\\r\\n              <td\\r\\n                style=\\\" border: 1px solid #dddddd;text-align: left;padding: 8px;\\\"\\r\\n              >\\r\\n                {{ row.stockItemId.hsnCodeNames }}\\r\\n              </td>\\r\\n              <td\\r\\n                style=\\\" border: 1px solid #dddddd;text-align: left;padding: 8px;\\\"\\r\\n              >\\r\\n                {{ row.quantity }}\\r\\n              </td>\\r\\n              <td\\r\\n                style=\\\" border: 1px solid #dddddd;text-align: left;padding: 8px;\\\"\\r\\n              >\\r\\n                {{ row.rate }}\\r\\n              </td>\\r\\n              <td\\r\\n                style=\\\" border: 1px solid #dddddd;text-align: left;padding: 8px;\\\"\\r\\n              >\\r\\n                {{ row.discountAmount }}\\r\\n              </td>\\r\\n              <td\\r\\n                style=\\\" border: 1px solid #dddddd;text-align: left;padding: 8px;\\\"\\r\\n              >\\r\\n                {{ row.taxAmount }}\\r\\n              </td>\\r\\n              <td\\r\\n                style=\\\" border: 1px solid #dddddd;text-align: left;padding: 8px;\\\"\\r\\n              >\\r\\n                {{ row.sgstAmount }}\\r\\n              </td>\\r\\n              <td\\r\\n                style=\\\" border: 1px solid #dddddd;text-align: left;padding: 8px;\\\"\\r\\n              >\\r\\n                {{ row.cgstAmount }}\\r\\n              </td>\\r\\n              <td\\r\\n                style=\\\" border: 1px solid #dddddd;text-align: left;padding: 8px; \\\"\\r\\n              >\\r\\n                {{ row.igstAmount }}\\r\\n              </td>\\r\\n              <td\\r\\n                style=\\\" border: 1px solid #dddddd;text-align: left;padding: 8px;\\\"\\r\\n              >\\r\\n                {{ row.cessAmount }}\\r\\n              </td>\\r\\n              <td\\r\\n                style=\\\" border: 1px solid #dddddd;text-align: left;padding: 8px;\\\"\\r\\n              >\\r\\n                {{ row.totalAfterTax }}\\r\\n              </td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <th></th>\\r\\n              <th></th>\\r\\n              <th></th>\\r\\n              <th\\r\\n                style=\\\"\\r\\n          text-align: left;\\r\\n          padding: 8px;font-weight:700;\\\"\\r\\n              >\\r\\n                Total(₹)\\r\\n              </th>\\r\\n              <th></th>\\r\\n              <th style=\\\"text-align: left;padding: 8px;font-weight:700;\\\">\\r\\n                {{ dataSource.cumilativeTax }}\\r\\n              </th>\\r\\n              <th style=\\\" text-align: left;padding: 8px;font-weight:700;\\\">\\r\\n                {{ dataSource.cumilativeSgst }}\\r\\n              </th>\\r\\n              <th style=\\\" text-align: left;padding: 8px;font-weight:700;\\\">\\r\\n                {{ dataSource.cumilativeCgst }}\\r\\n              </th>\\r\\n              <th style=\\\"text-align: left;padding: 8px;font-weight:700;\\\">\\r\\n                {{ dataSource.cumilativeIgst }}\\r\\n              </th>\\r\\n              <th style=\\\"text-align: left;padding: 8px;font-weight:700;\\\">\\r\\n                {{ dataSource.cessAmount }}\\r\\n              </th>\\r\\n              <th style=\\\" text-align: left;padding: 8px;font-weight:700;\\\">\\r\\n                {{ dataSource.subTotal }}\\r\\n              </th>\\r\\n            </tr>\\r\\n          </table>\\r\\n        </div>\\r\\n        <div style=\\\"padding-bottom:10px\\\"></div>\\r\\n        <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n          <div\\r\\n            fxFlex=\\\"100\\\"\\r\\n            fxFlex.md=\\\"100\\\"\\r\\n            fxFlex.lg=\\\"100\\\"\\r\\n            fxFlex.xs=\\\"100\\\"\\r\\n            fxFlex.sm=\\\"100\\\"\\r\\n          >\\r\\n            <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n              <div\\r\\n                fxFlex=\\\"50\\\"\\r\\n                fxFlex.md=\\\"50\\\"\\r\\n                fxFlex.lg=\\\"50\\\"\\r\\n                fxFlex.xs=\\\"100\\\"\\r\\n                fxFlex.sm=\\\"100\\\"\\r\\n              >\\r\\n                <div style=\\\"text-align: right;padding:0px 10px\\\">\\r\\n                  <span\\r\\n                    style=\\\"font-family:arial, sans-serif;font-size:14px;font-weight:500\\\"\\r\\n                    >Taxable Amount :\\r\\n                  </span>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div\\r\\n                fxFlex=\\\"50\\\"\\r\\n                fxFlex.md=\\\"50\\\"\\r\\n                fxFlex.lg=\\\"50\\\"\\r\\n                fxFlex.xs=\\\"100\\\"\\r\\n                fxFlex.sm=\\\"100\\\"\\r\\n              >\\r\\n                <div style=\\\"text-align: right;padding:0px 10px\\\">\\r\\n                  <span\\r\\n                    style=\\\"font-family:arial, sans-serif;font-size:13px;font-weight:500\\\"\\r\\n                    >₹ {{ dataSource.totalBeforeTax }}</span\\r\\n                  >\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n          <div\\r\\n            fxFlex=\\\"100\\\"\\r\\n            fxFlex.md=\\\"100\\\"\\r\\n            fxFlex.lg=\\\"100\\\"\\r\\n            fxFlex.xs=\\\"100\\\"\\r\\n            fxFlex.sm=\\\"100\\\"\\r\\n          >\\r\\n            <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n              <div\\r\\n                fxFlex=\\\"50\\\"\\r\\n                fxFlex.md=\\\"50\\\"\\r\\n                fxFlex.lg=\\\"50\\\"\\r\\n                fxFlex.xs=\\\"100\\\"\\r\\n                fxFlex.sm=\\\"100\\\"\\r\\n              >\\r\\n                <div style=\\\"text-align: right;padding:0px 10px\\\">\\r\\n                  <span\\r\\n                    style=\\\"font-family:arial, sans-serif;font-size:14px;font-weight:500\\\"\\r\\n                    >Total Tax :\\r\\n                  </span>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div\\r\\n                fxFlex=\\\"50\\\"\\r\\n                fxFlex.md=\\\"50\\\"\\r\\n                fxFlex.lg=\\\"50\\\"\\r\\n                fxFlex.xs=\\\"100\\\"\\r\\n                fxFlex.sm=\\\"100\\\"\\r\\n              >\\r\\n                <div style=\\\"text-align: right;padding:0px 10px\\\">\\r\\n                  <span\\r\\n                    style=\\\"font-family:arial, sans-serif;font-size:13px;font-weight:500\\\"\\r\\n                  >\\r\\n                    ₹ {{ dataSource.cumilativeTax }}\\r\\n                  </span>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n          <div\\r\\n            fxFlex=\\\"100\\\"\\r\\n            fxFlex.md=\\\"100\\\"\\r\\n            fxFlex.lg=\\\"100\\\"\\r\\n            fxFlex.xs=\\\"100\\\"\\r\\n            fxFlex.sm=\\\"100\\\"\\r\\n          >\\r\\n            <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n              <div\\r\\n                fxFlex=\\\"50\\\"\\r\\n                fxFlex.md=\\\"50\\\"\\r\\n                fxFlex.lg=\\\"50\\\"\\r\\n                fxFlex.xs=\\\"100\\\"\\r\\n                fxFlex.sm=\\\"100\\\"\\r\\n              >\\r\\n                <div style=\\\"text-align: right;padding:0px 10px\\\">\\r\\n                  <span\\r\\n                    style=\\\"font-family:arial, sans-serif;font-size:14px;font-weight:500\\\"\\r\\n                    >Invoice Total :\\r\\n                  </span>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div\\r\\n                fxFlex=\\\"50\\\"\\r\\n                fxFlex.md=\\\"50\\\"\\r\\n                fxFlex.lg=\\\"50\\\"\\r\\n                fxFlex.xs=\\\"100\\\"\\r\\n                fxFlex.sm=\\\"100\\\"\\r\\n              >\\r\\n                <div style=\\\"text-align: right;padding:0px 10px\\\">\\r\\n                  <span\\r\\n                    style=\\\"font-family:arial, sans-serif;font-size:13px;font-weight:500\\\"\\r\\n                  >\\r\\n                    ₹ {{ dataSource.subTotal }}\\r\\n                  </span>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n          <div\\r\\n            fxFlex=\\\"100\\\"\\r\\n            fxFlex.md=\\\"100\\\"\\r\\n            fxFlex.lg=\\\"100\\\"\\r\\n            fxFlex.xs=\\\"100\\\"\\r\\n            fxFlex.sm=\\\"100\\\"\\r\\n          >\\r\\n            <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n              <div\\r\\n                fxFlex=\\\"50\\\"\\r\\n                fxFlex.md=\\\"50\\\"\\r\\n                fxFlex.lg=\\\"50\\\"\\r\\n                fxFlex.xs=\\\"100\\\"\\r\\n                fxFlex.sm=\\\"100\\\"\\r\\n              >\\r\\n                <div style=\\\"text-align: right;padding:0px 10px\\\">\\r\\n                  <span\\r\\n                    style=\\\"font-family:arial, sans-serif;font-size:14px;font-weight:500\\\"\\r\\n                    >Invoice Total (In Words):\\r\\n                  </span>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div\\r\\n                fxFlex=\\\"50\\\"\\r\\n                fxFlex.md=\\\"50\\\"\\r\\n                fxFlex.lg=\\\"50\\\"\\r\\n                fxFlex.xs=\\\"100\\\"\\r\\n                fxFlex.sm=\\\"100\\\"\\r\\n              >\\r\\n                <div style=\\\"text-align: right;padding:0px 10px\\\">\\r\\n                  <span\\r\\n                    style=\\\"font-family:arial, sans-serif;font-size:13px;font-weight:500\\\"\\r\\n                  >\\r\\n                    {{ dataSource.total | numberToWords }}\\r\\n                  </span>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div style=\\\"margin-bottom:10px\\\"></div>\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start end\\\">\\r\\n          <div\\r\\n            fxFlex=\\\"70\\\"\\r\\n            fxFlex.md=\\\"70\\\"\\r\\n            fxFlex.lg=\\\"70\\\"\\r\\n            fxFlex.xs=\\\"100\\\"\\r\\n            fxFlex.sm=\\\"100\\\"\\r\\n          >\\r\\n            <span\\r\\n              style=\\\"padding: 3px;font-family:arial, sans-serif;font-size:14px;font-weight:600\\\"\\r\\n              >Bank Account Details</span\\r\\n            >\\r\\n            <div style=\\\"width:36%; border:1px solid rgb(102, 98, 98)\\\"></div>\\r\\n            <div style=\\\"margin-bottom:5px\\\"></div>\\r\\n            <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n              <div\\r\\n                fxFlex=\\\"100\\\"\\r\\n                fxFlex.md=\\\"100\\\"\\r\\n                fxFlex.lg=\\\"100\\\"\\r\\n                fxFlex.xs=\\\"100\\\"\\r\\n                fxFlex.sm=\\\"100\\\"\\r\\n              >\\r\\n                <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n                  <div\\r\\n                    fxFlex=\\\"32\\\"\\r\\n                    fxFlex.md=\\\"32\\\"\\r\\n                    fxFlex.lg=\\\"32\\\"\\r\\n                    fxFlex.xs=\\\"100\\\"\\r\\n                    fxFlex.sm=\\\"100\\\"\\r\\n                  >\\r\\n                    <div style=\\\"text-align: left;padding:0px 10px\\\">\\r\\n                      <span\\r\\n                        style=\\\"font-family:arial, sans-serif;font-size:12px;font-weight:700\\\"\\r\\n                        >Bank Name\\r\\n                      </span>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div\\r\\n                    fxFlex=\\\"10\\\"\\r\\n                    fxFlex.md=\\\"10\\\"\\r\\n                    fxFlex.lg=\\\"10\\\"\\r\\n                    fxFlex.xs=\\\"100\\\"\\r\\n                    fxFlex.sm=\\\"100\\\"\\r\\n                  >\\r\\n                    <div\\r\\n                      style=\\\"text-align: left;padding:0px 10px;font-weight:700\\\"\\r\\n                    >\\r\\n                      :&nbsp;\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div\\r\\n                    fxFlex=\\\"30\\\"\\r\\n                    fxFlex.md=\\\"30\\\"\\r\\n                    fxFlex.lg=\\\"30\\\"\\r\\n                    fxFlex.xs=\\\"100\\\"\\r\\n                    fxFlex.sm=\\\"100\\\"\\r\\n                  >\\r\\n                    <div style=\\\"text-align: left;padding:0px 10px\\\">\\r\\n                      <span\\r\\n                        style=\\\"font-family:arial, sans-serif;font-size:12px;\\\"\\r\\n                      >\\r\\n                        {{ bankDetails.bankName }}\\r\\n                      </span>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n              <div\\r\\n                fxFlex=\\\"100\\\"\\r\\n                fxFlex.md=\\\"100\\\"\\r\\n                fxFlex.lg=\\\"100\\\"\\r\\n                fxFlex.xs=\\\"100\\\"\\r\\n                fxFlex.sm=\\\"100\\\"\\r\\n              >\\r\\n                <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n                  <div\\r\\n                    fxFlex=\\\"32\\\"\\r\\n                    fxFlex.md=\\\"32\\\"\\r\\n                    fxFlex.lg=\\\"32\\\"\\r\\n                    fxFlex.xs=\\\"100\\\"\\r\\n                    fxFlex.sm=\\\"100\\\"\\r\\n                  >\\r\\n                    <div style=\\\"text-align: left;padding:0px 10px\\\">\\r\\n                      <span\\r\\n                        style=\\\"font-family:arial, sans-serif;font-size:12px;font-weight:700\\\"\\r\\n                        >Account Number\\r\\n                      </span>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div\\r\\n                    fxFlex=\\\"10\\\"\\r\\n                    fxFlex.md=\\\"10\\\"\\r\\n                    fxFlex.lg=\\\"10\\\"\\r\\n                    fxFlex.xs=\\\"100\\\"\\r\\n                    fxFlex.sm=\\\"100\\\"\\r\\n                  >\\r\\n                    <div\\r\\n                      style=\\\"text-align: left;padding:0px 10px;font-weight:700\\\"\\r\\n                    >\\r\\n                      :&nbsp;\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div\\r\\n                    fxFlex=\\\"30\\\"\\r\\n                    fxFlex.md=\\\"30\\\"\\r\\n                    fxFlex.lg=\\\"30\\\"\\r\\n                    fxFlex.xs=\\\"100\\\"\\r\\n                    fxFlex.sm=\\\"100\\\"\\r\\n                  >\\r\\n                    <div style=\\\"text-align: left;padding:0px 10px\\\">\\r\\n                      <span\\r\\n                        style=\\\"font-family:arial, sans-serif;font-size:12px;\\\"\\r\\n                      >\\r\\n                        {{ bankDetails.accountNumber }}\\r\\n                      </span>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n              <div\\r\\n                fxFlex=\\\"100\\\"\\r\\n                fxFlex.md=\\\"100\\\"\\r\\n                fxFlex.lg=\\\"100\\\"\\r\\n                fxFlex.xs=\\\"100\\\"\\r\\n                fxFlex.sm=\\\"100\\\"\\r\\n              >\\r\\n                <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n                  <div\\r\\n                    fxFlex=\\\"32\\\"\\r\\n                    fxFlex.md=\\\"32\\\"\\r\\n                    fxFlex.lg=\\\"32\\\"\\r\\n                    fxFlex.xs=\\\"100\\\"\\r\\n                    fxFlex.sm=\\\"100\\\"\\r\\n                  >\\r\\n                    <div style=\\\"text-align: left;padding:0px 10px\\\">\\r\\n                      <span\\r\\n                        style=\\\"font-family:arial, sans-serif;font-size:12px;font-weight:700\\\"\\r\\n                        >Branch Name\\r\\n                      </span>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div\\r\\n                    fxFlex=\\\"10\\\"\\r\\n                    fxFlex.md=\\\"10\\\"\\r\\n                    fxFlex.lg=\\\"10\\\"\\r\\n                    fxFlex.xs=\\\"100\\\"\\r\\n                    fxFlex.sm=\\\"100\\\"\\r\\n                  >\\r\\n                    <div\\r\\n                      style=\\\"text-align: left;padding:0px 10px;font-weight:700\\\"\\r\\n                    >\\r\\n                      :&nbsp;\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div\\r\\n                    fxFlex=\\\"30\\\"\\r\\n                    fxFlex.md=\\\"30\\\"\\r\\n                    fxFlex.lg=\\\"30\\\"\\r\\n                    fxFlex.xs=\\\"100\\\"\\r\\n                    fxFlex.sm=\\\"100\\\"\\r\\n                  >\\r\\n                    <div style=\\\"text-align: left;padding:0px 10px\\\">\\r\\n                      <span\\r\\n                        style=\\\"font-family:arial, sans-serif;font-size:12px;\\\"\\r\\n                      >\\r\\n                        {{ bankDetails.branch }}\\r\\n                      </span>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n              <div\\r\\n                fxFlex=\\\"100\\\"\\r\\n                fxFlex.md=\\\"100\\\"\\r\\n                fxFlex.lg=\\\"100\\\"\\r\\n                fxFlex.xs=\\\"100\\\"\\r\\n                fxFlex.sm=\\\"100\\\"\\r\\n              >\\r\\n                <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n                  <div\\r\\n                    fxFlex=\\\"32\\\"\\r\\n                    fxFlex.md=\\\"32\\\"\\r\\n                    fxFlex.lg=\\\"32\\\"\\r\\n                    fxFlex.xs=\\\"100\\\"\\r\\n                    fxFlex.sm=\\\"100\\\"\\r\\n                  >\\r\\n                    <div style=\\\"text-align: left;padding:0px 10px\\\">\\r\\n                      <span\\r\\n                        style=\\\"font-family:arial, sans-serif;font-size:12px;font-weight:700\\\"\\r\\n                        >Address\\r\\n                      </span>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div\\r\\n                    fxFlex=\\\"10\\\"\\r\\n                    fxFlex.md=\\\"10\\\"\\r\\n                    fxFlex.lg=\\\"10\\\"\\r\\n                    fxFlex.xs=\\\"100\\\"\\r\\n                    fxFlex.sm=\\\"100\\\"\\r\\n                  >\\r\\n                    <div\\r\\n                      style=\\\"text-align: left;padding:0px 10px;font-weight:700\\\"\\r\\n                    >\\r\\n                      :&nbsp;\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div\\r\\n                    fxFlex=\\\"30\\\"\\r\\n                    fxFlex.md=\\\"30\\\"\\r\\n                    fxFlex.lg=\\\"30\\\"\\r\\n                    fxFlex.xs=\\\"100\\\"\\r\\n                    fxFlex.sm=\\\"100\\\"\\r\\n                  >\\r\\n                    <div style=\\\"text-align: left;padding:0px 10px\\\">\\r\\n                      <span\\r\\n                        style=\\\"font-family:arial, sans-serif;font-size:12px;\\\"\\r\\n                      >\\r\\n                        {{ bankDetails.bankAddress }}\\r\\n                      </span>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n              <div\\r\\n                fxFlex=\\\"100\\\"\\r\\n                fxFlex.md=\\\"100\\\"\\r\\n                fxFlex.lg=\\\"100\\\"\\r\\n                fxFlex.xs=\\\"100\\\"\\r\\n                fxFlex.sm=\\\"100\\\"\\r\\n              >\\r\\n                <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n                  <div\\r\\n                    fxFlex=\\\"32\\\"\\r\\n                    fxFlex.md=\\\"32\\\"\\r\\n                    fxFlex.lg=\\\"32\\\"\\r\\n                    fxFlex.xs=\\\"100\\\"\\r\\n                    fxFlex.sm=\\\"100\\\"\\r\\n                  >\\r\\n                    <div style=\\\"text-align: left;padding:0px 10px\\\">\\r\\n                      <span\\r\\n                        style=\\\"font-family:arial, sans-serif;font-size:12px;font-weight:700\\\"\\r\\n                        >IFSC\\r\\n                      </span>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div\\r\\n                    fxFlex=\\\"10\\\"\\r\\n                    fxFlex.md=\\\"10\\\"\\r\\n                    fxFlex.lg=\\\"10\\\"\\r\\n                    fxFlex.xs=\\\"100\\\"\\r\\n                    fxFlex.sm=\\\"100\\\"\\r\\n                  >\\r\\n                    <div\\r\\n                      style=\\\"text-align: left;padding:0px 10px;font-weight:700\\\"\\r\\n                    >\\r\\n                      :&nbsp;\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div\\r\\n                    fxFlex=\\\"30\\\"\\r\\n                    fxFlex.md=\\\"30\\\"\\r\\n                    fxFlex.lg=\\\"30\\\"\\r\\n                    fxFlex.xs=\\\"100\\\"\\r\\n                    fxFlex.sm=\\\"100\\\"\\r\\n                  >\\r\\n                    <div style=\\\"text-align: left;padding:0px 10px\\\">\\r\\n                      <span\\r\\n                        style=\\\"font-family:arial, sans-serif;font-size:12px;\\\"\\r\\n                      >\\r\\n                        {{ bankDetails.ifscCode }}\\r\\n                      </span>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div style=\\\"margin-bottom: 10px\\\"></div>\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n          <div\\r\\n            fxFlex=\\\"100\\\"\\r\\n            fxFlex.md=\\\"100\\\"\\r\\n            fxFlex.lg=\\\"100\\\"\\r\\n            fxFlex.xs=\\\"100\\\"\\r\\n            fxFlex.sm=\\\"100\\\"\\r\\n          >\\r\\n            <span\\r\\n              style=\\\"padding-bottom:10px;font-family: arial,sans-serif;font-size:12px;font-weight:700\\\"\\r\\n              >Notes:</span\\r\\n            >\\r\\n            <div style=\\\"margin-bottom: 5px\\\"></div>\\r\\n            <p\\r\\n              style=\\\"padding-bottom:10px;font-family: arial,sans-serif;font-size:12px\\\"\\r\\n            >\\r\\n              1. All disputes are subject to Hyderabad jurisdiction only.\\r\\n            </p>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start end\\\">\\r\\n          <div\\r\\n            fxFlex=\\\"50\\\"\\r\\n            fxFlex.md=\\\"50\\\"\\r\\n            fxFlex.lg=\\\"50\\\"\\r\\n            fxFlex.xs=\\\"100\\\"\\r\\n            fxFlex.sm=\\\"100\\\"\\r\\n          >\\r\\n            <span\\r\\n              style=\\\"font-size: 12px;\\r\\n        padding: 7px;\\r\\n        float: left;\\r\\n        font-family: arial,sans-serif;font-weight:700\\\"\\r\\n              >Thank you for your business</span\\r\\n            >\\r\\n          </div>\\r\\n          <div\\r\\n            fxFlex=\\\"50\\\"\\r\\n            fxFlex.md=\\\"50\\\"\\r\\n            fxFlex.lg=\\\"50\\\"\\r\\n            fxFlex.xs=\\\"100\\\"\\r\\n            fxFlex.sm=\\\"100\\\"\\r\\n          >\\r\\n            <span\\r\\n              style=\\\"float:right;\\r\\n        font-size: 12px;\\r\\n        padding: 5px;\\r\\n        font-family: arial,sans-serif;font-weight:700;\\\"\\r\\n              >Powered by\\r\\n              <svg\\r\\n                id=\\\"svg\\\"\\r\\n                version=\\\"1.1\\\"\\r\\n                width=\\\"15\\\"\\r\\n                height=\\\"15\\\"\\r\\n                viewBox=\\\"0 0 400 530\\\"\\r\\n                xmlns=\\\"http://www.w3.org/2000/svg\\\"\\r\\n                xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\r\\n                style=\\\"vertical-align: middle\\\"\\r\\n              >\\r\\n                <g id=\\\"svgg\\\">\\r\\n                  <path\\r\\n                    id=\\\"path0\\\"\\r\\n                    d=\\\"M341.500 7.872 C 339.355 7.958,337.600 8.176,337.600 8.356 C 337.600 8.536,335.485 8.808,332.900 8.962 C 330.315 9.115,328.140 9.411,328.067 9.620 C 327.993 9.829,327.318 10.000,326.567 10.000 C 325.815 10.000,325.200 10.163,325.200 10.362 C 325.200 10.562,324.300 10.849,323.200 11.000 C 322.100 11.151,321.200 11.424,321.200 11.606 C 321.200 11.788,320.660 12.055,320.000 12.200 C 319.340 12.345,318.800 12.610,318.800 12.788 C 318.800 12.967,318.370 13.221,317.844 13.353 C 314.952 14.079,316.432 14.800,320.813 14.800 C 323.471 14.800,325.200 14.958,325.200 15.200 C 325.200 15.420,324.570 15.600,323.800 15.600 C 323.030 15.600,322.400 15.756,322.400 15.947 C 322.400 16.138,321.654 16.395,320.742 16.517 C 319.831 16.639,318.976 16.907,318.842 17.112 C 318.709 17.317,317.925 17.609,317.100 17.760 C 316.275 17.912,315.600 18.188,315.600 18.373 C 315.600 18.558,314.790 18.831,313.800 18.979 C 312.810 19.128,312.000 19.418,312.000 19.625 C 312.000 19.831,311.550 20.000,311.000 20.000 C 310.450 20.000,310.000 20.160,310.000 20.355 C 310.000 20.550,309.190 20.831,308.200 20.979 C 307.210 21.128,306.400 21.405,306.400 21.596 C 306.400 21.786,305.410 22.066,304.200 22.217 C 302.990 22.368,302.000 22.635,302.000 22.809 C 302.000 22.983,301.100 23.249,300.000 23.400 C 298.900 23.551,298.000 23.817,298.000 23.991 C 298.000 24.165,297.653 24.397,297.230 24.508 C 296.688 24.650,296.523 24.544,296.674 24.151 C 296.792 23.844,297.318 23.485,297.844 23.353 C 298.370 23.221,298.800 22.967,298.800 22.788 C 298.800 22.610,299.340 22.345,300.000 22.200 C 300.660 22.055,301.200 21.791,301.200 21.614 C 301.200 21.436,302.010 21.169,303.000 21.021 C 303.990 20.872,304.800 20.582,304.800 20.375 C 304.800 20.169,305.430 20.000,306.200 20.000 C 306.970 20.000,307.600 19.836,307.600 19.635 C 307.600 19.434,308.320 19.149,309.200 19.000 C 310.080 18.851,310.800 18.585,310.800 18.408 C 310.800 18.231,311.255 17.973,311.810 17.833 C 313.418 17.430,315.048 15.600,313.800 15.600 C 313.470 15.600,313.200 15.763,313.200 15.962 C 313.200 16.162,312.300 16.449,311.200 16.600 C 310.100 16.751,309.200 17.027,309.200 17.213 C 309.200 17.399,308.390 17.672,307.400 17.821 C 306.410 17.969,305.600 18.234,305.600 18.408 C 305.600 18.583,303.890 18.854,301.800 19.010 C 299.710 19.167,298.000 19.454,298.000 19.648 C 298.000 19.841,297.370 20.000,296.600 20.000 C 295.830 20.000,295.200 20.163,295.200 20.362 C 295.200 20.562,294.300 20.849,293.200 21.000 C 292.100 21.151,291.200 21.424,291.200 21.606 C 291.200 21.788,290.660 22.055,290.000 22.200 C 289.340 22.345,288.800 22.610,288.800 22.788 C 288.800 22.967,288.370 23.221,287.844 23.353 C 284.952 24.079,286.432 24.800,290.813 24.800 C 293.471 24.800,295.200 24.958,295.200 25.200 C 295.200 25.420,294.750 25.600,294.200 25.600 C 293.650 25.600,293.200 25.763,293.200 25.962 C 293.200 26.162,292.300 26.449,291.200 26.600 C 290.100 26.751,289.200 27.027,289.200 27.213 C 289.200 27.399,288.390 27.672,287.400 27.821 C 286.410 27.969,285.600 28.236,285.600 28.414 C 285.600 28.591,285.060 28.855,284.400 29.000 C 283.740 29.145,283.200 29.429,283.200 29.632 C 283.200 29.834,282.930 30.000,282.600 30.000 C 282.270 30.000,282.000 30.160,282.000 30.357 C 282.000 30.553,281.550 30.826,281.000 30.964 C 280.450 31.102,280.000 31.392,280.000 31.608 C 280.000 31.823,279.739 32.000,279.419 32.000 C 279.100 32.000,278.227 32.630,277.479 33.400 C 276.731 34.170,275.986 34.800,275.824 34.800 C 275.661 34.800,277.535 32.801,279.989 30.358 C 282.442 27.915,284.339 25.805,284.203 25.670 C 284.067 25.534,283.831 25.620,283.678 25.861 C 283.525 26.102,282.815 26.426,282.100 26.582 C 281.385 26.737,280.800 27.009,280.800 27.187 C 280.800 27.365,280.170 27.629,279.400 27.774 C 278.630 27.918,278.000 28.208,278.000 28.418 C 278.000 28.628,277.724 28.800,277.387 28.800 C 277.051 28.800,276.671 29.070,276.545 29.400 C 276.418 29.730,276.064 30.000,275.757 30.000 C 275.451 30.000,275.200 30.163,275.200 30.362 C 275.200 30.562,274.300 30.849,273.200 31.000 C 272.100 31.151,271.200 31.424,271.200 31.606 C 271.200 31.788,270.660 32.055,270.000 32.200 C 269.340 32.345,268.800 32.610,268.800 32.788 C 268.800 32.967,268.370 33.221,267.844 33.353 C 264.952 34.079,266.432 34.800,270.813 34.800 C 273.471 34.800,275.200 34.958,275.200 35.200 C 275.200 35.420,274.570 35.600,273.800 35.600 C 273.030 35.600,272.400 35.756,272.400 35.947 C 272.400 36.138,271.654 36.395,270.742 36.517 C 269.831 36.639,268.976 36.907,268.842 37.112 C 268.709 37.317,267.925 37.609,267.100 37.760 C 266.275 37.912,265.600 38.191,265.600 38.381 C 265.600 38.570,263.890 38.854,261.800 39.010 C 259.710 39.167,258.000 39.454,258.000 39.648 C 258.000 39.841,257.370 40.000,256.600 40.000 C 255.830 40.000,255.200 40.160,255.200 40.355 C 255.200 40.551,254.570 40.829,253.800 40.974 C 253.030 41.118,252.400 41.394,252.400 41.586 C 252.400 41.779,251.860 42.055,251.200 42.200 C 250.540 42.345,250.000 42.610,250.000 42.788 C 250.000 42.967,249.507 43.237,248.904 43.388 C 248.301 43.540,247.716 43.805,247.604 43.978 C 247.492 44.151,246.953 44.432,246.407 44.602 C 245.750 44.808,246.942 43.392,249.932 40.414 C 252.417 37.940,254.339 35.805,254.203 35.670 C 254.067 35.534,253.829 35.629,253.674 35.880 C 253.519 36.131,252.899 36.460,252.296 36.612 C 251.693 36.763,251.200 37.033,251.200 37.212 C 251.200 37.390,250.660 37.655,250.000 37.800 C 249.340 37.945,248.800 38.215,248.800 38.400 C 248.800 38.585,248.260 38.855,247.600 39.000 C 246.940 39.145,246.400 39.429,246.400 39.632 C 246.400 39.834,246.130 40.000,245.800 40.000 C 245.470 40.000,245.200 40.163,245.200 40.362 C 245.200 40.562,244.300 40.849,243.200 41.000 C 242.100 41.151,241.200 41.424,241.200 41.606 C 241.200 41.788,240.660 42.055,240.000 42.200 C 239.340 42.345,238.800 42.610,238.800 42.788 C 238.800 42.967,238.370 43.221,237.844 43.353 C 234.952 44.079,236.432 44.800,240.813 44.800 C 243.471 44.800,245.200 44.958,245.200 45.200 C 245.200 45.420,244.750 45.600,244.200 45.600 C 243.650 45.600,243.200 45.759,243.200 45.954 C 243.200 46.149,242.210 46.432,241.000 46.583 C 239.790 46.734,238.800 47.022,238.800 47.224 C 238.800 47.426,238.080 47.706,237.200 47.846 C 236.320 47.987,235.600 48.245,235.600 48.419 C 235.600 48.594,235.060 48.855,234.400 49.000 C 233.740 49.145,233.200 49.429,233.200 49.632 C 233.200 49.834,232.930 50.000,232.600 50.000 C 232.270 50.000,232.000 50.160,232.000 50.357 C 232.000 50.553,231.550 50.826,231.000 50.964 C 230.450 51.102,230.000 51.392,230.000 51.608 C 230.000 51.823,229.739 52.000,229.419 52.000 C 229.100 52.000,228.227 52.630,227.479 53.400 C 226.731 54.170,225.986 54.800,225.824 54.800 C 225.661 54.800,227.535 52.801,229.989 50.358 C 232.442 47.915,234.339 45.805,234.203 45.670 C 234.067 45.534,233.831 45.620,233.678 45.861 C 233.525 46.102,232.815 46.426,232.100 46.582 C 231.385 46.737,230.800 47.009,230.800 47.187 C 230.800 47.365,230.170 47.629,229.400 47.774 C 228.630 47.918,228.000 48.208,228.000 48.418 C 228.000 48.628,227.724 48.800,227.387 48.800 C 227.051 48.800,226.671 49.070,226.545 49.400 C 226.418 49.730,226.064 50.000,225.757 50.000 C 225.451 50.000,225.200 50.163,225.200 50.362 C 225.200 50.562,224.300 50.849,223.200 51.000 C 222.100 51.151,221.200 51.424,221.200 51.606 C 221.200 51.788,220.660 52.055,220.000 52.200 C 219.340 52.345,218.800 52.610,218.800 52.788 C 218.800 52.967,218.370 53.221,217.844 53.353 C 214.952 54.079,216.432 54.800,220.813 54.800 C 223.471 54.800,225.200 54.958,225.200 55.200 C 225.200 55.420,224.570 55.600,223.800 55.600 C 223.030 55.600,222.400 55.759,222.400 55.954 C 222.400 56.149,221.365 56.437,220.100 56.595 C 218.835 56.752,217.700 57.042,217.577 57.239 C 217.455 57.436,215.970 57.714,214.277 57.857 C 212.585 58.000,211.200 58.250,211.200 58.413 C 211.200 58.575,210.210 58.832,209.000 58.983 C 207.790 59.134,206.800 59.425,206.800 59.629 C 206.800 59.833,206.440 60.000,206.000 60.000 C 205.560 60.000,205.200 60.160,205.200 60.355 C 205.200 60.551,204.570 60.829,203.800 60.974 C 203.030 61.118,202.400 61.394,202.400 61.586 C 202.400 61.779,201.860 62.055,201.200 62.200 C 200.540 62.345,200.000 62.610,200.000 62.788 C 200.000 62.967,199.507 63.237,198.904 63.388 C 198.301 63.540,197.716 63.805,197.604 63.978 C 197.492 64.151,196.953 64.432,196.407 64.602 C 195.750 64.808,196.942 63.392,199.932 60.414 C 202.417 57.940,204.339 55.805,204.203 55.670 C 204.067 55.534,203.829 55.629,203.674 55.880 C 203.519 56.131,202.899 56.460,202.296 56.612 C 201.693 56.763,201.200 57.033,201.200 57.212 C 201.200 57.390,200.660 57.655,200.000 57.800 C 199.340 57.945,198.800 58.215,198.800 58.400 C 198.800 58.585,198.260 58.855,197.600 59.000 C 196.940 59.145,196.400 59.429,196.400 59.632 C 196.400 59.834,196.130 60.000,195.800 60.000 C 195.470 60.000,195.200 60.163,195.200 60.362 C 195.200 60.562,194.300 60.849,193.200 61.000 C 192.100 61.151,191.200 61.424,191.200 61.606 C 191.200 61.788,190.660 62.055,190.000 62.200 C 189.340 62.345,188.800 62.610,188.800 62.788 C 188.800 62.967,188.370 63.221,187.844 63.353 C 184.952 64.079,186.432 64.800,190.813 64.800 C 193.471 64.800,195.200 64.958,195.200 65.200 C 195.200 65.420,194.750 65.600,194.200 65.600 C 193.650 65.600,193.200 65.759,193.200 65.954 C 193.200 66.149,192.210 66.432,191.000 66.583 C 189.790 66.734,188.800 67.022,188.800 67.224 C 188.800 67.426,188.080 67.706,187.200 67.846 C 186.320 67.987,185.600 68.245,185.600 68.419 C 185.600 68.594,185.060 68.855,184.400 69.000 C 183.740 69.145,183.200 69.429,183.200 69.632 C 183.200 69.834,182.930 70.000,182.600 70.000 C 182.270 70.000,182.000 70.160,182.000 70.357 C 182.000 70.553,181.550 70.826,181.000 70.964 C 180.450 71.102,180.000 71.392,180.000 71.608 C 180.000 71.823,179.739 72.000,179.419 72.000 C 179.100 72.000,178.227 72.630,177.479 73.400 C 176.731 74.170,175.986 74.800,175.824 74.800 C 175.661 74.800,177.535 72.801,179.989 70.358 C 182.442 67.915,184.339 65.805,184.203 65.670 C 184.067 65.534,183.831 65.620,183.678 65.861 C 183.525 66.102,182.815 66.426,182.100 66.582 C 181.385 66.737,180.800 67.009,180.800 67.187 C 180.800 67.365,180.170 67.629,179.400 67.774 C 178.630 67.918,178.000 68.208,178.000 68.418 C 178.000 68.628,177.724 68.800,177.387 68.800 C 177.051 68.800,176.671 69.070,176.545 69.400 C 176.355 69.893,175.328 70.000,170.757 70.000 C 167.701 70.000,165.200 70.163,165.200 70.362 C 165.200 70.562,164.300 70.849,163.200 71.000 C 162.100 71.151,161.200 71.424,161.200 71.606 C 161.200 71.788,160.660 72.055,160.000 72.200 C 159.340 72.345,158.800 72.610,158.800 72.788 C 158.800 72.967,158.370 73.221,157.844 73.353 C 154.952 74.079,156.432 74.800,160.813 74.800 C 163.471 74.800,165.200 74.958,165.200 75.200 C 165.200 75.420,164.840 75.600,164.400 75.600 C 163.960 75.600,163.600 75.760,163.600 75.955 C 163.600 76.151,162.970 76.429,162.200 76.574 C 161.430 76.718,160.800 76.988,160.800 77.174 C 160.800 77.359,160.170 77.629,159.400 77.774 C 158.630 77.918,158.000 78.208,158.000 78.418 C 158.000 78.628,157.724 78.800,157.387 78.800 C 157.051 78.800,156.671 79.070,156.545 79.400 C 156.418 79.730,156.064 80.000,155.757 80.000 C 155.451 80.000,155.200 80.160,155.200 80.355 C 155.200 80.551,154.570 80.829,153.800 80.974 C 153.030 81.118,152.400 81.394,152.400 81.586 C 152.400 81.779,151.860 82.055,151.200 82.200 C 150.540 82.345,150.000 82.610,150.000 82.788 C 150.000 82.967,149.507 83.237,148.904 83.388 C 148.301 83.540,147.716 83.805,147.604 83.978 C 147.492 84.151,146.953 84.432,146.407 84.602 C 145.750 84.808,146.942 83.392,149.932 80.414 C 152.417 77.940,154.339 75.805,154.203 75.670 C 154.067 75.534,153.829 75.629,153.674 75.880 C 153.519 76.131,152.899 76.460,152.296 76.612 C 151.693 76.763,151.200 77.033,151.200 77.212 C 151.200 77.390,150.660 77.655,150.000 77.800 C 149.340 77.945,148.800 78.215,148.800 78.400 C 148.800 78.585,148.260 78.855,147.600 79.000 C 146.940 79.145,146.400 79.429,146.400 79.632 C 146.400 79.834,146.130 80.000,145.800 80.000 C 145.470 80.000,145.200 80.163,145.200 80.362 C 145.200 80.562,144.300 80.849,143.200 81.000 C 142.100 81.151,141.200 81.424,141.200 81.606 C 141.200 81.788,140.660 82.055,140.000 82.200 C 139.340 82.345,138.800 82.610,138.800 82.788 C 138.800 82.967,138.370 83.221,137.844 83.353 C 134.952 84.079,136.432 84.800,140.813 84.800 C 143.471 84.800,145.200 84.958,145.200 85.200 C 145.200 85.420,144.840 85.600,144.400 85.600 C 143.960 85.600,143.600 85.760,143.600 85.955 C 143.600 86.151,142.970 86.429,142.200 86.574 C 141.430 86.718,140.800 86.988,140.800 87.174 C 140.800 87.359,140.170 87.629,139.400 87.774 C 138.630 87.918,138.000 88.208,138.000 88.418 C 138.000 88.628,137.724 88.800,137.387 88.800 C 137.051 88.800,136.671 89.070,136.545 89.400 C 136.418 89.730,136.146 90.000,135.940 90.000 C 135.398 90.000,132.643 92.618,125.000 100.397 C 124.780 100.621,123.565 101.797,122.300 103.010 C 121.035 104.224,120.000 105.483,120.000 105.808 C 120.000 106.134,119.834 106.400,119.632 106.400 C 119.429 106.400,119.145 106.940,119.000 107.600 C 118.855 108.260,118.585 108.800,118.400 108.800 C 118.215 108.800,117.945 109.340,117.800 110.000 C 117.655 110.660,117.385 111.200,117.200 111.200 C 117.015 111.200,116.745 111.740,116.600 112.400 C 116.455 113.060,116.184 113.600,115.998 113.600 C 115.811 113.600,115.576 113.915,115.476 114.300 C 115.375 114.685,115.272 113.065,115.246 110.700 C 115.221 108.335,115.033 106.400,114.829 106.400 C 114.258 106.400,113.200 107.588,113.200 108.229 C 113.200 108.543,113.034 108.800,112.832 108.800 C 112.629 108.800,112.345 109.340,112.200 110.000 C 112.055 110.660,111.791 111.200,111.614 111.200 C 111.436 111.200,111.169 112.010,111.021 113.000 C 110.872 113.990,110.582 114.800,110.375 114.800 C 110.157 114.800,110.000 117.541,110.000 121.367 C 110.000 125.901,109.860 127.980,109.547 128.084 C 109.237 128.188,109.029 130.944,108.888 136.805 C 108.733 143.255,108.549 145.509,108.141 145.916 C 107.844 146.214,107.600 146.695,107.600 146.986 C 107.600 147.277,107.330 147.618,107.000 147.745 C 106.670 147.871,106.400 148.251,106.400 148.587 C 106.400 148.924,106.232 149.200,106.027 149.200 C 105.822 149.200,105.545 149.544,105.411 149.965 C 105.233 150.525,104.639 150.802,103.184 151.002 C 102.093 151.152,101.200 151.424,101.200 151.606 C 101.200 151.788,100.660 152.055,100.000 152.200 C 99.340 152.345,98.800 152.610,98.800 152.788 C 98.800 152.967,98.370 153.221,97.844 153.353 C 94.952 154.079,96.432 154.800,100.813 154.800 C 103.471 154.800,105.200 154.958,105.200 155.200 C 105.200 155.420,104.750 155.600,104.200 155.600 C 103.650 155.600,103.200 155.759,103.200 155.954 C 103.200 156.149,102.210 156.432,101.000 156.583 C 99.790 156.734,98.800 157.022,98.800 157.224 C 98.800 157.426,98.080 157.706,97.200 157.846 C 96.320 157.987,95.600 158.239,95.600 158.406 C 95.600 158.573,94.790 158.831,93.800 158.979 C 92.810 159.128,92.000 159.418,92.000 159.625 C 92.000 159.831,91.550 160.000,91.000 160.000 C 90.450 160.000,90.000 160.160,90.000 160.355 C 90.000 160.550,89.190 160.831,88.200 160.979 C 87.210 161.128,86.400 161.405,86.400 161.596 C 86.400 161.786,85.410 162.066,84.200 162.217 C 82.990 162.368,82.000 162.635,82.000 162.809 C 82.000 162.983,81.100 163.249,80.000 163.400 C 78.900 163.551,78.000 163.817,78.000 163.991 C 78.000 164.165,77.653 164.397,77.230 164.508 C 76.688 164.650,76.523 164.544,76.674 164.151 C 76.792 163.844,77.318 163.485,77.844 163.353 C 78.370 163.221,78.800 162.967,78.800 162.788 C 78.800 162.610,79.340 162.345,80.000 162.200 C 80.660 162.055,81.200 161.788,81.200 161.606 C 81.200 161.424,82.100 161.151,83.200 161.000 C 84.300 160.849,85.200 160.562,85.200 160.362 C 85.200 160.163,85.740 160.000,86.400 160.000 C 87.060 160.000,87.600 159.836,87.600 159.635 C 87.600 159.434,88.320 159.149,89.200 159.000 C 90.080 158.851,90.800 158.585,90.800 158.408 C 90.800 158.231,91.255 157.973,91.810 157.833 C 93.418 157.430,95.048 155.600,93.800 155.600 C 93.470 155.600,93.200 155.763,93.200 155.962 C 93.200 156.162,92.300 156.449,91.200 156.600 C 90.100 156.751,89.200 157.027,89.200 157.213 C 89.200 157.399,88.390 157.672,87.400 157.821 C 86.410 157.969,85.600 158.234,85.600 158.408 C 85.600 158.583,83.890 158.854,81.800 159.010 C 79.710 159.167,78.000 159.454,78.000 159.648 C 78.000 159.841,77.370 160.000,76.600 160.000 C 75.830 160.000,75.200 160.163,75.200 160.362 C 75.200 160.562,74.300 160.849,73.200 161.000 C 72.100 161.151,71.200 161.424,71.200 161.606 C 71.200 161.788,70.660 162.055,70.000 162.200 C 69.340 162.345,68.800 162.610,68.800 162.788 C 68.800 162.967,68.370 163.221,67.844 163.353 C 64.952 164.079,66.432 164.800,70.813 164.800 C 73.471 164.800,75.200 164.958,75.200 165.200 C 75.200 165.420,74.570 165.600,73.800 165.600 C 73.030 165.600,72.400 165.762,72.400 165.961 C 72.400 166.159,71.320 166.447,70.000 166.600 C 68.680 166.753,67.600 167.020,67.600 167.193 C 67.600 167.366,66.610 167.632,65.400 167.783 C 64.190 167.934,63.200 168.222,63.200 168.424 C 63.200 168.626,62.480 168.906,61.600 169.046 C 60.720 169.187,60.000 169.459,60.000 169.651 C 60.000 169.843,59.730 170.000,59.400 170.000 C 59.070 170.000,58.800 170.166,58.800 170.368 C 58.800 170.571,58.260 170.855,57.600 171.000 C 56.940 171.145,56.400 171.416,56.400 171.603 C 56.400 171.790,55.410 172.066,54.200 172.217 C 52.990 172.368,52.000 172.635,52.000 172.809 C 52.000 172.983,51.100 173.249,50.000 173.400 C 48.900 173.551,48.000 173.817,48.000 173.991 C 48.000 174.165,47.653 174.397,47.230 174.508 C 46.688 174.650,46.523 174.544,46.674 174.151 C 46.792 173.844,47.318 173.485,47.844 173.353 C 48.370 173.221,48.800 172.967,48.800 172.788 C 48.800 172.610,49.340 172.345,50.000 172.200 C 50.660 172.055,51.200 171.788,51.200 171.606 C 51.200 171.424,52.100 171.151,53.200 171.000 C 54.300 170.849,55.200 170.562,55.200 170.362 C 55.200 170.163,55.470 170.000,55.800 170.000 C 56.130 170.000,56.400 169.834,56.400 169.632 C 56.400 169.429,56.940 169.145,57.600 169.000 C 58.260 168.855,58.800 168.585,58.800 168.400 C 58.800 168.215,59.340 167.945,60.000 167.800 C 60.660 167.655,61.200 167.384,61.200 167.198 C 61.200 167.011,61.515 166.765,61.900 166.650 C 62.285 166.536,61.790 166.544,60.800 166.668 C 59.810 166.793,58.940 167.053,58.866 167.248 C 58.793 167.442,58.028 167.714,57.166 167.852 C 56.305 167.990,55.600 168.242,55.600 168.414 C 55.600 168.585,53.890 168.854,51.800 169.010 C 49.710 169.167,48.000 169.454,48.000 169.648 C 48.000 169.841,47.370 170.000,46.600 170.000 C 45.830 170.000,45.200 170.163,45.200 170.362 C 45.200 170.562,44.300 170.849,43.200 171.000 C 42.100 171.151,41.200 171.424,41.200 171.606 C 41.200 171.788,40.660 172.055,40.000 172.200 C 39.340 172.345,38.800 172.610,38.800 172.788 C 38.800 172.967,38.370 173.221,37.844 173.353 C 34.952 174.079,36.432 174.800,40.813 174.800 C 43.471 174.800,45.200 174.958,45.200 175.200 C 45.200 175.420,44.750 175.600,44.200 175.600 C 43.650 175.600,43.200 175.759,43.200 175.954 C 43.200 176.149,42.210 176.432,41.000 176.583 C 39.790 176.734,38.800 177.022,38.800 177.224 C 38.800 177.426,38.080 177.706,37.200 177.846 C 36.320 177.987,35.600 178.245,35.600 178.419 C 35.600 178.594,35.060 178.855,34.400 179.000 C 33.740 179.145,33.200 179.429,33.200 179.632 C 33.200 179.834,32.930 180.000,32.600 180.000 C 32.270 180.000,32.000 180.160,32.000 180.357 C 32.000 180.553,31.550 180.826,31.000 180.964 C 30.450 181.102,30.000 181.392,30.000 181.608 C 30.000 181.823,29.739 182.000,29.419 182.000 C 29.100 182.000,28.227 182.630,27.479 183.400 C 26.731 184.170,25.986 184.800,25.824 184.800 C 25.661 184.800,27.535 182.801,29.989 180.358 C 32.442 177.915,34.339 175.805,34.203 175.670 C 34.067 175.534,33.831 175.620,33.678 175.861 C 33.525 176.102,32.815 176.426,32.100 176.582 C 31.385 176.737,30.800 177.009,30.800 177.187 C 30.800 177.365,30.170 177.629,29.400 177.774 C 28.630 177.918,28.000 178.208,28.000 178.418 C 28.000 178.628,27.724 178.800,27.387 178.800 C 27.051 178.800,26.671 179.070,26.545 179.400 C 26.418 179.730,26.064 180.000,25.757 180.000 C 25.451 180.000,25.200 180.168,25.200 180.373 C 25.200 180.578,24.802 180.872,24.315 181.027 C 23.290 181.352,21.473 183.083,21.089 184.100 C 20.944 184.485,20.639 184.800,20.413 184.800 C 20.186 184.800,20.000 185.250,20.000 185.800 C 20.000 186.350,19.833 186.800,19.629 186.800 C 19.425 186.800,19.134 187.790,18.983 189.000 C 18.832 190.210,18.568 191.200,18.396 191.200 C 18.225 191.200,17.954 192.865,17.795 194.900 C 17.635 196.935,17.329 198.711,17.114 198.847 C 16.880 198.995,16.699 203.119,16.662 209.145 C 16.614 216.884,16.485 219.196,16.100 219.197 C 15.701 219.199,15.600 250.548,15.600 374.600 L 15.600 530.000 120.600 530.000 L 225.600 530.000 225.600 527.405 L 225.600 524.809 227.200 524.554 C 228.080 524.413,228.800 524.155,228.800 523.981 C 228.800 523.806,229.340 523.545,230.000 523.400 C 230.660 523.255,231.200 522.985,231.200 522.800 C 231.200 522.615,231.740 522.345,232.400 522.200 C 233.060 522.055,233.600 521.774,233.600 521.576 C 233.600 521.378,234.050 521.102,234.600 520.964 C 235.150 520.826,235.600 520.553,235.600 520.357 C 235.600 520.160,235.870 520.000,236.200 520.000 C 236.530 520.000,236.800 519.834,236.800 519.632 C 236.800 519.429,237.340 519.145,238.000 519.000 C 238.660 518.855,239.200 518.591,239.200 518.413 C 239.200 518.235,239.830 517.971,240.600 517.826 C 241.370 517.682,242.000 517.411,242.000 517.225 C 242.000 517.039,242.493 516.763,243.096 516.612 C 243.699 516.460,244.319 516.131,244.474 515.880 C 244.629 515.629,244.901 515.578,245.078 515.766 C 245.255 515.955,245.174 516.190,244.897 516.289 C 244.621 516.388,243.607 517.285,242.645 518.282 C 240.497 520.509,240.517 520.489,238.248 522.679 C 236.153 524.702,236.094 524.805,237.200 524.516 C 237.640 524.401,238.000 524.156,238.000 523.971 C 238.000 523.787,238.630 523.518,239.400 523.374 C 240.170 523.229,240.800 522.971,240.800 522.799 C 240.800 522.627,241.293 522.363,241.896 522.212 C 242.499 522.060,243.122 521.726,243.281 521.468 C 243.474 521.154,245.547 520.958,249.585 520.871 C 252.924 520.800,255.600 520.577,255.600 520.371 C 255.600 520.167,256.050 520.000,256.600 520.000 C 257.150 520.000,257.600 519.836,257.600 519.635 C 257.600 519.434,258.320 519.149,259.200 519.000 C 260.080 518.851,260.800 518.585,260.800 518.408 C 260.800 518.231,261.255 517.973,261.810 517.833 C 262.727 517.603,264.400 516.290,264.400 515.800 C 264.400 515.690,262.420 515.600,260.000 515.600 C 255.554 515.600,254.086 515.052,257.200 514.554 C 258.080 514.413,258.800 514.155,258.800 513.981 C 258.800 513.806,259.340 513.545,260.000 513.400 C 260.660 513.255,261.200 512.985,261.200 512.800 C 261.200 512.615,261.740 512.345,262.400 512.200 C 263.060 512.055,263.600 511.774,263.600 511.576 C 263.600 511.378,264.050 511.102,264.600 510.964 C 265.150 510.826,265.600 510.553,265.600 510.357 C 265.600 510.160,265.870 510.000,266.200 510.000 C 266.530 510.000,266.800 509.834,266.800 509.632 C 266.800 509.429,267.340 509.145,268.000 509.000 C 268.660 508.855,269.200 508.591,269.200 508.413 C 269.200 508.235,269.830 507.971,270.600 507.826 C 271.370 507.682,272.000 507.411,272.000 507.225 C 272.000 507.039,272.493 506.763,273.096 506.612 C 273.699 506.460,274.319 506.131,274.474 505.880 C 274.629 505.629,274.901 505.578,275.078 505.766 C 275.255 505.955,275.174 506.190,274.897 506.289 C 274.621 506.388,273.607 507.285,272.645 508.282 C 270.497 510.509,270.517 510.489,268.248 512.679 C 266.153 514.702,266.094 514.805,267.200 514.516 C 267.640 514.401,268.000 514.156,268.000 513.971 C 268.000 513.787,268.630 513.518,269.400 513.374 C 270.170 513.229,270.800 512.965,270.800 512.787 C 270.800 512.609,271.340 512.345,272.000 512.200 C 272.660 512.055,273.200 511.785,273.200 511.600 C 273.200 511.415,273.740 511.145,274.400 511.000 C 275.060 510.855,275.600 510.571,275.600 510.368 C 275.600 510.166,276.050 510.000,276.600 510.000 C 277.150 510.000,277.600 509.836,277.600 509.635 C 277.600 509.434,278.320 509.149,279.200 509.000 C 280.080 508.851,280.800 508.585,280.800 508.408 C 280.800 508.231,281.255 507.973,281.810 507.833 C 282.727 507.603,284.400 506.290,284.400 505.800 C 284.400 505.690,282.420 505.600,280.000 505.600 C 275.799 505.600,274.297 505.142,276.600 504.564 C 277.150 504.426,277.600 504.153,277.600 503.957 C 277.600 503.760,277.810 503.600,278.066 503.600 C 278.547 503.600,278.877 503.329,281.103 501.103 C 283.329 498.877,283.600 498.547,283.600 498.066 C 283.600 497.810,283.780 497.600,284.000 497.600 C 284.220 497.600,284.400 497.330,284.400 497.000 C 284.400 496.670,284.568 496.400,284.773 496.400 C 284.978 496.400,285.260 496.040,285.400 495.601 C 285.539 495.161,286.091 494.692,286.627 494.558 C 287.162 494.423,287.600 494.153,287.600 493.957 C 287.600 493.760,287.810 493.600,288.066 493.600 C 288.547 493.600,288.877 493.329,291.103 491.103 C 293.329 488.877,293.600 488.547,293.600 488.066 C 293.600 487.810,293.780 487.600,294.000 487.600 C 294.220 487.600,294.400 487.407,294.400 487.171 C 294.400 486.936,294.670 486.473,295.000 486.143 C 295.533 485.610,295.600 486.035,295.600 489.971 C 295.600 492.407,295.690 494.400,295.800 494.400 C 296.290 494.400,297.603 492.727,297.833 491.810 C 297.973 491.255,298.231 490.800,298.408 490.800 C 298.585 490.800,298.851 490.080,299.000 489.200 C 299.149 488.320,299.434 487.600,299.635 487.600 C 299.836 487.600,300.000 487.150,300.000 486.600 C 300.000 486.050,300.166 485.600,300.368 485.600 C 300.571 485.600,300.855 485.060,301.000 484.400 C 301.145 483.740,301.415 483.200,301.600 483.200 C 301.785 483.200,302.055 482.660,302.200 482.000 C 302.345 481.340,302.609 480.800,302.787 480.800 C 302.965 480.800,303.229 480.170,303.374 479.400 C 303.518 478.630,303.787 478.000,303.971 478.000 C 304.156 478.000,304.401 477.640,304.516 477.200 C 304.806 476.091,304.704 476.150,302.627 478.300 C 301.618 479.345,300.610 480.380,300.387 480.600 C 296.899 484.049,295.946 484.880,295.727 484.661 C 295.584 484.517,295.662 484.400,295.902 484.400 C 296.141 484.400,296.455 483.860,296.600 483.200 C 296.745 482.540,297.021 482.000,297.214 482.000 C 297.406 482.000,297.682 481.370,297.826 480.600 C 297.971 479.830,298.235 479.200,298.413 479.200 C 298.591 479.200,298.855 478.660,299.000 478.000 C 299.145 477.340,299.429 476.800,299.632 476.800 C 299.834 476.800,300.000 476.530,300.000 476.200 C 300.000 475.870,300.164 475.600,300.364 475.600 C 300.564 475.600,300.856 474.070,301.011 472.200 C 301.167 470.330,301.429 468.800,301.593 468.800 C 301.756 468.800,301.988 467.591,302.106 466.113 C 302.225 464.635,302.520 463.360,302.762 463.279 C 303.003 463.199,303.314 462.428,303.452 461.566 C 303.590 460.705,303.836 460.000,304.000 460.000 C 304.163 460.000,304.419 459.078,304.569 457.951 C 304.896 455.482,305.338 454.982,307.523 454.613 C 308.445 454.457,309.200 454.186,309.200 454.009 C 309.200 453.833,309.830 453.571,310.600 453.426 C 311.370 453.282,312.000 452.992,312.000 452.782 C 312.000 452.572,312.230 452.400,312.511 452.400 C 312.792 452.400,313.330 452.040,313.707 451.600 C 314.084 451.160,314.664 450.800,314.996 450.800 C 315.328 450.800,315.600 450.620,315.600 450.400 C 315.600 450.180,315.870 450.000,316.200 450.000 C 316.530 450.000,316.800 449.834,316.800 449.632 C 316.800 449.429,317.340 449.145,318.000 449.000 C 318.660 448.855,319.200 448.591,319.200 448.413 C 319.200 448.235,319.830 447.971,320.600 447.826 C 321.370 447.682,322.000 447.411,322.000 447.225 C 322.000 447.039,322.493 446.763,323.096 446.612 C 323.699 446.460,324.319 446.131,324.474 445.880 C 324.629 445.629,324.901 445.578,325.078 445.766 C 325.255 445.955,325.174 446.190,324.897 446.289 C 324.621 446.388,323.607 447.285,322.645 448.282 C 320.490 450.517,320.408 450.598,318.196 452.732 C 316.156 454.699,316.097 454.804,317.200 454.516 C 317.640 454.401,318.000 454.156,318.000 453.971 C 318.000 453.787,318.630 453.518,319.400 453.374 C 320.170 453.229,320.800 452.965,320.800 452.787 C 320.800 452.609,321.340 452.345,322.000 452.200 C 322.660 452.055,323.200 451.785,323.200 451.600 C 323.200 451.415,323.740 451.145,324.400 451.000 C 325.060 450.855,325.600 450.571,325.600 450.368 C 325.600 450.166,326.050 450.000,326.600 450.000 C 327.150 450.000,327.600 449.836,327.600 449.635 C 327.600 449.434,328.320 449.149,329.200 449.000 C 330.080 448.851,330.800 448.585,330.800 448.408 C 330.800 448.231,331.255 447.973,331.810 447.833 C 332.727 447.603,334.400 446.290,334.400 445.800 C 334.400 445.690,332.420 445.600,330.000 445.600 C 325.327 445.600,324.121 445.042,327.800 444.583 C 329.010 444.432,330.000 444.172,330.000 444.005 C 330.000 443.839,330.720 443.587,331.600 443.446 C 332.480 443.306,333.200 443.036,333.200 442.846 C 333.200 442.657,333.920 442.387,334.800 442.246 C 335.680 442.106,336.400 441.827,336.400 441.627 C 336.400 441.427,336.940 441.145,337.600 441.000 C 338.260 440.855,338.800 440.571,338.800 440.368 C 338.800 440.166,339.070 440.000,339.400 440.000 C 339.730 440.000,340.000 439.832,340.000 439.627 C 340.000 439.422,340.377 439.134,340.838 438.988 C 341.300 438.841,342.384 437.993,343.248 437.103 C 344.111 436.213,344.949 435.625,345.109 435.797 C 345.269 435.969,345.174 436.190,344.897 436.289 C 344.621 436.388,343.607 437.285,342.645 438.282 C 340.490 440.517,340.408 440.598,338.196 442.732 C 336.064 444.787,336.092 444.707,337.600 444.485 C 338.260 444.388,338.800 444.164,338.800 443.986 C 338.800 443.809,339.340 443.545,340.000 443.400 C 340.660 443.255,341.200 442.990,341.200 442.812 C 341.200 442.633,341.672 442.368,342.248 442.224 C 342.825 442.079,343.558 441.699,343.877 441.380 C 344.328 440.929,345.694 440.800,350.029 440.800 C 353.476 440.800,355.600 440.648,355.600 440.400 C 355.600 440.180,356.050 440.000,356.600 440.000 C 357.150 440.000,357.600 439.836,357.600 439.635 C 357.600 439.434,358.320 439.149,359.200 439.000 C 360.080 438.851,360.800 438.585,360.800 438.408 C 360.800 438.231,361.255 437.973,361.810 437.833 C 362.727 437.603,364.400 436.290,364.400 435.800 C 364.400 435.690,362.420 435.600,360.000 435.600 C 355.554 435.600,354.086 435.052,357.200 434.554 C 358.080 434.413,358.800 434.155,358.800 433.981 C 358.800 433.806,359.340 433.545,360.000 433.400 C 360.660 433.255,361.200 432.985,361.200 432.800 C 361.200 432.615,361.740 432.345,362.400 432.200 C 363.060 432.055,363.600 431.774,363.600 431.576 C 363.600 431.378,364.050 431.102,364.600 430.964 C 365.150 430.826,365.600 430.553,365.600 430.357 C 365.600 430.160,365.870 430.000,366.200 430.000 C 366.530 430.000,366.800 429.834,366.800 429.632 C 366.800 429.429,367.340 429.145,368.000 429.000 C 368.660 428.855,369.200 428.591,369.200 428.413 C 369.200 428.235,369.830 427.971,370.600 427.826 C 371.370 427.682,372.000 427.411,372.000 427.225 C 372.000 427.039,372.493 426.763,373.096 426.612 C 373.699 426.460,374.319 426.131,374.474 425.880 C 374.629 425.629,374.901 425.578,375.078 425.766 C 375.255 425.955,375.174 426.190,374.897 426.289 C 374.621 426.388,373.584 427.308,372.593 428.334 C 370.389 430.617,370.509 430.497,368.248 432.679 C 366.153 434.702,366.094 434.805,367.200 434.516 C 367.640 434.401,368.000 434.156,368.000 433.971 C 368.000 433.787,368.630 433.518,369.400 433.374 C 370.170 433.229,370.800 432.965,370.800 432.787 C 370.800 432.609,371.340 432.345,372.000 432.200 C 372.660 432.055,373.200 431.785,373.200 431.600 C 373.200 431.415,373.740 431.145,374.400 431.000 C 375.060 430.855,375.600 430.571,375.600 430.368 C 375.600 430.166,376.050 430.000,376.600 430.000 C 377.150 430.000,377.600 429.836,377.600 429.635 C 377.600 429.434,378.320 429.149,379.200 429.000 C 380.080 428.851,380.800 428.585,380.800 428.408 C 380.800 428.231,381.255 427.973,381.810 427.833 C 382.727 427.603,384.400 426.290,384.400 425.800 C 384.400 425.690,382.420 425.600,380.000 425.600 C 375.554 425.600,374.086 425.052,377.200 424.554 C 378.080 424.413,378.800 424.155,378.800 423.981 C 378.800 423.806,379.340 423.545,380.000 423.400 C 380.660 423.255,381.200 422.990,381.200 422.812 C 381.200 422.633,381.672 422.368,382.248 422.224 C 382.825 422.079,383.558 421.699,383.877 421.380 C 384.887 420.370,386.800 421.159,386.800 422.586 C 386.800 422.877,387.070 423.218,387.400 423.345 C 387.730 423.471,388.000 423.851,388.000 424.187 C 388.000 424.524,388.165 424.800,388.366 424.800 C 388.567 424.800,388.858 426.150,389.013 427.800 C 389.167 429.450,389.453 430.800,389.647 430.800 C 389.841 430.800,390.000 431.340,390.000 432.000 C 390.000 433.745,389.345 433.470,389.046 431.600 C 388.906 430.720,388.632 430.000,388.439 430.000 C 388.245 430.000,387.973 429.547,387.834 428.994 C 387.567 427.929,386.434 426.400,385.911 426.400 C 385.443 426.400,385.537 427.512,386.019 427.673 C 386.250 427.750,386.545 428.845,386.675 430.106 C 386.805 431.368,387.038 432.400,387.192 432.400 C 387.346 432.400,387.595 437.027,387.744 442.681 C 387.893 448.336,388.170 453.061,388.358 453.181 C 388.547 453.302,388.779 457.619,388.875 462.775 C 389.001 469.522,389.183 472.194,389.525 472.308 C 389.866 472.422,390.000 474.320,390.000 479.033 C 390.000 482.645,390.160 485.600,390.355 485.600 C 390.550 485.600,390.831 486.410,390.979 487.400 C 391.128 488.390,391.398 489.200,391.580 489.200 C 391.762 489.200,392.029 489.830,392.174 490.600 C 392.318 491.370,392.608 492.000,392.818 492.000 C 393.028 492.000,393.200 492.230,393.200 492.511 C 393.200 492.982,394.555 494.400,395.005 494.400 C 395.112 494.400,395.200 492.420,395.200 490.000 L 395.200 485.600 397.600 485.600 L 400.000 485.600 400.000 247.800 L 400.000 10.000 396.233 10.000 C 394.162 10.000,392.407 9.828,392.333 9.617 C 392.260 9.407,390.220 9.110,387.800 8.958 C 385.380 8.806,383.281 8.497,383.135 8.273 C 382.868 7.863,349.655 7.543,341.500 7.872 M364.700 9.098 C 362.335 9.169,358.465 9.169,356.100 9.098 C 353.735 9.028,355.670 8.970,360.400 8.970 C 365.130 8.970,367.065 9.028,364.700 9.098 M351.200 9.600 C 351.200 9.820,350.480 10.000,349.600 10.000 C 348.720 10.000,348.000 9.820,348.000 9.600 C 348.000 9.380,348.720 9.200,349.600 9.200 C 350.480 9.200,351.200 9.380,351.200 9.600 M372.400 9.600 C 372.400 9.820,371.680 10.000,370.800 10.000 C 369.920 10.000,369.200 9.820,369.200 9.600 C 369.200 9.380,369.920 9.200,370.800 9.200 C 371.680 9.200,372.400 9.380,372.400 9.600 M345.200 10.343 C 345.200 10.531,343.540 10.811,341.511 10.964 C 339.481 11.117,337.726 11.389,337.611 11.568 C 337.495 11.747,336.185 12.022,334.700 12.179 C 333.215 12.335,332.000 12.612,332.000 12.794 C 332.000 12.976,331.100 13.249,330.000 13.400 C 328.900 13.551,328.000 13.817,328.000 13.991 C 328.000 14.165,327.653 14.397,327.230 14.508 C 326.688 14.650,326.523 14.544,326.674 14.151 C 326.792 13.844,327.318 13.485,327.844 13.353 C 328.370 13.221,328.800 12.967,328.800 12.788 C 328.800 12.610,329.340 12.345,330.000 12.200 C 330.660 12.055,331.200 11.788,331.200 11.606 C 331.200 11.424,332.100 11.151,333.200 11.000 C 334.300 10.849,335.200 10.562,335.200 10.362 C 335.200 10.163,337.450 10.000,340.200 10.000 C 342.950 10.000,345.200 10.154,345.200 10.343 M385.600 10.355 C 385.600 10.550,386.410 10.831,387.400 10.979 C 388.390 11.128,389.200 11.398,389.200 11.580 C 389.200 11.762,389.830 12.029,390.600 12.174 C 391.370 12.318,392.000 12.608,392.000 12.818 C 392.000 13.028,392.230 13.200,392.511 13.200 C 392.792 13.200,393.344 13.576,393.737 14.035 C 394.436 14.852,394.431 14.864,393.526 14.581 C 393.017 14.422,392.505 14.145,392.388 13.965 C 392.271 13.785,391.416 13.516,390.488 13.368 C 389.560 13.219,388.800 12.955,388.800 12.781 C 388.800 12.606,387.585 12.335,386.100 12.179 C 384.615 12.022,383.305 11.747,383.189 11.568 C 383.074 11.389,381.319 11.117,379.289 10.964 C 373.982 10.563,374.748 10.000,380.600 10.000 C 383.350 10.000,385.600 10.160,385.600 10.355 M372.467 15.975 C 372.540 16.182,374.445 16.401,376.700 16.463 C 379.708 16.545,380.800 16.712,380.800 17.088 C 380.800 17.369,381.025 17.603,381.300 17.607 C 382.240 17.620,383.600 19.482,383.600 20.756 C 383.600 21.468,383.814 22.014,384.100 22.032 C 384.500 22.057,384.500 22.104,384.100 22.265 C 383.508 22.504,383.419 24.400,384.000 24.400 C 384.574 24.400,384.494 25.489,383.900 25.767 C 383.500 25.953,383.500 26.047,383.900 26.233 C 384.496 26.512,384.565 27.478,384.002 27.667 C 383.783 27.740,383.486 29.735,383.341 32.100 C 383.177 34.790,382.914 36.402,382.639 36.406 C 382.398 36.409,382.470 36.589,382.800 36.806 C 383.270 37.115,383.291 37.271,382.894 37.527 C 382.575 37.734,382.335 39.080,382.243 41.173 C 382.146 43.394,381.916 44.620,381.549 44.877 C 381.124 45.174,381.113 45.307,381.500 45.464 C 382.089 45.703,382.169 46.675,381.616 46.867 C 381.404 46.940,381.133 48.710,381.014 50.800 C 380.894 52.890,380.617 54.660,380.398 54.733 C 380.179 54.807,380.000 56.007,380.000 57.400 C 380.000 59.036,379.823 60.016,379.500 60.167 C 379.100 60.353,379.100 60.447,379.500 60.633 C 380.104 60.915,380.162 61.879,379.586 62.071 C 379.333 62.156,379.078 65.149,378.926 69.805 C 378.791 73.982,378.523 77.503,378.331 77.629 C 378.133 77.759,377.984 138.230,377.988 217.143 C 377.993 347.794,377.951 356.444,377.314 356.688 C 376.354 357.057,375.200 358.101,375.200 358.601 C 375.200 358.833,374.840 359.283,374.400 359.600 C 373.960 359.917,373.600 360.409,373.600 360.692 C 373.600 360.976,373.240 361.516,372.800 361.893 C 372.360 362.270,372.000 362.808,372.000 363.089 C 372.000 363.370,371.730 363.600,371.400 363.600 C 371.070 363.600,370.800 363.768,370.800 363.973 C 370.800 364.178,370.404 364.472,369.920 364.625 C 369.436 364.779,368.390 365.601,367.597 366.452 C 366.769 367.340,365.779 368.000,365.277 368.000 C 364.795 368.000,364.400 368.166,364.400 368.368 C 364.400 368.571,363.860 368.855,363.200 369.000 C 362.540 369.145,362.000 369.429,362.000 369.632 C 362.000 369.834,361.550 370.000,361.000 370.000 C 360.450 370.000,360.000 370.153,360.000 370.341 C 360.000 370.528,358.528 370.795,356.728 370.934 C 354.928 371.073,353.353 371.350,353.228 371.551 C 353.103 371.751,351.605 372.046,349.900 372.205 C 348.195 372.364,346.800 372.642,346.800 372.822 C 346.800 373.003,345.990 373.272,345.000 373.421 C 344.010 373.569,343.200 373.836,343.200 374.014 C 343.200 374.191,342.660 374.455,342.000 374.600 C 341.193 374.777,340.800 375.106,340.800 375.605 C 340.800 376.018,340.409 376.470,339.919 376.626 C 339.434 376.780,338.791 377.152,338.490 377.453 C 338.189 377.754,337.686 378.000,337.371 378.000 C 337.057 378.000,336.800 378.164,336.800 378.365 C 336.800 378.566,336.080 378.851,335.200 379.000 C 334.320 379.149,333.600 379.434,333.600 379.635 C 333.600 379.836,333.240 380.000,332.800 380.000 C 332.360 380.000,332.000 380.168,332.000 380.373 C 332.000 380.577,330.560 380.871,328.800 381.024 C 327.040 381.178,325.600 381.447,325.600 381.623 C 325.600 381.799,324.610 382.066,323.400 382.217 C 322.190 382.368,321.200 382.628,321.200 382.795 C 321.200 382.961,320.480 383.213,319.600 383.354 C 318.720 383.494,318.000 383.773,318.000 383.973 C 318.000 384.173,317.468 384.453,316.818 384.596 C 316.155 384.742,315.529 385.195,315.391 385.628 C 315.256 386.053,314.838 386.400,314.462 386.400 C 314.086 386.400,313.470 386.760,313.093 387.200 C 312.716 387.640,312.136 388.000,311.804 388.000 C 311.472 388.000,311.200 388.166,311.200 388.368 C 311.200 388.571,310.660 388.855,310.000 389.000 C 309.340 389.145,308.800 389.429,308.800 389.632 C 308.800 389.834,308.260 390.000,307.600 390.000 C 306.940 390.000,306.400 390.159,306.400 390.353 C 306.400 390.548,305.230 390.832,303.800 390.985 C 302.246 391.152,301.198 391.452,301.194 391.732 C 301.190 392.003,301.022 391.948,300.794 391.600 C 300.512 391.170,300.315 391.130,300.100 391.459 C 299.935 391.712,298.765 392.048,297.500 392.205 C 296.235 392.363,295.200 392.628,295.200 392.795 C 295.200 392.961,294.480 393.213,293.600 393.354 C 292.720 393.494,292.000 393.787,292.000 394.005 C 292.000 394.222,291.738 394.400,291.418 394.400 C 291.098 394.400,290.386 394.850,289.836 395.400 C 289.286 395.950,288.688 396.400,288.507 396.400 C 288.326 396.400,287.870 396.760,287.493 397.200 C 287.116 397.640,286.536 398.000,286.204 398.000 C 285.872 398.000,285.600 398.180,285.600 398.400 C 285.600 398.620,285.144 398.800,284.587 398.800 C 284.031 398.800,283.471 399.070,283.345 399.400 C 283.216 399.736,282.621 400.000,281.991 400.000 C 281.372 400.000,280.796 400.211,280.710 400.469 C 280.433 401.300,265.200 401.480,265.200 400.652 C 265.200 400.269,264.874 400.000,264.408 400.000 C 263.902 400.000,263.527 399.648,263.372 399.029 C 263.237 398.495,262.874 397.961,262.564 397.841 C 262.254 397.722,262.000 397.169,262.000 396.613 C 262.000 396.056,261.823 395.600,261.606 395.600 C 261.351 395.600,261.175 382.322,261.106 357.933 C 261.022 328.231,260.894 320.231,260.500 320.100 C 260.225 320.008,260.000 319.759,260.000 319.547 C 260.000 318.996,257.410 316.400,256.860 316.400 C 256.607 316.400,256.400 316.220,256.400 316.000 C 256.400 315.780,256.130 315.600,255.800 315.600 C 255.470 315.600,255.200 315.870,255.200 316.200 C 255.200 316.530,255.020 316.800,254.800 316.800 C 254.580 316.800,254.400 317.070,254.400 317.400 C 254.400 317.730,254.228 318.000,254.018 318.000 C 253.808 318.000,253.518 318.630,253.374 319.400 C 253.229 320.170,252.965 320.800,252.787 320.800 C 252.609 320.800,252.345 321.340,252.200 322.000 C 252.055 322.660,251.771 323.200,251.568 323.200 C 251.366 323.200,251.200 323.476,251.200 323.813 C 251.200 324.149,250.930 324.529,250.600 324.655 C 250.270 324.782,250.000 325.207,250.000 325.600 C 250.000 325.993,249.730 326.418,249.400 326.545 C 249.070 326.671,248.800 326.958,248.800 327.183 C 248.800 327.679,247.538 329.200,247.126 329.200 C 246.652 329.200,243.200 332.685,243.200 333.164 C 243.200 333.404,243.028 333.600,242.818 333.600 C 242.608 333.600,242.318 334.230,242.174 335.000 C 242.029 335.770,241.751 336.400,241.555 336.400 C 241.360 336.400,241.200 336.747,241.200 337.171 C 241.200 337.596,240.930 338.213,240.600 338.543 C 240.270 338.873,240.000 339.260,240.000 339.402 C 240.000 339.824,237.859 341.824,237.100 342.111 C 236.715 342.256,236.400 342.561,236.400 342.787 C 236.400 343.014,236.158 343.200,235.861 343.200 C 234.861 343.200,233.563 344.718,233.328 346.164 C 233.200 346.954,232.955 347.600,232.783 347.600 C 232.611 347.600,232.349 348.320,232.200 349.200 C 232.051 350.080,231.766 350.800,231.565 350.800 C 231.364 350.800,231.200 351.019,231.200 351.287 C 231.200 351.555,230.783 352.140,230.272 352.587 C 229.762 353.034,229.228 353.715,229.085 354.100 C 228.942 354.485,228.549 354.800,228.213 354.800 C 227.876 354.800,227.600 355.070,227.600 355.400 C 227.600 356.075,226.213 357.600,225.600 357.600 C 225.380 357.600,225.200 357.870,225.200 358.200 C 225.200 358.530,225.020 358.800,224.800 358.800 C 224.580 358.800,224.400 359.070,224.400 359.400 C 224.400 359.730,224.223 360.000,224.008 360.000 C 223.792 360.000,223.502 360.450,223.364 361.000 C 223.226 361.550,222.967 362.000,222.788 362.000 C 222.610 362.000,222.348 362.525,222.207 363.167 C 222.066 363.808,221.692 364.433,221.376 364.554 C 221.059 364.676,220.800 365.191,220.800 365.699 C 220.800 366.207,220.440 366.883,220.000 367.200 C 219.560 367.517,219.200 367.967,219.200 368.199 C 219.200 368.704,217.757 370.000,217.195 370.000 C 216.978 370.000,216.800 370.186,216.800 370.413 C 216.800 370.639,216.485 370.944,216.100 371.090 C 215.228 371.420,214.400 372.219,214.400 372.729 C 214.400 372.941,214.130 373.218,213.800 373.345 C 213.470 373.471,213.200 373.851,213.200 374.187 C 213.200 374.524,213.036 374.800,212.835 374.800 C 212.634 374.800,212.349 375.520,212.200 376.400 C 212.051 377.280,211.785 378.000,211.608 378.000 C 211.431 378.000,211.174 378.450,211.036 379.000 C 210.898 379.550,210.608 380.000,210.392 380.000 C 210.177 380.000,210.000 380.194,210.000 380.431 C 210.000 381.141,207.777 383.140,206.680 383.416 C 206.118 383.557,205.561 383.926,205.441 384.236 C 205.322 384.546,204.859 384.800,204.413 384.800 C 203.924 384.800,203.600 385.063,203.600 385.460 C 203.600 386.269,201.262 388.600,200.071 388.978 C 199.592 389.130,199.200 389.422,199.200 389.627 C 199.200 389.832,198.945 390.000,198.633 390.000 C 198.322 390.000,197.996 390.211,197.910 390.469 C 197.605 391.385,193.757 391.102,192.887 390.100 C 192.458 389.605,191.942 389.200,191.742 389.200 C 191.302 389.200,190.000 387.733,190.000 387.238 C 190.000 387.044,189.730 386.782,189.400 386.655 C 189.070 386.529,188.800 386.149,188.800 385.813 C 188.800 385.041,187.542 383.762,186.439 383.413 C 185.978 383.266,185.600 383.002,185.600 382.826 C 185.600 382.650,184.839 382.403,183.909 382.278 C 182.978 382.154,182.155 381.866,182.079 381.638 C 182.004 381.411,181.325 381.110,180.571 380.968 C 179.817 380.827,179.200 380.565,179.200 380.386 C 179.200 380.208,178.660 379.522,178.000 378.862 C 177.340 378.202,176.800 377.462,176.800 377.218 C 176.800 376.974,176.530 376.671,176.200 376.545 C 175.870 376.418,175.600 375.988,175.600 375.589 C 175.600 375.108,175.195 374.775,174.400 374.600 C 173.740 374.455,173.200 374.194,173.200 374.019 C 173.200 373.845,172.480 373.587,171.600 373.446 C 170.720 373.306,170.000 373.032,170.000 372.839 C 170.000 372.645,169.550 372.374,169.000 372.236 C 168.450 372.098,168.000 371.822,168.000 371.624 C 168.000 371.426,167.468 371.147,166.818 371.004 C 166.168 370.861,165.533 370.418,165.406 370.020 C 165.280 369.621,164.636 369.187,163.976 369.055 C 162.804 368.821,160.800 367.075,160.800 366.289 C 160.800 365.759,159.203 364.400,158.582 364.400 C 158.309 364.400,157.982 364.130,157.855 363.800 C 157.729 363.470,157.349 363.200,157.013 363.200 C 156.676 363.200,156.400 363.020,156.400 362.800 C 156.400 362.580,156.158 362.400,155.861 362.400 C 155.565 362.400,154.907 362.040,154.400 361.600 C 153.893 361.160,153.247 360.800,152.966 360.800 C 152.684 360.800,152.340 360.440,152.200 360.000 C 151.664 358.310,150.800 359.945,150.800 362.650 C 150.800 363.173,150.620 363.600,150.400 363.600 C 150.136 363.600,150.000 377.533,150.000 404.600 C 150.000 431.667,150.136 445.600,150.400 445.600 C 150.620 445.600,150.800 445.848,150.800 446.152 C 150.800 446.906,153.855 450.000,154.600 450.000 C 154.930 450.000,155.200 450.180,155.200 450.400 C 155.200 450.620,155.470 450.800,155.800 450.800 C 156.130 450.800,156.400 450.620,156.400 450.400 C 156.400 450.180,157.030 450.000,157.800 450.000 C 158.570 450.000,159.200 449.845,159.200 449.656 C 159.200 449.466,160.144 449.200,161.298 449.063 C 162.451 448.926,163.456 448.631,163.531 448.407 C 163.606 448.183,164.090 448.000,164.608 448.000 C 165.140 448.000,166.039 447.475,166.675 446.794 C 169.924 443.312,170.763 442.591,172.031 442.195 C 172.564 442.028,173.118 441.708,173.263 441.482 C 173.408 441.257,175.433 440.987,177.763 440.884 C 180.093 440.780,182.000 440.539,182.000 440.348 C 182.000 440.156,182.990 440.000,184.200 440.000 C 185.410 440.000,186.400 439.834,186.400 439.632 C 186.400 439.429,186.940 439.145,187.600 439.000 C 188.260 438.855,188.800 438.571,188.800 438.368 C 188.800 438.166,189.059 438.000,189.375 438.000 C 189.691 438.000,190.456 437.457,191.075 436.794 C 194.858 432.739,195.279 432.429,197.390 432.139 C 198.385 432.003,199.200 431.753,199.200 431.584 C 199.200 431.415,201.090 431.148,203.400 430.991 C 205.710 430.833,207.600 430.546,207.600 430.352 C 207.600 430.158,208.320 430.000,209.200 430.000 C 210.080 430.000,210.800 429.841,210.800 429.646 C 210.800 429.451,211.823 429.164,213.073 429.008 C 215.250 428.736,215.475 428.593,218.418 425.607 C 220.107 423.892,221.919 422.355,222.445 422.191 C 222.970 422.026,223.528 421.691,223.685 421.446 C 223.863 421.168,225.934 420.947,229.185 420.860 C 232.053 420.783,234.400 420.558,234.400 420.360 C 234.400 420.162,234.940 420.000,235.600 420.000 C 236.260 420.000,236.800 419.834,236.800 419.632 C 236.800 419.429,237.340 419.145,238.000 419.000 C 238.660 418.855,239.200 418.571,239.200 418.368 C 239.200 418.166,239.566 418.000,240.013 418.000 C 240.459 418.000,240.922 417.746,241.041 417.436 C 241.161 417.126,241.695 416.763,242.229 416.628 C 242.797 416.486,243.200 416.092,243.200 415.681 C 243.200 414.816,244.446 413.704,245.794 413.366 C 246.347 413.227,246.800 412.973,246.800 412.802 C 246.800 412.631,247.655 412.363,248.700 412.206 C 249.745 412.050,250.723 411.723,250.873 411.481 C 251.246 410.879,259.529 410.844,259.915 411.442 C 260.072 411.686,260.901 412.014,261.757 412.171 C 262.614 412.329,263.572 412.715,263.886 413.029 C 264.200 413.343,264.894 413.600,265.429 413.600 C 265.963 413.600,266.400 413.757,266.400 413.948 C 266.400 414.140,267.480 414.419,268.800 414.568 L 271.200 414.840 271.200 416.387 C 271.200 417.249,271.421 418.023,271.700 418.136 C 272.076 418.289,272.052 418.444,271.600 418.763 C 271.193 419.051,271.161 419.190,271.500 419.194 C 271.814 419.198,272.000 419.783,272.000 420.767 C 272.000 421.645,271.780 422.422,271.500 422.536 C 271.119 422.691,271.137 422.834,271.575 423.139 C 272.016 423.446,272.182 424.832,272.288 429.070 C 272.365 432.142,272.598 434.659,272.813 434.733 C 273.326 434.910,273.314 436.800,272.800 436.800 C 272.217 436.800,272.309 439.891,272.900 440.167 C 273.300 440.353,273.300 440.447,272.900 440.633 C 272.625 440.762,272.400 441.122,272.400 441.433 C 272.400 441.745,272.625 442.003,272.900 442.006 C 273.260 442.011,273.244 442.111,272.845 442.364 C 272.468 442.602,272.296 443.497,272.306 445.157 C 272.317 446.993,272.182 447.600,271.761 447.600 C 271.236 447.600,271.056 448.179,271.141 449.600 C 271.165 450.003,271.104 450.036,270.955 449.700 C 270.610 448.921,270.000 449.112,270.000 450.000 C 270.000 450.440,269.820 450.800,269.600 450.800 C 269.380 450.800,269.200 450.607,269.200 450.371 C 269.200 450.136,268.917 450.226,268.571 450.571 C 268.226 450.917,267.686 451.200,267.371 451.200 C 267.057 451.200,266.800 451.380,266.800 451.600 C 266.800 451.820,266.440 452.000,266.000 452.000 C 265.560 452.000,265.200 452.250,265.200 452.555 C 265.200 452.874,264.602 453.223,263.800 453.374 C 263.030 453.518,262.400 453.808,262.400 454.018 C 262.400 454.228,261.095 454.402,259.500 454.403 C 253.562 454.411,252.400 454.716,252.400 456.268 C 252.400 457.105,252.170 457.713,251.800 457.855 C 251.470 457.982,251.200 458.516,251.200 459.043 C 251.200 459.627,250.966 460.000,250.600 460.000 C 250.270 460.000,250.000 460.180,250.000 460.400 C 250.000 460.620,249.743 460.800,249.429 460.800 C 249.114 460.800,248.613 461.044,248.316 461.342 C 248.018 461.639,246.880 462.017,245.787 462.181 C 244.694 462.344,243.706 462.630,243.591 462.815 C 243.477 463.000,241.092 463.278,238.291 463.434 C 235.491 463.590,233.200 463.871,233.200 464.058 C 233.200 464.589,232.095 464.461,231.833 463.900 C 231.647 463.500,231.553 463.500,231.367 463.900 C 231.216 464.222,230.241 464.400,228.625 464.400 C 223.348 464.400,221.200 464.813,221.200 465.828 C 221.200 466.738,220.264 468.000,219.590 468.000 C 219.395 468.000,219.119 468.625,218.976 469.390 C 218.748 470.603,218.530 470.814,217.257 471.048 C 216.456 471.195,215.695 471.476,215.568 471.672 C 215.440 471.868,214.630 472.140,213.768 472.276 C 212.905 472.412,212.102 472.672,211.981 472.854 C 211.861 473.035,208.981 473.303,205.581 473.449 C 202.182 473.596,199.340 473.869,199.267 474.058 C 199.059 474.591,198.001 474.460,197.994 473.900 C 197.990 473.554,197.897 473.536,197.694 473.840 C 197.532 474.082,196.052 474.390,194.405 474.524 C 192.758 474.659,191.347 474.959,191.269 475.192 C 191.192 475.424,190.875 475.868,190.564 476.179 C 190.254 476.489,190.000 476.949,190.000 477.200 C 190.000 477.451,189.738 477.919,189.417 478.240 C 189.096 478.561,188.887 479.043,188.951 479.312 C 189.016 479.580,188.993 479.665,188.901 479.500 C 188.593 478.948,188.057 479.192,187.800 480.000 C 187.660 480.440,187.301 480.800,187.002 480.800 C 186.702 480.800,186.215 481.042,185.919 481.339 C 185.622 481.635,184.665 482.011,183.791 482.175 C 182.917 482.339,182.088 482.658,181.948 482.884 C 181.801 483.121,179.055 483.384,175.447 483.505 C 172.011 483.620,169.200 483.843,169.200 483.999 C 169.200 484.156,167.404 484.383,165.210 484.504 C 161.019 484.734,160.000 485.170,160.000 486.729 C 160.000 487.161,159.711 487.625,159.358 487.761 C 158.992 487.901,158.815 488.263,158.946 488.603 C 159.101 489.008,158.921 489.200,158.387 489.200 C 157.867 489.200,157.600 489.471,157.600 490.000 C 157.600 490.440,157.420 490.800,157.200 490.800 C 156.980 490.800,156.800 490.607,156.800 490.371 C 156.800 490.136,156.517 490.226,156.171 490.571 C 155.826 490.917,155.363 491.200,155.143 491.200 C 154.923 491.200,154.473 491.470,154.143 491.800 C 153.813 492.130,153.031 492.400,152.405 492.400 C 151.779 492.400,151.205 492.584,151.131 492.808 C 151.056 493.033,149.106 493.324,146.797 493.455 C 144.362 493.593,142.477 493.883,142.306 494.146 C 142.095 494.471,142.011 494.458,142.006 494.100 C 142.002 493.796,141.450 493.600,140.600 493.600 C 139.750 493.600,139.198 493.796,139.194 494.100 C 139.190 494.439,139.051 494.407,138.763 494.000 C 138.444 493.548,138.289 493.524,138.136 493.900 C 138.024 494.176,137.257 494.400,136.425 494.400 C 132.084 494.400,130.000 494.873,130.000 495.857 C 130.000 496.376,129.820 496.800,129.600 496.800 C 129.380 496.800,129.200 497.070,129.200 497.400 C 129.200 497.730,128.930 498.000,128.600 498.000 C 127.879 498.000,127.785 498.786,128.500 498.832 C 128.807 498.851,128.769 498.952,128.400 499.094 C 128.070 499.221,127.530 499.631,127.200 500.005 C 126.870 500.379,126.150 500.826,125.600 500.997 C 125.050 501.168,124.495 501.470,124.368 501.668 C 124.240 501.866,123.430 502.140,122.568 502.276 C 121.705 502.412,120.898 502.678,120.774 502.866 C 120.649 503.054,117.949 503.324,114.774 503.465 C 111.312 503.618,108.880 503.897,108.700 504.161 C 108.494 504.463,108.277 504.413,108.006 504.000 C 107.789 503.670,107.609 503.598,107.606 503.841 C 107.602 504.111,106.198 504.372,103.968 504.517 C 100.236 504.759,98.800 505.474,98.800 507.090 C 98.800 507.885,97.882 508.714,96.663 509.020 C 96.094 509.163,95.508 509.658,95.362 510.121 C 94.958 511.393,94.348 511.839,92.629 512.118 C 91.769 512.257,90.944 512.568,90.795 512.807 C 90.637 513.064,88.401 513.341,85.363 513.481 C 82.350 513.620,80.062 513.903,79.870 514.160 C 79.634 514.473,79.481 514.456,79.336 514.100 C 79.108 513.536,78.000 513.411,78.000 513.948 C 78.000 514.140,76.200 514.425,74.000 514.581 C 70.289 514.844,69.266 515.191,70.500 515.767 C 70.898 515.952,70.896 516.048,70.493 516.236 C 69.549 516.675,68.833 517.620,69.039 518.157 C 69.172 518.504,68.826 518.775,68.054 518.929 C 67.366 519.067,66.760 519.495,66.618 519.944 C 66.482 520.371,65.928 520.832,65.386 520.968 C 64.844 521.104,64.400 521.392,64.400 521.608 C 64.400 521.823,64.143 522.000,63.829 522.000 C 63.514 522.000,62.985 522.272,62.653 522.604 C 62.244 523.014,60.853 523.284,58.325 523.445 C 56.276 523.576,54.499 523.845,54.375 524.044 C 54.049 524.567,40.248 524.543,40.073 524.019 C 39.996 523.789,39.543 523.597,39.067 523.593 C 37.349 523.579,36.400 521.960,36.400 519.044 C 36.400 517.548,36.226 516.400,36.000 516.400 C 35.734 516.400,35.600 462.533,35.600 355.600 C 35.600 248.667,35.734 194.800,36.000 194.800 C 36.579 194.800,36.493 193.304,35.900 193.064 C 35.553 192.923,35.531 192.760,35.829 192.530 C 36.591 191.944,36.828 190.800,36.187 190.800 C 35.864 190.800,35.600 190.620,35.600 190.400 C 35.600 190.180,36.050 190.000,36.600 190.000 C 37.833 190.000,37.841 189.630,36.631 188.631 C 35.705 187.867,35.704 187.855,36.477 187.031 C 37.212 186.247,37.285 186.240,37.772 186.900 C 38.405 187.759,38.800 187.797,38.800 187.000 C 38.800 186.670,38.620 186.400,38.400 186.400 C 38.180 186.400,38.000 186.220,38.000 186.000 C 38.000 185.780,38.270 185.600,38.600 185.600 C 38.930 185.600,39.200 185.870,39.200 186.200 C 39.200 187.029,40.662 186.956,41.203 186.100 C 41.521 185.599,41.706 185.542,41.857 185.900 C 42.105 186.491,44.400 186.582,44.400 186.000 C 44.400 185.426,45.489 185.506,45.767 186.100 C 45.953 186.500,46.047 186.500,46.233 186.100 C 46.410 185.720,48.771 185.600,56.033 185.600 C 62.144 185.600,65.600 185.456,65.600 185.200 C 65.600 184.980,65.828 184.800,66.107 184.800 C 66.481 184.800,66.605 183.896,66.577 181.381 C 66.546 178.664,66.668 177.885,67.169 177.588 C 67.726 177.258,67.730 177.168,67.200 176.813 C 66.778 176.531,66.752 176.410,67.113 176.406 C 67.394 176.403,67.729 176.670,67.855 177.000 C 68.234 177.986,69.200 177.698,69.200 176.600 C 69.200 176.050,69.380 175.600,69.600 175.600 C 69.820 175.600,70.000 175.887,70.000 176.238 C 70.000 176.941,74.061 176.675,74.333 175.953 C 74.532 175.427,75.499 175.526,75.767 176.100 C 75.953 176.500,76.047 176.500,76.233 176.100 C 76.411 175.719,78.878 175.600,86.567 175.600 L 96.667 175.600 96.667 173.365 C 96.667 171.875,96.856 171.008,97.233 170.765 C 97.718 170.453,97.713 170.341,97.200 169.993 C 96.676 169.637,96.689 169.533,97.300 169.173 C 97.685 168.946,97.997 168.544,97.994 168.280 C 97.990 167.957,97.875 167.978,97.641 168.347 C 97.361 168.789,97.131 168.731,96.447 168.047 C 95.448 167.048,95.427 166.952,96.150 166.674 C 96.487 166.545,96.681 166.716,96.650 167.114 C 96.617 167.549,96.964 167.795,97.700 167.858 C 98.554 167.931,98.800 167.779,98.800 167.176 C 98.800 166.749,98.620 166.400,98.400 166.400 C 98.180 166.400,98.000 166.220,98.000 166.000 C 98.000 165.780,98.270 165.600,98.600 165.600 C 98.930 165.600,99.200 165.793,99.200 166.029 C 99.200 166.452,100.170 167.600,100.528 167.600 C 100.630 167.600,100.826 167.150,100.964 166.600 C 101.232 165.534,102.400 165.200,102.400 166.190 C 102.400 166.856,104.878 166.587,105.148 165.891 C 105.230 165.681,105.469 165.755,105.679 166.055 C 105.975 166.478,106.106 166.488,106.264 166.100 C 106.419 165.718,108.875 165.600,116.633 165.600 C 123.144 165.600,126.800 165.456,126.800 165.200 C 126.800 164.980,127.091 164.800,127.447 164.800 C 127.888 164.800,128.029 164.556,127.892 164.030 C 127.751 163.490,127.856 163.323,128.245 163.473 C 128.817 163.692,129.053 162.608,128.500 162.299 C 128.335 162.207,128.447 162.194,128.748 162.272 C 129.118 162.366,129.230 162.159,129.093 161.636 C 128.951 161.090,129.055 160.923,129.445 161.073 C 129.769 161.197,130.000 161.031,130.000 160.676 C 130.000 160.341,130.225 159.975,130.500 159.864 C 130.874 159.712,130.883 159.577,130.536 159.329 C 130.267 159.137,131.103 158.972,132.523 158.938 C 133.898 158.905,135.038 158.686,135.120 158.440 C 135.201 158.198,135.522 158.000,135.833 158.000 C 136.145 158.000,136.414 157.685,136.432 157.300 C 136.450 156.882,136.544 156.801,136.665 157.100 C 136.900 157.683,137.872 157.771,138.067 157.226 C 138.140 157.021,139.820 156.796,141.800 156.726 L 145.400 156.600 145.525 157.900 C 145.594 158.615,145.794 159.200,145.970 159.200 C 146.145 159.200,146.399 160.131,146.534 161.270 C 146.669 162.408,146.952 163.447,147.163 163.577 C 147.375 163.708,147.673 164.757,147.825 165.908 C 147.978 167.058,148.242 168.000,148.411 168.000 C 148.580 168.000,148.845 169.260,149.000 170.800 C 149.155 172.340,149.443 173.600,149.641 173.600 C 149.852 173.600,150.000 199.202,150.000 235.600 C 150.000 270.044,149.847 297.600,149.655 297.600 C 149.466 297.600,149.190 298.780,149.042 300.223 L 148.773 302.845 150.539 304.562 C 151.510 305.506,152.597 306.390,152.953 306.526 C 153.309 306.663,153.600 306.945,153.600 307.152 C 153.600 307.360,154.320 307.651,155.200 307.800 C 156.080 307.949,156.800 308.234,156.800 308.435 C 156.800 308.636,157.256 308.800,157.813 308.800 C 158.369 308.800,158.929 309.070,159.055 309.400 C 159.182 309.730,159.545 310.000,159.862 310.000 C 160.550 310.000,162.400 311.907,162.400 312.616 C 162.400 312.890,162.670 313.218,163.000 313.345 C 163.330 313.471,163.600 314.031,163.600 314.587 C 163.600 315.314,163.814 315.600,164.357 315.600 C 164.774 315.600,165.218 315.870,165.345 316.200 C 165.471 316.530,166.031 316.800,166.587 316.800 C 167.144 316.800,167.600 316.964,167.600 317.165 C 167.600 317.366,168.320 317.651,169.200 317.800 C 170.080 317.949,170.800 318.234,170.800 318.435 C 170.800 318.636,171.076 318.800,171.413 318.800 C 171.749 318.800,172.129 319.070,172.255 319.400 C 172.382 319.730,172.654 320.000,172.860 320.000 C 173.213 320.000,173.682 320.331,174.985 321.500 C 175.292 321.775,175.673 322.000,175.831 322.000 C 176.274 322.000,178.800 324.705,178.800 325.180 C 178.800 325.411,179.070 325.600,179.400 325.600 C 179.730 325.600,180.000 325.777,180.000 325.992 C 180.000 326.208,180.437 326.494,180.971 326.628 C 181.505 326.763,182.039 327.126,182.159 327.436 C 182.278 327.746,182.636 328.000,182.954 328.000 C 183.273 328.000,183.597 328.191,183.675 328.424 C 183.862 328.986,186.402 329.044,186.742 328.494 C 186.888 328.257,187.501 327.940,188.104 327.788 C 188.707 327.637,189.200 327.353,189.200 327.157 C 189.200 326.960,189.566 326.800,190.013 326.800 C 190.459 326.800,190.929 326.530,191.055 326.200 C 191.182 325.870,191.459 325.600,191.671 325.600 C 192.181 325.600,192.980 324.772,193.310 323.900 C 193.456 323.515,193.937 323.200,194.380 323.200 C 194.898 323.200,195.271 322.855,195.428 322.229 C 195.563 321.695,195.926 321.161,196.236 321.041 C 196.546 320.922,196.800 320.459,196.800 320.013 C 196.800 319.566,196.980 319.200,197.200 319.200 C 197.420 319.200,197.600 318.924,197.600 318.587 C 197.600 318.251,197.865 317.873,198.189 317.749 C 198.513 317.624,198.893 316.910,199.034 316.161 C 199.174 315.413,199.449 314.800,199.645 314.800 C 199.840 314.800,200.000 314.530,200.000 314.200 C 200.000 313.870,200.180 313.600,200.400 313.600 C 200.620 313.600,200.800 313.393,200.800 313.140 C 200.800 312.888,201.430 312.069,202.200 311.321 C 202.970 310.573,203.600 309.790,203.600 309.581 C 203.600 309.371,203.897 309.200,204.260 309.200 C 205.333 309.200,207.629 306.531,207.879 304.993 C 208.003 304.227,208.247 303.600,208.421 303.600 C 208.594 303.600,208.855 303.060,209.000 302.400 C 209.145 301.740,209.429 301.200,209.632 301.200 C 209.834 301.200,210.000 301.006,210.000 300.768 C 210.000 300.027,213.442 296.855,214.548 296.577 C 215.220 296.409,215.600 296.040,215.600 295.557 C 215.600 295.140,215.772 294.800,215.982 294.800 C 216.192 294.800,216.482 294.170,216.626 293.400 C 216.771 292.630,217.041 292.000,217.226 292.000 C 217.412 292.000,217.682 291.370,217.826 290.600 C 217.971 289.830,218.249 289.200,218.445 289.200 C 218.640 289.200,218.800 288.924,218.800 288.587 C 218.800 288.251,219.070 287.871,219.400 287.745 C 219.730 287.618,220.000 287.264,220.000 286.957 C 220.000 286.651,220.168 286.400,220.373 286.400 C 220.578 286.400,220.873 286.001,221.027 285.514 C 221.349 284.502,224.518 281.200,225.168 281.200 C 225.406 281.200,225.600 280.930,225.600 280.600 C 225.600 280.270,225.777 280.000,225.992 280.000 C 226.208 280.000,226.494 279.563,226.628 279.029 C 226.763 278.495,227.126 277.961,227.436 277.841 C 227.746 277.722,228.000 277.349,228.000 277.013 C 228.000 276.676,228.160 276.400,228.355 276.400 C 228.551 276.400,228.829 275.770,228.974 275.000 C 229.118 274.230,229.408 273.600,229.618 273.600 C 229.828 273.600,230.000 273.330,230.000 273.000 C 230.000 272.670,230.180 272.400,230.400 272.400 C 230.620 272.400,230.800 272.124,230.800 271.787 C 230.800 271.451,231.063 271.074,231.385 270.950 C 231.706 270.827,232.078 270.383,232.211 269.964 C 232.344 269.545,232.891 269.092,233.427 268.958 C 233.962 268.823,234.400 268.572,234.400 268.400 C 234.400 268.228,234.847 267.974,235.394 267.837 C 236.007 267.683,236.483 267.207,236.637 266.594 C 236.774 266.047,237.045 265.600,237.239 265.600 C 237.432 265.600,237.706 264.880,237.846 264.000 C 237.987 263.120,238.259 262.400,238.451 262.400 C 238.643 262.400,238.800 262.053,238.800 261.629 C 238.800 261.204,239.070 260.587,239.400 260.257 C 239.730 259.927,240.000 259.540,240.000 259.397 C 240.000 259.078,243.448 255.600,243.764 255.600 C 244.239 255.600,245.600 254.200,245.600 253.711 C 245.600 253.430,245.766 253.200,245.968 253.200 C 246.171 253.200,246.455 252.660,246.600 252.000 C 246.745 251.340,247.009 250.800,247.187 250.800 C 247.365 250.800,247.629 250.170,247.774 249.400 C 247.918 248.630,248.208 248.000,248.418 248.000 C 248.628 248.000,248.800 247.724,248.800 247.387 C 248.800 247.051,249.070 246.671,249.400 246.545 C 249.730 246.418,250.000 245.974,250.000 245.557 C 250.000 245.141,250.180 244.800,250.400 244.800 C 250.620 244.800,250.800 244.596,250.800 244.347 C 250.800 243.881,254.555 240.000,255.006 240.000 C 255.397 240.000,256.217 239.073,256.510 238.300 C 256.656 237.915,256.958 237.600,257.183 237.600 C 257.407 237.600,257.706 236.880,257.846 236.000 C 257.987 235.120,258.233 234.400,258.393 234.400 C 258.553 234.400,258.798 233.186,258.936 231.702 C 259.075 230.218,259.371 228.943,259.594 228.869 C 259.817 228.794,260.000 228.223,260.000 227.600 C 260.000 226.977,260.197 226.401,260.439 226.320 C 260.689 226.237,260.971 224.674,261.095 222.687 C 261.215 220.769,261.467 219.200,261.656 219.200 C 261.845 219.200,262.000 218.570,262.000 217.800 C 262.000 217.030,261.820 216.400,261.600 216.400 C 261.336 216.400,261.200 202.472,261.200 175.416 C 261.200 138.655,261.135 134.378,260.572 133.916 C 260.226 133.632,259.646 133.085,259.283 132.700 C 258.920 132.315,258.392 132.000,258.111 132.000 C 257.830 132.000,257.600 131.832,257.600 131.627 C 257.600 131.422,257.195 131.128,256.700 130.973 C 256.205 130.819,255.668 130.491,255.506 130.246 C 255.292 129.922,255.211 129.925,255.206 130.258 C 255.202 130.540,253.967 130.826,252.000 131.000 C 250.240 131.156,248.800 131.432,248.800 131.613 C 248.800 131.794,247.810 132.066,246.600 132.217 C 245.390 132.368,244.400 132.649,244.400 132.841 C 244.400 133.033,243.680 133.306,242.800 133.446 C 241.920 133.587,241.200 133.840,241.200 134.008 C 241.200 134.176,240.750 134.426,240.200 134.564 C 239.650 134.702,239.200 134.992,239.200 135.208 C 239.200 135.423,238.930 135.600,238.600 135.600 C 238.270 135.600,238.000 135.766,238.000 135.968 C 238.000 136.171,237.460 136.455,236.800 136.600 C 236.140 136.745,235.600 137.021,235.600 137.214 C 235.600 137.406,234.925 137.688,234.100 137.840 C 233.275 137.991,232.496 138.274,232.370 138.468 C 232.243 138.662,231.208 138.931,230.070 139.066 C 228.931 139.201,228.000 139.466,228.000 139.656 C 228.000 139.845,227.370 140.000,226.600 140.000 C 225.830 140.000,225.200 140.161,225.200 140.358 C 225.200 140.555,223.760 140.844,222.000 141.000 C 220.240 141.156,218.800 141.424,218.800 141.596 C 218.800 141.767,217.810 142.032,216.600 142.183 C 215.390 142.334,214.400 142.602,214.400 142.778 C 214.400 142.954,213.680 143.213,212.800 143.354 C 211.920 143.494,211.200 143.773,211.200 143.973 C 211.200 144.173,210.660 144.455,210.000 144.600 C 209.340 144.745,208.800 145.029,208.800 145.232 C 208.800 145.434,208.530 145.600,208.200 145.600 C 207.870 145.600,207.600 145.777,207.600 145.992 C 207.600 146.208,207.150 146.498,206.600 146.636 C 206.050 146.774,205.600 147.027,205.600 147.198 C 205.600 147.369,204.790 147.631,203.800 147.779 C 202.810 147.928,202.000 148.205,202.000 148.396 C 202.000 148.586,201.010 148.866,199.800 149.017 C 198.590 149.168,197.600 149.451,197.600 149.646 C 197.600 149.841,196.880 150.000,196.000 150.000 C 195.120 150.000,194.400 150.161,194.400 150.358 C 194.400 150.555,192.960 150.844,191.200 151.000 C 189.440 151.156,188.000 151.424,188.000 151.596 C 188.000 151.767,187.010 152.032,185.800 152.183 C 184.590 152.334,183.600 152.605,183.600 152.784 C 183.600 152.964,182.970 153.229,182.200 153.374 C 181.430 153.518,180.800 153.808,180.800 154.018 C 180.800 154.228,180.434 154.400,179.987 154.400 C 179.541 154.400,179.071 154.670,178.945 155.000 C 178.818 155.330,178.464 155.600,178.157 155.600 C 177.851 155.600,177.600 155.766,177.600 155.968 C 177.600 156.171,177.060 156.455,176.400 156.600 C 175.740 156.745,175.200 157.013,175.200 157.197 C 175.200 157.380,174.480 157.651,173.600 157.800 C 172.720 157.949,172.000 158.214,172.000 158.389 C 172.000 158.564,170.830 158.832,169.400 158.985 C 167.970 159.138,166.800 159.429,166.800 159.632 C 166.800 159.834,166.080 160.000,165.200 160.000 C 164.320 160.000,163.600 160.159,163.600 160.353 C 163.600 160.547,162.070 160.833,160.200 160.989 C 158.330 161.144,156.800 161.436,156.800 161.636 C 156.800 162.168,155.633 162.081,154.985 161.500 C 153.843 160.475,153.228 160.000,153.047 160.000 C 152.944 160.000,151.750 158.917,150.393 157.593 L 147.926 155.187 147.707 142.693 C 147.587 135.822,147.331 130.098,147.138 129.973 C 146.466 129.536,146.533 106.019,147.207 105.550 C 147.655 105.240,147.677 105.089,147.300 104.936 C 146.706 104.695,146.624 103.600,147.200 103.600 C 147.661 103.600,147.751 101.351,147.300 101.099 C 147.135 101.007,147.245 100.994,147.544 101.070 C 147.929 101.168,148.023 100.943,147.863 100.305 C 147.600 99.248,149.275 97.352,150.049 97.830 C 150.316 97.995,150.776 97.792,151.107 97.361 C 151.556 96.777,151.739 96.727,151.894 97.145 C 152.040 97.538,152.177 97.562,152.382 97.230 C 152.569 96.927,155.027 96.684,159.533 96.522 C 163.310 96.386,166.400 96.123,166.400 95.938 C 166.400 95.752,167.210 95.600,168.200 95.600 C 169.213 95.600,170.000 95.413,170.000 95.171 C 170.000 94.936,170.272 94.471,170.604 94.139 C 170.936 93.807,171.104 93.368,170.978 93.164 C 170.610 92.568,171.201 91.200,171.827 91.200 C 172.142 91.200,172.400 90.930,172.400 90.600 C 172.400 90.270,172.580 90.000,172.800 90.000 C 173.020 90.000,173.221 89.685,173.246 89.300 C 173.291 88.633,173.302 88.633,173.476 89.300 C 173.746 90.335,174.400 90.150,174.400 89.038 C 174.400 88.179,174.628 88.044,176.500 87.789 C 177.655 87.632,178.728 87.300,178.885 87.052 C 179.077 86.748,181.861 86.554,187.385 86.459 C 191.903 86.381,195.600 86.156,195.600 85.959 C 195.600 85.762,195.793 85.600,196.029 85.600 C 196.839 85.600,197.470 84.585,197.693 82.922 C 197.900 81.380,198.119 80.955,199.500 79.415 C 199.775 79.108,200.000 78.676,200.000 78.456 C 200.000 77.894,201.425 77.503,202.500 77.769 C 202.995 77.892,203.175 77.889,202.900 77.763 C 201.504 77.122,203.058 76.867,210.000 76.600 C 214.180 76.439,217.600 76.148,217.600 75.954 C 217.600 75.759,218.301 75.600,219.157 75.600 C 220.172 75.600,220.795 75.391,220.945 75.000 C 221.085 74.635,220.945 74.400,220.587 74.400 C 220.264 74.400,220.000 74.220,220.000 74.000 C 220.000 73.780,220.463 73.600,221.029 73.600 C 221.977 73.600,222.007 73.550,221.409 72.951 C 221.052 72.595,220.814 72.025,220.880 71.685 C 221.043 70.846,222.000 70.574,222.000 71.367 C 222.000 71.715,221.790 72.000,221.533 72.000 C 221.277 72.000,221.189 72.122,221.338 72.271 C 221.690 72.624,223.024 71.185,223.378 70.069 C 223.542 69.554,223.984 69.200,224.464 69.200 C 224.915 69.200,225.360 68.873,225.467 68.464 C 225.606 67.935,226.066 67.712,227.101 67.673 C 227.893 67.643,228.660 67.426,228.806 67.191 C 228.972 66.921,232.103 66.677,237.235 66.533 C 241.726 66.407,245.460 66.146,245.533 65.952 C 245.607 65.758,246.102 65.600,246.633 65.600 C 247.165 65.600,247.623 65.375,247.651 65.100 C 247.679 64.825,247.746 64.158,247.800 63.617 C 247.855 63.076,248.102 62.566,248.349 62.484 C 248.597 62.401,248.800 62.001,248.800 61.595 C 248.800 61.189,249.099 60.558,249.465 60.192 C 250.029 59.628,250.044 59.468,249.565 59.137 C 249.146 58.848,249.220 58.809,249.850 58.985 C 250.483 59.162,250.755 59.015,250.913 58.411 C 251.067 57.823,251.456 57.600,252.329 57.600 C 252.991 57.600,253.595 57.416,253.670 57.191 C 253.751 56.946,256.603 56.689,260.803 56.548 C 264.651 56.420,267.860 56.154,267.933 55.957 C 268.007 55.761,268.950 55.600,270.029 55.600 C 272.516 55.600,273.650 54.749,273.325 53.124 C 273.138 52.188,273.213 52.030,273.749 52.236 C 274.184 52.403,274.400 52.272,274.400 51.843 C 274.400 51.186,274.998 50.959,275.301 51.500 C 275.393 51.665,275.416 51.580,275.351 51.312 C 275.287 51.043,275.496 50.561,275.817 50.240 C 276.138 49.919,276.400 49.284,276.400 48.829 C 276.400 48.049,276.964 47.796,278.305 47.971 C 278.583 48.008,278.918 47.759,279.048 47.419 C 279.332 46.679,281.048 46.590,281.336 47.300 C 281.491 47.681,281.635 47.663,281.940 47.224 C 282.253 46.774,283.772 46.614,288.871 46.492 C 292.462 46.406,295.460 46.170,295.533 45.968 C 295.607 45.766,296.192 45.600,296.833 45.600 C 297.863 45.600,298.000 45.459,298.000 44.400 C 298.000 43.740,298.180 43.200,298.400 43.200 C 298.862 43.200,298.950 41.350,298.500 41.099 C 298.335 41.007,298.410 40.980,298.668 41.041 C 299.308 41.191,301.005 39.667,300.609 39.297 C 300.434 39.134,300.210 39.225,300.112 39.500 C 300.014 39.775,299.663 40.000,299.333 40.000 C 298.420 40.000,298.941 39.018,299.931 38.872 C 300.409 38.802,300.800 38.593,300.800 38.407 C 300.800 38.222,301.565 37.942,302.500 37.786 C 303.435 37.630,304.295 37.352,304.412 37.170 C 304.529 36.987,307.769 36.721,311.612 36.579 C 315.455 36.436,318.660 36.158,318.733 35.960 C 318.807 35.762,319.596 35.600,320.487 35.600 C 321.684 35.600,322.341 35.349,322.998 34.640 C 323.487 34.112,324.228 33.616,324.644 33.537 C 325.219 33.428,325.429 32.986,325.523 31.697 C 325.607 30.542,325.830 30.000,326.223 30.000 C 326.571 30.000,326.800 29.605,326.800 29.005 C 326.800 28.153,327.031 27.973,328.400 27.754 C 329.280 27.613,330.000 27.296,330.001 27.049 C 330.001 26.741,332.045 26.557,336.500 26.463 C 340.338 26.382,343.102 26.159,343.251 25.918 C 343.407 25.665,343.586 25.717,343.721 26.055 C 343.900 26.502,344.016 26.492,344.370 26.000 C 344.752 25.467,344.844 25.467,345.194 26.000 C 345.457 26.401,345.590 26.434,345.594 26.100 C 345.597 25.825,346.050 25.600,346.600 25.600 C 347.503 25.600,347.604 25.435,347.645 23.900 C 347.753 19.794,347.844 19.594,350.683 17.206 C 351.304 16.684,352.400 16.680,352.400 17.200 C 352.400 17.420,352.580 17.600,352.800 17.600 C 353.020 17.600,353.200 17.346,353.200 17.036 C 353.200 16.606,353.884 16.466,356.097 16.445 C 357.691 16.431,359.055 16.234,359.130 16.009 C 359.306 15.483,372.280 15.450,372.467 15.975 M132.804 86.697 C 131.630 87.157,127.136 91.717,126.689 92.900 C 126.544 93.285,126.497 93.600,126.584 93.600 C 126.800 93.600,133.600 86.787,133.600 86.571 C 133.600 86.379,133.622 86.376,132.804 86.697 M122.804 96.697 C 121.630 97.157,117.136 101.717,116.689 102.900 C 116.544 103.285,116.497 103.600,116.584 103.600 C 116.800 103.600,123.600 96.787,123.600 96.571 C 123.600 96.379,123.622 96.376,122.804 96.697 M114.900 126.665 C 114.625 126.776,114.400 127.122,114.400 127.433 C 114.400 127.745,114.240 128.000,114.045 128.000 C 113.850 128.000,113.563 128.855,113.406 129.900 C 113.250 130.945,112.921 131.924,112.676 132.076 C 112.391 132.253,112.172 134.682,112.066 138.854 C 111.944 143.661,111.757 145.500,111.350 145.907 C 111.048 146.210,110.800 146.702,110.800 147.002 C 110.800 147.301,110.449 147.657,110.020 147.794 C 109.592 147.930,109.118 148.428,108.968 148.902 C 108.817 149.375,108.424 150.033,108.094 150.363 C 107.561 150.896,107.529 150.854,107.801 149.981 C 107.970 149.442,108.249 148.908,108.422 148.796 C 108.595 148.684,108.860 148.099,109.012 147.496 C 109.163 146.893,109.447 146.400,109.643 146.400 C 109.840 146.400,110.000 143.790,110.000 140.600 C 110.000 137.252,110.159 134.800,110.375 134.800 C 110.582 134.800,110.872 133.990,111.021 133.000 C 111.169 132.010,111.436 131.200,111.614 131.200 C 111.791 131.200,112.055 130.660,112.200 130.000 C 112.345 129.340,112.629 128.800,112.832 128.800 C 113.034 128.800,113.200 128.543,113.200 128.229 C 113.200 127.523,114.291 126.389,114.929 126.432 C 115.260 126.454,115.252 126.523,114.900 126.665 M36.680 187.336 C 36.348 188.201,37.106 189.146,37.563 188.436 C 37.951 187.834,37.721 186.800,37.200 186.800 C 37.027 186.800,36.793 187.041,36.680 187.336 M390.964 449.289 C 391.117 451.319,391.393 453.074,391.577 453.189 C 391.761 453.305,391.978 456.782,392.059 460.916 C 392.156 465.879,392.358 468.529,392.654 468.716 C 392.900 468.872,393.230 469.765,393.386 470.700 C 393.542 471.635,393.834 472.400,394.035 472.400 C 394.236 472.400,394.400 472.655,394.400 472.967 C 394.400 473.278,394.625 473.614,394.900 473.712 C 395.175 473.810,395.282 474.018,395.138 474.174 C 394.796 474.544,393.200 473.174,393.200 472.511 C 393.200 472.230,393.028 472.000,392.818 472.000 C 392.608 472.000,392.318 471.370,392.174 470.600 C 392.029 469.830,391.762 469.200,391.580 469.200 C 391.398 469.200,391.128 468.390,390.979 467.400 C 390.831 466.410,390.550 465.600,390.355 465.600 C 390.158 465.600,390.000 461.146,390.000 455.600 C 390.000 445.487,390.453 442.522,390.964 449.289 M305.600 460.200 C 305.600 465.495,305.505 465.390,308.045 462.900 C 310.775 460.223,310.706 460.292,312.679 458.248 C 313.661 457.232,314.629 456.400,314.832 456.400 C 315.034 456.400,315.200 456.220,315.200 456.000 C 315.200 455.756,313.333 455.600,310.400 455.600 L 305.600 455.600 305.600 460.200 M285.600 500.200 C 285.600 505.495,285.505 505.390,288.045 502.900 C 290.775 500.223,290.706 500.292,292.679 498.248 C 293.661 497.232,294.629 496.400,294.832 496.400 C 295.034 496.400,295.200 496.220,295.200 496.000 C 295.200 495.756,293.333 495.600,290.400 495.600 L 285.600 495.600 285.600 500.200 \\\"\\r\\n                    stroke=\\\"none\\\"\\r\\n                    fill=\\\"#94cc54\\\"\\r\\n                    fill-rule=\\\"evenodd\\\"\\r\\n                  ></path>\\r\\n                  <path\\r\\n                    id=\\\"path1\\\"\\r\\n                    d=\\\"M140.300 156.710 C 139.035 156.782,138.000 157.011,138.000 157.220 C 138.000 157.781,136.900 157.682,136.665 157.100 C 136.544 156.801,136.450 156.882,136.432 157.300 C 136.414 157.685,136.145 158.000,135.833 158.000 C 135.522 158.000,135.201 158.198,135.120 158.440 C 135.038 158.686,133.898 158.905,132.523 158.938 C 131.103 158.972,130.267 159.137,130.536 159.329 C 130.883 159.577,130.874 159.712,130.500 159.864 C 130.225 159.975,130.000 160.341,130.000 160.676 C 130.000 161.031,129.769 161.197,129.445 161.073 C 129.055 160.923,128.951 161.090,129.093 161.636 C 129.230 162.159,129.118 162.366,128.748 162.272 C 128.447 162.194,128.335 162.207,128.500 162.299 C 129.053 162.608,128.817 163.692,128.245 163.473 C 127.856 163.323,127.751 163.490,127.892 164.030 C 128.029 164.556,127.888 164.800,127.447 164.800 C 127.091 164.800,126.800 164.980,126.800 165.200 C 126.800 165.456,123.144 165.600,116.633 165.600 C 108.875 165.600,106.419 165.718,106.264 166.100 C 106.106 166.488,105.975 166.478,105.679 166.055 C 105.469 165.755,105.230 165.681,105.148 165.891 C 104.878 166.587,102.400 166.856,102.400 166.190 C 102.400 165.200,101.232 165.534,100.964 166.600 C 100.826 167.150,100.630 167.600,100.528 167.600 C 100.170 167.600,99.200 166.452,99.200 166.029 C 99.200 165.793,98.930 165.600,98.600 165.600 C 98.270 165.600,98.000 165.780,98.000 166.000 C 98.000 166.220,98.180 166.400,98.400 166.400 C 98.620 166.400,98.800 166.749,98.800 167.176 C 98.800 167.779,98.554 167.931,97.700 167.858 C 96.964 167.795,96.617 167.549,96.650 167.114 C 96.681 166.716,96.487 166.545,96.150 166.674 C 95.427 166.952,95.448 167.048,96.447 168.047 C 97.131 168.731,97.361 168.789,97.641 168.347 C 97.875 167.978,97.990 167.957,97.994 168.280 C 97.997 168.544,97.685 168.946,97.300 169.173 C 96.689 169.533,96.676 169.637,97.200 169.993 C 97.713 170.341,97.718 170.453,97.233 170.765 C 96.856 171.008,96.667 171.875,96.667 173.365 L 96.667 175.600 86.567 175.600 C 78.878 175.600,76.411 175.719,76.233 176.100 C 76.047 176.500,75.953 176.500,75.767 176.100 C 75.499 175.526,74.532 175.427,74.333 175.953 C 74.061 176.675,70.000 176.941,70.000 176.238 C 70.000 175.887,69.820 175.600,69.600 175.600 C 69.380 175.600,69.200 176.050,69.200 176.600 C 69.200 177.698,68.234 177.986,67.855 177.000 C 67.729 176.670,67.394 176.403,67.113 176.406 C 66.752 176.410,66.778 176.531,67.200 176.813 C 67.730 177.168,67.726 177.258,67.169 177.588 C 66.668 177.885,66.546 178.664,66.577 181.381 C 66.605 183.896,66.481 184.800,66.107 184.800 C 65.828 184.800,65.600 184.980,65.600 185.200 C 65.600 185.456,62.144 185.600,56.033 185.600 C 48.771 185.600,46.410 185.720,46.233 186.100 C 46.047 186.500,45.953 186.500,45.767 186.100 C 45.489 185.506,44.400 185.426,44.400 186.000 C 44.400 186.582,42.105 186.491,41.857 185.900 C 41.706 185.542,41.521 185.599,41.203 186.100 C 40.662 186.956,39.200 187.029,39.200 186.200 C 39.200 185.870,38.930 185.600,38.600 185.600 C 38.270 185.600,38.000 185.780,38.000 186.000 C 38.000 186.220,38.180 186.400,38.400 186.400 C 38.620 186.400,38.800 186.670,38.800 187.000 C 38.800 187.797,38.405 187.759,37.772 186.900 C 37.285 186.240,37.212 186.247,36.477 187.031 C 35.704 187.855,35.705 187.867,36.631 188.631 C 37.841 189.630,37.833 190.000,36.600 190.000 C 36.050 190.000,35.600 190.180,35.600 190.400 C 35.600 190.620,35.864 190.800,36.187 190.800 C 36.828 190.800,36.591 191.944,35.829 192.530 C 35.531 192.760,35.553 192.923,35.900 193.064 C 36.493 193.304,36.579 194.800,36.000 194.800 C 35.734 194.800,35.600 248.667,35.600 355.600 C 35.600 462.533,35.734 516.400,36.000 516.400 C 36.226 516.400,36.403 517.571,36.407 519.100 C 36.414 522.028,37.363 523.600,39.123 523.600 C 39.569 523.600,39.996 523.789,40.073 524.019 C 40.248 524.543,54.049 524.567,54.375 524.044 C 54.499 523.845,56.276 523.576,58.325 523.445 C 60.853 523.284,62.244 523.014,62.653 522.604 C 62.985 522.272,63.514 522.000,63.829 522.000 C 64.143 522.000,64.400 521.823,64.400 521.608 C 64.400 521.392,64.844 521.104,65.386 520.968 C 65.928 520.832,66.482 520.371,66.618 519.944 C 66.760 519.495,67.366 519.067,68.054 518.929 C 68.826 518.775,69.172 518.504,69.039 518.157 C 68.833 517.620,69.549 516.675,70.493 516.236 C 70.896 516.048,70.898 515.952,70.500 515.767 C 69.266 515.191,70.289 514.844,74.000 514.581 C 76.200 514.425,78.000 514.140,78.000 513.948 C 78.000 513.411,79.108 513.536,79.336 514.100 C 79.481 514.456,79.634 514.473,79.870 514.160 C 80.062 513.903,82.350 513.620,85.363 513.481 C 88.401 513.341,90.637 513.064,90.795 512.807 C 90.944 512.568,91.769 512.257,92.629 512.118 C 94.348 511.839,94.958 511.393,95.362 510.121 C 95.508 509.658,96.094 509.163,96.663 509.020 C 97.882 508.714,98.800 507.885,98.800 507.090 C 98.800 505.474,100.236 504.759,103.968 504.517 C 106.198 504.372,107.602 504.111,107.606 503.841 C 107.609 503.598,107.789 503.670,108.006 504.000 C 108.277 504.413,108.494 504.463,108.700 504.161 C 108.880 503.897,111.312 503.618,114.774 503.465 C 117.949 503.324,120.649 503.054,120.774 502.866 C 120.898 502.678,121.705 502.412,122.568 502.276 C 123.430 502.140,124.240 501.866,124.368 501.668 C 124.495 501.470,125.050 501.168,125.600 500.997 C 126.150 500.826,126.870 500.379,127.200 500.005 C 127.530 499.631,128.070 499.221,128.400 499.094 C 128.769 498.952,128.807 498.851,128.500 498.832 C 127.785 498.786,127.879 498.000,128.600 498.000 C 128.930 498.000,129.200 497.730,129.200 497.400 C 129.200 497.070,129.380 496.800,129.600 496.800 C 129.820 496.800,130.000 496.376,130.000 495.857 C 130.000 494.873,132.084 494.400,136.425 494.400 C 137.257 494.400,138.024 494.176,138.136 493.900 C 138.289 493.524,138.444 493.548,138.763 494.000 C 139.051 494.407,139.190 494.439,139.194 494.100 C 139.198 493.796,139.750 493.600,140.600 493.600 C 141.450 493.600,142.002 493.796,142.006 494.100 C 142.011 494.458,142.095 494.471,142.306 494.146 C 142.477 493.883,144.362 493.593,146.797 493.455 C 149.106 493.324,151.056 493.033,151.131 492.808 C 151.205 492.584,151.779 492.400,152.405 492.400 C 153.031 492.400,153.813 492.130,154.143 491.800 C 154.473 491.470,154.923 491.200,155.143 491.200 C 155.363 491.200,155.826 490.917,156.171 490.571 C 156.517 490.226,156.800 490.136,156.800 490.371 C 156.800 490.607,156.980 490.800,157.200 490.800 C 157.420 490.800,157.600 490.440,157.600 490.000 C 157.600 489.471,157.867 489.200,158.387 489.200 C 158.921 489.200,159.101 489.008,158.946 488.603 C 158.815 488.263,158.992 487.901,159.358 487.761 C 159.711 487.625,160.000 487.161,160.000 486.729 C 160.000 485.170,161.019 484.734,165.210 484.504 C 167.404 484.383,169.200 484.156,169.200 483.999 C 169.200 483.843,172.011 483.620,175.447 483.505 C 179.055 483.384,181.801 483.121,181.948 482.884 C 182.088 482.658,182.917 482.339,183.791 482.175 C 184.665 482.011,185.622 481.635,185.919 481.339 C 186.215 481.042,186.702 480.800,187.002 480.800 C 187.301 480.800,187.660 480.440,187.800 480.000 C 188.057 479.192,188.593 478.948,188.901 479.500 C 188.993 479.665,189.016 479.580,188.951 479.312 C 188.887 479.043,189.096 478.561,189.417 478.240 C 189.738 477.919,190.000 477.451,190.000 477.200 C 190.000 476.949,190.254 476.489,190.564 476.179 C 190.875 475.868,191.192 475.424,191.269 475.192 C 191.347 474.959,192.758 474.659,194.405 474.524 C 196.052 474.390,197.532 474.082,197.694 473.840 C 197.897 473.536,197.990 473.554,197.994 473.900 C 198.001 474.460,199.059 474.591,199.267 474.058 C 199.340 473.869,202.182 473.596,205.581 473.449 C 208.981 473.303,211.861 473.035,211.981 472.854 C 212.102 472.672,212.905 472.412,213.768 472.276 C 214.630 472.140,215.440 471.868,215.568 471.672 C 215.695 471.476,216.456 471.195,217.257 471.048 C 218.530 470.814,218.748 470.603,218.976 469.390 C 219.119 468.625,219.395 468.000,219.590 468.000 C 220.264 468.000,221.200 466.738,221.200 465.828 C 221.200 464.813,223.348 464.400,228.625 464.400 C 230.241 464.400,231.216 464.222,231.367 463.900 C 231.553 463.500,231.647 463.500,231.833 463.900 C 232.095 464.461,233.200 464.589,233.200 464.058 C 233.200 463.871,235.491 463.590,238.291 463.434 C 241.092 463.278,243.477 463.000,243.591 462.815 C 243.706 462.630,244.694 462.344,245.787 462.181 C 246.880 462.017,248.018 461.639,248.316 461.342 C 248.613 461.044,249.114 460.800,249.429 460.800 C 249.743 460.800,250.000 460.620,250.000 460.400 C 250.000 460.180,250.270 460.000,250.600 460.000 C 250.966 460.000,251.200 459.627,251.200 459.043 C 251.200 458.516,251.470 457.982,251.800 457.855 C 252.170 457.713,252.400 457.105,252.400 456.268 C 252.400 454.716,253.562 454.411,259.500 454.403 C 261.095 454.402,262.400 454.228,262.400 454.018 C 262.400 453.808,263.030 453.518,263.800 453.374 C 264.602 453.223,265.200 452.874,265.200 452.555 C 265.200 452.250,265.560 452.000,266.000 452.000 C 266.440 452.000,266.800 451.820,266.800 451.600 C 266.800 451.380,267.057 451.200,267.371 451.200 C 267.686 451.200,268.226 450.917,268.571 450.571 C 268.917 450.226,269.200 450.136,269.200 450.371 C 269.200 450.607,269.380 450.800,269.600 450.800 C 269.820 450.800,270.000 450.440,270.000 450.000 C 270.000 449.112,270.610 448.921,270.955 449.700 C 271.104 450.036,271.165 450.003,271.141 449.600 C 271.056 448.179,271.236 447.600,271.761 447.600 C 272.182 447.600,272.317 446.993,272.306 445.157 C 272.296 443.497,272.468 442.602,272.845 442.364 C 273.244 442.111,273.260 442.011,272.900 442.006 C 272.251 441.998,272.251 440.936,272.900 440.633 C 273.300 440.447,273.300 440.353,272.900 440.167 C 272.309 439.891,272.217 436.800,272.800 436.800 C 273.314 436.800,273.326 434.910,272.813 434.733 C 272.598 434.659,272.365 432.142,272.288 429.070 C 272.182 424.832,272.016 423.446,271.575 423.139 C 271.137 422.834,271.119 422.691,271.500 422.536 C 271.780 422.422,272.000 421.645,272.000 420.767 C 272.000 419.783,271.814 419.198,271.500 419.194 C 271.161 419.190,271.193 419.051,271.600 418.763 C 272.052 418.444,272.076 418.289,271.700 418.136 C 271.421 418.023,271.200 417.249,271.200 416.387 L 271.200 414.840 268.800 414.568 C 267.480 414.419,266.400 414.140,266.400 413.948 C 266.400 413.757,265.963 413.600,265.429 413.600 C 264.894 413.600,264.200 413.343,263.886 413.029 C 263.572 412.715,262.614 412.329,261.757 412.171 C 260.901 412.014,260.072 411.686,259.915 411.442 C 259.529 410.844,251.246 410.879,250.873 411.481 C 250.723 411.723,249.745 412.050,248.700 412.206 C 247.655 412.363,246.800 412.631,246.800 412.802 C 246.800 412.973,246.347 413.227,245.794 413.366 C 244.446 413.704,243.200 414.816,243.200 415.681 C 243.200 416.092,242.797 416.486,242.229 416.628 C 241.695 416.763,241.161 417.126,241.041 417.436 C 240.922 417.746,240.459 418.000,240.013 418.000 C 239.566 418.000,239.200 418.166,239.200 418.368 C 239.200 418.571,238.660 418.855,238.000 419.000 C 237.340 419.145,236.800 419.429,236.800 419.632 C 236.800 419.834,236.260 420.000,235.600 420.000 C 234.940 420.000,234.400 420.162,234.400 420.360 C 234.400 420.558,232.053 420.783,229.185 420.860 C 225.934 420.947,223.863 421.168,223.685 421.446 C 223.528 421.691,222.970 422.026,222.445 422.191 C 221.919 422.355,220.107 423.892,218.418 425.607 C 215.475 428.593,215.250 428.736,213.073 429.008 C 211.823 429.164,210.800 429.451,210.800 429.646 C 210.800 429.841,210.080 430.000,209.200 430.000 C 208.320 430.000,207.600 430.158,207.600 430.352 C 207.600 430.546,205.710 430.833,203.400 430.991 C 201.090 431.148,199.200 431.415,199.200 431.584 C 199.200 431.753,198.385 432.003,197.390 432.139 C 195.279 432.429,194.858 432.739,191.075 436.794 C 190.456 437.457,189.691 438.000,189.375 438.000 C 189.059 438.000,188.800 438.166,188.800 438.368 C 188.800 438.571,188.260 438.855,187.600 439.000 C 186.940 439.145,186.400 439.429,186.400 439.632 C 186.400 439.834,185.410 440.000,184.200 440.000 C 182.990 440.000,182.000 440.156,182.000 440.348 C 182.000 440.539,180.093 440.780,177.763 440.884 C 175.433 440.987,173.408 441.257,173.263 441.482 C 173.118 441.708,172.564 442.028,172.031 442.195 C 170.763 442.591,169.924 443.312,166.675 446.794 C 166.039 447.475,165.140 448.000,164.608 448.000 C 164.090 448.000,163.606 448.183,163.531 448.407 C 163.456 448.631,162.451 448.926,161.298 449.063 C 160.144 449.200,159.200 449.466,159.200 449.656 C 159.200 449.845,158.570 450.000,157.800 450.000 C 157.030 450.000,156.400 450.180,156.400 450.400 C 156.400 450.620,156.130 450.800,155.800 450.800 C 155.470 450.800,155.200 450.620,155.200 450.400 C 155.200 450.180,154.930 450.000,154.600 450.000 C 153.855 450.000,150.800 446.906,150.800 446.152 C 150.800 445.848,150.620 445.600,150.400 445.600 C 149.823 445.600,149.849 363.717,150.426 363.525 C 151.062 363.313,151.132 357.115,150.500 356.902 C 150.225 356.809,150.000 356.388,150.000 355.966 C 150.000 355.097,146.995 352.000,146.152 352.000 C 145.848 352.000,145.600 351.834,145.600 351.632 C 145.600 351.429,145.060 351.145,144.400 351.000 C 143.740 350.855,143.200 350.571,143.200 350.368 C 143.200 350.166,142.930 350.000,142.600 350.000 C 142.270 350.000,142.000 349.832,142.000 349.627 C 142.000 349.422,141.595 349.128,141.100 348.973 C 140.605 348.819,139.011 347.457,137.557 345.946 C 136.104 344.436,134.619 343.200,134.257 343.200 C 133.896 343.200,133.600 343.034,133.600 342.832 C 133.600 342.629,133.075 342.348,132.433 342.207 C 131.792 342.066,131.167 341.692,131.046 341.376 C 130.924 341.059,130.459 340.800,130.013 340.800 C 129.566 340.800,129.200 340.620,129.200 340.400 C 129.200 340.180,128.930 340.000,128.600 340.000 C 128.270 340.000,128.000 339.820,128.000 339.600 C 128.000 339.380,127.724 339.200,127.387 339.200 C 127.051 339.200,126.671 338.930,126.545 338.600 C 126.418 338.270,126.060 338.000,125.749 338.000 C 125.438 338.000,123.968 336.765,122.482 335.256 C 120.997 333.746,119.380 332.384,118.891 332.229 C 118.401 332.073,118.000 331.793,118.000 331.605 C 118.000 331.417,117.460 331.145,116.800 331.000 C 116.140 330.855,115.600 330.571,115.600 330.368 C 115.600 330.166,115.330 330.000,115.000 330.000 C 114.670 330.000,114.400 329.840,114.400 329.643 C 114.400 329.447,113.950 329.174,113.400 329.036 C 112.850 328.898,112.400 328.608,112.400 328.392 C 112.400 328.177,112.170 328.000,111.889 328.000 C 111.402 328.000,110.000 326.639,110.000 326.167 C 110.000 326.044,109.730 325.673,109.400 325.343 C 109.070 325.013,108.800 324.396,108.800 323.971 C 108.800 323.547,108.634 323.200,108.432 323.200 C 108.229 323.200,107.945 322.660,107.800 322.000 C 107.655 321.340,107.391 320.800,107.213 320.800 C 107.035 320.800,106.771 320.170,106.626 319.400 C 106.482 318.630,106.186 318.000,105.969 318.000 C 105.752 318.000,105.458 317.685,105.315 317.300 C 105.172 316.915,104.683 316.261,104.228 315.846 C 103.650 315.320,103.552 315.038,103.903 314.912 C 104.759 314.605,108.000 311.169,108.000 310.568 C 108.000 310.256,108.177 310.000,108.392 310.000 C 108.608 310.000,108.898 309.550,109.036 309.000 C 109.174 308.450,109.447 308.000,109.643 308.000 C 109.840 308.000,110.000 307.730,110.000 307.400 C 110.000 307.070,110.166 306.800,110.368 306.800 C 110.571 306.800,110.855 306.260,111.000 305.600 C 111.145 304.940,111.429 304.400,111.632 304.400 C 111.834 304.400,112.000 304.144,112.000 303.831 C 112.000 303.172,115.148 300.000,115.802 300.000 C 116.230 300.000,118.000 297.894,118.000 297.384 C 118.000 297.110,118.270 296.782,118.600 296.655 C 118.930 296.529,119.200 296.072,119.200 295.640 C 119.200 295.207,119.542 294.745,119.960 294.613 C 120.378 294.480,120.827 293.948,120.957 293.430 C 121.099 292.865,121.594 292.388,122.197 292.237 C 122.748 292.098,123.200 291.808,123.200 291.592 C 123.200 291.377,123.457 291.200,123.771 291.200 C 124.086 291.200,124.626 290.917,124.971 290.571 C 125.317 290.226,125.600 290.134,125.600 290.367 C 125.600 290.600,126.320 290.906,127.200 291.046 C 128.080 291.187,128.800 291.440,128.800 291.608 C 128.800 291.776,129.250 292.026,129.800 292.164 C 130.350 292.302,130.800 292.592,130.800 292.808 C 130.800 293.023,131.005 293.200,131.256 293.200 C 131.507 293.200,132.500 294.010,133.462 295.000 C 134.424 295.990,135.460 296.800,135.763 296.800 C 136.066 296.800,136.418 297.070,136.545 297.400 C 136.671 297.730,137.051 298.000,137.387 298.000 C 137.724 298.000,138.000 298.172,138.000 298.382 C 138.000 298.592,138.624 298.881,139.386 299.024 C 140.211 299.179,140.865 299.575,141.001 300.002 C 141.126 300.397,141.715 300.843,142.310 300.992 C 142.905 301.141,143.504 301.444,143.640 301.665 C 143.776 301.885,144.966 302.163,146.284 302.283 L 148.680 302.500 148.940 301.200 C 149.083 300.485,149.200 299.382,149.200 298.750 C 149.200 298.118,149.380 297.600,149.600 297.600 C 149.865 297.600,150.000 276.667,150.000 235.600 C 150.000 199.202,149.852 173.600,149.641 173.600 C 149.443 173.600,149.155 172.340,149.000 170.800 C 148.845 169.260,148.580 168.000,148.411 168.000 C 148.242 168.000,147.978 167.058,147.825 165.908 C 147.673 164.757,147.375 163.708,147.163 163.577 C 146.952 163.447,146.669 162.408,146.534 161.270 C 146.399 160.131,146.145 159.200,145.970 159.200 C 145.794 159.200,145.594 158.622,145.525 157.916 C 145.386 156.489,145.158 156.436,140.300 156.710 M37.720 187.336 C 38.052 188.201,37.294 189.146,36.837 188.436 C 36.449 187.834,36.679 186.800,37.200 186.800 C 37.373 186.800,37.607 187.041,37.720 187.336 \\\"\\r\\n                    stroke=\\\"none\\\"\\r\\n                    fill=\\\"#4cbbeb\\\"\\r\\n                    fill-rule=\\\"evenodd\\\"\\r\\n                  ></path>\\r\\n                  <path\\r\\n                    id=\\\"path2\\\"\\r\\n                    d=\\\"M356.100 9.098 C 358.465 9.169,362.335 9.169,364.700 9.098 C 367.065 9.028,365.130 8.970,360.400 8.970 C 355.670 8.970,353.735 9.028,356.100 9.098 M348.000 9.600 C 348.000 9.820,348.720 10.000,349.600 10.000 C 350.480 10.000,351.200 9.820,351.200 9.600 C 351.200 9.380,350.480 9.200,349.600 9.200 C 348.720 9.200,348.000 9.380,348.000 9.600 M369.200 9.600 C 369.200 9.820,369.920 10.000,370.800 10.000 C 371.680 10.000,372.400 9.820,372.400 9.600 C 372.400 9.380,371.680 9.200,370.800 9.200 C 369.920 9.200,369.200 9.380,369.200 9.600 M335.200 10.362 C 335.200 10.562,334.300 10.849,333.200 11.000 C 332.100 11.151,331.200 11.424,331.200 11.606 C 331.200 11.788,330.660 12.055,330.000 12.200 C 329.340 12.345,328.800 12.610,328.800 12.788 C 328.800 12.967,328.370 13.221,327.844 13.353 C 327.318 13.485,326.792 13.844,326.674 14.151 C 326.523 14.544,326.688 14.650,327.230 14.508 C 327.653 14.397,328.000 14.165,328.000 13.991 C 328.000 13.817,328.900 13.551,330.000 13.400 C 331.100 13.249,332.000 12.976,332.000 12.794 C 332.000 12.612,333.215 12.335,334.700 12.179 C 336.185 12.022,337.495 11.747,337.611 11.568 C 337.726 11.389,339.481 11.117,341.511 10.964 C 346.818 10.563,346.052 10.000,340.200 10.000 C 337.450 10.000,335.200 10.163,335.200 10.362 M375.600 10.343 C 375.600 10.531,377.260 10.811,379.289 10.964 C 381.319 11.117,383.074 11.389,383.189 11.568 C 383.305 11.747,384.615 12.022,386.100 12.179 C 387.585 12.335,388.800 12.606,388.800 12.781 C 388.800 12.955,389.560 13.219,390.488 13.368 C 391.416 13.516,392.271 13.785,392.388 13.965 C 392.505 14.145,393.017 14.422,393.526 14.581 C 394.431 14.864,394.436 14.852,393.737 14.035 C 393.344 13.576,392.792 13.200,392.511 13.200 C 392.230 13.200,392.000 13.028,392.000 12.818 C 392.000 12.608,391.370 12.318,390.600 12.174 C 389.830 12.029,389.200 11.762,389.200 11.580 C 389.200 11.398,388.390 11.128,387.400 10.979 C 386.410 10.831,385.600 10.550,385.600 10.355 C 385.600 10.160,383.350 10.000,380.600 10.000 C 377.850 10.000,375.600 10.154,375.600 10.343 M314.125 16.205 C 313.424 16.957,312.389 17.688,311.825 17.829 C 311.261 17.971,310.800 18.231,310.800 18.408 C 310.800 18.585,310.080 18.851,309.200 19.000 C 308.320 19.149,307.600 19.434,307.600 19.635 C 307.600 19.836,306.970 20.000,306.200 20.000 C 305.430 20.000,304.800 20.169,304.800 20.375 C 304.800 20.582,303.990 20.872,303.000 21.021 C 302.010 21.169,301.200 21.436,301.200 21.614 C 301.200 21.791,300.660 22.055,300.000 22.200 C 299.340 22.345,298.800 22.610,298.800 22.788 C 298.800 22.967,298.370 23.221,297.844 23.353 C 297.318 23.485,296.792 23.844,296.674 24.151 C 296.523 24.544,296.688 24.650,297.230 24.508 C 297.653 24.397,298.000 24.165,298.000 23.991 C 298.000 23.817,298.900 23.551,300.000 23.400 C 301.100 23.249,302.000 22.983,302.000 22.809 C 302.000 22.635,302.990 22.368,304.200 22.217 C 305.410 22.066,306.400 21.786,306.400 21.596 C 306.400 21.405,307.210 21.128,308.200 20.979 C 309.190 20.831,310.000 20.550,310.000 20.355 C 310.000 20.160,310.450 20.000,311.000 20.000 C 311.550 20.000,312.000 19.831,312.000 19.625 C 312.000 19.418,312.810 19.128,313.800 18.979 C 314.790 18.831,315.600 18.558,315.600 18.373 C 315.600 18.188,316.275 17.912,317.100 17.760 C 317.925 17.609,318.709 17.317,318.842 17.112 C 318.976 16.907,319.831 16.639,320.742 16.517 C 321.654 16.395,322.400 16.138,322.400 15.947 C 322.400 15.756,323.030 15.600,323.800 15.600 C 324.570 15.600,325.200 15.420,325.200 15.200 C 325.200 14.954,323.313 14.807,320.300 14.819 L 315.400 14.838 314.125 16.205 M280.468 29.825 C 277.755 32.561,275.667 34.800,275.828 34.800 C 275.988 34.800,276.731 34.170,277.479 33.400 C 278.227 32.630,279.100 32.000,279.419 32.000 C 279.739 32.000,280.000 31.823,280.000 31.608 C 280.000 31.392,280.450 31.102,281.000 30.964 C 281.550 30.826,282.000 30.553,282.000 30.357 C 282.000 30.160,282.270 30.000,282.600 30.000 C 282.930 30.000,283.200 29.834,283.200 29.632 C 283.200 29.429,283.740 29.145,284.400 29.000 C 285.060 28.855,285.600 28.591,285.600 28.414 C 285.600 28.236,286.410 27.969,287.400 27.821 C 288.390 27.672,289.200 27.399,289.200 27.213 C 289.200 27.027,290.100 26.751,291.200 26.600 C 292.300 26.449,293.200 26.162,293.200 25.962 C 293.200 25.763,293.650 25.600,294.200 25.600 C 294.750 25.600,295.200 25.420,295.200 25.200 C 295.200 24.954,293.317 24.810,290.300 24.825 L 285.400 24.851 280.468 29.825 M250.413 39.880 C 247.152 43.169,245.768 44.802,246.413 44.601 C 246.956 44.431,247.492 44.151,247.604 43.978 C 247.716 43.805,248.301 43.540,248.904 43.388 C 249.507 43.237,250.000 42.967,250.000 42.788 C 250.000 42.610,250.540 42.345,251.200 42.200 C 251.860 42.055,252.400 41.779,252.400 41.586 C 252.400 41.394,253.030 41.118,253.800 40.974 C 254.570 40.829,255.200 40.551,255.200 40.355 C 255.200 40.160,255.830 40.000,256.600 40.000 C 257.370 40.000,258.000 39.841,258.000 39.648 C 258.000 39.454,259.710 39.167,261.800 39.010 C 263.890 38.854,265.600 38.570,265.600 38.381 C 265.600 38.191,266.275 37.912,267.100 37.760 C 267.925 37.609,268.709 37.317,268.842 37.112 C 268.976 36.907,269.831 36.639,270.742 36.517 C 271.654 36.395,272.400 36.138,272.400 35.947 C 272.400 35.756,273.030 35.600,273.800 35.600 C 274.570 35.600,275.200 35.420,275.200 35.200 C 275.200 34.943,271.650 34.809,265.300 34.825 L 255.400 34.851 250.413 39.880 M230.468 49.825 C 227.755 52.561,225.667 54.800,225.828 54.800 C 225.988 54.800,226.731 54.170,227.479 53.400 C 228.227 52.630,229.100 52.000,229.419 52.000 C 229.739 52.000,230.000 51.823,230.000 51.608 C 230.000 51.392,230.450 51.102,231.000 50.964 C 231.550 50.826,232.000 50.553,232.000 50.357 C 232.000 50.160,232.270 50.000,232.600 50.000 C 232.930 50.000,233.200 49.834,233.200 49.632 C 233.200 49.429,233.740 49.145,234.400 49.000 C 235.060 48.855,235.600 48.594,235.600 48.419 C 235.600 48.245,236.320 47.987,237.200 47.846 C 238.080 47.706,238.800 47.426,238.800 47.224 C 238.800 47.022,239.790 46.734,241.000 46.583 C 242.210 46.432,243.200 46.149,243.200 45.954 C 243.200 45.759,243.650 45.600,244.200 45.600 C 244.750 45.600,245.200 45.420,245.200 45.200 C 245.200 44.954,243.317 44.810,240.300 44.825 L 235.400 44.851 230.468 49.825 M200.413 59.880 C 197.152 63.169,195.768 64.802,196.413 64.601 C 196.956 64.431,197.492 64.151,197.604 63.978 C 197.716 63.805,198.301 63.540,198.904 63.388 C 199.507 63.237,200.000 62.967,200.000 62.788 C 200.000 62.610,200.540 62.345,201.200 62.200 C 201.860 62.055,202.400 61.779,202.400 61.586 C 202.400 61.394,203.030 61.118,203.800 60.974 C 204.570 60.829,205.200 60.551,205.200 60.355 C 205.200 60.160,205.560 60.000,206.000 60.000 C 206.440 60.000,206.800 59.833,206.800 59.629 C 206.800 59.425,207.790 59.134,209.000 58.983 C 210.210 58.832,211.200 58.575,211.200 58.413 C 211.200 58.250,212.585 58.000,214.277 57.857 C 215.970 57.714,217.455 57.436,217.577 57.239 C 217.700 57.042,218.835 56.752,220.100 56.595 C 221.365 56.437,222.400 56.149,222.400 55.954 C 222.400 55.759,223.030 55.600,223.800 55.600 C 224.570 55.600,225.200 55.420,225.200 55.200 C 225.200 54.943,221.650 54.809,215.300 54.825 L 205.400 54.851 200.413 59.880 M180.468 69.825 C 177.755 72.561,175.667 74.800,175.828 74.800 C 175.988 74.800,176.731 74.170,177.479 73.400 C 178.227 72.630,179.100 72.000,179.419 72.000 C 179.739 72.000,180.000 71.823,180.000 71.608 C 180.000 71.392,180.450 71.102,181.000 70.964 C 181.550 70.826,182.000 70.553,182.000 70.357 C 182.000 70.160,182.270 70.000,182.600 70.000 C 182.930 70.000,183.200 69.834,183.200 69.632 C 183.200 69.429,183.740 69.145,184.400 69.000 C 185.060 68.855,185.600 68.594,185.600 68.419 C 185.600 68.245,186.320 67.987,187.200 67.846 C 188.080 67.706,188.800 67.426,188.800 67.224 C 188.800 67.022,189.790 66.734,191.000 66.583 C 192.210 66.432,193.200 66.149,193.200 65.954 C 193.200 65.759,193.650 65.600,194.200 65.600 C 194.750 65.600,195.200 65.420,195.200 65.200 C 195.200 64.954,193.317 64.810,190.300 64.825 L 185.400 64.851 180.468 69.825 M150.413 79.880 C 147.152 83.169,145.768 84.802,146.413 84.601 C 146.956 84.431,147.492 84.151,147.604 83.978 C 147.716 83.805,148.301 83.540,148.904 83.388 C 149.507 83.237,150.000 82.967,150.000 82.788 C 150.000 82.610,150.540 82.345,151.200 82.200 C 151.860 82.055,152.400 81.779,152.400 81.586 C 152.400 81.394,153.030 81.118,153.800 80.974 C 154.570 80.829,155.200 80.551,155.200 80.355 C 155.200 80.160,155.451 80.000,155.757 80.000 C 156.064 80.000,156.418 79.730,156.545 79.400 C 156.671 79.070,157.051 78.800,157.387 78.800 C 157.724 78.800,158.000 78.628,158.000 78.418 C 158.000 78.208,158.630 77.918,159.400 77.774 C 160.170 77.629,160.800 77.359,160.800 77.174 C 160.800 76.988,161.430 76.718,162.200 76.574 C 162.970 76.429,163.600 76.151,163.600 75.955 C 163.600 75.760,163.960 75.600,164.400 75.600 C 164.840 75.600,165.200 75.420,165.200 75.200 C 165.200 74.954,163.317 74.810,160.300 74.825 L 155.400 74.851 150.413 79.880 M125.300 94.990 L 115.200 105.129 115.246 110.065 C 115.272 112.779,115.375 114.685,115.476 114.300 C 115.576 113.915,115.811 113.600,115.998 113.600 C 116.184 113.600,116.455 113.060,116.600 112.400 C 116.745 111.740,117.015 111.200,117.200 111.200 C 117.385 111.200,117.655 110.660,117.800 110.000 C 117.945 109.340,118.215 108.800,118.400 108.800 C 118.585 108.800,118.855 108.260,119.000 107.600 C 119.145 106.940,119.429 106.400,119.632 106.400 C 119.834 106.400,120.000 106.134,120.000 105.808 C 120.000 105.483,121.035 104.224,122.300 103.010 C 123.565 101.797,124.756 100.644,124.947 100.449 C 132.246 93.001,135.404 90.000,135.940 90.000 C 136.146 90.000,136.418 89.730,136.545 89.400 C 136.671 89.070,137.051 88.800,137.387 88.800 C 137.724 88.800,138.000 88.628,138.000 88.418 C 138.000 88.208,138.630 87.918,139.400 87.774 C 140.170 87.629,140.800 87.359,140.800 87.174 C 140.800 86.988,141.430 86.718,142.200 86.574 C 142.970 86.429,143.600 86.151,143.600 85.955 C 143.600 85.760,143.960 85.600,144.400 85.600 C 144.840 85.600,145.200 85.420,145.200 85.200 C 145.200 84.954,143.317 84.810,140.300 84.826 L 135.400 84.851 125.300 94.990 M113.829 127.029 C 113.483 127.374,113.200 127.914,113.200 128.229 C 113.200 128.543,113.034 128.800,112.832 128.800 C 112.629 128.800,112.345 129.340,112.200 130.000 C 112.055 130.660,111.791 131.200,111.614 131.200 C 111.436 131.200,111.169 132.010,111.021 133.000 C 110.872 133.990,110.582 134.800,110.375 134.800 C 110.159 134.800,110.000 137.252,110.000 140.600 C 110.000 143.790,109.840 146.400,109.643 146.400 C 109.447 146.400,109.163 146.893,109.012 147.496 C 108.860 148.099,108.595 148.684,108.422 148.796 C 108.249 148.908,107.970 149.442,107.801 149.981 C 107.529 150.854,107.561 150.896,108.094 150.363 C 108.424 150.033,108.817 149.375,108.968 148.902 C 109.118 148.428,109.592 147.930,110.020 147.794 C 110.449 147.657,110.800 147.301,110.800 147.002 C 110.800 146.702,111.048 146.210,111.350 145.907 C 111.757 145.500,111.944 143.661,112.066 138.854 C 112.172 134.682,112.391 132.253,112.676 132.076 C 112.921 131.924,113.250 130.945,113.406 129.900 C 113.563 128.855,113.850 128.000,114.045 128.000 C 114.240 128.000,114.400 127.745,114.400 127.433 C 114.400 127.122,114.625 126.776,114.900 126.665 C 115.252 126.523,115.260 126.454,114.929 126.432 C 114.669 126.414,114.174 126.683,113.829 127.029 M94.125 156.205 C 93.424 156.957,92.389 157.688,91.825 157.829 C 91.261 157.971,90.800 158.231,90.800 158.408 C 90.800 158.585,90.080 158.851,89.200 159.000 C 88.320 159.149,87.600 159.434,87.600 159.635 C 87.600 159.836,87.060 160.000,86.400 160.000 C 85.740 160.000,85.200 160.163,85.200 160.362 C 85.200 160.562,84.300 160.849,83.200 161.000 C 82.100 161.151,81.200 161.424,81.200 161.606 C 81.200 161.788,80.660 162.055,80.000 162.200 C 79.340 162.345,78.800 162.610,78.800 162.788 C 78.800 162.967,78.370 163.221,77.844 163.353 C 77.318 163.485,76.792 163.844,76.674 164.151 C 76.523 164.544,76.688 164.650,77.230 164.508 C 77.653 164.397,78.000 164.165,78.000 163.991 C 78.000 163.817,78.900 163.551,80.000 163.400 C 81.100 163.249,82.000 162.983,82.000 162.809 C 82.000 162.635,82.990 162.368,84.200 162.217 C 85.410 162.066,86.400 161.786,86.400 161.596 C 86.400 161.405,87.210 161.128,88.200 160.979 C 89.190 160.831,90.000 160.550,90.000 160.355 C 90.000 160.160,90.450 160.000,91.000 160.000 C 91.550 160.000,92.000 159.831,92.000 159.625 C 92.000 159.418,92.810 159.128,93.800 158.979 C 94.790 158.831,95.600 158.573,95.600 158.406 C 95.600 158.239,96.320 157.987,97.200 157.846 C 98.080 157.706,98.800 157.426,98.800 157.224 C 98.800 157.022,99.790 156.734,101.000 156.583 C 102.210 156.432,103.200 156.149,103.200 155.954 C 103.200 155.759,103.650 155.600,104.200 155.600 C 104.750 155.600,105.200 155.420,105.200 155.200 C 105.200 154.954,103.313 154.807,100.300 154.819 L 95.400 154.838 94.125 156.205 M65.200 165.200 C 65.200 165.420,64.840 165.600,64.400 165.600 C 63.960 165.600,63.600 165.766,63.600 165.968 C 63.600 166.171,63.060 166.455,62.400 166.600 C 61.740 166.745,61.200 167.015,61.200 167.200 C 61.200 167.385,60.660 167.655,60.000 167.800 C 59.340 167.945,58.800 168.215,58.800 168.400 C 58.800 168.585,58.260 168.855,57.600 169.000 C 56.940 169.145,56.400 169.429,56.400 169.632 C 56.400 169.834,56.130 170.000,55.800 170.000 C 55.470 170.000,55.200 170.163,55.200 170.362 C 55.200 170.562,54.300 170.849,53.200 171.000 C 52.100 171.151,51.200 171.424,51.200 171.606 C 51.200 171.788,50.660 172.055,50.000 172.200 C 49.340 172.345,48.800 172.610,48.800 172.788 C 48.800 172.967,48.370 173.221,47.844 173.353 C 47.318 173.485,46.792 173.844,46.674 174.151 C 46.523 174.544,46.688 174.650,47.230 174.508 C 47.653 174.397,48.000 174.165,48.000 173.991 C 48.000 173.817,48.900 173.551,50.000 173.400 C 51.100 173.249,52.000 172.983,52.000 172.809 C 52.000 172.635,52.990 172.368,54.200 172.217 C 55.410 172.066,56.400 171.790,56.400 171.603 C 56.400 171.416,56.940 171.145,57.600 171.000 C 58.260 170.855,58.800 170.571,58.800 170.368 C 58.800 170.166,59.070 170.000,59.400 170.000 C 59.730 170.000,60.000 169.843,60.000 169.651 C 60.000 169.459,60.720 169.187,61.600 169.046 C 62.480 168.906,63.200 168.626,63.200 168.424 C 63.200 168.222,64.190 167.934,65.400 167.783 C 66.610 167.632,67.600 167.366,67.600 167.193 C 67.600 167.020,68.680 166.753,70.000 166.600 C 71.320 166.447,72.400 166.159,72.400 165.961 C 72.400 165.762,73.030 165.600,73.800 165.600 C 74.570 165.600,75.200 165.420,75.200 165.200 C 75.200 164.955,73.267 164.800,70.200 164.800 C 67.133 164.800,65.200 164.955,65.200 165.200 M30.468 179.825 C 27.755 182.561,25.667 184.800,25.828 184.800 C 25.988 184.800,26.731 184.170,27.479 183.400 C 28.227 182.630,29.100 182.000,29.419 182.000 C 29.739 182.000,30.000 181.823,30.000 181.608 C 30.000 181.392,30.450 181.102,31.000 180.964 C 31.550 180.826,32.000 180.553,32.000 180.357 C 32.000 180.160,32.270 180.000,32.600 180.000 C 32.930 180.000,33.200 179.834,33.200 179.632 C 33.200 179.429,33.740 179.145,34.400 179.000 C 35.060 178.855,35.600 178.594,35.600 178.419 C 35.600 178.245,36.320 177.987,37.200 177.846 C 38.080 177.706,38.800 177.426,38.800 177.224 C 38.800 177.022,39.790 176.734,41.000 176.583 C 42.210 176.432,43.200 176.149,43.200 175.954 C 43.200 175.759,43.650 175.600,44.200 175.600 C 44.750 175.600,45.200 175.420,45.200 175.200 C 45.200 174.954,43.317 174.810,40.300 174.825 L 35.400 174.851 30.468 179.825 M284.900 207.898 C 284.625 207.991,284.400 208.322,284.400 208.633 C 284.400 208.945,284.223 209.200,284.008 209.200 C 283.792 209.200,283.502 209.650,283.364 210.200 C 283.226 210.750,282.965 211.200,282.784 211.200 C 282.602 211.200,282.331 211.588,282.180 212.062 C 282.030 212.537,281.477 213.322,280.953 213.808 C 280.429 214.294,280.000 214.896,280.000 215.146 C 280.000 215.396,279.820 215.600,279.600 215.600 C 279.380 215.600,279.200 215.856,279.200 216.169 C 279.200 216.894,276.914 219.200,276.196 219.200 C 275.898 219.200,275.543 219.551,275.406 219.980 C 275.270 220.408,274.826 220.865,274.419 220.994 C 274.012 221.123,273.568 221.672,273.432 222.214 C 273.296 222.756,273.008 223.200,272.792 223.200 C 272.577 223.200,272.400 223.476,272.400 223.813 C 272.400 224.149,272.151 224.521,271.847 224.637 C 271.543 224.754,271.181 225.558,271.042 226.425 C 270.904 227.291,270.613 228.000,270.395 228.000 C 270.178 228.000,270.000 228.188,270.000 228.417 C 270.000 228.646,269.817 229.051,269.594 229.317 C 267.945 231.278,267.206 231.944,266.393 232.202 C 265.881 232.365,265.268 232.659,265.031 232.855 C 263.078 234.475,262.453 235.247,262.213 236.339 C 262.061 237.033,261.785 237.600,261.600 237.600 C 261.415 237.600,261.153 238.105,261.017 238.722 C 260.881 239.340,260.417 240.099,259.985 240.411 C 259.553 240.722,259.200 241.138,259.200 241.335 C 259.200 241.853,256.178 244.800,255.647 244.800 C 255.401 244.800,255.200 245.148,255.200 245.573 C 255.200 245.998,254.853 246.456,254.428 246.591 C 253.995 246.729,253.542 247.355,253.396 248.018 C 253.253 248.668,252.974 249.200,252.776 249.200 C 252.578 249.200,252.302 249.650,252.164 250.200 C 252.026 250.750,251.772 251.200,251.600 251.200 C 251.428 251.200,251.174 251.650,251.036 252.200 C 250.898 252.750,250.608 253.200,250.392 253.200 C 250.177 253.200,250.000 253.470,250.000 253.800 C 250.000 254.130,249.840 254.400,249.643 254.400 C 249.447 254.400,249.168 254.874,249.023 255.452 C 248.745 256.558,245.573 260.000,244.832 260.000 C 244.594 260.000,244.400 260.194,244.400 260.431 C 244.400 260.668,243.860 261.402,243.200 262.062 C 242.540 262.722,242.000 263.518,242.000 263.831 C 242.000 264.144,241.822 264.400,241.605 264.400 C 241.387 264.400,241.095 265.115,240.955 265.989 C 240.786 267.047,240.451 267.657,239.951 267.816 C 239.538 267.947,239.200 268.297,239.200 268.593 C 239.200 269.279,236.312 272.400,235.677 272.400 C 235.415 272.400,235.200 272.568,235.200 272.773 C 235.200 272.978,234.840 273.260,234.400 273.400 C 233.960 273.540,233.600 273.899,233.600 274.198 C 233.600 274.498,233.358 274.985,233.061 275.281 C 232.765 275.578,232.397 276.491,232.243 277.310 C 232.090 278.130,231.811 278.800,231.625 278.800 C 231.439 278.800,231.174 279.250,231.036 279.800 C 230.898 280.350,230.608 280.800,230.392 280.800 C 230.177 280.800,230.000 281.070,230.000 281.400 C 230.000 281.730,229.820 282.000,229.600 282.000 C 229.380 282.000,229.200 282.207,229.200 282.460 C 229.200 282.712,228.566 283.567,227.791 284.360 C 225.458 286.746,225.200 287.052,225.200 287.439 C 225.200 287.643,224.750 288.148,224.200 288.561 C 223.650 288.974,223.200 289.628,223.200 290.013 C 223.200 290.399,222.930 290.818,222.600 290.945 C 222.270 291.071,222.000 291.451,222.000 291.787 C 222.000 292.124,221.834 292.400,221.632 292.400 C 221.429 292.400,221.145 292.940,221.000 293.600 C 220.855 294.260,220.571 294.800,220.368 294.800 C 220.166 294.800,220.000 295.141,220.000 295.557 C 220.000 295.974,219.730 296.418,219.400 296.545 C 219.070 296.671,218.800 296.974,218.800 297.218 C 218.800 297.462,218.260 298.202,217.600 298.862 C 216.940 299.522,216.400 300.228,216.400 300.431 C 216.400 300.634,216.158 300.800,215.862 300.800 C 215.150 300.800,213.200 302.494,213.200 303.113 C 213.200 303.381,213.023 303.600,212.808 303.600 C 212.592 303.600,212.302 304.050,212.164 304.600 C 212.026 305.150,211.776 305.600,211.608 305.600 C 211.440 305.600,211.189 306.308,211.051 307.173 C 210.877 308.260,210.552 308.825,210.000 309.000 C 209.560 309.140,209.200 309.539,209.200 309.887 C 209.200 310.594,206.981 312.895,205.900 313.308 C 205.515 313.455,205.200 313.748,205.200 313.960 C 205.200 314.173,204.859 314.454,204.442 314.587 C 203.972 314.736,203.585 315.355,203.424 316.214 C 203.281 316.976,203.006 317.600,202.814 317.600 C 202.621 317.600,202.345 318.140,202.200 318.800 C 202.055 319.460,201.785 320.000,201.600 320.000 C 201.415 320.000,201.153 320.505,201.017 321.122 C 200.881 321.740,200.417 322.499,199.985 322.811 C 199.553 323.122,199.200 323.613,199.200 323.901 C 199.200 324.189,198.930 324.529,198.600 324.655 C 198.270 324.782,198.000 325.163,198.000 325.502 C 198.000 326.277,195.632 328.609,194.471 328.978 C 193.992 329.130,193.600 329.422,193.600 329.627 C 193.600 329.832,193.330 330.000,193.000 330.000 C 192.670 330.000,192.400 330.178,192.400 330.395 C 192.400 330.613,191.680 330.906,190.800 331.046 C 189.920 331.187,189.200 331.451,189.200 331.633 C 189.200 331.815,188.570 332.082,187.800 332.226 C 187.030 332.371,186.400 332.649,186.400 332.845 C 186.400 333.040,185.950 333.200,185.400 333.200 C 184.850 333.200,184.400 333.043,184.400 332.851 C 184.400 332.659,183.680 332.387,182.800 332.246 C 181.920 332.106,181.200 331.832,181.200 331.639 C 181.200 331.445,180.750 331.174,180.200 331.036 C 179.650 330.898,179.200 330.608,179.200 330.392 C 179.200 330.177,178.930 330.000,178.600 330.000 C 178.270 330.000,178.000 329.820,178.000 329.600 C 178.000 329.380,177.724 329.200,177.387 329.200 C 177.051 329.200,176.671 328.930,176.545 328.600 C 176.418 328.270,176.056 328.000,175.740 328.000 C 175.424 328.000,174.115 326.920,172.832 325.600 C 171.548 324.280,170.225 323.200,169.892 323.200 C 169.558 323.200,169.182 322.930,169.055 322.600 C 168.929 322.270,168.549 322.000,168.213 322.000 C 167.876 322.000,167.600 321.834,167.600 321.632 C 167.600 321.429,167.060 321.145,166.400 321.000 C 165.740 320.855,165.200 320.571,165.200 320.368 C 165.200 320.166,164.859 320.000,164.443 320.000 C 164.026 320.000,163.582 319.730,163.455 319.400 C 163.329 319.070,163.026 318.800,162.782 318.800 C 162.317 318.800,160.000 316.644,160.000 316.211 C 160.000 315.759,157.331 313.200,156.860 313.200 C 156.607 313.200,156.400 313.023,156.400 312.808 C 156.400 312.592,155.950 312.302,155.400 312.164 C 154.850 312.026,154.400 311.772,154.400 311.600 C 154.400 311.428,153.950 311.174,153.400 311.036 C 152.850 310.898,152.400 310.622,152.400 310.423 C 152.400 310.224,151.860 309.522,151.200 308.862 C 150.540 308.202,150.000 307.483,150.000 307.264 C 150.000 307.046,149.816 306.805,149.591 306.730 C 149.365 306.655,149.065 305.877,148.923 305.000 C 148.587 302.934,148.197 302.591,145.818 302.264 C 144.732 302.116,143.742 301.829,143.618 301.629 C 143.494 301.428,142.905 301.141,142.310 300.992 C 141.715 300.843,141.126 300.397,141.001 300.002 C 140.865 299.575,140.211 299.179,139.386 299.024 C 138.624 298.881,138.000 298.592,138.000 298.382 C 138.000 298.172,137.724 298.000,137.387 298.000 C 137.051 298.000,136.671 297.730,136.545 297.400 C 136.418 297.070,136.066 296.800,135.763 296.800 C 135.460 296.800,134.424 295.990,133.462 295.000 C 132.500 294.010,131.507 293.200,131.256 293.200 C 131.005 293.200,130.800 293.023,130.800 292.808 C 130.800 292.592,130.350 292.302,129.800 292.164 C 129.250 292.026,128.800 291.776,128.800 291.608 C 128.800 291.440,128.080 291.187,127.200 291.046 C 126.320 290.906,125.600 290.600,125.600 290.367 C 125.600 290.134,125.317 290.226,124.971 290.571 C 124.626 290.917,124.086 291.200,123.771 291.200 C 123.457 291.200,123.200 291.377,123.200 291.592 C 123.200 291.808,122.748 292.098,122.197 292.237 C 121.594 292.388,121.099 292.865,120.957 293.430 C 120.827 293.948,120.378 294.480,119.960 294.613 C 119.542 294.745,119.200 295.207,119.200 295.640 C 119.200 296.072,118.930 296.529,118.600 296.655 C 118.270 296.782,118.000 297.110,118.000 297.384 C 118.000 297.894,116.230 300.000,115.802 300.000 C 115.148 300.000,112.000 303.172,112.000 303.831 C 112.000 304.144,111.834 304.400,111.632 304.400 C 111.429 304.400,111.145 304.940,111.000 305.600 C 110.855 306.260,110.571 306.800,110.368 306.800 C 110.166 306.800,110.000 307.070,110.000 307.400 C 110.000 307.730,109.840 308.000,109.643 308.000 C 109.447 308.000,109.174 308.450,109.036 309.000 C 108.898 309.550,108.608 310.000,108.392 310.000 C 108.177 310.000,108.000 310.256,108.000 310.568 C 108.000 311.169,104.759 314.605,103.903 314.912 C 103.560 315.035,103.686 315.347,104.300 315.893 C 104.795 316.333,105.200 316.903,105.200 317.159 C 105.200 317.416,105.465 317.727,105.789 317.851 C 106.113 317.976,106.493 318.690,106.634 319.439 C 106.774 320.187,107.035 320.800,107.213 320.800 C 107.391 320.800,107.655 321.340,107.800 322.000 C 107.945 322.660,108.229 323.200,108.432 323.200 C 108.634 323.200,108.800 323.547,108.800 323.971 C 108.800 324.396,109.070 325.013,109.400 325.343 C 109.730 325.673,110.000 326.044,110.000 326.167 C 110.000 326.639,111.402 328.000,111.889 328.000 C 112.170 328.000,112.400 328.177,112.400 328.392 C 112.400 328.608,112.850 328.898,113.400 329.036 C 113.950 329.174,114.400 329.447,114.400 329.643 C 114.400 329.840,114.670 330.000,115.000 330.000 C 115.330 330.000,115.600 330.166,115.600 330.368 C 115.600 330.571,116.140 330.855,116.800 331.000 C 117.460 331.145,118.000 331.417,118.000 331.605 C 118.000 331.793,118.401 332.073,118.891 332.229 C 119.380 332.384,120.997 333.746,122.482 335.256 C 123.968 336.765,125.438 338.000,125.749 338.000 C 126.060 338.000,126.418 338.270,126.545 338.600 C 126.671 338.930,127.051 339.200,127.387 339.200 C 127.724 339.200,128.000 339.380,128.000 339.600 C 128.000 339.820,128.270 340.000,128.600 340.000 C 128.930 340.000,129.200 340.180,129.200 340.400 C 129.200 340.620,129.566 340.800,130.013 340.800 C 130.459 340.800,130.924 341.059,131.046 341.376 C 131.167 341.692,131.792 342.066,132.433 342.207 C 133.075 342.348,133.600 342.629,133.600 342.832 C 133.600 343.034,133.896 343.200,134.257 343.200 C 134.619 343.200,136.104 344.436,137.557 345.946 C 139.011 347.457,140.605 348.819,141.100 348.973 C 141.595 349.128,142.000 349.422,142.000 349.627 C 142.000 349.832,142.270 350.000,142.600 350.000 C 142.930 350.000,143.200 350.166,143.200 350.368 C 143.200 350.571,143.740 350.855,144.400 351.000 C 145.060 351.145,145.600 351.429,145.600 351.632 C 145.600 351.834,145.848 352.000,146.152 352.000 C 147.012 352.000,150.000 355.106,150.000 356.000 C 150.000 356.440,150.160 356.800,150.357 356.800 C 150.553 356.800,150.826 357.250,150.964 357.800 C 151.210 358.781,152.204 359.182,152.467 358.406 C 152.652 357.860,156.410 357.768,156.739 358.302 C 156.887 358.541,157.501 358.860,158.104 359.012 C 158.707 359.163,159.200 359.447,159.200 359.643 C 159.200 359.840,159.560 360.000,160.000 360.000 C 160.440 360.000,160.800 360.180,160.800 360.400 C 160.800 360.620,161.033 360.800,161.319 360.800 C 161.604 360.800,162.279 361.332,162.819 361.983 C 163.358 362.634,164.115 363.174,164.500 363.183 C 164.885 363.192,165.200 363.470,165.200 363.800 C 165.200 364.130,165.470 364.400,165.800 364.400 C 166.130 364.400,166.400 364.670,166.400 365.000 C 166.400 365.330,166.589 365.600,166.819 365.600 C 167.050 365.600,167.635 366.025,168.119 366.544 C 168.604 367.064,169.405 367.616,169.900 367.771 C 170.395 367.927,170.800 368.207,170.800 368.395 C 170.800 368.583,171.340 368.855,172.000 369.000 C 172.660 369.145,173.200 369.429,173.200 369.632 C 173.200 369.834,173.470 370.000,173.800 370.000 C 174.130 370.000,174.400 370.160,174.400 370.357 C 174.400 370.553,174.874 370.832,175.452 370.977 C 176.031 371.123,177.336 372.044,178.352 373.025 C 180.613 375.207,180.618 375.212,182.078 376.752 C 182.729 377.439,183.441 378.000,183.659 378.000 C 183.878 378.000,184.327 378.270,184.657 378.600 C 184.987 378.930,185.604 379.200,186.029 379.200 C 186.453 379.200,186.800 379.380,186.800 379.600 C 186.800 379.820,187.070 380.000,187.400 380.000 C 187.730 380.000,188.000 380.180,188.000 380.400 C 188.000 380.620,188.242 380.800,188.539 380.800 C 188.835 380.800,189.493 381.160,190.000 381.600 C 190.507 382.040,191.153 382.400,191.434 382.400 C 191.716 382.400,192.067 382.782,192.215 383.248 C 192.636 384.573,195.128 386.802,195.871 386.518 C 196.223 386.382,197.472 385.311,198.647 384.136 C 199.821 382.961,201.037 382.000,201.349 382.000 C 201.660 382.000,202.018 381.730,202.145 381.400 C 202.271 381.070,202.651 380.800,202.987 380.800 C 203.324 380.800,203.600 380.620,203.600 380.400 C 203.600 380.180,203.870 380.000,204.200 380.000 C 204.945 380.000,208.000 376.906,208.000 376.152 C 208.000 375.848,208.166 375.600,208.368 375.600 C 208.571 375.600,208.855 375.060,209.000 374.400 C 209.145 373.740,209.429 373.200,209.632 373.200 C 209.834 373.200,210.000 372.930,210.000 372.600 C 210.000 372.270,210.180 372.000,210.400 372.000 C 210.620 372.000,210.800 371.758,210.800 371.461 C 210.800 371.165,211.160 370.507,211.600 370.000 C 212.040 369.493,212.400 368.847,212.400 368.566 C 212.400 368.284,212.805 367.927,213.300 367.771 C 214.400 367.426,216.800 364.958,216.800 364.172 C 216.800 363.857,216.966 363.600,217.168 363.600 C 217.371 363.600,217.655 363.060,217.800 362.400 C 217.945 361.740,218.210 361.200,218.388 361.200 C 218.567 361.200,218.826 360.750,218.964 360.200 C 219.102 359.650,219.392 359.200,219.608 359.200 C 219.823 359.200,220.000 358.930,220.000 358.600 C 220.000 358.270,220.166 358.000,220.368 358.000 C 220.571 358.000,220.855 357.460,221.000 356.800 C 221.145 356.140,221.417 355.600,221.605 355.600 C 221.793 355.600,222.069 355.212,222.220 354.738 C 222.506 353.836,224.272 352.000,224.854 352.000 C 225.490 352.000,226.800 350.622,226.800 349.954 C 226.800 349.586,227.070 349.182,227.400 349.055 C 227.730 348.929,228.000 348.549,228.000 348.213 C 228.000 347.876,228.177 347.600,228.392 347.600 C 228.608 347.600,228.898 347.150,229.036 346.600 C 229.174 346.050,229.447 345.600,229.643 345.600 C 229.840 345.600,230.000 345.330,230.000 345.000 C 230.000 344.670,230.160 344.400,230.357 344.400 C 230.553 344.400,230.832 343.927,230.977 343.349 C 231.122 342.771,231.772 341.767,232.420 341.118 C 233.069 340.469,233.600 339.784,233.600 339.596 C 233.600 339.408,233.998 339.128,234.485 338.973 C 235.728 338.578,237.510 336.699,237.823 335.451 C 237.968 334.873,238.233 334.400,238.412 334.400 C 238.590 334.400,238.855 333.860,239.000 333.200 C 239.145 332.540,239.429 332.000,239.632 332.000 C 239.834 332.000,240.000 331.730,240.000 331.400 C 240.000 331.070,240.180 330.800,240.400 330.800 C 240.620 330.800,240.800 330.434,240.800 329.987 C 240.800 329.541,241.070 329.071,241.400 328.945 C 241.730 328.818,242.000 328.471,242.000 328.174 C 242.000 327.877,243.080 326.567,244.400 325.264 C 245.720 323.960,246.800 322.692,246.800 322.447 C 246.800 322.201,246.977 322.000,247.192 322.000 C 247.408 322.000,247.698 321.550,247.836 321.000 C 247.974 320.450,248.228 320.000,248.400 320.000 C 248.572 320.000,248.826 319.550,248.964 319.000 C 249.102 318.450,249.392 318.000,249.608 318.000 C 249.823 318.000,250.000 317.730,250.000 317.400 C 250.000 317.070,250.166 316.800,250.368 316.800 C 250.571 316.800,250.855 316.260,251.000 315.600 C 251.145 314.940,251.429 314.400,251.632 314.400 C 251.834 314.400,252.000 314.144,252.000 313.831 C 252.000 313.186,254.251 310.800,254.859 310.800 C 255.442 310.800,256.254 309.891,256.574 308.881 C 256.728 308.397,257.007 308.000,257.195 308.000 C 257.383 308.000,257.655 307.460,257.800 306.800 C 257.945 306.140,258.206 305.600,258.381 305.600 C 258.555 305.600,258.813 304.880,258.954 304.000 C 259.094 303.120,259.387 302.400,259.605 302.400 C 259.822 302.400,260.000 302.130,260.000 301.800 C 260.000 301.470,260.180 301.200,260.400 301.200 C 260.620 301.200,260.800 300.952,260.800 300.648 C 260.800 299.944,263.832 296.800,264.511 296.800 C 265.326 296.800,266.445 295.235,266.684 293.758 C 266.805 293.011,267.047 292.400,267.221 292.400 C 267.394 292.400,267.655 291.860,267.800 291.200 C 267.945 290.540,268.210 290.000,268.388 290.000 C 268.567 290.000,268.826 289.550,268.964 289.000 C 269.102 288.450,269.392 288.000,269.608 288.000 C 269.823 288.000,270.000 287.730,270.000 287.400 C 270.000 287.070,270.160 286.800,270.357 286.800 C 270.553 286.800,270.826 286.350,270.964 285.800 C 271.102 285.250,271.392 284.800,271.608 284.800 C 271.823 284.800,272.003 284.575,272.007 284.300 C 272.015 283.690,273.742 282.000,274.356 282.000 C 274.964 282.000,276.400 280.517,276.400 279.889 C 276.400 279.608,276.760 279.070,277.200 278.693 C 277.640 278.316,278.000 277.736,278.000 277.404 C 278.000 277.072,278.166 276.800,278.368 276.800 C 278.571 276.800,278.855 276.260,279.000 275.600 C 279.145 274.940,279.429 274.400,279.632 274.400 C 279.834 274.400,280.000 274.130,280.000 273.800 C 280.000 273.470,280.180 273.200,280.400 273.200 C 280.620 273.200,280.800 272.960,280.800 272.667 C 280.800 272.000,283.717 268.800,284.325 268.800 C 285.235 268.800,287.499 266.061,287.766 264.638 C 287.915 263.847,288.185 263.200,288.367 263.200 C 288.549 263.200,288.806 262.523,288.938 261.696 C 289.072 260.858,289.538 259.933,289.989 259.608 C 290.435 259.286,290.800 258.863,290.800 258.668 C 290.800 258.229,292.487 256.416,292.904 256.407 C 293.400 256.396,295.600 254.152,295.600 253.657 C 295.600 253.406,295.760 253.200,295.957 253.200 C 296.153 253.200,296.426 252.750,296.564 252.200 C 296.702 251.650,296.978 251.200,297.176 251.200 C 297.374 251.200,297.655 250.660,297.800 250.000 C 297.945 249.340,298.210 248.800,298.388 248.800 C 298.567 248.800,298.835 248.316,298.983 247.724 C 299.132 247.132,299.576 246.367,299.970 246.024 C 300.363 245.681,300.824 244.963,300.992 244.429 C 301.291 243.482,303.620 240.800,304.144 240.800 C 304.604 240.800,306.800 238.532,306.800 238.057 C 306.800 237.806,306.977 237.600,307.192 237.600 C 307.408 237.600,307.698 237.150,307.836 236.600 C 307.974 236.050,308.234 235.600,308.415 235.600 C 308.595 235.600,308.866 234.610,309.017 233.400 C 309.168 232.190,309.451 231.200,309.646 231.200 C 309.841 231.200,310.000 230.930,310.000 230.600 C 310.000 230.270,310.157 230.000,310.349 230.000 C 310.541 230.000,310.810 229.300,310.947 228.444 C 311.083 227.588,311.467 226.783,311.798 226.656 C 313.042 226.179,311.530 223.200,310.043 223.200 C 309.799 223.200,308.900 222.480,308.046 221.600 C 307.192 220.720,306.369 220.000,306.216 220.000 C 306.063 220.000,305.398 219.460,304.738 218.800 C 304.078 218.140,303.282 217.600,302.969 217.600 C 302.656 217.600,302.400 217.343,302.400 217.028 C 302.400 216.242,300.000 213.774,298.900 213.429 C 298.405 213.273,298.000 212.993,298.000 212.805 C 298.000 212.617,297.460 212.345,296.800 212.200 C 296.140 212.055,295.600 211.784,295.600 211.597 C 295.600 211.410,294.610 211.134,293.400 210.983 C 292.190 210.832,291.200 210.549,291.200 210.354 C 291.200 210.159,290.750 210.000,290.200 210.000 C 289.650 210.000,289.200 209.834,289.200 209.632 C 289.200 209.429,288.660 209.145,288.000 209.000 C 287.340 208.855,286.800 208.592,286.800 208.415 C 286.800 208.011,285.565 207.675,284.900 207.898 M383.877 421.380 C 383.558 421.699,382.825 422.079,382.248 422.224 C 381.672 422.368,381.200 422.633,381.200 422.812 C 381.200 422.990,380.660 423.255,380.000 423.400 C 379.340 423.545,378.800 423.806,378.800 423.981 C 378.800 424.155,378.080 424.413,377.200 424.554 C 373.969 425.070,375.605 425.600,380.431 425.600 C 385.739 425.600,387.142 426.235,387.823 428.949 C 387.968 429.527,388.245 430.000,388.439 430.000 C 388.632 430.000,388.906 430.720,389.046 431.600 C 389.345 433.470,390.000 433.745,390.000 432.000 C 390.000 431.340,389.841 430.800,389.647 430.800 C 389.453 430.800,389.167 429.450,389.013 427.800 C 388.858 426.150,388.567 424.800,388.366 424.800 C 388.165 424.800,388.000 424.524,388.000 424.187 C 388.000 423.851,387.730 423.471,387.400 423.345 C 387.070 423.218,386.800 422.877,386.800 422.586 C 386.800 421.159,384.887 420.370,383.877 421.380 M374.400 425.968 C 374.400 426.171,373.860 426.455,373.200 426.600 C 372.540 426.745,372.000 427.021,372.000 427.214 C 372.000 427.406,371.370 427.682,370.600 427.826 C 369.830 427.971,369.200 428.235,369.200 428.413 C 369.200 428.591,368.660 428.855,368.000 429.000 C 367.340 429.145,366.800 429.429,366.800 429.632 C 366.800 429.834,366.530 430.000,366.200 430.000 C 365.870 430.000,365.600 430.160,365.600 430.357 C 365.600 430.553,365.150 430.826,364.600 430.964 C 364.050 431.102,363.600 431.378,363.600 431.576 C 363.600 431.774,363.060 432.055,362.400 432.200 C 361.740 432.345,361.200 432.615,361.200 432.800 C 361.200 432.985,360.660 433.255,360.000 433.400 C 359.340 433.545,358.800 433.806,358.800 433.981 C 358.800 434.155,358.080 434.413,357.200 434.554 C 353.969 435.070,355.605 435.600,360.432 435.600 L 365.264 435.600 367.680 433.248 C 370.629 430.377,370.491 430.515,372.679 428.248 C 373.661 427.232,374.629 426.400,374.832 426.400 C 375.034 426.400,375.200 426.220,375.200 426.000 C 375.200 425.780,375.020 425.600,374.800 425.600 C 374.580 425.600,374.400 425.766,374.400 425.968 M343.146 437.172 C 342.347 438.022,341.312 438.838,340.846 438.985 C 340.381 439.133,340.000 439.422,340.000 439.627 C 340.000 439.832,339.730 440.000,339.400 440.000 C 339.070 440.000,338.800 440.166,338.800 440.368 C 338.800 440.571,338.260 440.855,337.600 441.000 C 336.940 441.145,336.400 441.427,336.400 441.627 C 336.400 441.827,335.680 442.106,334.800 442.246 C 333.920 442.387,333.200 442.657,333.200 442.846 C 333.200 443.036,332.480 443.306,331.600 443.446 C 330.720 443.587,330.000 443.839,330.000 444.005 C 330.000 444.172,329.010 444.432,327.800 444.583 C 323.986 445.059,325.385 445.600,330.432 445.600 L 335.264 445.600 337.680 443.248 C 340.629 440.377,340.491 440.515,342.679 438.248 C 343.661 437.232,344.629 436.400,344.832 436.400 C 345.034 436.400,345.200 436.220,345.200 436.000 C 345.200 435.275,344.620 435.606,343.146 437.172 M324.400 445.968 C 324.400 446.171,323.860 446.455,323.200 446.600 C 322.540 446.745,322.000 447.021,322.000 447.214 C 322.000 447.406,321.370 447.682,320.600 447.826 C 319.830 447.971,319.200 448.235,319.200 448.413 C 319.200 448.591,318.660 448.855,318.000 449.000 C 317.340 449.145,316.800 449.429,316.800 449.632 C 316.800 449.834,316.530 450.000,316.200 450.000 C 315.870 450.000,315.600 450.180,315.600 450.400 C 315.600 450.620,315.328 450.800,314.996 450.800 C 314.664 450.800,314.084 451.160,313.707 451.600 C 313.330 452.040,312.792 452.400,312.511 452.400 C 312.230 452.400,312.000 452.572,312.000 452.782 C 312.000 452.992,311.370 453.282,310.600 453.426 C 309.830 453.571,309.200 453.833,309.200 454.009 C 309.200 454.186,308.445 454.457,307.523 454.613 C 305.338 454.982,304.896 455.482,304.569 457.951 C 304.419 459.078,304.163 460.000,304.000 460.000 C 303.836 460.000,303.590 460.705,303.452 461.566 C 303.314 462.428,303.003 463.199,302.762 463.279 C 302.520 463.360,302.225 464.635,302.106 466.113 C 301.988 467.591,301.756 468.800,301.593 468.800 C 301.429 468.800,301.167 470.330,301.011 472.200 C 300.856 474.070,300.564 475.600,300.364 475.600 C 300.164 475.600,300.000 475.870,300.000 476.200 C 300.000 476.530,299.834 476.800,299.632 476.800 C 299.429 476.800,299.145 477.340,299.000 478.000 C 298.855 478.660,298.591 479.200,298.413 479.200 C 298.235 479.200,297.971 479.830,297.826 480.600 C 297.682 481.370,297.406 482.000,297.214 482.000 C 297.021 482.000,296.745 482.540,296.600 483.200 C 296.455 483.860,296.141 484.400,295.902 484.400 C 295.662 484.400,295.584 484.517,295.727 484.661 C 295.947 484.880,296.919 484.032,300.439 480.548 C 300.690 480.299,301.954 479.009,303.248 477.680 L 305.600 475.264 305.600 465.432 L 305.600 455.600 310.432 455.600 L 315.264 455.600 317.680 453.248 C 320.629 450.377,320.491 450.515,322.679 448.248 C 323.661 447.232,324.629 446.400,324.832 446.400 C 325.034 446.400,325.200 446.220,325.200 446.000 C 325.200 445.780,325.020 445.600,324.800 445.600 C 324.580 445.600,324.400 445.766,324.400 445.968 M390.000 455.600 C 390.000 461.146,390.158 465.600,390.355 465.600 C 390.550 465.600,390.831 466.410,390.979 467.400 C 391.128 468.390,391.398 469.200,391.580 469.200 C 391.762 469.200,392.029 469.830,392.174 470.600 C 392.318 471.370,392.608 472.000,392.818 472.000 C 393.028 472.000,393.200 472.230,393.200 472.511 C 393.200 473.174,394.796 474.544,395.138 474.174 C 395.282 474.018,395.175 473.810,394.900 473.712 C 394.625 473.614,394.400 473.278,394.400 472.967 C 394.400 472.655,394.236 472.400,394.035 472.400 C 393.834 472.400,393.542 471.635,393.386 470.700 C 393.230 469.765,392.900 468.872,392.654 468.716 C 392.358 468.529,392.156 465.879,392.059 460.916 C 391.978 456.782,391.761 453.305,391.577 453.189 C 391.393 453.074,391.117 451.319,390.964 449.289 C 390.453 442.522,390.000 445.487,390.000 455.600 M294.900 486.198 C 294.625 486.511,294.400 486.954,294.400 487.183 C 294.400 487.412,294.220 487.600,294.000 487.600 C 293.780 487.600,293.600 487.810,293.600 488.066 C 293.600 488.547,293.329 488.877,291.103 491.103 C 288.877 493.329,288.547 493.600,288.066 493.600 C 287.810 493.600,287.600 493.760,287.600 493.957 C 287.600 494.153,287.162 494.423,286.627 494.558 C 286.091 494.692,285.539 495.161,285.400 495.601 C 285.260 496.040,284.978 496.400,284.773 496.400 C 284.568 496.400,284.400 496.670,284.400 497.000 C 284.400 497.330,284.220 497.600,284.000 497.600 C 283.780 497.600,283.600 497.810,283.600 498.066 C 283.600 498.547,283.329 498.877,281.103 501.103 C 278.877 503.329,278.547 503.600,278.066 503.600 C 277.810 503.600,277.600 503.760,277.600 503.957 C 277.600 504.153,277.150 504.426,276.600 504.564 C 274.192 505.169,275.858 505.600,280.600 505.600 L 285.600 505.600 285.600 500.600 L 285.600 495.600 290.600 495.600 L 295.600 495.600 295.600 490.600 C 295.600 487.850,295.555 485.607,295.500 485.615 C 295.445 485.624,295.175 485.886,294.900 486.198 M395.200 490.600 L 395.200 495.600 397.600 495.600 L 400.000 495.600 400.000 490.600 L 400.000 485.600 397.600 485.600 L 395.200 485.600 395.200 490.600 M274.400 505.968 C 274.400 506.171,273.860 506.455,273.200 506.600 C 272.540 506.745,272.000 507.021,272.000 507.214 C 272.000 507.406,271.370 507.682,270.600 507.826 C 269.830 507.971,269.200 508.235,269.200 508.413 C 269.200 508.591,268.660 508.855,268.000 509.000 C 267.340 509.145,266.800 509.429,266.800 509.632 C 266.800 509.834,266.530 510.000,266.200 510.000 C 265.870 510.000,265.600 510.160,265.600 510.357 C 265.600 510.553,265.150 510.826,264.600 510.964 C 264.050 511.102,263.600 511.378,263.600 511.576 C 263.600 511.774,263.060 512.055,262.400 512.200 C 261.740 512.345,261.200 512.615,261.200 512.800 C 261.200 512.985,260.660 513.255,260.000 513.400 C 259.340 513.545,258.800 513.806,258.800 513.981 C 258.800 514.155,258.080 514.413,257.200 514.554 C 253.969 515.070,255.605 515.600,260.432 515.600 L 265.264 515.600 267.680 513.248 C 270.629 510.377,270.491 510.515,272.679 508.248 C 273.661 507.232,274.629 506.400,274.832 506.400 C 275.034 506.400,275.200 506.220,275.200 506.000 C 275.200 505.780,275.020 505.600,274.800 505.600 C 274.580 505.600,274.400 505.766,274.400 505.968 M244.400 515.968 C 244.400 516.171,243.860 516.455,243.200 516.600 C 242.540 516.745,242.000 517.021,242.000 517.214 C 242.000 517.406,241.370 517.682,240.600 517.826 C 239.830 517.971,239.200 518.235,239.200 518.413 C 239.200 518.591,238.660 518.855,238.000 519.000 C 237.340 519.145,236.800 519.429,236.800 519.632 C 236.800 519.834,236.530 520.000,236.200 520.000 C 235.870 520.000,235.600 520.160,235.600 520.357 C 235.600 520.553,235.150 520.826,234.600 520.964 C 234.050 521.102,233.600 521.378,233.600 521.576 C 233.600 521.774,233.060 522.055,232.400 522.200 C 231.740 522.345,231.200 522.615,231.200 522.800 C 231.200 522.985,230.660 523.255,230.000 523.400 C 229.340 523.545,228.800 523.806,228.800 523.981 C 228.800 524.155,228.080 524.413,227.200 524.554 L 225.600 524.809 225.600 527.405 L 225.600 530.000 230.600 530.000 L 235.600 530.000 235.600 527.608 C 235.600 525.219,235.602 525.215,237.900 523.010 C 240.480 520.535,240.256 520.758,242.679 518.248 C 243.661 517.232,244.629 516.400,244.832 516.400 C 245.034 516.400,245.200 516.220,245.200 516.000 C 245.200 515.780,245.020 515.600,244.800 515.600 C 244.580 515.600,244.400 515.766,244.400 515.968 \\\"\\r\\n                    stroke=\\\"none\\\"\\r\\n                    fill=\\\"#f0f7f4\\\"\\r\\n                    fill-rule=\\\"evenodd\\\"\\r\\n                  ></path>\\r\\n                  <path\\r\\n                    id=\\\"path3\\\"\\r\\n                    d=\\\"M361.133 15.957 C 361.060 16.153,359.322 16.388,357.272 16.479 C 354.621 16.596,353.427 16.811,353.141 17.222 C 352.835 17.662,352.691 17.681,352.536 17.300 C 352.295 16.706,351.200 16.624,351.200 17.200 C 351.200 17.420,350.956 17.600,350.658 17.600 C 349.894 17.600,348.000 19.439,348.000 20.181 C 348.000 20.521,348.225 20.803,348.500 20.806 C 348.840 20.810,348.813 20.931,348.414 21.183 C 347.877 21.523,347.722 22.219,347.632 24.700 C 347.608 25.385,347.361 25.600,346.600 25.600 C 346.050 25.600,345.597 25.825,345.594 26.100 C 345.590 26.434,345.457 26.401,345.194 26.000 C 344.844 25.467,344.756 25.467,344.400 26.000 C 344.067 26.499,343.941 26.508,343.648 26.055 C 343.455 25.755,343.230 25.684,343.148 25.897 C 343.067 26.111,340.147 26.391,336.637 26.521 C 333.138 26.650,330.168 26.920,330.037 27.120 C 329.907 27.321,329.125 27.609,328.300 27.760 C 327.049 27.990,326.800 28.199,326.800 29.018 C 326.800 29.607,326.569 30.000,326.223 30.000 C 325.830 30.000,325.607 30.542,325.523 31.697 C 325.429 32.986,325.219 33.428,324.644 33.537 C 324.228 33.616,323.487 34.112,322.998 34.640 C 322.341 35.349,321.684 35.600,320.487 35.600 C 319.596 35.600,318.807 35.762,318.733 35.960 C 318.660 36.158,315.455 36.436,311.612 36.579 C 307.769 36.721,304.529 36.987,304.412 37.170 C 304.295 37.352,303.435 37.630,302.500 37.786 C 301.565 37.942,300.800 38.222,300.800 38.407 C 300.800 38.593,300.409 38.802,299.931 38.872 C 299.454 38.942,298.989 39.225,298.898 39.500 C 298.683 40.154,299.878 40.154,300.112 39.500 C 300.210 39.225,300.434 39.134,300.609 39.297 C 301.005 39.667,299.308 41.191,298.668 41.041 C 298.410 40.980,298.335 41.007,298.500 41.099 C 298.950 41.350,298.862 43.200,298.400 43.200 C 298.180 43.200,298.000 43.740,298.000 44.400 C 298.000 45.459,297.863 45.600,296.833 45.600 C 296.192 45.600,295.607 45.766,295.533 45.968 C 295.460 46.170,292.462 46.406,288.871 46.492 C 283.772 46.614,282.253 46.774,281.940 47.224 C 281.635 47.663,281.491 47.681,281.336 47.300 C 281.048 46.590,279.332 46.679,279.048 47.419 C 278.918 47.759,278.583 48.008,278.305 47.971 C 276.964 47.796,276.400 48.049,276.400 48.829 C 276.400 49.284,276.138 49.919,275.817 50.240 C 275.496 50.561,275.287 51.043,275.351 51.312 C 275.416 51.580,275.393 51.665,275.301 51.500 C 274.998 50.959,274.400 51.186,274.400 51.843 C 274.400 52.272,274.184 52.403,273.749 52.236 C 273.213 52.030,273.138 52.188,273.325 53.124 C 273.650 54.749,272.516 55.600,270.029 55.600 C 268.950 55.600,268.007 55.761,267.933 55.957 C 267.860 56.154,264.651 56.420,260.803 56.548 C 256.603 56.689,253.751 56.946,253.670 57.191 C 253.595 57.416,252.991 57.600,252.329 57.600 C 251.456 57.600,251.067 57.823,250.913 58.411 C 250.755 59.015,250.483 59.162,249.850 58.985 C 249.220 58.809,249.146 58.848,249.565 59.137 C 250.044 59.468,250.029 59.628,249.465 60.192 C 249.099 60.558,248.800 61.189,248.800 61.595 C 248.800 62.001,248.597 62.401,248.349 62.484 C 248.102 62.566,247.855 63.076,247.800 63.617 C 247.746 64.158,247.679 64.825,247.651 65.100 C 247.623 65.375,247.165 65.600,246.633 65.600 C 246.102 65.600,245.607 65.758,245.533 65.952 C 245.460 66.146,241.726 66.407,237.235 66.533 C 232.745 66.659,228.965 66.925,228.835 67.123 C 228.706 67.322,227.925 67.609,227.100 67.760 C 226.181 67.930,225.600 68.261,225.600 68.618 C 225.600 68.965,225.214 69.200,224.643 69.200 C 223.667 69.200,223.200 69.858,223.200 71.233 C 223.200 71.655,222.975 72.003,222.700 72.006 C 221.628 72.019,220.941 72.761,221.600 73.194 C 222.112 73.530,222.097 73.589,221.492 73.594 C 220.938 73.599,220.839 73.817,221.036 74.600 C 221.276 75.558,221.210 75.600,219.443 75.600 C 218.430 75.600,217.600 75.759,217.600 75.954 C 217.600 76.148,214.180 76.439,210.000 76.600 C 203.058 76.867,201.504 77.122,202.900 77.763 C 203.175 77.889,202.995 77.892,202.500 77.769 C 201.434 77.505,200.000 77.892,200.000 78.444 C 200.000 78.816,199.660 79.297,198.460 80.625 C 198.164 80.953,197.819 81.979,197.695 82.905 C 197.470 84.583,196.841 85.600,196.029 85.600 C 195.793 85.600,195.600 85.762,195.600 85.959 C 195.600 86.156,191.903 86.381,187.385 86.459 C 181.861 86.554,179.077 86.748,178.885 87.052 C 178.728 87.300,177.655 87.632,176.500 87.789 C 174.628 88.044,174.400 88.179,174.400 89.038 C 174.400 90.150,173.746 90.335,173.476 89.300 C 173.302 88.633,173.291 88.633,173.246 89.300 C 173.221 89.685,173.020 90.000,172.800 90.000 C 172.580 90.000,172.400 90.270,172.400 90.600 C 172.400 90.930,172.142 91.200,171.827 91.200 C 171.201 91.200,170.610 92.568,170.978 93.164 C 171.104 93.368,170.936 93.807,170.604 94.139 C 170.272 94.471,170.000 94.936,170.000 95.171 C 170.000 95.413,169.213 95.600,168.200 95.600 C 167.210 95.600,166.400 95.752,166.400 95.938 C 166.400 96.123,163.310 96.386,159.533 96.522 C 155.027 96.684,152.569 96.927,152.382 97.230 C 152.177 97.562,152.040 97.538,151.894 97.145 C 151.739 96.727,151.556 96.777,151.107 97.361 C 150.760 97.812,150.321 97.998,150.030 97.819 C 149.741 97.640,149.227 97.850,148.781 98.328 C 148.244 98.905,148.165 99.199,148.512 99.340 C 148.885 99.492,148.875 99.627,148.470 99.912 C 148.178 100.117,147.839 101.031,147.717 101.942 C 147.595 102.854,147.338 103.600,147.147 103.600 C 146.611 103.600,146.737 104.708,147.300 104.936 C 147.677 105.089,147.655 105.240,147.207 105.550 C 146.533 106.019,146.466 129.536,147.138 129.973 C 147.331 130.098,147.587 135.822,147.707 142.693 L 147.926 155.187 150.393 157.593 C 151.750 158.917,152.944 160.000,153.047 160.000 C 153.228 160.000,153.843 160.475,154.985 161.500 C 155.633 162.081,156.800 162.168,156.800 161.636 C 156.800 161.436,158.330 161.144,160.200 160.989 C 162.070 160.833,163.600 160.547,163.600 160.353 C 163.600 160.159,164.320 160.000,165.200 160.000 C 166.080 160.000,166.800 159.834,166.800 159.632 C 166.800 159.429,167.970 159.138,169.400 158.985 C 170.830 158.832,172.000 158.564,172.000 158.389 C 172.000 158.214,172.720 157.949,173.600 157.800 C 174.480 157.651,175.200 157.380,175.200 157.197 C 175.200 157.013,175.740 156.745,176.400 156.600 C 177.060 156.455,177.600 156.171,177.600 155.968 C 177.600 155.766,177.851 155.600,178.157 155.600 C 178.464 155.600,178.818 155.330,178.945 155.000 C 179.071 154.670,179.541 154.400,179.987 154.400 C 180.434 154.400,180.800 154.228,180.800 154.018 C 180.800 153.808,181.430 153.518,182.200 153.374 C 182.970 153.229,183.600 152.964,183.600 152.784 C 183.600 152.605,184.590 152.334,185.800 152.183 C 187.010 152.032,188.000 151.767,188.000 151.596 C 188.000 151.424,189.440 151.156,191.200 151.000 C 192.960 150.844,194.400 150.555,194.400 150.358 C 194.400 150.161,195.120 150.000,196.000 150.000 C 196.880 150.000,197.600 149.841,197.600 149.646 C 197.600 149.451,198.590 149.168,199.800 149.017 C 201.010 148.866,202.000 148.586,202.000 148.396 C 202.000 148.205,202.810 147.928,203.800 147.779 C 204.790 147.631,205.600 147.369,205.600 147.198 C 205.600 147.027,206.050 146.774,206.600 146.636 C 207.150 146.498,207.600 146.208,207.600 145.992 C 207.600 145.777,207.870 145.600,208.200 145.600 C 208.530 145.600,208.800 145.434,208.800 145.232 C 208.800 145.029,209.340 144.745,210.000 144.600 C 210.660 144.455,211.200 144.173,211.200 143.973 C 211.200 143.773,211.920 143.494,212.800 143.354 C 213.680 143.213,214.400 142.954,214.400 142.778 C 214.400 142.602,215.390 142.334,216.600 142.183 C 217.810 142.032,218.800 141.767,218.800 141.596 C 218.800 141.424,220.240 141.156,222.000 141.000 C 223.760 140.844,225.200 140.555,225.200 140.358 C 225.200 140.161,225.830 140.000,226.600 140.000 C 227.370 140.000,228.000 139.845,228.000 139.656 C 228.000 139.466,228.931 139.201,230.070 139.066 C 231.208 138.931,232.243 138.662,232.370 138.468 C 232.496 138.274,233.275 137.991,234.100 137.840 C 234.925 137.688,235.600 137.406,235.600 137.214 C 235.600 137.021,236.140 136.745,236.800 136.600 C 237.460 136.455,238.000 136.171,238.000 135.968 C 238.000 135.766,238.270 135.600,238.600 135.600 C 238.930 135.600,239.200 135.423,239.200 135.208 C 239.200 134.992,239.650 134.702,240.200 134.564 C 240.750 134.426,241.200 134.176,241.200 134.008 C 241.200 133.840,241.920 133.587,242.800 133.446 C 243.680 133.306,244.400 133.033,244.400 132.841 C 244.400 132.649,245.390 132.368,246.600 132.217 C 247.810 132.066,248.800 131.794,248.800 131.613 C 248.800 131.432,250.240 131.156,252.000 131.000 C 253.967 130.826,255.202 130.540,255.206 130.258 C 255.211 129.925,255.292 129.922,255.506 130.246 C 255.668 130.491,256.205 130.819,256.700 130.973 C 257.195 131.128,257.600 131.422,257.600 131.627 C 257.600 131.832,257.830 132.000,258.111 132.000 C 258.392 132.000,258.920 132.315,259.283 132.700 C 259.646 133.085,260.226 133.632,260.572 133.916 C 261.135 134.378,261.200 138.655,261.200 175.416 C 261.200 198.050,261.354 216.400,261.544 216.400 C 261.734 216.400,261.999 217.331,262.134 218.470 C 262.269 219.608,262.549 220.645,262.758 220.774 C 262.966 220.903,263.260 221.501,263.412 222.104 C 263.563 222.707,263.847 223.200,264.043 223.200 C 264.240 223.200,264.400 223.451,264.400 223.757 C 264.400 224.064,264.670 224.418,265.000 224.545 C 265.450 224.717,265.600 224.479,265.600 223.587 C 265.600 222.934,265.764 222.400,265.965 222.400 C 266.166 222.400,266.451 221.680,266.600 220.800 C 266.749 219.920,267.015 219.200,267.192 219.200 C 267.369 219.200,267.628 218.741,267.769 218.181 C 267.910 217.620,268.615 216.585,269.336 215.881 C 270.057 215.176,270.765 214.285,270.911 213.900 C 271.056 213.515,271.451 213.200,271.787 213.200 C 272.124 213.200,272.400 213.023,272.400 212.808 C 272.400 212.592,272.850 212.302,273.400 212.164 C 273.950 212.026,274.400 211.772,274.400 211.600 C 274.400 211.428,274.850 211.174,275.400 211.036 C 276.052 210.872,276.400 210.505,276.400 209.980 C 276.400 209.537,276.670 209.071,277.000 208.945 C 277.330 208.818,277.600 208.462,277.600 208.153 C 277.600 207.845,277.960 207.284,278.400 206.907 C 278.840 206.530,279.200 205.902,279.200 205.511 C 279.200 205.120,279.380 204.800,279.600 204.800 C 279.820 204.800,280.000 204.530,280.000 204.200 C 280.000 203.870,280.186 203.600,280.413 203.600 C 280.639 203.600,280.944 203.285,281.090 202.900 C 281.433 201.994,282.224 201.200,282.784 201.200 C 283.027 201.200,283.329 200.930,283.455 200.600 C 283.582 200.270,284.011 200.000,284.409 200.000 C 284.808 200.000,285.224 199.775,285.335 199.500 C 285.496 199.100,285.543 199.100,285.568 199.500 C 285.586 199.782,286.124 200.000,286.800 200.000 C 287.460 200.000,288.000 200.172,288.000 200.382 C 288.000 200.592,288.630 200.882,289.400 201.026 C 290.170 201.171,290.800 201.449,290.800 201.645 C 290.800 201.840,291.007 202.000,291.260 202.000 C 291.512 202.000,292.314 202.585,293.041 203.300 C 294.900 205.127,295.505 205.600,295.983 205.600 C 296.212 205.600,296.400 205.769,296.400 205.975 C 296.400 206.182,297.210 206.472,298.200 206.621 C 299.190 206.769,300.000 207.031,300.000 207.202 C 300.000 207.373,300.450 207.626,301.000 207.764 C 301.550 207.902,302.000 208.178,302.000 208.376 C 302.000 208.574,302.532 208.853,303.182 208.996 C 303.845 209.142,304.471 209.595,304.609 210.028 C 304.744 210.453,305.136 210.800,305.480 210.800 C 306.068 210.800,310.000 214.459,310.000 215.006 C 310.000 215.351,311.077 216.400,311.431 216.400 C 311.590 216.400,312.331 217.030,313.079 217.800 C 313.827 218.570,314.700 219.200,315.019 219.200 C 315.339 219.200,315.600 219.380,315.600 219.600 C 315.600 219.820,315.794 220.000,316.032 220.000 C 316.594 220.000,320.000 223.406,320.000 223.968 C 320.000 224.206,320.180 224.400,320.400 224.400 C 320.620 224.400,320.800 224.940,320.800 225.600 C 320.800 226.260,320.620 226.800,320.400 226.800 C 320.180 226.800,320.000 227.070,320.000 227.400 C 320.000 227.730,319.820 228.000,319.600 228.000 C 319.380 228.000,319.200 228.272,319.200 228.605 C 319.200 228.938,318.120 230.300,316.800 231.632 C 315.480 232.965,314.400 234.222,314.400 234.427 C 314.400 234.632,314.245 234.800,314.056 234.800 C 313.866 234.800,313.601 235.731,313.466 236.870 C 313.331 238.008,313.059 239.043,312.861 239.170 C 312.663 239.296,312.374 239.985,312.218 240.700 C 312.063 241.415,311.765 242.000,311.556 242.000 C 311.346 242.000,311.057 242.306,310.914 242.680 C 310.770 243.054,309.353 244.660,307.763 246.250 C 306.173 247.839,304.754 249.513,304.610 249.970 C 304.465 250.426,304.193 250.800,304.005 250.800 C 303.817 250.800,303.548 251.325,303.407 251.967 C 303.266 252.608,302.892 253.233,302.576 253.354 C 302.259 253.476,302.000 253.851,302.000 254.187 C 302.000 254.524,301.844 254.800,301.652 254.800 C 301.461 254.800,301.206 255.408,301.086 256.151 C 300.866 257.501,297.753 261.200,296.836 261.200 C 296.596 261.200,296.400 261.360,296.400 261.557 C 296.400 261.753,295.950 262.026,295.400 262.164 C 294.850 262.302,294.400 262.682,294.400 263.008 C 294.400 263.333,294.223 263.600,294.008 263.600 C 293.792 263.600,293.502 264.050,293.364 264.600 C 293.226 265.150,292.973 265.600,292.802 265.600 C 292.631 265.600,292.369 266.410,292.221 267.400 C 292.072 268.390,291.782 269.200,291.575 269.200 C 291.369 269.200,291.200 269.498,291.200 269.861 C 291.200 270.627,288.125 273.600,287.333 273.600 C 287.040 273.600,286.800 273.780,286.800 274.000 C 286.800 274.220,286.570 274.400,286.289 274.400 C 285.555 274.400,284.400 275.870,284.400 276.805 C 284.400 277.242,284.236 277.600,284.035 277.600 C 283.834 277.600,283.549 278.320,283.400 279.200 C 283.251 280.080,282.980 280.800,282.797 280.800 C 282.613 280.800,282.348 281.325,282.207 281.967 C 282.066 282.608,281.692 283.233,281.376 283.354 C 281.059 283.476,280.800 283.811,280.800 284.099 C 280.800 284.387,280.440 284.883,280.000 285.200 C 279.560 285.517,279.200 285.985,279.200 286.240 C 279.200 286.707,276.198 290.000,275.772 290.000 C 275.379 290.000,274.400 291.121,274.400 291.571 C 274.400 291.807,274.220 292.000,274.000 292.000 C 273.780 292.000,273.600 292.276,273.600 292.613 C 273.600 292.949,273.329 293.329,272.998 293.456 C 272.667 293.583,272.283 294.388,272.147 295.244 C 272.010 296.100,271.764 296.800,271.601 296.800 C 271.438 296.800,271.200 297.446,271.072 298.236 C 270.943 299.026,270.502 299.971,270.091 300.336 C 269.681 300.701,269.228 301.315,269.085 301.700 C 268.942 302.085,268.549 302.400,268.213 302.400 C 267.876 302.400,267.600 302.568,267.600 302.773 C 267.600 302.978,267.222 303.266,266.761 303.413 C 265.317 303.871,264.400 305.109,264.400 306.600 C 264.400 307.370,264.243 308.000,264.052 308.000 C 263.860 308.000,263.580 309.248,263.430 310.774 C 263.280 312.300,262.988 313.605,262.781 313.674 C 262.574 313.743,262.287 315.465,262.143 317.500 C 261.998 319.535,261.727 321.200,261.540 321.200 C 261.353 321.200,261.200 337.940,261.200 358.400 C 261.200 382.933,261.336 395.600,261.600 395.600 C 261.820 395.600,262.000 396.056,262.000 396.613 C 262.000 397.169,262.254 397.722,262.564 397.841 C 262.874 397.961,263.237 398.495,263.372 399.029 C 263.522 399.630,263.904 400.000,264.374 400.000 C 264.792 400.000,265.209 400.225,265.301 400.500 C 265.542 401.214,280.464 401.207,280.703 400.492 C 280.793 400.222,281.372 400.000,281.991 400.000 C 282.621 400.000,283.216 399.736,283.345 399.400 C 283.471 399.070,284.031 398.800,284.587 398.800 C 285.144 398.800,285.600 398.620,285.600 398.400 C 285.600 398.180,285.872 398.000,286.204 398.000 C 286.536 398.000,287.116 397.640,287.493 397.200 C 287.870 396.760,288.326 396.400,288.507 396.400 C 288.688 396.400,289.286 395.950,289.836 395.400 C 290.386 394.850,291.098 394.400,291.418 394.400 C 291.738 394.400,292.000 394.222,292.000 394.005 C 292.000 393.787,292.720 393.494,293.600 393.354 C 294.480 393.213,295.200 392.961,295.200 392.795 C 295.200 392.628,296.235 392.363,297.500 392.205 C 298.765 392.048,299.935 391.712,300.100 391.459 C 300.315 391.130,300.512 391.170,300.794 391.600 C 301.022 391.948,301.190 392.003,301.194 391.732 C 301.198 391.452,302.246 391.152,303.800 390.985 C 305.230 390.832,306.400 390.548,306.400 390.353 C 306.400 390.159,306.940 390.000,307.600 390.000 C 308.260 390.000,308.800 389.834,308.800 389.632 C 308.800 389.429,309.340 389.145,310.000 389.000 C 310.660 388.855,311.200 388.571,311.200 388.368 C 311.200 388.166,311.472 388.000,311.804 388.000 C 312.136 388.000,312.716 387.640,313.093 387.200 C 313.470 386.760,314.086 386.400,314.462 386.400 C 314.838 386.400,315.256 386.053,315.391 385.628 C 315.529 385.195,316.155 384.742,316.818 384.596 C 317.468 384.453,318.000 384.173,318.000 383.973 C 318.000 383.773,318.720 383.494,319.600 383.354 C 320.480 383.213,321.200 382.961,321.200 382.795 C 321.200 382.628,322.190 382.368,323.400 382.217 C 324.610 382.066,325.600 381.799,325.600 381.623 C 325.600 381.447,327.040 381.178,328.800 381.024 C 330.560 380.871,332.000 380.577,332.000 380.373 C 332.000 380.168,332.360 380.000,332.800 380.000 C 333.240 380.000,333.600 379.836,333.600 379.635 C 333.600 379.434,334.320 379.149,335.200 379.000 C 336.080 378.851,336.800 378.566,336.800 378.365 C 336.800 378.164,337.057 378.000,337.371 378.000 C 337.686 378.000,338.189 377.754,338.490 377.453 C 338.791 377.152,339.434 376.780,339.919 376.626 C 340.409 376.470,340.800 376.018,340.800 375.605 C 340.800 375.106,341.193 374.777,342.000 374.600 C 342.660 374.455,343.200 374.191,343.200 374.014 C 343.200 373.836,344.010 373.569,345.000 373.421 C 345.990 373.272,346.800 373.003,346.800 372.822 C 346.800 372.642,348.195 372.364,349.900 372.205 C 351.605 372.046,353.103 371.751,353.228 371.551 C 353.353 371.350,354.928 371.073,356.728 370.934 C 358.528 370.795,360.000 370.528,360.000 370.341 C 360.000 370.153,360.450 370.000,361.000 370.000 C 361.550 370.000,362.000 369.834,362.000 369.632 C 362.000 369.429,362.540 369.145,363.200 369.000 C 363.860 368.855,364.400 368.571,364.400 368.368 C 364.400 368.166,364.795 368.000,365.277 368.000 C 365.779 368.000,366.769 367.340,367.597 366.452 C 368.390 365.601,369.436 364.779,369.920 364.625 C 370.404 364.472,370.800 364.178,370.800 363.973 C 370.800 363.768,371.070 363.600,371.400 363.600 C 371.730 363.600,372.000 363.370,372.000 363.089 C 372.000 362.808,372.360 362.270,372.800 361.893 C 373.240 361.516,373.600 360.976,373.600 360.692 C 373.600 360.409,373.960 359.917,374.400 359.600 C 374.840 359.283,375.200 358.833,375.200 358.601 C 375.200 358.101,376.354 357.057,377.314 356.688 C 377.951 356.444,377.993 347.794,377.988 217.143 C 377.984 138.230,378.133 77.759,378.331 77.629 C 378.523 77.503,378.791 73.982,378.926 69.805 C 379.078 65.149,379.333 62.156,379.586 62.071 C 380.162 61.879,380.104 60.915,379.500 60.633 C 379.100 60.447,379.100 60.353,379.500 60.167 C 379.823 60.016,380.000 59.036,380.000 57.400 C 380.000 56.007,380.179 54.807,380.398 54.733 C 380.617 54.660,380.894 52.890,381.014 50.800 C 381.133 48.710,381.404 46.940,381.616 46.867 C 382.169 46.675,382.089 45.703,381.500 45.464 C 381.113 45.307,381.124 45.174,381.549 44.877 C 381.916 44.620,382.146 43.394,382.243 41.173 C 382.335 39.080,382.575 37.734,382.894 37.527 C 383.291 37.271,383.270 37.115,382.800 36.806 C 382.470 36.589,382.403 36.409,382.652 36.406 C 382.950 36.402,383.202 34.569,383.393 31.000 C 383.552 28.030,383.844 25.600,384.041 25.600 C 384.238 25.600,384.400 25.330,384.400 25.000 C 384.400 24.670,384.220 24.400,384.000 24.400 C 383.777 24.400,383.600 23.319,383.600 21.956 C 383.600 19.475,382.622 17.625,381.300 17.607 C 381.025 17.603,380.800 17.369,380.800 17.088 C 380.800 16.712,379.708 16.545,376.700 16.463 C 374.445 16.401,372.540 16.182,372.467 15.975 C 372.296 15.496,361.312 15.478,361.133 15.957 M221.067 71.067 C 220.606 71.527,220.775 72.000,221.400 72.000 C 221.730 72.000,222.000 71.730,222.000 71.400 C 222.000 70.775,221.527 70.606,221.067 71.067 \\\"\\r\\n                    stroke=\\\"none\\\"\\r\\n                    fill=\\\"#fcdc04\\\"\\r\\n                    fill-rule=\\\"evenodd\\\"\\r\\n                  ></path>\\r\\n                  <path\\r\\n                    id=\\\"path4\\\"\\r\\n                    d=\\\"M359.200 16.000 C 359.200 16.220,359.650 16.400,360.200 16.400 C 360.750 16.400,361.200 16.220,361.200 16.000 C 361.200 15.780,360.750 15.600,360.200 15.600 C 359.650 15.600,359.200 15.780,359.200 16.000 M383.600 27.000 C 383.600 27.330,383.780 27.600,384.000 27.600 C 384.220 27.600,384.400 27.330,384.400 27.000 C 384.400 26.670,384.220 26.400,384.000 26.400 C 383.780 26.400,383.600 26.670,383.600 27.000 M285.232 199.500 C 285.214 199.775,284.840 200.000,284.400 200.000 C 283.960 200.000,283.600 200.186,283.600 200.413 C 283.600 200.639,283.285 200.944,282.900 201.090 C 282.011 201.427,281.427 202.011,281.090 202.900 C 280.944 203.285,280.639 203.600,280.413 203.600 C 280.186 203.600,280.000 203.870,280.000 204.200 C 280.000 204.530,279.820 204.800,279.600 204.800 C 279.380 204.800,279.200 205.120,279.200 205.511 C 279.200 205.902,278.840 206.530,278.400 206.907 C 277.960 207.284,277.600 207.845,277.600 208.153 C 277.600 208.462,277.330 208.818,277.000 208.945 C 276.670 209.071,276.400 209.537,276.400 209.980 C 276.400 210.505,276.052 210.872,275.400 211.036 C 274.850 211.174,274.400 211.428,274.400 211.600 C 274.400 211.772,273.950 212.026,273.400 212.164 C 272.850 212.302,272.400 212.592,272.400 212.808 C 272.400 213.023,272.124 213.200,271.787 213.200 C 271.451 213.200,271.056 213.515,270.911 213.900 C 270.765 214.285,270.057 215.176,269.336 215.881 C 268.615 216.585,267.910 217.620,267.769 218.181 C 267.628 218.741,267.369 219.200,267.192 219.200 C 267.015 219.200,266.749 219.920,266.600 220.800 C 266.451 221.680,266.166 222.400,265.965 222.400 C 265.764 222.400,265.600 222.934,265.600 223.587 C 265.600 224.479,265.450 224.717,265.000 224.545 C 264.670 224.418,264.400 224.064,264.400 223.757 C 264.400 223.451,264.234 223.200,264.032 223.200 C 263.829 223.200,263.545 222.660,263.400 222.000 C 263.255 221.340,262.971 220.800,262.768 220.800 C 262.566 220.800,262.400 220.440,262.400 220.000 C 262.400 219.560,262.155 219.200,261.856 219.200 C 261.456 219.200,261.255 220.122,261.095 222.687 C 260.971 224.674,260.689 226.237,260.439 226.320 C 260.197 226.401,260.000 226.977,260.000 227.600 C 260.000 228.223,259.817 228.794,259.594 228.869 C 259.371 228.943,259.075 230.218,258.936 231.702 C 258.798 233.186,258.553 234.400,258.393 234.400 C 258.233 234.400,257.987 235.120,257.846 236.000 C 257.706 236.880,257.407 237.600,257.183 237.600 C 256.958 237.600,256.656 237.915,256.510 238.300 C 256.217 239.073,255.397 240.000,255.006 240.000 C 254.555 240.000,250.800 243.881,250.800 244.347 C 250.800 244.596,250.620 244.800,250.400 244.800 C 250.180 244.800,250.000 245.141,250.000 245.557 C 250.000 245.974,249.730 246.418,249.400 246.545 C 249.070 246.671,248.800 247.051,248.800 247.387 C 248.800 247.724,248.628 248.000,248.418 248.000 C 248.208 248.000,247.918 248.630,247.774 249.400 C 247.629 250.170,247.365 250.800,247.187 250.800 C 247.009 250.800,246.745 251.340,246.600 252.000 C 246.455 252.660,246.171 253.200,245.968 253.200 C 245.766 253.200,245.600 253.430,245.600 253.711 C 245.600 254.200,244.239 255.600,243.764 255.600 C 243.448 255.600,240.000 259.078,240.000 259.397 C 240.000 259.540,239.730 259.927,239.400 260.257 C 239.070 260.587,238.800 261.204,238.800 261.629 C 238.800 262.053,238.643 262.400,238.451 262.400 C 238.259 262.400,237.987 263.120,237.846 264.000 C 237.706 264.880,237.432 265.600,237.239 265.600 C 237.045 265.600,236.774 266.047,236.637 266.594 C 236.483 267.207,236.007 267.683,235.394 267.837 C 234.847 267.974,234.400 268.228,234.400 268.400 C 234.400 268.572,233.962 268.823,233.427 268.958 C 232.891 269.092,232.344 269.545,232.211 269.964 C 232.078 270.383,231.706 270.827,231.385 270.950 C 231.063 271.074,230.800 271.451,230.800 271.787 C 230.800 272.124,230.620 272.400,230.400 272.400 C 230.180 272.400,230.000 272.670,230.000 273.000 C 230.000 273.330,229.828 273.600,229.618 273.600 C 229.408 273.600,229.118 274.230,228.974 275.000 C 228.829 275.770,228.551 276.400,228.355 276.400 C 228.160 276.400,228.000 276.676,228.000 277.013 C 228.000 277.349,227.746 277.722,227.436 277.841 C 227.126 277.961,226.763 278.495,226.628 279.029 C 226.494 279.563,226.208 280.000,225.992 280.000 C 225.777 280.000,225.600 280.270,225.600 280.600 C 225.600 280.930,225.406 281.200,225.168 281.200 C 224.518 281.200,221.349 284.502,221.027 285.514 C 220.873 286.001,220.578 286.400,220.373 286.400 C 220.168 286.400,220.000 286.651,220.000 286.957 C 220.000 287.264,219.730 287.618,219.400 287.745 C 219.070 287.871,218.800 288.251,218.800 288.587 C 218.800 288.924,218.640 289.200,218.445 289.200 C 218.249 289.200,217.971 289.830,217.826 290.600 C 217.682 291.370,217.412 292.000,217.226 292.000 C 217.041 292.000,216.771 292.630,216.626 293.400 C 216.482 294.170,216.192 294.800,215.982 294.800 C 215.772 294.800,215.600 295.140,215.600 295.557 C 215.600 296.040,215.220 296.409,214.548 296.577 C 213.442 296.855,210.000 300.027,210.000 300.768 C 210.000 301.006,209.834 301.200,209.632 301.200 C 209.429 301.200,209.145 301.740,209.000 302.400 C 208.855 303.060,208.594 303.600,208.421 303.600 C 208.247 303.600,208.003 304.227,207.879 304.993 C 207.629 306.531,205.333 309.200,204.260 309.200 C 203.897 309.200,203.600 309.371,203.600 309.581 C 203.600 309.790,202.970 310.573,202.200 311.321 C 201.430 312.069,200.800 312.888,200.800 313.140 C 200.800 313.393,200.620 313.600,200.400 313.600 C 200.180 313.600,200.000 313.870,200.000 314.200 C 200.000 314.530,199.840 314.800,199.645 314.800 C 199.449 314.800,199.174 315.413,199.034 316.161 C 198.893 316.910,198.513 317.624,198.189 317.749 C 197.865 317.873,197.600 318.251,197.600 318.587 C 197.600 318.924,197.420 319.200,197.200 319.200 C 196.980 319.200,196.800 319.566,196.800 320.013 C 196.800 320.459,196.546 320.922,196.236 321.041 C 195.926 321.161,195.563 321.695,195.428 322.229 C 195.271 322.855,194.898 323.200,194.380 323.200 C 193.937 323.200,193.456 323.515,193.310 323.900 C 192.980 324.772,192.181 325.600,191.671 325.600 C 191.459 325.600,191.182 325.870,191.055 326.200 C 190.929 326.530,190.459 326.800,190.013 326.800 C 189.566 326.800,189.200 326.960,189.200 327.157 C 189.200 327.353,188.707 327.637,188.104 327.788 C 187.501 327.940,186.888 328.257,186.742 328.494 C 186.402 329.044,183.862 328.986,183.675 328.424 C 183.597 328.191,183.273 328.000,182.954 328.000 C 182.636 328.000,182.278 327.746,182.159 327.436 C 182.039 327.126,181.505 326.763,180.971 326.628 C 180.437 326.494,180.000 326.208,180.000 325.992 C 180.000 325.777,179.730 325.600,179.400 325.600 C 179.070 325.600,178.800 325.411,178.800 325.180 C 178.800 324.705,176.274 322.000,175.831 322.000 C 175.673 322.000,175.292 321.775,174.985 321.500 C 173.682 320.331,173.213 320.000,172.860 320.000 C 172.654 320.000,172.382 319.730,172.255 319.400 C 172.129 319.070,171.749 318.800,171.413 318.800 C 171.076 318.800,170.800 318.636,170.800 318.435 C 170.800 318.234,170.080 317.949,169.200 317.800 C 168.320 317.651,167.600 317.366,167.600 317.165 C 167.600 316.964,167.144 316.800,166.587 316.800 C 166.031 316.800,165.471 316.530,165.345 316.200 C 165.218 315.870,164.774 315.600,164.357 315.600 C 163.814 315.600,163.600 315.314,163.600 314.587 C 163.600 314.031,163.330 313.471,163.000 313.345 C 162.670 313.218,162.400 312.890,162.400 312.616 C 162.400 311.907,160.550 310.000,159.862 310.000 C 159.545 310.000,159.182 309.730,159.055 309.400 C 158.929 309.070,158.369 308.800,157.813 308.800 C 157.256 308.800,156.800 308.636,156.800 308.435 C 156.800 308.234,156.094 307.951,155.231 307.805 C 154.369 307.660,153.564 307.284,153.444 306.970 C 153.324 306.657,153.037 306.400,152.807 306.400 C 152.578 306.400,151.478 305.484,150.364 304.364 C 149.250 303.244,148.223 302.444,148.081 302.586 C 147.939 302.727,148.015 302.969,148.250 303.122 C 148.484 303.275,148.790 304.119,148.929 304.997 C 149.068 305.875,149.365 306.655,149.591 306.730 C 149.816 306.805,150.000 307.046,150.000 307.264 C 150.000 307.483,150.540 308.202,151.200 308.862 C 151.860 309.522,152.400 310.224,152.400 310.423 C 152.400 310.622,152.850 310.898,153.400 311.036 C 153.950 311.174,154.400 311.428,154.400 311.600 C 154.400 311.772,154.850 312.026,155.400 312.164 C 155.950 312.302,156.400 312.592,156.400 312.808 C 156.400 313.023,156.607 313.200,156.860 313.200 C 157.331 313.200,160.000 315.759,160.000 316.211 C 160.000 316.626,162.150 318.627,162.900 318.911 C 163.285 319.056,163.600 319.361,163.600 319.587 C 163.600 319.814,163.960 320.000,164.400 320.000 C 164.840 320.000,165.200 320.166,165.200 320.368 C 165.200 320.571,165.740 320.855,166.400 321.000 C 167.060 321.145,167.600 321.429,167.600 321.632 C 167.600 321.834,167.876 322.000,168.213 322.000 C 168.549 322.000,168.929 322.270,169.055 322.600 C 169.182 322.930,169.558 323.200,169.892 323.200 C 170.225 323.200,171.548 324.280,172.832 325.600 C 174.115 326.920,175.424 328.000,175.740 328.000 C 176.056 328.000,176.418 328.270,176.545 328.600 C 176.671 328.930,177.051 329.200,177.387 329.200 C 177.724 329.200,178.000 329.380,178.000 329.600 C 178.000 329.820,178.270 330.000,178.600 330.000 C 178.930 330.000,179.200 330.177,179.200 330.392 C 179.200 330.608,179.650 330.898,180.200 331.036 C 180.750 331.174,181.200 331.445,181.200 331.639 C 181.200 331.832,181.920 332.106,182.800 332.246 C 183.680 332.387,184.400 332.659,184.400 332.851 C 184.400 333.043,184.850 333.200,185.400 333.200 C 185.950 333.200,186.400 333.040,186.400 332.845 C 186.400 332.649,187.030 332.371,187.800 332.226 C 188.570 332.082,189.200 331.815,189.200 331.633 C 189.200 331.451,189.920 331.187,190.800 331.046 C 191.680 330.906,192.400 330.613,192.400 330.395 C 192.400 330.178,192.670 330.000,193.000 330.000 C 193.330 330.000,193.600 329.832,193.600 329.627 C 193.600 329.422,193.992 329.130,194.471 328.978 C 195.632 328.609,198.000 326.277,198.000 325.502 C 198.000 325.163,198.270 324.782,198.600 324.655 C 198.930 324.529,199.200 324.189,199.200 323.901 C 199.200 323.613,199.553 323.122,199.985 322.811 C 200.417 322.499,200.881 321.740,201.017 321.122 C 201.153 320.505,201.415 320.000,201.600 320.000 C 201.785 320.000,202.055 319.460,202.200 318.800 C 202.345 318.140,202.621 317.600,202.814 317.600 C 203.006 317.600,203.281 316.976,203.424 316.214 C 203.579 315.386,203.975 314.735,204.405 314.598 C 204.802 314.473,205.227 314.106,205.350 313.785 C 205.474 313.463,205.769 313.200,206.007 313.200 C 206.685 313.200,209.200 310.590,209.200 309.887 C 209.200 309.539,209.560 309.140,210.000 309.000 C 210.552 308.825,210.877 308.260,211.051 307.173 C 211.189 306.308,211.440 305.600,211.608 305.600 C 211.776 305.600,212.026 305.150,212.164 304.600 C 212.302 304.050,212.592 303.600,212.808 303.600 C 213.023 303.600,213.200 303.381,213.200 303.113 C 213.200 302.494,215.150 300.800,215.862 300.800 C 216.158 300.800,216.400 300.634,216.400 300.431 C 216.400 300.228,216.940 299.522,217.600 298.862 C 218.260 298.202,218.800 297.462,218.800 297.218 C 218.800 296.974,219.070 296.671,219.400 296.545 C 219.730 296.418,220.000 295.974,220.000 295.557 C 220.000 295.141,220.166 294.800,220.368 294.800 C 220.571 294.800,220.855 294.260,221.000 293.600 C 221.145 292.940,221.429 292.400,221.632 292.400 C 221.834 292.400,222.000 292.124,222.000 291.787 C 222.000 291.451,222.270 291.071,222.600 290.945 C 222.930 290.818,223.200 290.399,223.200 290.013 C 223.200 289.628,223.650 288.974,224.200 288.561 C 224.750 288.148,225.200 287.643,225.200 287.439 C 225.200 287.052,225.458 286.746,227.791 284.360 C 228.566 283.567,229.200 282.712,229.200 282.460 C 229.200 282.207,229.380 282.000,229.600 282.000 C 229.820 282.000,230.000 281.730,230.000 281.400 C 230.000 281.070,230.177 280.800,230.392 280.800 C 230.608 280.800,230.898 280.350,231.036 279.800 C 231.174 279.250,231.439 278.800,231.625 278.800 C 231.811 278.800,232.090 278.130,232.243 277.310 C 232.397 276.491,232.765 275.578,233.061 275.281 C 233.358 274.985,233.600 274.498,233.600 274.198 C 233.600 273.899,233.960 273.540,234.400 273.400 C 234.840 273.260,235.200 272.978,235.200 272.773 C 235.200 272.568,235.415 272.400,235.677 272.400 C 236.312 272.400,239.200 269.279,239.200 268.593 C 239.200 268.297,239.538 267.947,239.951 267.816 C 240.451 267.657,240.786 267.047,240.955 265.989 C 241.095 265.115,241.387 264.400,241.605 264.400 C 241.822 264.400,242.000 264.144,242.000 263.831 C 242.000 263.518,242.540 262.722,243.200 262.062 C 243.860 261.402,244.400 260.668,244.400 260.431 C 244.400 260.194,244.594 260.000,244.832 260.000 C 245.573 260.000,248.745 256.558,249.023 255.452 C 249.168 254.874,249.447 254.400,249.643 254.400 C 249.840 254.400,250.000 254.130,250.000 253.800 C 250.000 253.470,250.177 253.200,250.392 253.200 C 250.608 253.200,250.898 252.750,251.036 252.200 C 251.174 251.650,251.428 251.200,251.600 251.200 C 251.772 251.200,252.026 250.750,252.164 250.200 C 252.302 249.650,252.578 249.200,252.776 249.200 C 252.974 249.200,253.253 248.668,253.396 248.018 C 253.542 247.355,253.995 246.729,254.428 246.591 C 254.853 246.456,255.200 245.998,255.200 245.573 C 255.200 245.148,255.401 244.800,255.647 244.800 C 256.178 244.800,259.200 241.853,259.200 241.335 C 259.200 241.138,259.553 240.722,259.985 240.411 C 260.417 240.099,260.881 239.340,261.017 238.722 C 261.153 238.105,261.415 237.600,261.600 237.600 C 261.785 237.600,262.061 237.033,262.213 236.339 C 262.453 235.247,263.078 234.475,265.031 232.855 C 265.268 232.659,265.881 232.365,266.393 232.202 C 267.206 231.944,267.945 231.278,269.594 229.317 C 269.817 229.051,270.000 228.646,270.000 228.417 C 270.000 228.188,270.178 228.000,270.395 228.000 C 270.613 228.000,270.904 227.291,271.042 226.425 C 271.181 225.558,271.543 224.754,271.847 224.637 C 272.151 224.521,272.400 224.149,272.400 223.813 C 272.400 223.476,272.577 223.200,272.792 223.200 C 273.008 223.200,273.296 222.756,273.432 222.214 C 273.568 221.672,274.012 221.123,274.419 220.994 C 274.826 220.865,275.270 220.408,275.406 219.980 C 275.543 219.551,275.898 219.200,276.196 219.200 C 276.914 219.200,279.200 216.894,279.200 216.169 C 279.200 215.856,279.380 215.600,279.600 215.600 C 279.820 215.600,280.000 215.396,280.000 215.146 C 280.000 214.896,280.429 214.294,280.953 213.808 C 281.477 213.322,282.030 212.537,282.180 212.062 C 282.331 211.588,282.602 211.200,282.784 211.200 C 282.965 211.200,283.226 210.750,283.364 210.200 C 283.502 209.650,283.792 209.200,284.008 209.200 C 284.223 209.200,284.400 208.945,284.400 208.633 C 284.400 208.322,284.625 207.991,284.900 207.898 C 285.565 207.675,286.800 208.011,286.800 208.415 C 286.800 208.592,287.340 208.855,288.000 209.000 C 288.660 209.145,289.200 209.429,289.200 209.632 C 289.200 209.834,289.650 210.000,290.200 210.000 C 290.750 210.000,291.200 210.159,291.200 210.354 C 291.200 210.549,292.190 210.832,293.400 210.983 C 294.610 211.134,295.600 211.410,295.600 211.597 C 295.600 211.784,296.140 212.055,296.800 212.200 C 297.460 212.345,298.000 212.617,298.000 212.805 C 298.000 212.993,298.405 213.273,298.900 213.429 C 300.000 213.774,302.400 216.242,302.400 217.028 C 302.400 217.343,302.656 217.600,302.969 217.600 C 303.282 217.600,304.078 218.140,304.738 218.800 C 305.398 219.460,306.063 220.000,306.216 220.000 C 306.369 220.000,307.192 220.720,308.046 221.600 C 308.900 222.480,309.799 223.200,310.043 223.200 C 311.530 223.200,313.042 226.179,311.798 226.656 C 311.467 226.783,311.083 227.588,310.947 228.444 C 310.810 229.300,310.541 230.000,310.349 230.000 C 310.157 230.000,310.000 230.270,310.000 230.600 C 310.000 230.930,309.841 231.200,309.646 231.200 C 309.451 231.200,309.168 232.190,309.017 233.400 C 308.866 234.610,308.595 235.600,308.415 235.600 C 308.234 235.600,307.974 236.050,307.836 236.600 C 307.698 237.150,307.408 237.600,307.192 237.600 C 306.977 237.600,306.800 237.806,306.800 238.057 C 306.800 238.532,304.604 240.800,304.144 240.800 C 303.620 240.800,301.291 243.482,300.992 244.429 C 300.824 244.963,300.363 245.681,299.970 246.024 C 299.576 246.367,299.132 247.132,298.983 247.724 C 298.835 248.316,298.567 248.800,298.388 248.800 C 298.210 248.800,297.945 249.340,297.800 250.000 C 297.655 250.660,297.374 251.200,297.176 251.200 C 296.978 251.200,296.702 251.650,296.564 252.200 C 296.426 252.750,296.153 253.200,295.957 253.200 C 295.760 253.200,295.600 253.406,295.600 253.657 C 295.600 254.123,293.409 256.400,292.960 256.400 C 292.542 256.400,290.814 258.175,290.807 258.612 C 290.803 258.838,290.435 259.286,289.989 259.608 C 289.538 259.933,289.072 260.858,288.938 261.696 C 288.806 262.523,288.549 263.200,288.367 263.200 C 288.185 263.200,287.915 263.847,287.766 264.638 C 287.499 266.061,285.235 268.800,284.325 268.800 C 283.717 268.800,280.800 272.000,280.800 272.667 C 280.800 272.960,280.620 273.200,280.400 273.200 C 280.180 273.200,280.000 273.470,280.000 273.800 C 280.000 274.130,279.834 274.400,279.632 274.400 C 279.429 274.400,279.145 274.940,279.000 275.600 C 278.855 276.260,278.571 276.800,278.368 276.800 C 278.166 276.800,278.000 277.072,278.000 277.404 C 278.000 277.736,277.640 278.316,277.200 278.693 C 276.760 279.070,276.400 279.608,276.400 279.889 C 276.400 280.517,274.964 282.000,274.356 282.000 C 273.742 282.000,272.015 283.690,272.007 284.300 C 272.003 284.575,271.823 284.800,271.608 284.800 C 271.392 284.800,271.102 285.250,270.964 285.800 C 270.826 286.350,270.553 286.800,270.357 286.800 C 270.160 286.800,270.000 287.070,270.000 287.400 C 270.000 287.730,269.823 288.000,269.608 288.000 C 269.392 288.000,269.102 288.450,268.964 289.000 C 268.826 289.550,268.567 290.000,268.388 290.000 C 268.210 290.000,267.945 290.540,267.800 291.200 C 267.655 291.860,267.394 292.400,267.221 292.400 C 267.047 292.400,266.805 293.011,266.684 293.758 C 266.445 295.235,265.326 296.800,264.511 296.800 C 263.832 296.800,260.800 299.944,260.800 300.648 C 260.800 300.952,260.620 301.200,260.400 301.200 C 260.180 301.200,260.000 301.470,260.000 301.800 C 260.000 302.130,259.822 302.400,259.605 302.400 C 259.387 302.400,259.094 303.120,258.954 304.000 C 258.813 304.880,258.555 305.600,258.381 305.600 C 258.206 305.600,257.945 306.140,257.800 306.800 C 257.655 307.460,257.383 308.000,257.195 308.000 C 257.007 308.000,256.728 308.397,256.574 308.881 C 256.254 309.891,255.442 310.800,254.859 310.800 C 254.251 310.800,252.000 313.186,252.000 313.831 C 252.000 314.144,251.834 314.400,251.632 314.400 C 251.429 314.400,251.145 314.940,251.000 315.600 C 250.855 316.260,250.571 316.800,250.368 316.800 C 250.166 316.800,250.000 317.070,250.000 317.400 C 250.000 317.730,249.823 318.000,249.608 318.000 C 249.392 318.000,249.102 318.450,248.964 319.000 C 248.826 319.550,248.572 320.000,248.400 320.000 C 248.228 320.000,247.974 320.450,247.836 321.000 C 247.698 321.550,247.408 322.000,247.192 322.000 C 246.977 322.000,246.800 322.201,246.800 322.447 C 246.800 322.692,245.720 323.960,244.400 325.264 C 243.080 326.567,242.000 327.877,242.000 328.174 C 242.000 328.471,241.730 328.818,241.400 328.945 C 241.070 329.071,240.800 329.541,240.800 329.987 C 240.800 330.434,240.620 330.800,240.400 330.800 C 240.180 330.800,240.000 331.070,240.000 331.400 C 240.000 331.730,239.834 332.000,239.632 332.000 C 239.429 332.000,239.145 332.540,239.000 333.200 C 238.855 333.860,238.590 334.400,238.412 334.400 C 238.233 334.400,237.968 334.873,237.823 335.451 C 237.510 336.699,235.728 338.578,234.485 338.973 C 233.998 339.128,233.600 339.408,233.600 339.596 C 233.600 339.784,233.069 340.469,232.420 341.118 C 231.772 341.767,231.122 342.771,230.977 343.349 C 230.832 343.927,230.553 344.400,230.357 344.400 C 230.160 344.400,230.000 344.670,230.000 345.000 C 230.000 345.330,229.840 345.600,229.643 345.600 C 229.447 345.600,229.174 346.050,229.036 346.600 C 228.898 347.150,228.608 347.600,228.392 347.600 C 228.177 347.600,228.000 347.876,228.000 348.213 C 228.000 348.549,227.730 348.929,227.400 349.055 C 227.070 349.182,226.800 349.586,226.800 349.954 C 226.800 350.622,225.490 352.000,224.854 352.000 C 224.272 352.000,222.506 353.836,222.220 354.738 C 222.069 355.212,221.793 355.600,221.605 355.600 C 221.417 355.600,221.145 356.140,221.000 356.800 C 220.855 357.460,220.571 358.000,220.368 358.000 C 220.166 358.000,220.000 358.270,220.000 358.600 C 220.000 358.930,219.823 359.200,219.608 359.200 C 219.392 359.200,219.102 359.650,218.964 360.200 C 218.826 360.750,218.567 361.200,218.388 361.200 C 218.210 361.200,217.945 361.740,217.800 362.400 C 217.655 363.060,217.371 363.600,217.168 363.600 C 216.966 363.600,216.800 363.857,216.800 364.172 C 216.800 364.958,214.400 367.426,213.300 367.771 C 212.805 367.927,212.400 368.284,212.400 368.566 C 212.400 368.847,212.040 369.493,211.600 370.000 C 211.160 370.507,210.800 371.165,210.800 371.461 C 210.800 371.758,210.620 372.000,210.400 372.000 C 210.180 372.000,210.000 372.270,210.000 372.600 C 210.000 372.930,209.834 373.200,209.632 373.200 C 209.429 373.200,209.145 373.740,209.000 374.400 C 208.855 375.060,208.571 375.600,208.368 375.600 C 208.166 375.600,208.000 375.848,208.000 376.152 C 208.000 376.906,204.945 380.000,204.200 380.000 C 203.870 380.000,203.600 380.180,203.600 380.400 C 203.600 380.620,203.324 380.800,202.987 380.800 C 202.651 380.800,202.271 381.070,202.145 381.400 C 202.018 381.730,201.660 382.000,201.349 382.000 C 201.037 382.000,199.821 382.961,198.647 384.136 C 197.472 385.311,196.223 386.382,195.871 386.518 C 195.128 386.802,192.636 384.573,192.215 383.248 C 192.067 382.782,191.716 382.400,191.434 382.400 C 191.153 382.400,190.507 382.040,190.000 381.600 C 189.493 381.160,188.835 380.800,188.539 380.800 C 188.242 380.800,188.000 380.620,188.000 380.400 C 188.000 380.180,187.730 380.000,187.400 380.000 C 187.070 380.000,186.800 379.820,186.800 379.600 C 186.800 379.380,186.453 379.200,186.029 379.200 C 185.604 379.200,184.987 378.930,184.657 378.600 C 184.327 378.270,183.878 378.000,183.659 378.000 C 183.441 378.000,182.729 377.439,182.078 376.752 C 178.506 372.985,176.506 371.242,175.452 370.977 C 174.874 370.832,174.400 370.553,174.400 370.357 C 174.400 370.160,174.130 370.000,173.800 370.000 C 173.470 370.000,173.200 369.834,173.200 369.632 C 173.200 369.429,172.660 369.145,172.000 369.000 C 171.340 368.855,170.800 368.583,170.800 368.395 C 170.800 368.207,170.395 367.927,169.900 367.771 C 169.405 367.616,168.604 367.064,168.119 366.544 C 167.635 366.025,167.050 365.600,166.819 365.600 C 166.589 365.600,166.400 365.330,166.400 365.000 C 166.400 364.670,166.130 364.400,165.800 364.400 C 165.470 364.400,165.200 364.130,165.200 363.800 C 165.200 363.470,164.885 363.192,164.500 363.183 C 164.115 363.174,163.358 362.634,162.819 361.983 C 162.279 361.332,161.604 360.800,161.319 360.800 C 161.033 360.800,160.800 360.620,160.800 360.400 C 160.800 360.180,160.440 360.000,160.000 360.000 C 159.560 360.000,159.200 359.840,159.200 359.643 C 159.200 359.447,158.707 359.163,158.104 359.012 C 157.501 358.860,156.887 358.541,156.739 358.302 C 156.410 357.768,152.652 357.860,152.467 358.406 C 152.393 358.623,152.065 358.800,151.738 358.800 C 151.225 358.800,151.230 358.887,151.771 359.429 C 152.117 359.774,152.400 360.224,152.400 360.429 C 152.400 360.633,152.642 360.800,152.939 360.800 C 153.235 360.800,153.893 361.160,154.400 361.600 C 154.907 362.040,155.565 362.400,155.861 362.400 C 156.158 362.400,156.400 362.580,156.400 362.800 C 156.400 363.020,156.676 363.200,157.013 363.200 C 157.349 363.200,157.729 363.470,157.855 363.800 C 157.982 364.130,158.309 364.400,158.582 364.400 C 159.203 364.400,160.800 365.759,160.800 366.289 C 160.800 367.075,162.804 368.821,163.976 369.055 C 164.636 369.187,165.280 369.621,165.406 370.020 C 165.533 370.418,166.168 370.861,166.818 371.004 C 167.468 371.147,168.000 371.426,168.000 371.624 C 168.000 371.822,168.450 372.098,169.000 372.236 C 169.550 372.374,170.000 372.645,170.000 372.839 C 170.000 373.032,170.720 373.306,171.600 373.446 C 172.480 373.587,173.200 373.845,173.200 374.019 C 173.200 374.194,173.740 374.455,174.400 374.600 C 175.225 374.781,175.600 375.103,175.600 375.632 C 175.600 376.054,175.786 376.400,176.013 376.400 C 176.239 376.400,176.544 376.715,176.689 377.100 C 176.835 377.485,177.459 378.309,178.077 378.931 C 178.695 379.553,179.200 380.208,179.200 380.386 C 179.200 380.565,179.817 380.827,180.571 380.968 C 181.325 381.110,182.004 381.411,182.079 381.638 C 182.155 381.866,182.978 382.154,183.909 382.278 C 184.839 382.403,185.600 382.650,185.600 382.826 C 185.600 383.002,185.978 383.266,186.439 383.413 C 187.542 383.762,188.800 385.041,188.800 385.813 C 188.800 386.149,189.070 386.529,189.400 386.655 C 189.730 386.782,190.000 387.044,190.000 387.238 C 190.000 387.733,191.302 389.200,191.742 389.200 C 191.942 389.200,192.458 389.605,192.887 390.100 C 193.757 391.102,197.605 391.385,197.910 390.469 C 197.996 390.211,198.322 390.000,198.633 390.000 C 198.945 390.000,199.200 389.832,199.200 389.627 C 199.200 389.422,199.592 389.130,200.071 388.978 C 201.262 388.600,203.600 386.269,203.600 385.460 C 203.600 385.063,203.924 384.800,204.413 384.800 C 204.859 384.800,205.322 384.546,205.441 384.236 C 205.561 383.926,206.118 383.557,206.680 383.416 C 207.777 383.140,210.000 381.141,210.000 380.431 C 210.000 380.194,210.177 380.000,210.392 380.000 C 210.608 380.000,210.898 379.550,211.036 379.000 C 211.174 378.450,211.431 378.000,211.608 378.000 C 211.785 378.000,212.051 377.280,212.200 376.400 C 212.349 375.520,212.634 374.800,212.835 374.800 C 213.036 374.800,213.200 374.524,213.200 374.187 C 213.200 373.851,213.470 373.471,213.800 373.345 C 214.130 373.218,214.400 372.941,214.400 372.729 C 214.400 372.204,215.440 371.200,215.984 371.200 C 216.227 371.200,216.529 370.930,216.655 370.600 C 216.782 370.270,217.044 370.000,217.238 370.000 C 217.766 370.000,219.200 368.684,219.200 368.199 C 219.200 367.967,219.560 367.517,220.000 367.200 C 220.440 366.883,220.800 366.207,220.800 365.699 C 220.800 365.191,221.059 364.676,221.376 364.554 C 221.692 364.433,222.066 363.808,222.207 363.167 C 222.348 362.525,222.610 362.000,222.788 362.000 C 222.967 362.000,223.226 361.550,223.364 361.000 C 223.502 360.450,223.792 360.000,224.008 360.000 C 224.223 360.000,224.400 359.730,224.400 359.400 C 224.400 359.070,224.580 358.800,224.800 358.800 C 225.020 358.800,225.200 358.530,225.200 358.200 C 225.200 357.870,225.380 357.600,225.600 357.600 C 226.213 357.600,227.600 356.075,227.600 355.400 C 227.600 355.070,227.876 354.800,228.213 354.800 C 228.549 354.800,228.942 354.485,229.085 354.100 C 229.228 353.715,229.762 353.034,230.272 352.587 C 230.783 352.140,231.200 351.555,231.200 351.287 C 231.200 351.019,231.364 350.800,231.565 350.800 C 231.766 350.800,232.051 350.080,232.200 349.200 C 232.349 348.320,232.611 347.600,232.783 347.600 C 232.955 347.600,233.200 346.954,233.328 346.164 C 233.563 344.718,234.861 343.200,235.861 343.200 C 236.158 343.200,236.400 343.014,236.400 342.787 C 236.400 342.561,236.715 342.256,237.100 342.111 C 237.859 341.824,240.000 339.824,240.000 339.402 C 240.000 339.260,240.270 338.873,240.600 338.543 C 240.930 338.213,241.200 337.596,241.200 337.171 C 241.200 336.747,241.360 336.400,241.555 336.400 C 241.751 336.400,242.029 335.770,242.174 335.000 C 242.318 334.230,242.608 333.600,242.818 333.600 C 243.028 333.600,243.200 333.404,243.200 333.164 C 243.200 332.685,246.652 329.200,247.126 329.200 C 247.538 329.200,248.800 327.679,248.800 327.183 C 248.800 326.958,249.070 326.671,249.400 326.545 C 249.730 326.418,250.000 325.993,250.000 325.600 C 250.000 325.207,250.270 324.782,250.600 324.655 C 250.930 324.529,251.200 324.149,251.200 323.813 C 251.200 323.476,251.366 323.200,251.568 323.200 C 251.771 323.200,252.055 322.660,252.200 322.000 C 252.345 321.340,252.609 320.800,252.787 320.800 C 252.965 320.800,253.229 320.170,253.374 319.400 C 253.518 318.630,253.808 318.000,254.018 318.000 C 254.228 318.000,254.400 317.730,254.400 317.400 C 254.400 317.070,254.580 316.800,254.800 316.800 C 255.020 316.800,255.200 316.530,255.200 316.200 C 255.200 315.870,255.470 315.600,255.800 315.600 C 256.130 315.600,256.400 315.780,256.400 316.000 C 256.400 316.220,256.607 316.400,256.860 316.400 C 257.428 316.400,260.000 319.004,260.000 319.580 C 260.000 319.811,260.180 320.000,260.400 320.000 C 260.620 320.000,260.800 320.270,260.800 320.600 C 260.800 320.930,261.043 321.200,261.340 321.200 C 261.736 321.200,261.950 320.210,262.143 317.500 C 262.287 315.465,262.574 313.743,262.781 313.674 C 262.988 313.605,263.280 312.300,263.430 310.774 C 263.580 309.248,263.860 308.000,264.052 308.000 C 264.243 308.000,264.400 307.370,264.400 306.600 C 264.400 305.109,265.317 303.871,266.761 303.413 C 267.222 303.266,267.600 302.978,267.600 302.773 C 267.600 302.568,267.876 302.400,268.213 302.400 C 268.549 302.400,268.942 302.085,269.085 301.700 C 269.228 301.315,269.681 300.701,270.091 300.336 C 270.502 299.971,270.943 299.026,271.072 298.236 C 271.200 297.446,271.438 296.800,271.601 296.800 C 271.764 296.800,272.010 296.100,272.147 295.244 C 272.283 294.388,272.667 293.583,272.998 293.456 C 273.329 293.329,273.600 292.949,273.600 292.613 C 273.600 292.276,273.780 292.000,274.000 292.000 C 274.220 292.000,274.400 291.807,274.400 291.571 C 274.400 291.121,275.379 290.000,275.772 290.000 C 276.198 290.000,279.200 286.707,279.200 286.240 C 279.200 285.985,279.560 285.517,280.000 285.200 C 280.440 284.883,280.800 284.387,280.800 284.099 C 280.800 283.811,281.059 283.476,281.376 283.354 C 281.692 283.233,282.066 282.608,282.207 281.967 C 282.348 281.325,282.613 280.800,282.797 280.800 C 282.980 280.800,283.251 280.080,283.400 279.200 C 283.549 278.320,283.834 277.600,284.035 277.600 C 284.236 277.600,284.400 277.242,284.400 276.805 C 284.400 275.870,285.555 274.400,286.289 274.400 C 286.570 274.400,286.800 274.220,286.800 274.000 C 286.800 273.780,287.040 273.600,287.333 273.600 C 288.125 273.600,291.200 270.627,291.200 269.861 C 291.200 269.498,291.369 269.200,291.575 269.200 C 291.782 269.200,292.072 268.390,292.221 267.400 C 292.369 266.410,292.631 265.600,292.802 265.600 C 292.973 265.600,293.226 265.150,293.364 264.600 C 293.502 264.050,293.792 263.600,294.008 263.600 C 294.223 263.600,294.400 263.333,294.400 263.008 C 294.400 262.682,294.850 262.302,295.400 262.164 C 295.950 262.026,296.400 261.753,296.400 261.557 C 296.400 261.360,296.596 261.200,296.836 261.200 C 297.753 261.200,300.866 257.501,301.086 256.151 C 301.206 255.408,301.461 254.800,301.652 254.800 C 301.844 254.800,302.000 254.524,302.000 254.187 C 302.000 253.851,302.259 253.476,302.576 253.354 C 302.892 253.233,303.266 252.608,303.407 251.967 C 303.548 251.325,303.817 250.800,304.005 250.800 C 304.193 250.800,304.465 250.426,304.610 249.970 C 304.754 249.513,306.173 247.839,307.763 246.250 C 309.353 244.660,310.770 243.054,310.914 242.680 C 311.057 242.306,311.346 242.000,311.556 242.000 C 311.765 242.000,312.063 241.415,312.218 240.700 C 312.374 239.985,312.663 239.296,312.861 239.170 C 313.059 239.043,313.331 238.008,313.466 236.870 C 313.601 235.731,313.866 234.800,314.056 234.800 C 314.245 234.800,314.400 234.632,314.400 234.427 C 314.400 234.222,315.480 232.965,316.800 231.632 C 318.120 230.300,319.200 228.938,319.200 228.605 C 319.200 228.272,319.380 228.000,319.600 228.000 C 319.820 228.000,320.000 227.730,320.000 227.400 C 320.000 227.070,320.180 226.800,320.400 226.800 C 320.620 226.800,320.800 226.260,320.800 225.600 C 320.800 224.940,320.620 224.400,320.400 224.400 C 320.180 224.400,320.000 224.206,320.000 223.968 C 320.000 223.406,316.594 220.000,316.032 220.000 C 315.794 220.000,315.600 219.820,315.600 219.600 C 315.600 219.380,315.339 219.200,315.019 219.200 C 314.700 219.200,313.827 218.570,313.079 217.800 C 312.331 217.030,311.590 216.400,311.431 216.400 C 311.077 216.400,310.000 215.351,310.000 215.006 C 310.000 214.459,306.068 210.800,305.480 210.800 C 305.136 210.800,304.744 210.453,304.609 210.028 C 304.471 209.595,303.845 209.142,303.182 208.996 C 302.532 208.853,302.000 208.574,302.000 208.376 C 302.000 208.178,301.550 207.902,301.000 207.764 C 300.450 207.626,300.000 207.373,300.000 207.202 C 300.000 207.031,299.190 206.769,298.200 206.621 C 297.210 206.472,296.400 206.182,296.400 205.975 C 296.400 205.769,296.212 205.600,295.983 205.600 C 295.505 205.600,294.900 205.127,293.041 203.300 C 292.314 202.585,291.512 202.000,291.260 202.000 C 291.007 202.000,290.800 201.840,290.800 201.645 C 290.800 201.449,290.170 201.171,289.400 201.026 C 288.630 200.882,288.000 200.592,288.000 200.382 C 288.000 200.172,287.475 200.000,286.833 200.000 C 286.192 200.000,285.576 199.775,285.465 199.500 C 285.304 199.100,285.257 199.100,285.232 199.500 \\\"\\r\\n                    stroke=\\\"none\\\"\\r\\n                    fill=\\\"#e1e471\\\"\\r\\n                    fill-rule=\\\"evenodd\\\"\\r\\n                  ></path>\\r\\n                </g>\\r\\n              </svg>\\r\\n              Right Invoices</span\\r\\n            >\\r\\n          </div>\\r\\n        </div>\\r\\n        <div style=\\\"margin-bottom:5px\\\"></div>\\r\\n        <hr />\\r\\n        <div style=\\\"margin-bottom:5px\\\"></div>\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n          <div\\r\\n            fxFlex=\\\"100\\\"\\r\\n            fxFlex.md=\\\"100\\\"\\r\\n            fxFlex.lg=\\\"100\\\"\\r\\n            fxFlex.xs=\\\"100\\\"\\r\\n            fxFlex.sm=\\\"100\\\"\\r\\n          >\\r\\n            <p\\r\\n              style=\\\"font-family: arial,sans-serif;font-size: 12px;text-align: center;\\\"\\r\\n            >\\r\\n              <span>{{ companyInfo.name }},</span>\\r\\n              <span>{{ companyInfo.address.city }},</span>\\r\\n              <span>Street No : {{ companyInfo.address.street }},</span>\\r\\n              <span>{{ companyInfo.address.city }},</span>\\r\\n              <span>\\r\\n                {{ companyInfo.address.state }} -\\r\\n                {{ companyInfo.address.zipCode }}</span\\r\\n              >\\r\\n            </p>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/customerdetails/dialog.component.html\n// module id = ../../../../../src/app/components/admin/customerdetails/dialog.component.html\n// module chunks = 1","import {\r\n  Component,\r\n  Inject,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ViewChild,\r\n  ElementRef\r\n} from \"@angular/core\";\r\nimport { MdDialog, MdDialogRef, MD_DIALOG_DATA } from \"@angular/material\";\r\nimport { RestService } from \"../../../common/rest.service\";\r\nimport { AppService } from \"../../../shared/service/app.service\";\r\nimport { Storage } from \"../../../shared/utils/storage\";\r\n\r\nimport {\r\n  TdDataTableService,\r\n  TdDataTableSortingOrder,\r\n  ITdDataTableSortChangeEvent,\r\n  ITdDataTableColumn\r\n} from \"@covalent/core\";\r\nimport { Sales } from \"app/entities/sales.entity\";\r\nimport { DataSource } from \"@angular/cdk\";\r\n@Component({\r\n  selector: \"app-dialog\",\r\n  templateUrl: \"./dialog.component.html\"\r\n})\r\nexport class DialogComponent {\r\n  id: any;\r\n  sales: any;\r\n  // akhdfbv:\"\"jhdfb\";\r\n  dataSource: any;\r\n  companyInfo: any;\r\n  bankDetails: any;\r\n  stockItemDataSource: any[];\r\n  servicesDataSource: any;\r\n  selectedItem: any;\r\n  displayedColumns: any[] = [\r\n    \"Item\",\r\n    \"HSN\",\r\n    \"Qty\",\r\n    \"Rate\",\r\n    \"Discount\",\r\n    \"Taxable Value\",\r\n    \"SGST\",\r\n    \"CGST\",\r\n    \"IGST\",\r\n    \"CESS\",\r\n    \"Total\"\r\n  ];\r\n  displayedColumnsDef: any[] = [\r\n    \"stockItemId.productName\",\r\n    \"stockItemId.hsnCodeNames\",\r\n    \"quantity\",\r\n    \"unit\",\r\n    \"discountAmount\",\r\n    \"taxAmount\",\r\n    \"sgstAmount\",\r\n    \"csgstAmount\",\r\n    \"IgstAmount\",\r\n    \"cessAmount\",\r\n    \"totalAfterTax\"\r\n  ];\r\n  constructor(\r\n    private restService: RestService,\r\n    private appService: AppService,\r\n    public dialogRef: MdDialogRef<DialogComponent>,\r\n    @Inject(MD_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.companyInfo = Storage.getSessionUser().company;\r\n    console.log(this.companyInfo);\r\n    this.dataSource = Storage.getLocalItem(\"selectedItem\");\r\n    console.log(this.dataSource);\r\n    this.stockItemDataSource = this.dataSource.productItems;\r\n    console.log(this.stockItemDataSource);\r\n    this.servicesDataSource = this.dataSource.serviceItems;\r\n    console.log(\" this.stockItemDataSource \", this.stockItemDataSource);\r\n    this.bankDetails = Storage.getSessionUser().bankDetails;\r\n    console.log(\"this.bankDetails\", this.bankDetails);\r\n  }\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  ok() {\r\n    this.restService.invoiceDelete(this.id).subscribe(result => {\r\n      this.dialogRef.close();\r\n      this.appService.showMessage(\"Invoice Deleted Successfully \");\r\n    });\r\n  }\r\n\r\n  print() {\r\n    const printContent = document.getElementById(\"component1\");\r\n    const WindowPrt = window.open(\r\n      \"\",\r\n      \"\",\r\n      \"left=0,top=0,width=900,height=900,toolbar=0,scrollbars=0,status=0\"\r\n    );\r\n    WindowPrt.document.write(printContent.innerHTML);\r\n    WindowPrt.document.close();\r\n    WindowPrt.focus();\r\n    WindowPrt.print();\r\n    WindowPrt.close();\r\n  }\r\n  cancel() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/customerdetails/dialog.component.ts","module.exports = \"<div class=\\\"row\\\">\\r\\n  <md-input-container class=\\\"col-xs-6\\\">\\r\\n    <input mdInput #filter placeholder=\\\"Filter\\\" />\\r\\n  </md-input-container>\\r\\n  <div class=\\\"col-xs-6 padding-height\\\">\\r\\n    <!-- <md-icon color=\\\"accent\\\">print</md-icon>\\r\\n        <md-icon color=\\\"accent\\\">settings</md-icon> -->\\r\\n  </div>\\r\\n</div>\\r\\n<md-table #table [dataSource]=\\\"dataSource\\\" mdSort>\\r\\n  <!--- Note that these columns can be defined in any order.\\r\\n          The actual rendered columns are set as a property on the row definition\\\" -->\\r\\n\\r\\n  <!-- ID Column -->\\r\\n  <ng-container cdkColumnDef=\\\"date\\\">\\r\\n    <md-header-cell *cdkHeaderCellDef md-sort-header> Date </md-header-cell>\\r\\n    <md-cell *cdkCellDef=\\\"let row\\\" (click)=\\\"view(row)\\\">\\r\\n      {{ row.invoiceDate | date }}</md-cell\\r\\n    >\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Progress Column -->\\r\\n  <ng-container cdkColumnDef=\\\"no\\\">\\r\\n    <md-header-cell *cdkHeaderCellDef> Invoice No. </md-header-cell>\\r\\n    <md-cell *cdkCellDef=\\\"let row\\\" (click)=\\\"view(row)\\\">\\r\\n      {{ row.invoiceNumber }}\\r\\n    </md-cell>\\r\\n  </ng-container>\\r\\n\\r\\n  <ng-container cdkColumnDef=\\\"Amount\\\">\\r\\n    <md-header-cell *cdkHeaderCellDef>Amount</md-header-cell>\\r\\n    <md-cell *cdkCellDef=\\\"let row\\\" (click)=\\\"view(row)\\\">\\r\\n      {{ row.total }}\\r\\n    </md-cell>\\r\\n  </ng-container>\\r\\n  <ng-container cdkColumnDef=\\\"status\\\">\\r\\n    <md-header-cell *cdkHeaderCellDef>Status </md-header-cell>\\r\\n    <md-cell *cdkCellDef=\\\"let row\\\" (click)=\\\"view(row)\\\">\\r\\n      {{ row.status }}\\r\\n    </md-cell>\\r\\n  </ng-container>\\r\\n  <ng-container cdkColumnDef=\\\"receivedAmount\\\">\\r\\n    <md-header-cell *cdkHeaderCellDef>Received Amount</md-header-cell>\\r\\n    <md-cell *cdkCellDef=\\\"let row\\\" (click)=\\\"view(row)\\\">\\r\\n      {{ row.paidAmount }}\\r\\n    </md-cell>\\r\\n  </ng-container>\\r\\n  <ng-container cdkColumnDef=\\\"receivables\\\">\\r\\n    <md-header-cell *cdkHeaderCellDef>Receivables</md-header-cell>\\r\\n    <md-cell *cdkCellDef=\\\"let row\\\" (click)=\\\"view(row)\\\">\\r\\n      {{ row.dueAmount }}\\r\\n    </md-cell>\\r\\n  </ng-container>\\r\\n  <ng-container cdkColumnDef=\\\"dueDate\\\">\\r\\n    <md-header-cell *cdkHeaderCellDef>Due Date</md-header-cell>\\r\\n    <md-cell *cdkCellDef=\\\"let row\\\" (click)=\\\"view(row)\\\">\\r\\n      {{ row.dueDate | date }}\\r\\n    </md-cell>\\r\\n  </ng-container>\\r\\n  <ng-container cdkColumnDef=\\\"overdueReceivables\\\">\\r\\n    <md-header-cell *cdkHeaderCellDef>Overdue Receivables</md-header-cell>\\r\\n    <md-cell *cdkCellDef=\\\"let row\\\" (click)=\\\"view(row)\\\">\\r\\n      {{ row.overdueReceivables }}\\r\\n    </md-cell>\\r\\n  </ng-container>\\r\\n  <ng-container cdkColumnDef=\\\"overdueTime\\\">\\r\\n    <md-header-cell *cdkHeaderCellDef>Overdue Time</md-header-cell>\\r\\n    <md-cell *cdkCellDef=\\\"let row\\\" (click)=\\\"view(row)\\\">\\r\\n      {{ row.overdueTime | date }}\\r\\n    </md-cell>\\r\\n  </ng-container>\\r\\n  <!-- Color Column -->\\r\\n  <ng-container cdkColumnDef=\\\"action\\\">\\r\\n    <md-header-cell *cdkHeaderCellDef fxLayoutAlign=\\\"end center\\\"\\r\\n      >Action</md-header-cell\\r\\n    >\\r\\n    <md-cell\\r\\n      *cdkCellDef=\\\"let row\\\"\\r\\n      flex-end\\r\\n      (click)=\\\"onSelectedItem(row)\\\"\\r\\n      [mdMenuTriggerFor]=\\\"sendMenu\\\"\\r\\n      fxLayoutAlign=\\\"end center\\\"\\r\\n    >\\r\\n      <md-icon color=\\\"accent\\\">more_vert</md-icon>\\r\\n    </md-cell>\\r\\n  </ng-container>\\r\\n\\r\\n  <md-header-row *cdkHeaderRowDef=\\\"displayedColumns\\\"></md-header-row>\\r\\n  <md-row *cdkRowDef=\\\"let row; columns: displayedColumns\\\"></md-row>\\r\\n</md-table>\\r\\n<md-paginator\\r\\n  #paginator\\r\\n  style=\\\"width: 100%;margin-bottom: 50px\\\"\\r\\n  [length]=\\\"dataSource.data.length\\\"\\r\\n  [pageIndex]=\\\"0\\\"\\r\\n  [pageSize]=\\\"10\\\"\\r\\n  [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"\\r\\n>\\r\\n</md-paginator>\\r\\n<md-menu #sendMenu=\\\"mdMenu\\\" style=\\\"padding: 1rem;\\\">\\r\\n  <button md-menu-item (click)=\\\"print()\\\">Print</button>\\r\\n  <button md-menu-item (click)=\\\"open()\\\">Open</button>\\r\\n  <!-- <button md-menu-item (click)=\\\"download()\\\">Download</button> -->\\r\\n  <!-- <button md-menu-item (click)=\\\"delete()\\\">Delete</button> -->\\r\\n</md-menu>\\r\\n<!-- <md-menu #sendMenu=\\\"mdMenu\\\" style=\\\"padding: 1rem;\\\">\\r\\n    <button md-menu-item (click)=\\\"edit()\\\"><md-icon>edit</md-icon></button>\\r\\n</md-menu> -->\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/customerdetails/transcation.component.html\n// module id = ../../../../../src/app/components/admin/customerdetails/transcation.component.html\n// module chunks = 1","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ViewChild,\r\n  ElementRef,\r\n  OnChanges\r\n} from \"@angular/core\";\r\n\r\nimport { AppService } from \"../../../shared/service/app.service\";\r\nimport { AnimationService } from \"../../../shared/service/animation.service\";\r\nimport { RestService } from \"./../../../common/rest.service\";\r\nimport { Prop } from \"./../../../common/props\";\r\nimport { InvoiceFormGroup } from \"../../../forms/invoice.form\";\r\nimport { CustomManagement } from \"../../../entities/custommanagement\";\r\nimport { CustommanagementFormGroup } from \"../../../forms/custommanagement.form\";\r\nimport { TranscationDataSource } from \"./transcation.datasource\";\r\nimport { Storage } from \"../../../shared/utils/storage\";\r\nimport { DataSource } from \"@angular/cdk\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport \"rxjs/add/observable/fromEvent\";\r\nimport \"rxjs/add/operator/debounceTime\";\r\nimport \"rxjs/add/operator/distinctUntilChanged\";\r\nimport { MdSort } from \"@angular/material\";\r\nimport { MdPaginator, MdDialog } from \"@angular/material\";\r\nimport { DialogComponent } from \"./dialog.component\";\r\n@Component({\r\n  selector: \"app-transcation\",\r\n  templateUrl: \"./transcation.component.html\"\r\n})\r\nexport class TranscationComponent implements OnInit, OnChanges {\r\n  customerManagement: CustomManagement;\r\n  selectedItemForView: any = null;\r\n  dataSource: TranscationDataSource = null;\r\n  displayedColumns: any[] = [\r\n    \"date\",\r\n    \"no\",\r\n    \"Amount\",\r\n    \"status\",\r\n    \"receivedAmount\",\r\n    \"receivables\",\r\n    \"dueDate\",\r\n    \"overdueReceivables\",\r\n    \"overdueTime\",\r\n    \"action\"\r\n  ];\r\n  selectedItem: any;\r\n  serachObj: any = {};\r\n  overDueTime: any;\r\n  @ViewChild(\"filter\") filter: ElementRef;\r\n  @ViewChild(MdSort) sort: MdSort;\r\n  @ViewChild(MdPaginator) paginator: MdPaginator;\r\n\r\n  @Input() customerId: string;\r\n  constructor(\r\n    private appService: AppService,\r\n    private restService: RestService,\r\n    public dialog: MdDialog\r\n  ) {\r\n    //this.dataSource = new TranscationDataSource(this.restService, this.searchObject);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.serachObj.period = \"year\";\r\n    this.dataSource = new TranscationDataSource(\r\n      this.restService,\r\n      this.serachObj,\r\n      this.sort,\r\n      this.paginator\r\n    );\r\n    Observable.fromEvent(this.filter.nativeElement, \"keyup\")\r\n      .debounceTime(100)\r\n      .distinctUntilChanged()\r\n      .subscribe(() => {\r\n        if (!this.dataSource) {\r\n          return;\r\n        }\r\n        this.dataSource.filter = this.filter.nativeElement.value;\r\n      });\r\n    this.customerId = this.appService.getParam(\"id\");\r\n\r\n    console.log(this.customerId);\r\n    console.log(\"transaction\");\r\n    this.transactionList();\r\n  }\r\n\r\n  ngOnChanges(changes: any) {\r\n    console.log(changes.customerId);\r\n    // if(changes.customerId && changes.customerId.currentValue ) {\r\n    //       console.log(\"customer Id: \"+ this.customerId);\r\n    //      this.searchObject = {\"customerId\": this.customerId}\r\n    //      this.dataSource = new TranscationDataSource(this.restService, this.searchObject);\r\n    // }\r\n  }\r\n  searchObject: any = { customerId: this.customerId };\r\n  dataList: any[] = [];\r\n\r\n  transactionList() {\r\n    this.searchObject = { customerId: this.customerId };\r\n    this.dataSource = new TranscationDataSource(\r\n      this.restService,\r\n      this.searchObject,\r\n      this.sort,\r\n      this.paginator\r\n    );\r\n  }\r\n  onSelectedItem(item: any) {\r\n    this.selectedItem = item;\r\n    console.log(this.selectedItem);\r\n  }\r\n  print() {\r\n    this.restService.invoicePrint(this.selectedItem.id);\r\n  }\r\n  open() {\r\n    this.restService.invoiceOpen(this.selectedItem.id);\r\n  }\r\n  download() {\r\n    this.restService.invoiceDownload(this.selectedItem.id);\r\n  }\r\n  delete() {\r\n    this.restService\r\n      .invoiceDelete({ id: [this.selectedItem.id] })\r\n      .subscribe(result => {\r\n        this.dataSource = new TranscationDataSource(\r\n          this.restService,\r\n          this.searchObject,\r\n          this.sort,\r\n          this.paginator\r\n        );\r\n      });\r\n  }\r\n  view(row) {\r\n    // let day = new Date().getDate();\r\n    this.selectedItem = row;\r\n    this.overDueTime = new Date().getDate();\r\n    console.log(row.overdueTime);\r\n    Storage.setLocalItem(\"selectedItem\", this.selectedItem);\r\n    setTimeout(() => {\r\n      this.opens(null);\r\n    }, 10);\r\n  }\r\n\r\n  pop() {\r\n    Storage.setLocalItem(\"selectedItem\", this.selectedItem);\r\n    setTimeout(() => {\r\n      this.opens(null);\r\n    }, 10);\r\n  }\r\n  opens(id) {\r\n    // let pageLayoutId : string = Storage.getLocalItem('pageLayoutId');\r\n    let companyInfo = Storage.getSessionUser();\r\n\r\n    let pageLayoutId = companyInfo.company.settingPayload.printLayoutId;\r\n    if (parseInt(pageLayoutId) == 1) {\r\n      const dialogRef = this.dialog.open(DialogComponent, {\r\n        // width: \"1500px\",\r\n        // height: \"850px\",\r\n        data: id\r\n      });\r\n    }\r\n  }\r\n  myFun(row) {\r\n    this.selectedItemForView = row;\r\n    this.appService.navigate(\"./admin/customer-details\", [\r\n      { id: this.selectedItemForView.id, isEditable: false }\r\n    ]);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/customerdetails/transcation.component.ts","import { Component, OnInit } from '@angular/core';\r\nimport { DataSource} from '@angular/cdk';\r\nimport { AppService } from '../../../shared/service/app.service';\r\nimport { AnimationService } from '../../../shared/service/animation.service';\r\nimport { RestService } from '../../../common/rest.service';\r\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/startWith';\r\nimport 'rxjs/add/observable/merge';\r\nimport 'rxjs/add/operator/map';\r\nimport { MdSort, MdPaginator } from '@angular/material';\r\n\r\n\r\nexport class TranscationDataSource extends DataSource<any> {\r\n   _filterChange = new BehaviorSubject('');\r\n\r\n  public get filter(): string { return this._filterChange.value; }\r\n  public set filter(filter: string) { this._filterChange.next(filter); }\r\n\r\npublic data: any[] = [];\r\n  constructor(private restService: RestService, private searchObj: any, private sort: MdSort, private paginator: MdPaginator) {\r\n    super();\r\n    this.restService.searchInvoice(this.searchObj).subscribe(results => {\r\n      if (results) {\r\n        // this.data = [];\r\n        // results.forEach(element => {\r\n        //   if(this.data.length < 10){\r\n        //     this.data.push(element);\r\n        //   }\r\n        this.data = results;\r\n          \r\n        }});\r\n        \r\n      }\r\n \r\n\r\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\r\n  connect(): any {\r\n   const displayDataChanges = [\r\n     this.restService.searchInvoice(this.searchObj),\r\n      this._filterChange,\r\n      this.sort.mdSortChange,\r\n      this.paginator.page,\r\n    ];\r\n    return Observable.merge(...displayDataChanges).map(() => {\r\n      return this.data.slice().filter((item: any) => {\r\n        if(item) {\r\n            let searchStr: string = (item.invoiceNumber +\"\"+ item.saveType +\"\"+ item.invoiceDate);\r\n            return searchStr.toLowerCase().indexOf(this.filter.toLowerCase()) != -1;\r\n        } else {\r\n          return true;\r\n        }\r\n\r\n      });\r\n    });  \r\n   // return Promise.resolve([])\r\n  }\r\n\r\n  disconnect() {}\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/customerdetails/transcation.datasource.ts","import {\r\n  Component,\r\n  Inject,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ViewChild,\r\n  ElementRef\r\n} from \"@angular/core\";\r\nimport { MdDialog, MdDialogRef, MD_DIALOG_DATA } from \"@angular/material\";\r\nimport { RestService } from \"./../../../common/rest.service\";\r\nimport { AppService } from \"../../../shared/service/app.service\";\r\n\r\nimport {\r\n  TdDataTableService,\r\n  TdDataTableSortingOrder,\r\n  ITdDataTableSortChangeEvent,\r\n  ITdDataTableColumn\r\n} from \"@covalent/core\";\r\n@Component({\r\n  selector: \"dialog-content-example-dialog\",\r\n  template:\r\n    '<h2 style=\"color:#000;\">Delete Confirmation</h2><hr style=\"background:#fff;\" /><br/><p style=\"font-size:16px;\">Are you sure you want to delete customer details?</p><br/><br/><button  md-button color=\"primary\" (click)=\"ok()\" style=\"background:#ffc107; color:#fff;\">Yes</button><button md-button color=\"primary\" (click)=\"cancel()\" style=\"float:right; background:#ffc107; color:#fff;\">No</button>'\r\n})\r\nexport class DialogContentExampleDialogCustomer {\r\n  id: any = null;\r\n  constructor(\r\n    private restService: RestService,\r\n    private appService: AppService,\r\n    public dialogRef: MdDialogRef<DialogContentExampleDialogCustomer>,\r\n    @Inject(MD_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.id = data;\r\n  }\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  ok() {\r\n    // this.restService.customerDelete( {id : [this.id]})\r\n    // .subscribe(result => {\r\n    //     this.dialogRef.close();\r\n    // //   this.dataSource = new CustomerDataSource(this.restService, {});\r\n    // });\r\n    this.restService.customerDelete(this.id).subscribe(result => {\r\n      this.dialogRef.close();\r\n      this.appService.showMessage(\"Customer Deleted Successfully \");\r\n    });\r\n  }\r\n  cancel() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/custommangement/DialogContentExampleDialogCustomer.ts","module.exports = \"<md-card>\\r\\n  <span class=\\\"title-underline\\\">Billing Address</span>\\r\\n  <form [formGroup]=\\\"myForm\\\" novalidate autocomplete=\\\"off\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n        <input\\r\\n          mdInput\\r\\n          placeholder=\\\"Address Lane\\\"\\r\\n          [formControl]=\\\"myForm.controls.custom_address_lane\\\"\\r\\n          [(ngModel)]=\\\"customManagement.billingAddress.lane\\\"\\r\\n          style=\\\"text-transform: capitalize\\\"\\r\\n        />\\r\\n        <md-hint>\\r\\n          <form-messages [control]=\\\"myForm.controls.custom_address_lane\\\">\\r\\n          </form-messages>\\r\\n        </md-hint>\\r\\n      </md-input-container>\\r\\n\\r\\n      <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n        <input\\r\\n          mdInput\\r\\n          placeholder=\\\"Street\\\"\\r\\n          [formControl]=\\\"myForm.controls.custom_address_street\\\"\\r\\n          [(ngModel)]=\\\"customManagement.billingAddress.street\\\"\\r\\n          style=\\\"text-transform: capitalize\\\"\\r\\n        />\\r\\n        <md-hint>\\r\\n          <form-messages [control]=\\\"myForm.controls.custom_address_street\\\">\\r\\n          </form-messages>\\r\\n        </md-hint>\\r\\n      </md-input-container>\\r\\n\\r\\n      <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n        <input\\r\\n          mdInput\\r\\n          placeholder=\\\"Area\\\"\\r\\n          [formControl]=\\\"myForm.controls.custom_address_area\\\"\\r\\n          [(ngModel)]=\\\"customManagement.billingAddress.area\\\"\\r\\n          style=\\\"text-transform: capitalize\\\"\\r\\n        />\\r\\n        <md-hint>\\r\\n          <form-messages [control]=\\\"myForm.controls.custom_address_area\\\">\\r\\n          </form-messages>\\r\\n        </md-hint>\\r\\n      </md-input-container>\\r\\n\\r\\n      <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n        <input\\r\\n          mdInput\\r\\n          placeholder=\\\"City\\\"\\r\\n          [formControl]=\\\"myForm.controls.custom_address_city\\\"\\r\\n          [(ngModel)]=\\\"customManagement.billingAddress.city\\\"\\r\\n          style=\\\"text-transform: capitalize\\\"\\r\\n        />\\r\\n        <md-hint>\\r\\n          <form-messages [control]=\\\"myForm.controls.custom_address_city\\\">\\r\\n          </form-messages>\\r\\n        </md-hint>\\r\\n      </md-input-container>\\r\\n\\r\\n      <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n        <input\\r\\n          mdInput\\r\\n          placeholder=\\\"Choose State\\\"\\r\\n          [formControl]=\\\"myForm.controls.custom_address_state\\\"\\r\\n          [(ngModel)]=\\\"customManagement.billingAddress.state\\\"\\r\\n          [mdAutocomplete]=\\\"address\\\"\\r\\n          (focus)=\\\"filterStates(null)\\\"\\r\\n          (keyup)=\\\"filterStates($event.target.value)\\\"\\r\\n        />\\r\\n        <md-autocomplete #address=\\\"mdAutocomplete\\\">\\r\\n          <md-option *ngFor=\\\"let option of filteredStates\\\" [value]=\\\"option.key\\\">\\r\\n            {{ option.key }}\\r\\n          </md-option>\\r\\n        </md-autocomplete>\\r\\n        <md-hint>\\r\\n          <form-messages [control]=\\\"myForm.controls.custom_address_state\\\">\\r\\n          </form-messages>\\r\\n        </md-hint>\\r\\n      </md-input-container>\\r\\n\\r\\n      <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n        <input\\r\\n          mdInput\\r\\n          placeholder=\\\"Pincode\\\"\\r\\n          [formControl]=\\\"myForm.controls.custom_address_zipCode\\\"\\r\\n          [(ngModel)]=\\\"customManagement.billingAddress.zipCode\\\"\\r\\n        />\\r\\n        <md-hint>\\r\\n          <form-messages [control]=\\\"myForm.controls.custom_address_zipCode\\\">\\r\\n          </form-messages>\\r\\n        </md-hint>\\r\\n      </md-input-container>\\r\\n    </div>\\r\\n  </form>\\r\\n  <span class=\\\"title-underline\\\">Shipping Address</span>\\r\\n  <md-checkbox\\r\\n    class=\\\"title padding-height\\\"\\r\\n    [(ngModel)]=\\\"isSameBillingAddress\\\"\\r\\n    (change)=\\\"addressChange()\\\"\\r\\n    >Same as Billing address\\r\\n  </md-checkbox>\\r\\n  <form\\r\\n    [formGroup]=\\\"myForm\\\"\\r\\n    novalidate\\r\\n    autocomplete=\\\"off\\\"\\r\\n    *ngIf=\\\"!isSameBillingAddress\\\"\\r\\n  >\\r\\n    <div class=\\\"row\\\">\\r\\n      <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n        <input\\r\\n          mdInput\\r\\n          placeholder=\\\"Address Lane\\\"\\r\\n          [formControl]=\\\"myForm.controls.custom_shippingAddress_lane\\\"\\r\\n          [(ngModel)]=\\\"customManagement.shippingAddress.lane\\\"\\r\\n        />\\r\\n        <md-hint>\\r\\n          <form-messages\\r\\n            [control]=\\\"myForm.controls.custom_shippingAddress_lane\\\"\\r\\n          >\\r\\n          </form-messages>\\r\\n        </md-hint>\\r\\n      </md-input-container>\\r\\n\\r\\n      <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n        <input\\r\\n          mdInput\\r\\n          placeholder=\\\"Street\\\"\\r\\n          [formControl]=\\\"myForm.controls.custom_shippingAddress_street\\\"\\r\\n          [(ngModel)]=\\\"customManagement.shippingAddress.street\\\"\\r\\n        />\\r\\n        <md-hint>\\r\\n          <form-messages\\r\\n            [control]=\\\"myForm.controls.custom_shippingAddress_street\\\"\\r\\n          >\\r\\n          </form-messages>\\r\\n        </md-hint>\\r\\n      </md-input-container>\\r\\n\\r\\n      <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n        <input\\r\\n          mdInput\\r\\n          placeholder=\\\"Area\\\"\\r\\n          [formControl]=\\\"myForm.controls.custom_shippingAddress_area\\\"\\r\\n          [(ngModel)]=\\\"customManagement.shippingAddress.area\\\"\\r\\n        />\\r\\n        <md-hint>\\r\\n          <form-messages\\r\\n            [control]=\\\"myForm.controls.custom_shippingAddress_area\\\"\\r\\n          >\\r\\n          </form-messages>\\r\\n        </md-hint>\\r\\n      </md-input-container>\\r\\n\\r\\n      <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n        <input\\r\\n          mdInput\\r\\n          placeholder=\\\"City\\\"\\r\\n          [formControl]=\\\"myForm.controls.custom_shippingAddress_city\\\"\\r\\n          [(ngModel)]=\\\"customManagement.shippingAddress.city\\\"\\r\\n        />\\r\\n        <md-hint>\\r\\n          <form-messages\\r\\n            [control]=\\\"myForm.controls.custom_shippingAddress_city\\\"\\r\\n          >\\r\\n          </form-messages>\\r\\n        </md-hint>\\r\\n      </md-input-container>\\r\\n\\r\\n      <!-- <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n                <input mdInput required placeholder=\\\"State\\\" [formControl]=\\\"myForm.controls.custom_shippingAddress_state \\\" [(ngModel)]=\\\"customManagement.shippingAddress.state\\\">\\r\\n                <md-hint>\\r\\n                    <form-messages [control]=\\\"myForm.controls.custom_shippingAddress_state \\\"> </form-messages>\\r\\n                </md-hint>\\r\\n            </md-input-container> -->\\r\\n\\r\\n      <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n        <input\\r\\n          mdInput\\r\\n          placeholder=\\\"Choose State\\\"\\r\\n          [formControl]=\\\"myForm.controls.custom_shippingAddress_state\\\"\\r\\n          [(ngModel)]=\\\"customManagement.shippingAddress.state\\\"\\r\\n          [mdAutocomplete]=\\\"address\\\"\\r\\n          (focus)=\\\"filterStates(null)\\\"\\r\\n          (keyup)=\\\"filterStates($event.target.value)\\\"\\r\\n        />\\r\\n        <md-autocomplete #address=\\\"mdAutocomplete\\\">\\r\\n          <md-option *ngFor=\\\"let option of filteredStates\\\" [value]=\\\"option.key\\\">\\r\\n            {{ option.key }}\\r\\n          </md-option>\\r\\n        </md-autocomplete>\\r\\n        <md-hint>\\r\\n          <form-messages\\r\\n            [control]=\\\"myForm.controls.custom_shippingAddress_state\\\"\\r\\n          >\\r\\n          </form-messages>\\r\\n        </md-hint>\\r\\n      </md-input-container>\\r\\n\\r\\n      <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n        <input\\r\\n          mdInput\\r\\n          placeholder=\\\"Pincode\\\"\\r\\n          [formControl]=\\\"myForm.controls.custom_shippingAddress_zipCode\\\"\\r\\n          [(ngModel)]=\\\"customManagement.shippingAddress.zipCode\\\"\\r\\n        />\\r\\n        <md-hint>\\r\\n          <form-messages\\r\\n            [control]=\\\"myForm.controls.custom_shippingAddress_zipCode\\\"\\r\\n          >\\r\\n          </form-messages>\\r\\n        </md-hint>\\r\\n      </md-input-container>\\r\\n    </div>\\r\\n  </form>\\r\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n    <button\\r\\n      md-raised-button\\r\\n      color=\\\"accent\\\"\\r\\n      class=\\\"padding-side\\\"\\r\\n      (click)=\\\"back()\\\"\\r\\n    >\\r\\n      Back\\r\\n    </button>\\r\\n    <button\\r\\n      md-raised-button\\r\\n      color=\\\"accent\\\"\\r\\n      [disabled]=\\\"!myForm.valid\\\"\\r\\n      (click)=\\\"next()\\\"\\r\\n    >\\r\\n      Next\\r\\n    </button>\\r\\n  </div>\\r\\n</md-card>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/custommangement/cm.address.component.html\n// module id = ../../../../../src/app/components/admin/custommangement/cm.address.component.html\n// module chunks = 1","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  Pipe,\r\n  PipeTransform,\r\n  Injectable\r\n} from \"@angular/core\";\r\nimport { AppService } from \"../../../shared/service/app.service\";\r\nimport { AnimationService } from \"../../../shared/service/animation.service\";\r\nimport { RestService } from \"./../../../common/rest.service\";\r\nimport { Prop } from \"./../../../common/props\";\r\nimport { Address } from \"./../../../entities/address.entity\";\r\nimport { Account } from \"./../../../entities/account.entity\";\r\nimport { CustomerFormGroup } from \"../../../forms/customer.form\";\r\nimport { CustomManagement } from \"../../../entities/custommanagement\";\r\n\r\n@Pipe({ name: \"jsonFilterBy\" })\r\n@Injectable()\r\n@Component({\r\n  selector: \"app-address\",\r\n  templateUrl: \"./cm.address.component.html\"\r\n})\r\nexport class CmAdressComponent implements OnInit {\r\n  // address:Address;\r\n  myForm: any = CustomerFormGroup.init();\r\n  isSameBillingAddress: boolean = true;\r\n  isEditable: string = \"true\";\r\n\r\n  @Input(\"account\")\r\n  account: Account;\r\n\r\n  @Input()\r\n  address: Address[] = [];\r\n\r\n  @Input(\"customManagement\")\r\n  customManagement: CustomManagement;\r\n  @Output(\"addressEvent\")\r\n  addressEvent = new EventEmitter<string>();\r\n  @Output(\"backEvent\")\r\n  backEvent = new EventEmitter<string>();\r\n\r\n  constructor(\r\n    private appService: AppService,\r\n    private restService: RestService\r\n  ) {\r\n    CustomerFormGroup.address(this.myForm);\r\n  }\r\n\r\n  ngOnInit() {\r\n    console.log(\"Account Address\");\r\n    this.stateLoad();\r\n\r\n    //   this.filteredOptions = this.myControl.valueChanges\r\n    //     .pipe(\r\n    //       startWith(''),\r\n    //       map(value => this._filter(value))\r\n    //     );\r\n    // }\r\n  }\r\n\r\n  next() {\r\n    if (this.isSameBillingAddress) {\r\n      this.customManagement.shippingAddress.lane = this.customManagement.billingAddress.lane;\r\n      this.customManagement.shippingAddress.street = this.customManagement.billingAddress.street;\r\n      this.customManagement.shippingAddress.area = this.customManagement.billingAddress.area;\r\n      this.customManagement.shippingAddress.city = this.customManagement.billingAddress.city;\r\n      this.customManagement.shippingAddress.state = this.customManagement.billingAddress.state;\r\n      this.customManagement.shippingAddress.zipCode = this.customManagement.billingAddress.zipCode;\r\n    }\r\n    this.addressEvent.emit();\r\n  }\r\n  back() {\r\n    this.backEvent.emit();\r\n  }\r\n\r\n  addressChange() {\r\n    if (this.isSameBillingAddress) {\r\n      CustomerFormGroup.shippingAddress(this.myForm, false);\r\n      // this.customManagement.shippingAddress.lane = this.customManagement.billingAddress.lane;\r\n      // this.customManagement.shippingAddress.street = this.customManagement.billingAddress.street;\r\n      // this.customManagement.shippingAddress.area = this.customManagement.billingAddress.area;\r\n      // this.customManagement.shippingAddress.city = this.customManagement.billingAddress.city;\r\n      // this.customManagement.shippingAddress.state = this.customManagement.billingAddress.state;\r\n      // this.customManagement.shippingAddress.zipcode = this.customManagement.billingAddress.zipcode;\r\n    } else {\r\n      CustomerFormGroup.shippingAddress(this.myForm, true);\r\n    }\r\n  }\r\n  focusOutFunction() {\r\n    let array: any = [];\r\n    this.stateList.forEach(item => {\r\n      if (this.customManagement.billingAddress.state == item[0]) {\r\n        array.push(item[0]);\r\n      }\r\n    });\r\n    console.log(array);\r\n    if (array.length == 0) {\r\n      // this.appService.showMessage('Please Select Correct State Value')\r\n      this.customManagement.billingAddress.state = null;\r\n    }\r\n  }\r\n  // cityList: any[] = [];\r\n  // cityLoad() {\r\n  //   this.restService.dataload('City')\r\n  //     .subscribe( results => {\r\n  //       this.cityList = results;\r\n  //     })\r\n  // }\r\n  filteredStates: any[] = [];\r\n  stateList: any[] = [];\r\n  stateListTemp: any[] = [];\r\n  stateLoad() {\r\n    //this.restService.dataloadFromFile()\r\n    this.restService\r\n      .dataloadFromFile(\"./assets/json/states.json\")\r\n      .subscribe(results => {\r\n        this.stateList = results[\"states\"];\r\n        console.log(this.stateList);\r\n      });\r\n  }\r\n\r\n  // filterStates(val: string) {\r\n\r\n  //   this.filteredStates = (val && val != '') ? this.stateList.filter(keyValues => keyValues[0].toLowerCase().startsWith(val.toLowerCase()))\r\n  //     : this.stateList;\r\n  // }\r\n  selectState(state, form) {\r\n    form.state = state;\r\n  }\r\n  filterStates(val: string) {\r\n    console.log(val);\r\n    this.filteredStates =\r\n      val && val != \"\"\r\n        ? this.stateList.filter(\r\n            s => s.key.toLowerCase().indexOf(val.toLowerCase()) >= 0\r\n          )\r\n        : this.stateList;\r\n  }\r\n\r\n  selectedAddress(item: any) {\r\n    if (item) {\r\n      this.customManagement.billingAddress.state = item[0];\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/custommangement/cm.address.component.ts","module.exports = \"<md-card>\\r\\n  <form [formGroup]=\\\"myForm\\\" novalidate autocomplete=\\\"off\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n        <input\\r\\n          mdInput\\r\\n          placeholder=\\\"GST Number\\\"\\r\\n          [formControl]=\\\"myForm.controls.tax_gstNo\\\"\\r\\n          [(ngModel)]=\\\"customManagement.gstNo\\\"\\r\\n        />\\r\\n        <md-hint>\\r\\n          <form-messages [control]=\\\"myForm.controls.tax_gstNo\\\"> </form-messages>\\r\\n        </md-hint>\\r\\n      </md-input-container>\\r\\n\\r\\n      <div class=\\\"md-select col-xs-4 padding-side\\\">\\r\\n        <md-select\\r\\n          placeholder=\\\"Customer Type\\\"\\r\\n          [(ngModel)]=\\\"customManagement.customerType\\\"\\r\\n          [ngModelOptions]=\\\"{ standalone: true }\\\"\\r\\n        >\\r\\n          <md-option *ngFor=\\\"let item of customerType\\\" [value]=\\\"item\\\">\\r\\n            {{ item }}\\r\\n          </md-option>\\r\\n        </md-select>\\r\\n      </div>\\r\\n      <div class=\\\"md-select col-xs-4 padding-side\\\">\\r\\n        <md-select\\r\\n          placeholder=\\\"Preferred Payment Method\\\"\\r\\n          [(ngModel)]=\\\"customManagement.paymentMethod\\\"\\r\\n          [ngModelOptions]=\\\"{ standalone: true }\\\"\\r\\n        >\\r\\n          <md-option *ngFor=\\\"let item of paymentMethod\\\" [value]=\\\"item\\\">\\r\\n            {{ item }}\\r\\n          </md-option>\\r\\n        </md-select>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n    <button\\r\\n      md-raised-button\\r\\n      color=\\\"accent\\\"\\r\\n      class=\\\"padding-side\\\"\\r\\n      (click)=\\\"back()\\\"\\r\\n    >\\r\\n      Back\\r\\n    </button>\\r\\n    <button\\r\\n      md-raised-button\\r\\n      color=\\\"accent\\\"\\r\\n      [disabled]=\\\"!myForm.valid\\\"\\r\\n      (click)=\\\"next()\\\"\\r\\n    >\\r\\n      Finish\\r\\n    </button>\\r\\n  </div>\\r\\n</md-card>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/custommangement/cm.billing.component.html\n// module id = ../../../../../src/app/components/admin/custommangement/cm.billing.component.html\n// module chunks = 1","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { AppService } from '../../../shared/service/app.service';\r\nimport { AnimationService } from '../../../shared/service/animation.service';\r\nimport { RestService } from './../../../common/rest.service';\r\nimport { Prop } from './../../../common/props';\r\nimport { InvoiceFormGroup } from '../../../forms/invoice.form';\r\nimport { CustomManagement } from '../../../entities/custommanagement';\r\nimport { CustomerFormGroup } from '../../../forms/customer.form';\r\n@Component({\r\n    selector: 'app-billing',\r\n    templateUrl: './cm.billing.component.html'\r\n\r\n})\r\nexport class CmBillingComponent implements OnInit {\r\n    customerManagement: CustomManagement;\r\n    customerType = [\"Retail\", \"Credit\"];\r\n    paymentMethod = [\"Cash\",\"Electronic\",\"Cheque\"];\r\n    myForm: any = CustomerFormGroup.init();\r\n    @Input('customManagement')\r\n    customManagement: CustomManagement;\r\n\r\n    @Output('billingEvent')\r\n    billingEvent = new EventEmitter<string>();\r\n\r\n    @Output('backEvent')\r\n    backEvent = new EventEmitter<string>();\r\n    constructor(private appService: AppService, private restService: RestService) {\r\n        CustomerFormGroup.taxGroup(this.myForm);\r\n    }\r\n\r\n    ngOnInit() {\r\n      \r\n     }\r\n    next() {\r\n        this.billingEvent.emit()\r\n    }\r\n    back() {\r\n        this.backEvent.emit();\r\n    }\r\n\r\n    paymentTypeList: any[] = [];\r\n    paymentTypeLoad() {\r\n        this.restService.dataload('Payment')\r\n            .subscribe(results => {\r\n                this.paymentTypeList = results;\r\n            })\r\n    }\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/custommangement/cm.billing.component.ts","module.exports = \"<md-card>\\r\\n  <form [formGroup]=\\\"myForm\\\" autocomplete=\\\"off\\\">\\r\\n    <div class=\\\"row \\\">\\r\\n      <!--<md-input-container class=\\\"col-xs-12\\\">\\r\\n                        <input mdInput placeholder=\\\"Business Name\\\" required [formControl]=\\\"myForm.controls.account_company_name\\\" [(ngModel)]=\\\"account.company.name\\\">\\r\\n                        <md-hint>\\r\\n                            <form-messages [control]=\\\"myForm.controls.account_company_name\\\"> </form-messages>\\r\\n                        </md-hint>\\r\\n                    </md-input-container>-->\\r\\n      <div class=\\\"md-select col-xs-2\\\">\\r\\n        <md-select\\r\\n          placeholder=\\\"Title\\\"\\r\\n          [formControl]=\\\"myForm.controls.custom_title\\\"\\r\\n          [(ngModel)]=\\\"customManagement.title\\\"\\r\\n        >\\r\\n          <md-option *ngFor=\\\"let item of titleList\\\" [value]=\\\"item.key\\\">\\r\\n            {{ item.value }}\\r\\n          </md-option>\\r\\n        </md-select>\\r\\n        <md-hint>\\r\\n          <form-messages [control]=\\\"myForm.controls.custom_title\\\">\\r\\n          </form-messages>\\r\\n        </md-hint>\\r\\n      </div>\\r\\n      <md-input-container class=\\\"col-xs-5 padding-side\\\">\\r\\n        <input\\r\\n          mdInput\\r\\n          placeholder=\\\"Name\\\"\\r\\n          [formControl]=\\\"myForm.controls.custom_firstName\\\"\\r\\n          [(ngModel)]=\\\"customManagement.firstName\\\"\\r\\n          style=\\\"text-transform: capitalize\\\"\\r\\n        />\\r\\n        <md-hint>\\r\\n          <form-messages [control]=\\\"myForm.controls.custom_firstName\\\">\\r\\n          </form-messages>\\r\\n        </md-hint>\\r\\n      </md-input-container>\\r\\n\\r\\n      <md-input-container class=\\\"col-xs-12\\\">\\r\\n        <input\\r\\n          mdInput\\r\\n          type=\\\"text\\\"\\r\\n          placeholder=\\\"Business Name\\\"\\r\\n          [formControl]=\\\"myForm.controls.custom_businessName\\\"\\r\\n          [(ngModel)]=\\\"customManagement.businessName\\\"\\r\\n          style=\\\"text-transform: capitalize\\\"\\r\\n        />\\r\\n        <md-hint>\\r\\n          <form-messages [control]=\\\"myForm.controls.custom_businessName\\\">\\r\\n          </form-messages>\\r\\n        </md-hint>\\r\\n      </md-input-container>\\r\\n      <md-input-container class=\\\"col-xs-4\\\">\\r\\n        <input\\r\\n          mdInput\\r\\n          placeholder=\\\"Mobile\\\"\\r\\n          [formControl]=\\\"myForm.controls.custom_mobile\\\"\\r\\n          [(ngModel)]=\\\"customManagement.mobile\\\"\\r\\n        />\\r\\n        <md-hint>\\r\\n          <form-messages [control]=\\\"myForm.controls.custom_mobile\\\">\\r\\n          </form-messages>\\r\\n        </md-hint>\\r\\n      </md-input-container>\\r\\n\\r\\n      <md-input-container class=\\\"col-xs-6 padding-side\\\">\\r\\n        <input\\r\\n          mdInput\\r\\n          placeholder=\\\"Email\\\"\\r\\n          [formControl]=\\\"myForm.controls.custom_email\\\"\\r\\n          [(ngModel)]=\\\"customManagement.email\\\"\\r\\n          ngmodel\\r\\n        />\\r\\n        <md-hint>\\r\\n          <form-messages [control]=\\\"myForm.controls.custom_email\\\">\\r\\n          </form-messages>\\r\\n        </md-hint>\\r\\n      </md-input-container>\\r\\n    </div>\\r\\n  </form>\\r\\n  <div class=\\\"row end-xs\\\">\\r\\n    <button\\r\\n      md-raised-button\\r\\n      color=\\\"accent\\\"\\r\\n      [disabled]=\\\"!myForm.valid\\\"\\r\\n      (click)=\\\"next()\\\"\\r\\n    >\\r\\n      Next\\r\\n    </button>\\r\\n  </div>\\r\\n</md-card>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/custommangement/cm.contactdetails.component.html\n// module id = ../../../../../src/app/components/admin/custommangement/cm.contactdetails.component.html\n// module chunks = 1","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { AppService } from '../../../shared/service/app.service';\r\nimport { AnimationService } from '../../../shared/service/animation.service';\r\nimport { RestService } from './../../../common/rest.service';\r\nimport { Prop } from './../../../common/props';\r\nimport { InvoiceFormGroup } from '../../../forms/invoice.form';\r\nimport { CustomManagement } from '../../../entities/custommanagement';\r\nimport { CustomerFormGroup } from '../../../forms/customer.form';\r\n@Component({\r\n  selector: 'app-contactdetails',\r\n  templateUrl: './cm.contactdetails.component.html'\r\n\r\n})\r\n\r\nexport class CmContactdetailsComponent implements OnInit {\r\n\r\n  myForm: any = CustomerFormGroup.init();\r\n  public isEditable = false;\r\n\r\n  @Input('customManagement')\r\n  customManagement: CustomManagement = new CustomManagement();\r\n\r\n  @Output('contactEvent')\r\n  contactEvent = new EventEmitter<string>();\r\n\r\n\r\n  constructor(private appService: AppService, private restService: RestService) {\r\n    CustomerFormGroup.details(this.myForm);\r\n    this.isEditable = this.appService.getParam(\"isEditable\");\r\n\r\n   // this.titleLoad();\r\n  }\r\n  ngOnInit() {\r\n    this.titleLoad();\r\n    // console.log(\"Account Address\");\r\n  }\r\n\r\n  next() {\r\n    this.contactEvent.emit()\r\n    \r\n  }\r\n    \r\n  titleList: any[] = [];\r\n  titleLoad() {\r\n    this.restService.dataloadFromFile('./assets/json/common.json')\r\n      .subscribe(results => {\r\n        this.titleList = results[\"Title\"];\r\n        console.log(this.titleList)\r\n      });\r\n  }\r\n    //  titleList = [\r\n    //     { value: '0', viewValue: 'Mr' },\r\n    //     { value: '1', viewValue: 'Mrs' }\r\n    // ];\r\n\r\n//  titleList: any[] = [];\r\n//  titleLoad() {\r\n//    this.restService.dataload('Title')\r\n//      .subscribe(results => {\r\n//        this.titleList = results;\r\n//        console.log(this.titleList)\r\n//      })\r\n//  }\r\n\r\n}\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/custommangement/cm.contactdetails.component.ts","import { Component, OnInit } from \"@angular/core\";\r\nimport { DataSource } from \"@angular/cdk\";\r\nimport { AppService } from \"../../../shared/service/app.service\";\r\nimport { AnimationService } from \"../../../shared/service/animation.service\";\r\nimport { RestService } from \"../../../common/rest.service\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport \"rxjs/add/operator/startWith\";\r\nimport \"rxjs/add/observable/merge\";\r\nimport \"rxjs/add/operator/map\";\r\nimport { MdSort, MdPaginator } from \"@angular/material\";\r\n\r\nexport class CustomerDataSource extends DataSource<any> {\r\n  _filterChange = new BehaviorSubject(\"\");\r\n\r\n  public get filter(): string {\r\n    return this._filterChange.value;\r\n  }\r\n  public set filter(filter: string) {\r\n    this._filterChange.next(filter);\r\n  }\r\n  public data: any[] = [];\r\n  constructor(\r\n    private restService: RestService,\r\n    private searchObject: any,\r\n    private sort: MdSort,\r\n    private paginator: MdPaginator\r\n  ) {\r\n    // constructor(private restService: RestService, private searchObj: any) {\r\n    super();\r\n    this.restService.searchCustomers(this.searchObject).subscribe(results => {\r\n      if (results) {\r\n        this.data = results;\r\n      }\r\n    });\r\n  }\r\n\r\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\r\n  connect(): any {\r\n    const displayDataChanges = [\r\n      this.restService.searchCustomers(this.searchObject),\r\n      this._filterChange,\r\n      this.sort.mdSortChange,\r\n      this.paginator.page\r\n    ];\r\n\r\n    return Observable.merge(...displayDataChanges).map(() => {\r\n      this.data = this.data.slice().filter((item: any) => {\r\n        // return this.data.slice().filter((item: any) => {\r\n        //console.log(item)\r\n        let searchStr: string =\r\n          item.businessName +\r\n          \"\" +\r\n          item.firstName +\r\n          \"\" +\r\n          item.lastName +\r\n          \"\" +\r\n          item.email +\r\n          \"\" +\r\n          item.mobile;\r\n        //console.log(searchStr);\r\n        return searchStr.toLowerCase().indexOf(this.filter.toLowerCase()) != -1;\r\n      });\r\n\r\n      const myData = this.sortData();\r\n\r\n      const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n      return myData.splice(startIndex, this.paginator.pageSize);\r\n    });\r\n    // return Promise.resolve([])\r\n  }\r\n\r\n  disconnect() {}\r\n\r\n  sortData(): any[] {\r\n    const data = this.data.slice();\r\n    if (this.sort.active && this.sort.direction == \"\") {\r\n      return data;\r\n    }\r\n\r\n    return data.sort((a, b) => {\r\n      let propertyA: number | string | Date = \"\";\r\n      let propertyB: number | string | Date = \"\";\r\n\r\n      switch (this.sort.active) {\r\n        case \"businessName\":\r\n          [propertyA, propertyB] = [a.businessName, b.businessName];\r\n          break;\r\n        case \"firstName\":\r\n          [propertyA, propertyB] = [a.firstName, b.firstName];\r\n          break;\r\n        //case 'email': [propertyA, propertyB] = [a.email, b.email]; break;\r\n        case \"state\":\r\n          [propertyA, propertyB] = [a.address.state, b.address.state];\r\n          break;\r\n        case \"mobile\":\r\n          [propertyA, propertyB] = [a.mobile, b.mobile];\r\n          break;\r\n        case \"balance\":\r\n          [propertyA, propertyB] = [\r\n            a.customerPayment.openingBalance,\r\n            b.customerPayment.openingBalance\r\n          ];\r\n          break;\r\n        case \"fromDate\":\r\n          [propertyA, propertyB] = [a.fromDate, b.fromDate];\r\n          break;\r\n        case \"toDate\":\r\n          [propertyA, propertyB] = [a.toDate, b.toDate];\r\n          break;\r\n      }\r\n\r\n      let valueA = isNaN(+propertyA) ? propertyA : +propertyA;\r\n      let valueB = isNaN(+propertyB) ? propertyB : +propertyB;\r\n\r\n      return (\r\n        (valueA < valueB ? -1 : 1) * (this.sort.direction == \"asc\" ? 1 : -1)\r\n      );\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/custommangement/customer.datasource.ts","module.exports = \"<div id=\\\"page-header\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n  <h2>Customers</h2>\\r\\n</div>\\r\\n<aside id=\\\"page-content\\\">\\r\\n  <div class=\\\"row center-xs padding\\\" layout=\\\"column\\\">\\r\\n    <md-card class=\\\"col-xs-12\\\">\\r\\n      <div class=\\\"row padding-side\\\">\\r\\n        <md-input-container class=\\\"col-xs-6\\\">\\r\\n          <input\\r\\n            mdInput\\r\\n            #filter\\r\\n            placeholder=\\\"Search by Business Name or Customer Name or Mobile\\\"\\r\\n            (keyup)=\\\"applyFilter($event.target.value)\\\"\\r\\n          />\\r\\n          <!-- (keydown.backspace)=\\\"onKeydown($event.target.value)\\\" -->\\r\\n        </md-input-container>\\r\\n        <!--  <div class=\\\"col-xs-6 end-xs padding-height\\\">\\r\\n                    <md-icon color=\\\"accent\\\">print</md-icon>\\r\\n                    <md-icon color=\\\"accent\\\">settings</md-icon>\\r\\n                </div> -->\\r\\n        <md-input-container class=\\\"col-xs-2 padding-side\\\">\\r\\n          <input\\r\\n            mdInput\\r\\n            [mdDatepicker]=\\\"customerFrom\\\"\\r\\n            placeholder=\\\"From Date\\\"\\r\\n            [(ngModel)]=\\\"searchObj.fromDate\\\"\\r\\n            (ngModelChange)=\\\"callDataSource()\\\"\\r\\n          />\\r\\n          <button mdSuffix [mdDatepickerToggle]=\\\"customerFrom\\\"></button>\\r\\n        </md-input-container>\\r\\n        <md-datepicker #customerFrom></md-datepicker>\\r\\n        <md-input-container class=\\\"col-xs-2 padding-side\\\">\\r\\n          <input\\r\\n            mdInput\\r\\n            [mdDatepicker]=\\\"customerTo\\\"\\r\\n            placeholder=\\\"To Date\\\"\\r\\n            [(ngModel)]=\\\"searchObj.toDate\\\"\\r\\n            (ngModelChange)=\\\"callDataSource()\\\"\\r\\n          />\\r\\n          <button mdSuffix [mdDatepickerToggle]=\\\"customerTo\\\"></button>\\r\\n        </md-input-container>\\r\\n        <md-datepicker #customerTo></md-datepicker>\\r\\n      </div>\\r\\n      <md-card-content class=\\\"start-xs\\\">\\r\\n        <md-table\\r\\n          #table\\r\\n          [dataSource]=\\\"dataSource\\\"\\r\\n          mdSort\\r\\n          style=\\\"height: 500px; overflow-y: auto\\\"\\r\\n        >\\r\\n          <!--- Note that these columns can be defined in any order.\\r\\n          The actual rendered columns are set as a property on the row definition\\\" -->\\r\\n\\r\\n          <!-- ID Column -->\\r\\n          <ng-container cdkColumnDef=\\\"name\\\">\\r\\n            <md-header-cell *cdkHeaderCellDef md-sort-header fxFlex=\\\"25%\\\">\\r\\n              Business Name\\r\\n            </md-header-cell>\\r\\n            <md-cell *cdkCellDef=\\\"let row\\\" (click)=\\\"myFun(row)\\\">\\r\\n              {{ row.businessName | titlecase }}\\r\\n            </md-cell>\\r\\n          </ng-container>\\r\\n\\r\\n          <!-- Progress Column -->\\r\\n          <ng-container cdkColumnDef=\\\"company\\\">\\r\\n            <md-header-cell *cdkHeaderCellDef md-sort-header fxFlex=\\\"20%\\\">\\r\\n              Name\\r\\n            </md-header-cell>\\r\\n            <md-cell *cdkCellDef=\\\"let row\\\" (click)=\\\"myFun(row)\\\" fxFlex=\\\"20%\\\">\\r\\n              {{ row.firstName | titlecase }} {{ row.lastName | titlecase }}\\r\\n            </md-cell>\\r\\n          </ng-container>\\r\\n\\r\\n          <!-- Name Column -->\\r\\n          <!-- <ng-container cdkColumnDef=\\\"email\\\">\\r\\n                        <md-header-cell *cdkHeaderCellDef md-sort-header>Email </md-header-cell>\\r\\n                        <md-cell *cdkCellDef=\\\"let row\\\" (click)=\\\"myFun(row)\\\"> {{row.email}}</md-cell>\\r\\n                    </ng-container> -->\\r\\n\\r\\n          <!-- <ng-container cdkColumnDef=\\\"city\\\">\\r\\n                        <md-header-cell *cdkHeaderCellDef>City </md-header-cell>\\r\\n                        <md-cell *cdkCellDef=\\\"let row\\\"> {{row.address.city}} </md-cell>\\r\\n                    </ng-container> -->\\r\\n          <ng-container cdkColumnDef=\\\"mobile\\\">\\r\\n            <md-header-cell *cdkHeaderCellDef md-sort-header\\r\\n              >Mobile No\\r\\n            </md-header-cell>\\r\\n            <md-cell *cdkCellDef=\\\"let row\\\" (click)=\\\"myFun(row)\\\" fxFlex=\\\"25%\\\">\\r\\n              {{ row.mobile }}\\r\\n            </md-cell>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container cdkColumnDef=\\\"state\\\">\\r\\n            <md-header-cell *cdkHeaderCellDef md-sort-header fxFlex=\\\"20%\\\"\\r\\n              >State\\r\\n            </md-header-cell>\\r\\n            <md-cell *cdkCellDef=\\\"let row\\\" (click)=\\\"myFun(row)\\\" fxFlex=\\\"20%\\\">\\r\\n              {{ row.state }}\\r\\n            </md-cell>\\r\\n          </ng-container>\\r\\n          <!-- <ng-container cdkColumnDef=\\\"balance\\\">\\r\\n                        <md-header-cell *cdkHeaderCellDef md-sort-header>Open Balance </md-header-cell>\\r\\n                        <md-cell *cdkCellDef=\\\"let row\\\" (click)=\\\"myFun(row)\\\"> {{row.customerType == 1 ? \\\"0\\\": row.customerPayment.openingBalance}} </md-cell>\\r\\n                    </ng-container> -->\\r\\n\\r\\n          <!-- Color Column -->\\r\\n          <ng-container cdkColumnDef=\\\"action\\\">\\r\\n            <md-header-cell\\r\\n              *cdkHeaderCellDef\\r\\n              fxLayoutAlign=\\\"center\\\"\\r\\n              fxFlex=\\\"10%\\\"\\r\\n              >Action</md-header-cell\\r\\n            >\\r\\n            <md-cell\\r\\n              *cdkCellDef=\\\"let row\\\"\\r\\n              (click)=\\\"onSelectedItem(row)\\\"\\r\\n              [mdMenuTriggerFor]=\\\"sendMenu\\\"\\r\\n              fxLayoutAlign=\\\"center\\\"\\r\\n              fxFlex=\\\"10%\\\"\\r\\n            >\\r\\n              <md-icon color=\\\"accent\\\">more_vert</md-icon>\\r\\n            </md-cell>\\r\\n          </ng-container>\\r\\n\\r\\n          <md-header-row\\r\\n            *cdkHeaderRowDef=\\\"displayedColumns\\\"\\r\\n            style=\\\" position: sticky;\\r\\n          top: 0;\\r\\n          z-index: 100;\\r\\n          background: white;\\\"\\r\\n          ></md-header-row>\\r\\n          <md-row *cdkRowDef=\\\"let row; columns: displayedColumns\\\"></md-row>\\r\\n        </md-table>\\r\\n      </md-card-content>\\r\\n      <md-paginator\\r\\n        #paginator\\r\\n        style=\\\"width: 100%;\\\"\\r\\n        [length]=\\\"dataSource.data.length\\\"\\r\\n        [pageIndex]=\\\"0\\\"\\r\\n        [pageSize]=\\\"10\\\"\\r\\n        [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"\\r\\n      >\\r\\n      </md-paginator>\\r\\n    </md-card>\\r\\n  </div>\\r\\n  <md-menu #sendMenu=\\\"mdMenu\\\" style=\\\"padding: 1rem;\\\">\\r\\n    <button md-menu-item (click)=\\\"edit()\\\">Edit</button>\\r\\n    <button md-menu-item (click)=\\\"view()\\\">View</button>\\r\\n    <button md-menu-item (click)=\\\"delete()\\\">Delete</button>\\r\\n  </md-menu>\\r\\n</aside>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/custommangement/customer.search.component.html\n// module id = ../../../../../src/app/components/admin/custommangement/customer.search.component.html\n// module chunks = 1","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ViewChild,\r\n  ElementRef\r\n} from \"@angular/core\";\r\nimport { AppService } from \"../../../shared/service/app.service\";\r\nimport { AnimationService } from \"../../../shared/service/animation.service\";\r\nimport { RestService } from \"./../../../common/rest.service\";\r\nimport { Prop } from \"./../../../common/props\";\r\nimport { InvoiceFormGroup } from \"../../../forms/invoice.form\";\r\nimport { CustomManagement } from \"../../../entities/custommanagement\";\r\nimport { CustommanagementFormGroup } from \"../../../forms/custommanagement.form\";\r\nimport { CustomerDataSource } from \"./customer.datasource\";\r\nimport { DataSource } from \"@angular/cdk\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport \"rxjs/add/observable/fromEvent\";\r\nimport \"rxjs/add/operator/debounceTime\";\r\nimport \"rxjs/add/operator/distinctUntilChanged\";\r\nimport { DialogContentExampleDialogCustomer } from \"./DialogContentExampleDialogCustomer\";\r\nimport {\r\n  MdDialog,\r\n  MdSort,\r\n  MdDialogRef,\r\n  MD_DIALOG_DATA,\r\n  MdPaginator\r\n} from \"@angular/material\";\r\nimport { Util } from \"../../../shared/utils/util\";\r\n\r\n@Component({\r\n  selector: \"app-customer-search\",\r\n  templateUrl: \"./customer.search.component.html\"\r\n})\r\nexport class CustomerSearchComponent {\r\n  dataSource: CustomerDataSource = null;\r\n  displayedColumns: any[] = [\"name\", \"company\", \"mobile\", \"state\", \"action\"];\r\n  selectedItem: any = null;\r\n  selectedItemForView: any = null;\r\n  @ViewChild(\"filter\") filter: ElementRef;\r\n  @ViewChild(MdSort) sort: MdSort;\r\n  @ViewChild(MdPaginator) paginator: MdPaginator;\r\n  constructor(\r\n    private appService: AppService,\r\n    private restService: RestService,\r\n    public dialog: MdDialog\r\n  ) {}\r\n  searchObj: any = {};\r\n\r\n  ngOnInit() {\r\n    this.dataSource = new CustomerDataSource(\r\n      this.restService,\r\n      this.searchObj,\r\n      this.sort,\r\n      this.paginator\r\n    );\r\n    Observable.fromEvent(this.filter.nativeElement, \"keyup\")\r\n      .debounceTime(100)\r\n      .distinctUntilChanged()\r\n      .subscribe(() => {\r\n        if (!this.dataSource) {\r\n          return;\r\n        }\r\n        this.dataSource.filter = this.filter.nativeElement.value;\r\n      });\r\n  }\r\n  callDataSource() {\r\n    if (this.searchObj.fromDate && typeof this.searchObj.fromDate == \"object\") {\r\n      this.searchObj.fromDate = Util.ISODate(\r\n        this.searchObj.fromDate.toISOString()\r\n      );\r\n    }\r\n    if (this.searchObj.toDate && typeof this.searchObj.toDate == \"object\") {\r\n      this.searchObj.toDate = Util.ISODate(this.searchObj.toDate.toISOString());\r\n    }\r\n    this.dataSource = new CustomerDataSource(\r\n      this.restService,\r\n      this.searchObj,\r\n      this.sort,\r\n      this.paginator\r\n    );\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    this.searchObject = {};\r\n    this.dataSource = new CustomerDataSource(\r\n      this.restService,\r\n      {},\r\n      this.sort,\r\n      this.paginator\r\n    );\r\n  }\r\n\r\n  //onKeydown(filterValue: string) {\r\n  // if (filterValue.length < 3) return;\r\n  // if (filterValue.length < 4) {\r\n  //   // For First three letters no search - display all\r\n  //   this.clearAll();\r\n  // } else this.ApplyFilter(filterValue);\r\n  //}\r\n  // public ApplyFilter(filterValue: string) {\r\n  //   this.searchObject = {};\r\n  //   this.dataSource = new CustomerDataSource(\r\n  //     this.restService,\r\n  //     {},\r\n  //     this.sort,\r\n  //     this.paginator\r\n  //   );\r\n  //   filterValue = filterValue.trim().toLowerCase();\r\n  //   this.dataSource.filter = filterValue;\r\n  // }\r\n  searchObject: any = {};\r\n  dataList: any = [];\r\n  edit() {\r\n    this.appService.navigate(\"./admin/customer-edit\", [\r\n      { id: this.selectedItem.id, isEditable: true }\r\n    ]);\r\n  }\r\n\r\n  view() {\r\n    this.appService.navigate(\"./admin/customer-details\", [\r\n      { id: this.selectedItem.id, isEditable: false }\r\n    ]);\r\n  }\r\n\r\n  openDialog(id) {\r\n    const dialogRef = this.dialog.open(DialogContentExampleDialogCustomer, {\r\n      width: \"500px\",\r\n      height: \"250px\",\r\n      data: id\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.clearAll();\r\n    });\r\n  }\r\n\r\n  public clearAll() {\r\n    this.searchObject = {};\r\n    this.dataSource = new CustomerDataSource(\r\n      this.restService,\r\n      {},\r\n      this.sort,\r\n      this.paginator\r\n    );\r\n  }\r\n\r\n  delete() {\r\n    this.openDialog({ id: [this.selectedItem.id] });\r\n  }\r\n\r\n  onSelectedItem(row) {\r\n    this.selectedItem = row;\r\n  }\r\n\r\n  myFun(row) {\r\n    this.selectedItemForView = row;\r\n    this.appService.navigate(\"./admin/customer-details\", [\r\n      { id: this.selectedItemForView.id, isEditable: false }\r\n    ]);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/custommangement/customer.search.component.ts","module.exports = \"<div id=\\\"page-header\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n    <h2>New Customer</h2>\\r\\n</div>\\r\\n\\r\\n<aside>\\r\\n    <div id=\\\"page-content\\\">\\r\\n        <div class=\\\"row center-xs\\\" style=\\\"margin: 20px 0;\\\"> \\r\\n            <div style=\\\"width:800px; background-color: white\\\">\\r\\n                <td-steps mode=\\\"horizontal\\\">\\r\\n                    <td-step #step1 label=\\\"Basic Info\\\" [active]=\\\"true\\\" (activated)=\\\"changeEvent(step1, step2, step3)\\\">\\r\\n                        <app-contactdetails [(customManagement)]=\\\"customManagement\\\" (contactEvent)=\\\"contactEvent($event)\\\">\\r\\n                        </app-contactdetails>\\r\\n                    </td-step>\\r\\n                    <td-step #step2 label=\\\"Address\\\">\\r\\n                        <app-address [(customManagement)]=\\\"customManagement \\\" (addressEvent)=\\\"addressEvent($event)\\\" (backEvent)=\\\"backEvent()\\\">\\r\\n                        </app-address>\\r\\n                    </td-step>\\r\\n                    <td-step #step3 label=\\\"Business\\\">\\r\\n                        <app-billing [(customManagement)]=\\\"customManagement \\\" (billingEvent)=\\\"customerCreation($event)\\\"\\r\\n                         (backEvent)=\\\"backEvent()\\\" >\\r\\n\\r\\n                        </app-billing>\\r\\n                    </td-step>\\r\\n                </td-steps>\\r\\n            </div>\\r\\n\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</aside>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/custommangement/custommangement.component.html\n// module id = ../../../../../src/app/components/admin/custommangement/custommangement.component.html\n// module chunks = 1","import { Component, OnInit } from \"@angular/core\";\r\nimport { AppService } from \"../../../shared/service/app.service\";\r\nimport { AnimationService } from \"../../../shared/service/animation.service\";\r\nimport { RestService } from \"./../../../common/rest.service\";\r\nimport { Prop } from \"./../../../common/props\";\r\nimport { CustomManagement } from \"../../../entities/custommanagement\";\r\n\r\n@Component({\r\n  selector: \"app-custommangement\",\r\n  templateUrl: \"./custommangement.component.html\"\r\n})\r\nexport class CustomMangementComponent {\r\n  currentStep: number = 1;\r\n  step1: any;\r\n  step2: any;\r\n  step3: any;\r\n  customManagement: CustomManagement;\r\n  isActive: boolean = false;\r\n  constructor(\r\n    private appService: AppService,\r\n    private restService: RestService\r\n  ) {\r\n    this.customManagement = new CustomManagement();\r\n    // this.customerCreation({});\r\n  }\r\n  changeEvent(event1: any, event2: any, event3: any) {\r\n    console.log(\"activeEvent all steps\");\r\n    this.step1 = event1;\r\n    this.step2 = event2;\r\n    this.step3 = event3;\r\n    setTimeout(() => {\r\n      if (!this.isActive) {\r\n        this.isActive = true;\r\n        this.changeStep();\r\n      }\r\n    }, 100);\r\n  }\r\n  changeStep() {\r\n    this.step1.disabled = true;\r\n    this.step2.disabled = true;\r\n    this.step3.disabled = true;\r\n\r\n    this.step1.active = false;\r\n    this.step2.active = false;\r\n    this.step3.active = false;\r\n\r\n    let activeStep: any = this.getActiveStep();\r\n    activeStep.disabled = false;\r\n    activeStep.active = true;\r\n  }\r\n\r\n  getActiveStep() {\r\n    switch (this.currentStep) {\r\n      case 1:\r\n        return this.step1;\r\n      case 2:\r\n        return this.step2;\r\n      case 3:\r\n        return this.step3;\r\n      default:\r\n        return this.step1;\r\n    }\r\n  }\r\n  contactEvent($event) {\r\n    let activeStep: any = this.getActiveStep();\r\n    activeStep.state = \"complete\";\r\n    this.currentStep = 2;\r\n    this.changeStep();\r\n  }\r\n  addressEvent($event) {\r\n    let activeStep: any = this.getActiveStep();\r\n    activeStep.state = \"complete\";\r\n    this.currentStep = 3;\r\n    this.changeStep();\r\n  }\r\n\r\n  backEvent() {\r\n    let activeStep: any = this.getActiveStep();\r\n    activeStep.state = \"none\";\r\n    this.currentStep = this.currentStep - 1;\r\n    this.changeStep();\r\n  }\r\n  customerCreation($event: any) {\r\n    this.customManagement.companyId = this.appService.getBranch().id;\r\n    \r\n    console.log(this.customManagement);\r\n    this.restService.customerSave(this.customManagement).subscribe(result => {\r\n      if (result != null) {\r\n        //this.customManagement = new CustomManagement();\r\n        if (result.message) {\r\n          this.appService.showMessage(result.message);\r\n        } else {\r\n          this.appService.showMessage(\"Customer saved Successfully!\");\r\n        }\r\n        this.appService.navigate(\"/admin/customersearch\", []);\r\n        this.currentStep = 0;\r\n        this.getActiveStep();\r\n      }\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/custommangement/custommangement.component.ts","module.exports = \"<h2 class=\\\"head\\\">Dashboard</h2>\\r\\n\\r\\n<!-- <div class=\\\"margin\\\">\\r\\n  <app-pie-chart></app-pie-chart>\\r\\n</div> -->\\r\\n<div class=\\\"margin\\\">\\r\\n  <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n    <div\\r\\n      fxFlex=\\\"50\\\"\\r\\n      fxFlex.lg=\\\"50\\\"\\r\\n      fxFlex.md=\\\"50\\\"\\r\\n      fxFlex.sm=\\\"100\\\"\\r\\n      fxFlex.xs=\\\"100\\\"\\r\\n    >\\r\\n      <app-receivables-chart [monthsList]=\\\"monthsList\\\"></app-receivables-chart>\\r\\n      <!-- <md-card style=\\\"margin:20px 10px 0px 20px;\\\">\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <div\\r\\n            fxFlex=\\\"50\\\"\\r\\n            fxFlex.lg=\\\"50\\\"\\r\\n            fxFlex.md=\\\"50\\\"\\r\\n            fxFlex.sm=\\\"50\\\"\\r\\n            fxFlex.xs=\\\"50\\\"\\r\\n          >\\r\\n            <h2 class=\\\"heading\\\">Total Receivables ₹{{ totalReceivables }}</h2>\\r\\n          </div>\\r\\n          <div\\r\\n            fxFlex=\\\"50\\\"\\r\\n            fxFlex.lg=\\\"50\\\"\\r\\n            fxFlex.md=\\\"50\\\"\\r\\n            fxFlex.sm=\\\"50\\\"\\r\\n            fxFlex.xs=\\\"50\\\"\\r\\n          >\\r\\n            <md-select\\r\\n              placeholder=\\\"Last 12 Months\\\"\\r\\n              [(ngModel)]=\\\"reportFilter.month\\\"\\r\\n            >\\r\\n              <md-option *ngFor=\\\"let item of monthsList\\\" [value]=\\\"item.key\\\">{{\\r\\n                item.value\\r\\n              }}</md-option>\\r\\n            </md-select>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <div\\r\\n            fxFlex=\\\"100\\\"\\r\\n            fxFlex.lg=\\\"100\\\"\\r\\n            fxFlex.md=\\\"100\\\"\\r\\n            fxFlex.sm=\\\"100\\\"\\r\\n            fxFlex.xs=\\\"100\\\"\\r\\n          >\\r\\n            <div id=\\\"chart\\\"></div>\\r\\n            <app-receivables-chart></app-receivables-chart>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <div\\r\\n            fxFlex=\\\"50\\\"\\r\\n            fxFlex.lg=\\\"50\\\"\\r\\n            fxFlex.md=\\\"50\\\"\\r\\n            fxFlex.sm=\\\"50\\\"\\r\\n            fxFlex.xs=\\\"50\\\"\\r\\n          >\\r\\n            <h3 class=\\\"heading\\\" style=\\\"color:#009688\\\">CURRENT</h3>\\r\\n            <h2>₹{{ receivableCurrent }}</h2>\\r\\n          </div>\\r\\n          <div\\r\\n            fxFlex=\\\"50\\\"\\r\\n            fxFlex.lg=\\\"50\\\"\\r\\n            fxFlex.md=\\\"50\\\"\\r\\n            fxFlex.sm=\\\"50\\\"\\r\\n            fxFlex.xs=\\\"50\\\"\\r\\n          >\\r\\n            <h3 class=\\\"heading\\\" style=\\\"color:#ffc107\\\">OVERDUE</h3>\\r\\n            <h2>₹{{ receivableOverdue }}</h2>\\r\\n          </div>\\r\\n        </div>\\r\\n      </md-card> -->\\r\\n    </div>\\r\\n    <div\\r\\n      fxFlex=\\\"50\\\"\\r\\n      fxFlex.lg=\\\"50\\\"\\r\\n      fxFlex.md=\\\"50\\\"\\r\\n      fxFlex.sm=\\\"100\\\"\\r\\n      fxFlex.xs=\\\"100\\\"\\r\\n    >\\r\\n      <app-payable-chart [monthsList]=\\\"monthsList\\\"></app-payable-chart>\\r\\n      <!-- <md-card style=\\\"margin:20px 20px 0px 10px\\\">\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <div\\r\\n            fxFlex=\\\"50\\\"\\r\\n            fxFlex.lg=\\\"50\\\"\\r\\n            fxFlex.md=\\\"50\\\"\\r\\n            fxFlex.sm=\\\"50\\\"\\r\\n            fxFlex.xs=\\\"50\\\"\\r\\n          >\\r\\n            <h2>Total Payables ₹{{ totalPayables }}</h2>\\r\\n          </div>\\r\\n          <div\\r\\n            fxFlex=\\\"50\\\"\\r\\n            fxFlex.lg=\\\"50\\\"\\r\\n            fxFlex.md=\\\"50\\\"\\r\\n            fxFlex.sm=\\\"50\\\"\\r\\n            fxFlex.xs=\\\"50\\\"\\r\\n          >\\r\\n            <md-select placeholder=\\\"Last 12 Months\\\">\\r\\n              <md-option *ngFor=\\\"let item of monthsList\\\" [value]=\\\"item.key\\\">{{\\r\\n                item.value\\r\\n              }}</md-option>\\r\\n            </md-select>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <div\\r\\n            fxFlex=\\\"100\\\"\\r\\n            fxFlex.lg=\\\"100\\\"\\r\\n            fxFlex.md=\\\"100\\\"\\r\\n            fxFlex.sm=\\\"100\\\"\\r\\n            fxFlex.xs=\\\"100\\\"\\r\\n          >\\r\\n            <app-payable-chart></app-payable-chart>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <div\\r\\n            fxFlex=\\\"50\\\"\\r\\n            fxFlex.lg=\\\"50\\\"\\r\\n            fxFlex.md=\\\"50\\\"\\r\\n            fxFlex.sm=\\\"50\\\"\\r\\n            fxFlex.xs=\\\"50\\\"\\r\\n          >\\r\\n            <h3 class=\\\"heading\\\" style=\\\"color:#009688\\\">CURRENT</h3>\\r\\n            <h2>₹{{ payableCurrent }}</h2>\\r\\n          </div>\\r\\n          <div\\r\\n            fxFlex=\\\"50\\\"\\r\\n            fxFlex.lg=\\\"50\\\"\\r\\n            fxFlex.md=\\\"50\\\"\\r\\n            fxFlex.sm=\\\"50\\\"\\r\\n            fxFlex.xs=\\\"50\\\"\\r\\n          >\\r\\n            <h3 class=\\\"heading\\\" style=\\\"color:#ffc107\\\">OVERDUE</h3>\\r\\n            <h2>₹{{ payableOverdue }}</h2>\\r\\n          </div>\\r\\n        </div>\\r\\n      </md-card> -->\\r\\n    </div>\\r\\n  </div>\\r\\n  <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"space-betweeen\\\">\\r\\n    <div\\r\\n      fxFlex=\\\"50\\\"\\r\\n      fxFlex.lg=\\\"50\\\"\\r\\n      fxFlex.md=\\\"50\\\"\\r\\n      fxFlex.sm=\\\"100\\\"\\r\\n      fxFlex.xs=\\\"100\\\"\\r\\n    >\\r\\n      <app-income-expenses [yearsList]=\\\"yearsList\\\"></app-income-expenses>\\r\\n      <!-- <md-card\\r\\n        style=\\\"margin:20px 10px 0px 20px;\\\"\\r\\n        *ngFor=\\\"let item of incomeExpData\\\"\\r\\n      >\\r\\n        <div class=\\\"color\\\">\\r\\n          <div fxLayout=\\\"row wrap\\\">\\r\\n            <div\\r\\n              fxFlex=\\\"50\\\"\\r\\n              fxFlex.lg=\\\"50\\\"\\r\\n              fxFlex.md=\\\"50\\\"\\r\\n              fxFlex.sm=\\\"50\\\"\\r\\n              fxFlex.xs=\\\"50\\\"\\r\\n            >\\r\\n              <h2>Income and Expenses</h2>\\r\\n            </div>\\r\\n            <div\\r\\n              fxFlex=\\\"50\\\"\\r\\n              fxFlex.lg=\\\"50\\\"\\r\\n              fxFlex.md=\\\"50\\\"\\r\\n              fxFlex.sm=\\\"50\\\"\\r\\n              fxFlex.xs=\\\"50\\\"\\r\\n            >\\r\\n              <md-select placeholder=\\\"Previous Fiscal Year\\\">\\r\\n                <md-option>Previous Fiscal Year</md-option>\\r\\n              </md-select>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <div\\r\\n            fxFlex=\\\"100\\\"\\r\\n            fxFlex.lg=\\\"100\\\"\\r\\n            fxFlex.md=\\\"100\\\"\\r\\n            fxFlex.sm=\\\"100\\\"\\r\\n            fxFlex.xs=\\\"100\\\"\\r\\n          >\\r\\n            <app-income-expenses></app-income-expenses>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <div\\r\\n            fxFlex=\\\"50\\\"\\r\\n            fxFlex.lg=\\\"50\\\"\\r\\n            fxFlex.md=\\\"50\\\"\\r\\n            fxFlex.sm=\\\"50\\\"\\r\\n            fxFlex.xs=\\\"50\\\"\\r\\n          >\\r\\n            <h3 class=\\\"heading\\\" style=\\\"color:#8fe388\\\">Total Income</h3>\\r\\n            <h2>₹{{ item.totalIncome }}</h2>\\r\\n          </div>\\r\\n          <div\\r\\n            fxFlex=\\\"50\\\"\\r\\n            fxFlex.lg=\\\"50\\\"\\r\\n            fxFlex.md=\\\"50\\\"\\r\\n            fxFlex.sm=\\\"50\\\"\\r\\n            fxFlex.xs=\\\"50\\\"\\r\\n          >\\r\\n            <h3 class=\\\"heading\\\" style=\\\"color:#ffc107\\\">Total Expenses</h3>\\r\\n            <h2>₹{{ item.totalExpenses }}</h2>\\r\\n          </div>\\r\\n        </div>\\r\\n      </md-card> -->\\r\\n    </div>\\r\\n    <div\\r\\n      fxFlex=\\\"50\\\"\\r\\n      fxFlex.lg=\\\"50\\\"\\r\\n      fxFlex.md=\\\"50\\\"\\r\\n      fxFlex.sm=\\\"100\\\"\\r\\n      fxFlex.xs=\\\"100\\\"\\r\\n    >\\r\\n      <app-sales-chart [yearsList]=\\\"yearsList\\\"></app-sales-chart>\\r\\n      <!-- <md-card style=\\\"margin:20px 20px 0px 10px\\\" *ngFor=\\\"let item of salesData\\\">\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <div\\r\\n            fxFlex=\\\"50\\\"\\r\\n            fxFlex.lg=\\\"50\\\"\\r\\n            fxFlex.md=\\\"50\\\"\\r\\n            fxFlex.sm=\\\"50\\\"\\r\\n            fxFlex.xs=\\\"50\\\"\\r\\n          >\\r\\n            <h2>Sales</h2>\\r\\n            <h2>₹{{ item.salesAmount }}</h2>\\r\\n          </div>\\r\\n          <div\\r\\n            fxFlex=\\\"50\\\"\\r\\n            fxFlex.lg=\\\"50\\\"\\r\\n            fxFlex.md=\\\"50\\\"\\r\\n            fxFlex.sm=\\\"50\\\"\\r\\n            fxFlex.xs=\\\"50\\\"\\r\\n          >\\r\\n            <md-select placeholder=\\\"Last 12 Months\\\">\\r\\n              <md-option *ngFor=\\\"let item of monthsList\\\" [value]=\\\"item.key\\\">{{\\r\\n                item.value\\r\\n              }}</md-option>\\r\\n            </md-select>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <div\\r\\n            fxFlex=\\\"100\\\"\\r\\n            fxFlex.lg=\\\"100\\\"\\r\\n            fxFlex.md=\\\"100\\\"\\r\\n            fxFlex.sm=\\\"100\\\"\\r\\n            fxFlex.xs=\\\"100\\\"\\r\\n          >\\r\\n            <app-sales-chart></app-sales-chart>\\r\\n          </div>\\r\\n        </div>\\r\\n      </md-card> -->\\r\\n    </div>\\r\\n  </div>\\r\\n  <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"space-betweeen\\\">\\r\\n    <div\\r\\n      fxFlex=\\\"50\\\"\\r\\n      fxFlex.lg=\\\"50\\\"\\r\\n      fxFlex.md=\\\"50\\\"\\r\\n      fxFlex.sm=\\\"100\\\"\\r\\n      fxFlex.xs=\\\"100\\\"\\r\\n    >\\r\\n      <app-pie-chart [yearsList]=\\\"yearsList\\\"></app-pie-chart>\\r\\n      <!-- <md-card style=\\\"margin:20px 10px 0px 20px;height: 300px;\\\">\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <div\\r\\n            fxFlex=\\\"50\\\"\\r\\n            fxFlex.lg=\\\"50\\\"\\r\\n            fxFlex.md=\\\"50\\\"\\r\\n            fxFlex.sm=\\\"50\\\"\\r\\n            fxFlex.xs=\\\"50\\\"\\r\\n          >\\r\\n            <h2>Top Expenses</h2>\\r\\n          </div>\\r\\n          <div\\r\\n            fxFlex=\\\"50\\\"\\r\\n            fxFlex.lg=\\\"50\\\"\\r\\n            fxFlex.md=\\\"50\\\"\\r\\n            fxFlex.sm=\\\"50\\\"\\r\\n            fxFlex.xs=\\\"50\\\"\\r\\n          >\\r\\n            <md-select placeholder=\\\"Previous Fiscal Year\\\">\\r\\n              <md-option></md-option>\\r\\n            </md-select>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <div\\r\\n            fxFlex=\\\"100\\\"\\r\\n            fxFlex.lg=\\\"100\\\"\\r\\n            fxFlex.md=\\\"100\\\"\\r\\n            fxFlex.sm=\\\"100\\\"\\r\\n            fxFlex.xs=\\\"100\\\"\\r\\n          >\\r\\n            <app-pie-chart></app-pie-chart>\\r\\n          </div>\\r\\n        </div>\\r\\n      </md-card> -->\\r\\n    </div>\\r\\n    <!-- <div fxFlex=\\\"50\\\" fxFlex.lg=\\\"50\\\" fxFlex.md=\\\"50\\\" fxFlex.sm=\\\"100\\\" fxFlex.xs=\\\"100\\\">\\r\\n    <md-card style=\\\"margin:10px\\\">\\r\\n      <div fxLayout=\\\"row wrap\\\">\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.lg=\\\"100\\\" fxFlex.md=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.xs=\\\"100\\\">\\r\\n        <h2>Invoices</h2>\\r\\n      </div>\\r\\n      </div>\\r\\n      <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"50\\\" fxFlex.lg=\\\"50\\\" fxFlex.md=\\\"50\\\" fxFlex.sm=\\\"50\\\" fxFlex.xs=\\\"50\\\">\\r\\n          <h2>₹0.00 UNPAID</h2>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"50\\\" fxFlex.lg=\\\"50\\\" fxFlex.md=\\\"50\\\" fxFlex.sm=\\\"50\\\" fxFlex.xs=\\\"50\\\">\\r\\n          <h2>LAST 365 DAYS</h2>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"space-betweeen\\\">\\r\\n        <div fxFlex=\\\"50\\\" fxFlex.lg=\\\"50\\\" fxFlex.md=\\\"50\\\" fxFlex.sm=\\\"50\\\" fxFlex.xs=\\\"50\\\">\\r\\n          <h2 style=\\\"color:#f2aa2b\\\">₹0.00</h2>\\r\\n          <h3 style=\\\"color:#f2aa2b\\\">OVERDUE</h3>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"50\\\" fxFlex.lg=\\\"50\\\" fxFlex.md=\\\"50\\\" fxFlex.sm=\\\"50\\\" fxFlex.xs=\\\"50\\\">\\r\\n          <h2 style=\\\"color:#eae7e3\\\">₹0.00</h2>\\r\\n          <h3 style=\\\"color:#eae7e3\\\">NOT DUE YET</h3>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div fxLayout=\\\"row wrap\\\">\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.lg=\\\"100\\\" fxFlex.md=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.xs=\\\"100\\\">\\r\\n        <div id=\\\"colors\\\"></div>\\r\\n      </div>\\r\\n      </div>\\r\\n      <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"space-betweeen\\\">\\r\\n        <div fxFlex=\\\"50\\\" fxFlex.lg=\\\"50\\\" fxFlex.md=\\\"50\\\" fxFlex.sm=\\\"50\\\" fxFlex.xs=\\\"50\\\">\\r\\n          <h2 style=\\\"color:#8fe388\\\">₹0.00</h2>\\r\\n          <h3 style=\\\"color:#8fe388\\\">NOT DEPOSITED</h3>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"50\\\" fxFlex.lg=\\\"50\\\" fxFlex.md=\\\"50\\\" fxFlex.sm=\\\"50\\\" fxFlex.xs=\\\"50\\\">\\r\\n          <h2 style=\\\"color:#04a404\\\">₹0.00</h2>\\r\\n          <h3 style=\\\"color:#04a404\\\">DEPOSITED</h3>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div fxLayout=\\\"row wrap\\\">\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.lg=\\\"100\\\" fxFlex.md=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.xs=\\\"100\\\">\\r\\n        <div id=\\\"colors1\\\"></div>\\r\\n      </div>\\r\\n      </div>\\r\\n    </md-card>\\r\\n  </div> -->\\r\\n\\r\\n    <div\\r\\n      fxFlex=\\\"50\\\"\\r\\n      fxFlex.lg=\\\"50\\\"\\r\\n      fxFlex.md=\\\"50\\\"\\r\\n      fxFlex.sm=\\\"100\\\"\\r\\n      fxFlex.xs=\\\"100\\\"\\r\\n    >\\r\\n      <app-stock-pie-chart [monthsList]=\\\"monthsList\\\"></app-stock-pie-chart>\\r\\n      <!-- <md-card style=\\\"margin:5px 20px 0px 10px\\\" *ngFor=\\\"let item of stockData\\\">\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <div\\r\\n            fxFlex=\\\"50\\\"\\r\\n            fxFlex.lg=\\\"50\\\"\\r\\n            fxFlex.md=\\\"50\\\"\\r\\n            fxFlex.sm=\\\"50\\\"\\r\\n            fxFlex.xs=\\\"50\\\"\\r\\n          >\\r\\n            <h2>Stock Management</h2>\\r\\n          </div>\\r\\n          <div\\r\\n            fxFlex=\\\"50\\\"\\r\\n            fxFlex.lg=\\\"50\\\"\\r\\n            fxFlex.md=\\\"50\\\"\\r\\n            fxFlex.sm=\\\"50\\\"\\r\\n            fxFlex.xs=\\\"50\\\"\\r\\n          >\\r\\n            <md-select placeholder=\\\"Last 12 Months\\\">\\r\\n              <md-option *ngFor=\\\"let item of monthsList\\\" [value]=\\\"item.key\\\">{{\\r\\n                item.value\\r\\n              }}</md-option>\\r\\n            </md-select>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <div\\r\\n            fxFlex=\\\"100\\\"\\r\\n            fxFlex.lg=\\\"100\\\"\\r\\n            fxFlex.md=\\\"100\\\"\\r\\n            fxFlex.sm=\\\"100\\\"\\r\\n            fxFlex.xs=\\\"100\\\"\\r\\n          >\\r\\n            <app-stock-pie-chart></app-stock-pie-chart>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"space-betweeen\\\">\\r\\n          <div\\r\\n            fxFlex=\\\"50\\\"\\r\\n            fxFlex.lg=\\\"50\\\"\\r\\n            fxFlex.md=\\\"50\\\"\\r\\n            fxFlex.sm=\\\"50\\\"\\r\\n            fxFlex.xs=\\\"50\\\"\\r\\n          >\\r\\n            <h3 class=\\\"heading\\\" style=\\\"color:#009688\\\">Stock At Hand</h3>\\r\\n            <h2>₹{{ item.stockAtHand }}</h2>\\r\\n          </div>\\r\\n\\r\\n          <div\\r\\n            fxFlex=\\\"50\\\"\\r\\n            fxFlex.lg=\\\"50\\\"\\r\\n            fxFlex.md=\\\"50\\\"\\r\\n            fxFlex.sm=\\\"50\\\"\\r\\n            fxFlex.xs=\\\"50\\\"\\r\\n          >\\r\\n            <h3 class=\\\"heading\\\" style=\\\"color:#f2aa2b\\\">Stock Sold</h3>\\r\\n            <h2>₹{{ item.soldStock }}</h2>\\r\\n          </div>\\r\\n        </div>\\r\\n      </md-card> -->\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/dashboard/dashboard.component.html\n// module id = ../../../../../src/app/components/admin/dashboard/dashboard.component.html\n// module chunks = 1","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".margin {\\n  margin-bottom: 80px; }\\n\\n.head {\\n  font-size: 22px;\\n  text-align: center;\\n  margin-top: 10px; }\\n\\nmd-card {\\n  font-family: \\\"UHC-Sans-Regular\\\", sans-serif !important; }\\n\\n.heading h3 {\\n  font-size: 16px;\\n  font-weight: Bold;\\n  color: #000;\\n  padding-top: 10px; }\\n\\nh2 {\\n  font-size: 12px;\\n  font-weight: Bold;\\n  color: #000;\\n  padding-top: 10px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/dashboard/dashboard.component.scss\n// module id = ../../../../../src/app/components/admin/dashboard/dashboard.component.scss\n// module chunks = 1","import { Component, OnInit } from \"@angular/core\";\r\nimport { AppService } from \"../../../shared/service/app.service\";\r\nimport { AnimationService } from \"../../../shared/service/animation.service\";\r\nimport { RestService } from \"./../../../common/rest.service\";\r\nimport { Prop } from \"./../../../common/props\";\r\nimport { ReportFilter } from \"app/entities/report-filter.entity\";\r\nimport { WebReportFilter } from \"app/entities/web-report-filter.entity\";\r\ndeclare let google: any;\r\n@Component({\r\n  selector: \"app-dashboard\",\r\n  templateUrl: \"./dashboard.component.html\",\r\n  styleUrls: [\"./dashboard.component.scss\"]\r\n})\r\nexport class DashboardComponent {\r\n  mode: string;\r\n  // pieChartData: any[] = [];\r\n  // receivableData: any[] = [];\r\n  // payablesData: any[] = [];\r\n  // incomeExpData: any[] = [];\r\n  // salesData: any[] = [];\r\n  // stockData: any[] = [];\r\n  incomeHead: any[] = [];\r\n  salesHead: any[] = [];\r\n  date: Date = new Date();\r\n  currentYear: any;\r\n  yearsList: any[] = [];\r\n  reportFilter: WebReportFilter = new WebReportFilter();\r\n\r\n  constructor(\r\n    private appService: AppService,\r\n    private restService: RestService\r\n  ) {\r\n    // this.pieDataLoad();\r\n    this.currentYear = this.date.getFullYear();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.monthsLoad();\r\n    for (var i = this.currentYear; i > this.currentYear - 5; i--) {\r\n      this.yearsList.push(i);\r\n    }\r\n  }\r\n\r\n  //   return Object.keys(obj).sort().map(function(key) {\r\n  //     return obj[key];\r\n  //   });\r\n  // });\r\n  monthsList: any[] = [];\r\n  monthsLoad() {\r\n    this.restService\r\n      .dataloadFromFile(\"./assets/json/common.json\")\r\n      .subscribe(results => {\r\n        this.monthsList = results[\"months\"];\r\n      });\r\n  }\r\n\r\n  // pieDataLoad() {\r\n  //   var fromDate;\r\n  //   var toDate;\r\n  //   var params = \"?\";\r\n\r\n  //   this.restService\r\n  //     .dataloadFromFile(\"./../../assets/json/common.json\")\r\n  //     .subscribe(results => {\r\n  //       //  console.log(results);\r\n  //       this.pieChartData = results[\"pieData\"];\r\n  //       this.receivableData = results[\"receivable\"];\r\n  //       this.payablesData = results[\"payables\"];\r\n  //       this.incomeExpData = results[\"incomeExpenses\"];\r\n  //       this.salesData = results[\"sales\"];\r\n  //       this.stockData = results[\"stockinfo\"];\r\n  //       this.incomeHead = results[\"incomeHead\"];\r\n  //       this.salesHead = results[\"salesHead\"];\r\n  //       //   console.log(this.pieChartData);\r\n  //     });\r\n  // }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/dashboard/dashboard.component.ts","module.exports = \"<!-- <div id=\\\"chart_div\\\"></div> -->\\r\\n<md-card style=\\\"margin:20px 10px 0px 20px;\\\">\\r\\n  <div class=\\\"color\\\">\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n      <div\\r\\n        fxFlex=\\\"50\\\"\\r\\n        fxFlex.lg=\\\"50\\\"\\r\\n        fxFlex.md=\\\"50\\\"\\r\\n        fxFlex.sm=\\\"50\\\"\\r\\n        fxFlex.xs=\\\"50\\\"\\r\\n      >\\r\\n        <h2>Income and Expenses</h2>\\r\\n      </div>\\r\\n      <div\\r\\n        fxFlex=\\\"50\\\"\\r\\n        fxFlex.lg=\\\"50\\\"\\r\\n        fxFlex.md=\\\"50\\\"\\r\\n        fxFlex.sm=\\\"50\\\"\\r\\n        fxFlex.xs=\\\"50\\\"\\r\\n      >\\r\\n        <md-select\\r\\n          placeholder=\\\"Previous Fiscal Year\\\"\\r\\n          [(ngModel)]=\\\"reportFilter.year\\\"\\r\\n        >\\r\\n          <md-option\\r\\n            *ngFor=\\\"let item of yearsList\\\"\\r\\n            [value]=\\\"item\\\"\\r\\n            (click)=\\\"onSelectYear(item)\\\"\\r\\n            >{{ item }}</md-option\\r\\n          >\\r\\n        </md-select>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div fxLayout=\\\"row wrap\\\">\\r\\n    <div\\r\\n      fxFlex=\\\"100\\\"\\r\\n      fxFlex.lg=\\\"100\\\"\\r\\n      fxFlex.md=\\\"100\\\"\\r\\n      fxFlex.sm=\\\"100\\\"\\r\\n      fxFlex.xs=\\\"100\\\"\\r\\n    >\\r\\n      <div id=\\\"chart_div\\\"></div>\\r\\n      <!-- <app-income-expenses></app-income-expenses> -->\\r\\n    </div>\\r\\n  </div>\\r\\n  <div fxLayout=\\\"row wrap\\\">\\r\\n    <div\\r\\n      fxFlex=\\\"50\\\"\\r\\n      fxFlex.lg=\\\"50\\\"\\r\\n      fxFlex.md=\\\"50\\\"\\r\\n      fxFlex.sm=\\\"50\\\"\\r\\n      fxFlex.xs=\\\"50\\\"\\r\\n    >\\r\\n      <h3 class=\\\"heading\\\" style=\\\"color:#8fe388\\\">Total Income</h3>\\r\\n      <h2>₹{{ totalIncome }}</h2>\\r\\n    </div>\\r\\n    <div\\r\\n      fxFlex=\\\"50\\\"\\r\\n      fxFlex.lg=\\\"50\\\"\\r\\n      fxFlex.md=\\\"50\\\"\\r\\n      fxFlex.sm=\\\"50\\\"\\r\\n      fxFlex.xs=\\\"50\\\"\\r\\n    >\\r\\n      <h3 class=\\\"heading\\\" style=\\\"color:#ffc107\\\">Total Expenses</h3>\\r\\n      <h2>₹{{ totalExpense }}</h2>\\r\\n    </div>\\r\\n  </div>\\r\\n</md-card>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/dashboard/income-expenses/income-expenses.component.html\n// module id = ../../../../../src/app/components/admin/dashboard/income-expenses/income-expenses.component.html\n// module chunks = 1","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"md-card {\\n  font-family: \\\"UHC-Sans-Regular\\\", sans-serif !important; }\\n\\n.heading h3 {\\n  font-size: 16px;\\n  font-weight: Bold;\\n  color: #000;\\n  padding-top: 10px; }\\n\\nh2 {\\n  font-size: 12px;\\n  font-weight: Bold;\\n  color: #000;\\n  padding-top: 10px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/dashboard/income-expenses/income-expenses.component.scss\n// module id = ../../../../../src/app/components/admin/dashboard/income-expenses/income-expenses.component.scss\n// module chunks = 1","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { AppService } from \"../../../../shared/service/app.service\";\r\nimport { AnimationService } from \"../../../../shared/service/animation.service\";\r\nimport { RestService } from \"./../../../../common/rest.service\";\r\nimport { Prop } from \"./../../../../common/props\";\r\nimport { ReportFilter } from \"app/entities/report-filter.entity\";\r\nimport { WebReportFilter } from \"app/entities/web-report-filter.entity\";\r\nimport { BaseReportComponent } from \"app/shared/component/base.report.component\";\r\ndeclare let google: any;\r\n\r\n@Component({\r\n  selector: \"app-income-expenses\",\r\n  templateUrl: \"./income-expenses.component.html\",\r\n  styleUrls: [\"./income-expenses.component.scss\"]\r\n})\r\nexport class IncomeExpensesComponent implements OnInit {\r\n  allMonths = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\"\r\n  ];\r\n  x: any;\r\n  finaldata: any;\r\n  data: any;\r\n  @Input()\r\n  yearsList: any[];\r\n  incomeData: any[] = [];\r\n  monthly: any[];\r\n  finalData: any[] = [];\r\n  totalIncome: any = 0;\r\n  totalExpense: any = 0;\r\n  reportFilter: WebReportFilter = new WebReportFilter();\r\n  constructor(\r\n    private appService: AppService,\r\n    private restService: RestService,\r\n    private basReportOp: BaseReportComponent\r\n  ) {\r\n    this.incomeandexpensesLoad();\r\n  }\r\n\r\n  ngOnInit() {\r\n    google.charts.load(\"current\", { packages: [\"corechart\", \"bar\"] });\r\n    google.charts.setOnLoadCallback(this.drawStuff);\r\n\r\n    this.x = setInterval(() => {\r\n      this.drawStuff();\r\n    }, 1000);\r\n    setTimeout(() => {\r\n      this.pauseTimeLine(this.x);\r\n    }, 3000);\r\n  }\r\n\r\n  drawStuff = () => {\r\n    var chartDiv = document.getElementById(\"chart_div\");\r\n    var data = new google.visualization.DataTable();\r\n    data.addColumn(\"string\", \"Months\");\r\n    data.addColumn(\"number\", \"Income\");\r\n    data.addColumn(\"number\", \"Expense\");\r\n    data.addRows(this.finalData);\r\n    var materialOptions = {\r\n      colors: [\"#8fe388\", \"#ffc107\"],\r\n      chart: {},\r\n      series: {\r\n        0: { axis: \"distance\" } // Bind series 0 to an axis named 'distance'.\r\n      }\r\n    };\r\n    function drawMaterialChart() {\r\n      var materialChart = new google.charts.Bar(chartDiv);\r\n      materialChart.draw(\r\n        data,\r\n        google.charts.Bar.convertOptions(materialOptions)\r\n      );\r\n    }\r\n    drawMaterialChart();\r\n  };\r\n  onSelectYear(item) {\r\n    this.reportFilter.year = item;\r\n    // console.log(item);\r\n    this.finalData = [];\r\n    this.totalIncome = 0;\r\n    this.totalExpense = 0;\r\n    this.incomeandexpensesLoad();\r\n  }\r\n\r\n  incomeandexpensesLoad() {\r\n    this.reportFilter.report = \"report=DB_INCOME_AND_EXPENSES\";\r\n    this.data = this.basReportOp\r\n      .getDS(this.reportFilter)\r\n      .subscribe((results: any) => {\r\n        this.incomeData = results;\r\n        this.monthSort();\r\n\r\n        this.monthly.map(x => {\r\n          this.totalIncome += x.TotalIncome;\r\n          this.totalExpense += x.TotalExpenses;\r\n          var xArray: any[] = [\r\n            x.Expense_month_name,\r\n            x.TotalIncome,\r\n            x.TotalExpenses\r\n          ];\r\n          // console.log(\"xArray :: \" + xArray);\r\n          this.finalData.push(xArray);\r\n        });\r\n\r\n        // console.log(\"final chart data for income expense is \", +this.finalData);\r\n        this.drawStuff();\r\n      });\r\n  }\r\n  monthSort() {\r\n    class incomeNewMonth {\r\n      Expense_month_name: string;\r\n      TotalExpenses: Number;\r\n      TotalIncome: Number;\r\n    }\r\n\r\n    this.monthly = this.incomeData.sort((a, b) => {\r\n      return (\r\n        this.allMonths.indexOf(a.Expense_month_name) -\r\n        this.allMonths.indexOf(b.Expense_month_name)\r\n      );\r\n    });\r\n  }\r\n\r\n  pauseTimeLine(x) {\r\n    clearInterval(this.x);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/dashboard/income-expenses/income-expenses.component.ts","module.exports = \"<!-- <div id=\\\"color\\\"></div> -->\\r\\n<md-card style=\\\"margin:20px 20px 0px 10px\\\">\\r\\n  <div fxLayout=\\\"row wrap\\\">\\r\\n    <div\\r\\n      fxFlex=\\\"50\\\"\\r\\n      fxFlex.lg=\\\"50\\\"\\r\\n      fxFlex.md=\\\"50\\\"\\r\\n      fxFlex.sm=\\\"50\\\"\\r\\n      fxFlex.xs=\\\"50\\\"\\r\\n    >\\r\\n      <h2>Total Payables ₹{{ totalPayables }}</h2>\\r\\n    </div>\\r\\n    <div\\r\\n      fxFlex=\\\"50\\\"\\r\\n      fxFlex.lg=\\\"50\\\"\\r\\n      fxFlex.md=\\\"50\\\"\\r\\n      fxFlex.sm=\\\"50\\\"\\r\\n      fxFlex.xs=\\\"50\\\"\\r\\n    >\\r\\n      <md-select placeholder=\\\"Last 12 Months\\\">\\r\\n        <md-option\\r\\n          *ngFor=\\\"let item of monthsList\\\"\\r\\n          [value]=\\\"item.key\\\"\\r\\n          (click)=\\\"onSelectMonth(item)\\\"\\r\\n          >{{ item.value }}</md-option\\r\\n        >\\r\\n      </md-select>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div fxLayout=\\\"row wrap\\\">\\r\\n    <div\\r\\n      fxFlex=\\\"100\\\"\\r\\n      fxFlex.lg=\\\"100\\\"\\r\\n      fxFlex.md=\\\"100\\\"\\r\\n      fxFlex.sm=\\\"100\\\"\\r\\n      fxFlex.xs=\\\"100\\\"\\r\\n    >\\r\\n      <div id=\\\"color\\\"></div>\\r\\n      <!-- <app-payable-chart></app-payable-chart> -->\\r\\n    </div>\\r\\n  </div>\\r\\n  <div fxLayout=\\\"row wrap\\\">\\r\\n    <div\\r\\n      fxFlex=\\\"50\\\"\\r\\n      fxFlex.lg=\\\"50\\\"\\r\\n      fxFlex.md=\\\"50\\\"\\r\\n      fxFlex.sm=\\\"50\\\"\\r\\n      fxFlex.xs=\\\"50\\\"\\r\\n    >\\r\\n      <h3 class=\\\"heading\\\" style=\\\"color:#009688\\\">CURRENT</h3>\\r\\n      <h2>₹{{ payableCurrent }}</h2>\\r\\n    </div>\\r\\n    <div\\r\\n      fxFlex=\\\"50\\\"\\r\\n      fxFlex.lg=\\\"50\\\"\\r\\n      fxFlex.md=\\\"50\\\"\\r\\n      fxFlex.sm=\\\"50\\\"\\r\\n      fxFlex.xs=\\\"50\\\"\\r\\n    >\\r\\n      <h3 class=\\\"heading\\\" style=\\\"color:#ffc107\\\">OVERDUE</h3>\\r\\n      <h2>₹{{ payableOverdue }}</h2>\\r\\n    </div>\\r\\n  </div>\\r\\n</md-card>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/dashboard/payable-chart/payable-chart.component.html\n// module id = ../../../../../src/app/components/admin/dashboard/payable-chart/payable-chart.component.html\n// module chunks = 1","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".margin {\\n  margin-bottom: 80px; }\\n\\n.head {\\n  text-align: center;\\n  margin-top: 10px; }\\n\\nmd-card {\\n  font-family: \\\"UHC-Sans-Regular\\\", sans-serif !important; }\\n\\n.heading h3 {\\n  font-size: 16px;\\n  font-weight: Bold;\\n  color: #000;\\n  padding-top: 10px; }\\n\\nh2 {\\n  font-size: 12px;\\n  font-weight: Bold;\\n  color: #000;\\n  padding-top: 10px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/dashboard/payable-chart/payable-chart.component.scss\n// module id = ../../../../../src/app/components/admin/dashboard/payable-chart/payable-chart.component.scss\n// module chunks = 1","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { AppService } from \"../../../../shared/service/app.service\";\r\nimport { AnimationService } from \"../../../../shared/service/animation.service\";\r\nimport { RestService } from \"./../../../../common/rest.service\";\r\nimport { Prop } from \"./../../../../common/props\";\r\nimport { ReportFilter } from \"app/entities/report-filter.entity\";\r\nimport { BaseReportComponent } from \"app/shared/component/base.report.component\";\r\nimport { WebReportFilter } from \"app/entities/web-report-filter.entity\";\r\ndeclare let google: any;\r\n\r\n@Component({\r\n  selector: \"app-payable-chart\",\r\n  templateUrl: \"./payable-chart.component.html\",\r\n  styleUrls: [\"./payable-chart.component.scss\"]\r\n})\r\nexport class PayableChartComponent implements OnInit {\r\n  payablesData: any[] = [];\r\n  payablesData1: any[] = [];\r\n  payablesData2: any[] = [];\r\n  reportFilter: WebReportFilter = new WebReportFilter();\r\n  x: any;\r\n  data: any;\r\n  @Input()\r\n  monthsList: any[];\r\n  payableCurrent: any;\r\n  payableOverdue: any;\r\n  totalPayables: any;\r\n  overduePercent: any;\r\n  currentPercent: any;\r\n  constructor(\r\n    private appService: AppService,\r\n    private restService: RestService,\r\n    private basReportOp: BaseReportComponent\r\n  ) {\r\n    this.payableLoad();\r\n  }\r\n\r\n  ngOnInit() {\r\n    google.charts.load(\"current\", { packages: [\"corechart\", \"bar\"] });\r\n    google.charts.setOnLoadCallback(this.drawTick);\r\n    this.x = setInterval(() => {\r\n      this.drawTick();\r\n    }, 1000);\r\n    // this.pauseTimeLine(this.x);\r\n    setTimeout(() => {\r\n      this.pauseTimeLine(this.x);\r\n    }, 3000);\r\n  }\r\n\r\n  drawTick = () => {\r\n    var date = new Date();\r\n    var prevYear = date.getFullYear() - 1;\r\n    var year =\r\n      prevYear +\r\n      \"-\" +\r\n      date\r\n        .getFullYear()\r\n        .toString()\r\n        .substring(2);\r\n\r\n    var data = google.visualization.arrayToDataTable([\r\n      [\"Genre\", \"Current\", \"Over Due\", { role: \"annotation\" }],\r\n      [year, this.currentPercent, this.overduePercent, \"\"]\r\n    ]);\r\n\r\n    var options = {\r\n      colors: [\"#009688\", \"#ffc107\"],\r\n      height: 40,\r\n      legend: { position: \"top\" },\r\n      isStacked: true\r\n    };\r\n    var chart = new google.visualization.BarChart(\r\n      document.getElementById(\"color\")\r\n    );\r\n    chart.draw(data, options);\r\n  };\r\n\r\n  onSelectMonth(item) {\r\n    this.reportFilter.month = item.key;\r\n    // console.log(item.key);\r\n    this.payableLoad();\r\n  }\r\n  payableLoad() {\r\n    this.reportFilter.report = \"report=DB_PAYABLES\";\r\n    this.data = this.basReportOp\r\n      .getDS(this.reportFilter)\r\n      .subscribe((results: any) => {\r\n        // console.log(results);\r\n        this.payableCurrent = results[0].TotalCurrent;\r\n        this.payableOverdue = results[0].TotalOverDue;\r\n        this.totalPayables = results[0].TotalPaybles;\r\n        this.currentPercent = (this.payableCurrent / this.totalPayables) * 100;\r\n        this.overduePercent = 100 - this.currentPercent;\r\n        if (\r\n          this.payableCurrent == null &&\r\n          this.payableOverdue == null &&\r\n          this.totalPayables == null\r\n        ) {\r\n          this.payableCurrent = 0;\r\n          this.payableOverdue = 0;\r\n          this.totalPayables = 0;\r\n          this.currentPercent = 0;\r\n          this.overduePercent = 0;\r\n        }\r\n        this.drawTick();\r\n      });\r\n  }\r\n\r\n  pauseTimeLine(x) {\r\n    clearInterval(this.x);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/dashboard/payable-chart/payable-chart.component.ts","module.exports = \"<md-card style=\\\"margin:20px 10px 0px 20px;height: 300px;\\\">\\r\\n  <div fxLayout=\\\"row wrap\\\">\\r\\n    <div\\r\\n      fxFlex=\\\"50\\\"\\r\\n      fxFlex.lg=\\\"50\\\"\\r\\n      fxFlex.md=\\\"50\\\"\\r\\n      fxFlex.sm=\\\"50\\\"\\r\\n      fxFlex.xs=\\\"50\\\"\\r\\n    >\\r\\n      <h2>Top Expenses</h2>\\r\\n    </div>\\r\\n    <div\\r\\n      fxFlex=\\\"50\\\"\\r\\n      fxFlex.lg=\\\"50\\\"\\r\\n      fxFlex.md=\\\"50\\\"\\r\\n      fxFlex.sm=\\\"50\\\"\\r\\n      fxFlex.xs=\\\"50\\\"\\r\\n    >\\r\\n      <md-select\\r\\n        placeholder=\\\"Previous Fiscal Year\\\"\\r\\n        [(ngModel)]=\\\"reportFilter.year\\\"\\r\\n      >\\r\\n        <md-option\\r\\n          *ngFor=\\\"let item of yearsList\\\"\\r\\n          [value]=\\\"item\\\"\\r\\n          (click)=\\\"onSelectYear(item)\\\"\\r\\n          >{{ item }}\\r\\n        </md-option>\\r\\n      </md-select>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div fxLayout=\\\"row wrap\\\">\\r\\n    <div\\r\\n      fxFlex=\\\"100\\\"\\r\\n      fxFlex.lg=\\\"100\\\"\\r\\n      fxFlex.md=\\\"100\\\"\\r\\n      fxFlex.sm=\\\"100\\\"\\r\\n      fxFlex.xs=\\\"100\\\"\\r\\n    >\\r\\n      <div\\r\\n        id=\\\"piechart\\\"\\r\\n        style=\\\"width:650px;height:250px;position:absolute;left:-70px\\\"\\r\\n      ></div>\\r\\n      <!-- <app-pie-chart></app-pie-chart> -->\\r\\n    </div>\\r\\n  </div>\\r\\n</md-card>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/dashboard/pie-chart/pie-chart.component.html\n// module id = ../../../../../src/app/components/admin/dashboard/pie-chart/pie-chart.component.html\n// module chunks = 1","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".margin {\\n  margin-bottom: 80px; }\\n\\n.head {\\n  text-align: center;\\n  margin-top: 10px; }\\n\\nmd-card {\\n  font-family: \\\"UHC-Sans-Regular\\\", sans-serif !important; }\\n\\n.heading h3 {\\n  font-size: 16px;\\n  font-weight: Bold;\\n  color: #000;\\n  padding-top: 10px; }\\n\\nh2 {\\n  font-size: 12px;\\n  font-weight: Bold;\\n  color: #000;\\n  padding-top: 10px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/dashboard/pie-chart/pie-chart.component.scss\n// module id = ../../../../../src/app/components/admin/dashboard/pie-chart/pie-chart.component.scss\n// module chunks = 1","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  SimpleChange\r\n} from \"@angular/core\";\r\nimport { AppService } from \"../../../../shared/service/app.service\";\r\nimport { AnimationService } from \"../../../../shared/service/animation.service\";\r\nimport { RestService } from \"./../../../../common/rest.service\";\r\nimport { Prop } from \"./../../../../common/props\";\r\nimport { WebReportFilter } from \"app/entities/web-report-filter.entity\";\r\nimport { BaseReportComponent } from \"app/shared/component/base.report.component\";\r\ndeclare let google: any;\r\n\r\n@Component({\r\n  selector: \"app-pie-chart\",\r\n  templateUrl: \"./pie-chart.component.html\",\r\n  styleUrls: [\"./pie-chart.component.scss\"]\r\n})\r\nexport class PieChartComponent implements OnInit {\r\n  @Input()\r\n  yearsList: any[];\r\n  mode: string;\r\n  x: any;\r\n  expenseData: any[] = [];\r\n  data: any;\r\n\r\n  reportFilter: WebReportFilter = new WebReportFilter();\r\n  constructor(\r\n    private appService: AppService,\r\n    private restService: RestService,\r\n    private basReportOp: BaseReportComponent\r\n  ) {\r\n    this.expenseLoad();\r\n  }\r\n\r\n  ngOnInit() {\r\n    google.charts.load(\"current\", { packages: [\"corechart\"] });\r\n    google.charts.setOnLoadCallback(this.drawChart);\r\n    this.x = setInterval(() => {\r\n      this.drawChart();\r\n    }, 1000);\r\n    // this.pauseTimeLine(this.x);\r\n    setTimeout(() => {\r\n      this.pauseTimeLine(this.x);\r\n    }, 3000);\r\n  }\r\n\r\n  drawChart = () => {\r\n    var data = new google.visualization.DataTable();\r\n    data.addColumn(\"string\", \"ExpenseType\");\r\n    data.addColumn(\"number\", \"ExpenseTotal\");\r\n    data.addRows(this.expenseData);\r\n\r\n    var options = {\r\n      colors: [\r\n        \"#FFA502\",\r\n        \"#9966cb\",\r\n        \"#296d98\",\r\n        \"#57aac3\",\r\n        \"#58bc82\",\r\n        \"#6cc7e2\"\r\n      ],\r\n\r\n      pieHole: 0.4\r\n    };\r\n    var chart = new google.visualization.PieChart(\r\n      document.getElementById(\"piechart\")\r\n    );\r\n    chart.draw(data, options);\r\n  };\r\n\r\n  onSelectYear(item) {\r\n    this.reportFilter.year = item;\r\n    // console.log(item);\r\n    this.expenseLoad();\r\n  }\r\n\r\n  expenseLoad() {\r\n    this.expenseData = [];\r\n    this.reportFilter.report = \"report=DB_EXPENSETYPES_TOTAL\";\r\n    this.data = this.basReportOp\r\n      .getDS(this.reportFilter)\r\n      .subscribe((results: any) => {\r\n        // console.log(results);\r\n        results.map(x => {\r\n          var xArray: any[] = [x.ExpenseTypeName, x.ExpenseTypeTotal];\r\n          this.expenseData.push(xArray);\r\n          // console.log(this.expenseData);\r\n        });\r\n\r\n        this.drawChart();\r\n      });\r\n  }\r\n\r\n  pauseTimeLine(x) {\r\n    clearInterval(this.x);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/dashboard/pie-chart/pie-chart.component.ts","module.exports = \"<!-- <div id=\\\"chart\\\"></div> -->\\r\\n<md-card style=\\\"margin:20px 10px 0px 20px;\\\">\\r\\n  <div fxLayout=\\\"row wrap\\\">\\r\\n    <div\\r\\n      fxFlex=\\\"50\\\"\\r\\n      fxFlex.lg=\\\"50\\\"\\r\\n      fxFlex.md=\\\"50\\\"\\r\\n      fxFlex.sm=\\\"50\\\"\\r\\n      fxFlex.xs=\\\"50\\\"\\r\\n    >\\r\\n      <h2 class=\\\"heading\\\">Total Receivables ₹{{ totalReceivables }}</h2>\\r\\n    </div>\\r\\n    <div\\r\\n      fxFlex=\\\"50\\\"\\r\\n      fxFlex.lg=\\\"50\\\"\\r\\n      fxFlex.md=\\\"50\\\"\\r\\n      fxFlex.sm=\\\"50\\\"\\r\\n      fxFlex.xs=\\\"50\\\"\\r\\n    >\\r\\n      <md-select placeholder=\\\"Last 12 Months\\\" [(ngModel)]=\\\"reportFilter.month\\\">\\r\\n        <md-option\\r\\n          *ngFor=\\\"let item of monthsList\\\"\\r\\n          [value]=\\\"item.key\\\"\\r\\n          (click)=\\\"onSelectMonth(item)\\\"\\r\\n          >{{ item.value }}</md-option\\r\\n        >\\r\\n      </md-select>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div fxLayout=\\\"row wrap\\\">\\r\\n    <div\\r\\n      fxFlex=\\\"100\\\"\\r\\n      fxFlex.lg=\\\"100\\\"\\r\\n      fxFlex.md=\\\"100\\\"\\r\\n      fxFlex.sm=\\\"100\\\"\\r\\n      fxFlex.xs=\\\"100\\\"\\r\\n    >\\r\\n      <div id=\\\"chart\\\"></div>\\r\\n      <!-- <app-receivables-chart></app-receivables-chart> -->\\r\\n    </div>\\r\\n  </div>\\r\\n  <div fxLayout=\\\"row wrap\\\">\\r\\n    <div\\r\\n      fxFlex=\\\"50\\\"\\r\\n      fxFlex.lg=\\\"50\\\"\\r\\n      fxFlex.md=\\\"50\\\"\\r\\n      fxFlex.sm=\\\"50\\\"\\r\\n      fxFlex.xs=\\\"50\\\"\\r\\n    >\\r\\n      <h3 class=\\\"heading\\\" style=\\\"color:#009688\\\">CURRENT</h3>\\r\\n      <h2>₹{{ receivableCurrent }}</h2>\\r\\n    </div>\\r\\n    <div\\r\\n      fxFlex=\\\"50\\\"\\r\\n      fxFlex.lg=\\\"50\\\"\\r\\n      fxFlex.md=\\\"50\\\"\\r\\n      fxFlex.sm=\\\"50\\\"\\r\\n      fxFlex.xs=\\\"50\\\"\\r\\n    >\\r\\n      <h3 class=\\\"heading\\\" style=\\\"color:#ffc107\\\">OVERDUE</h3>\\r\\n      <h2>₹{{ receivableOverdue }}</h2>\\r\\n    </div>\\r\\n  </div>\\r\\n</md-card>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/dashboard/receivables-chart/receivables-chart.component.html\n// module id = ../../../../../src/app/components/admin/dashboard/receivables-chart/receivables-chart.component.html\n// module chunks = 1","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".margin {\\n  margin-bottom: 80px; }\\n\\n.head {\\n  text-align: center;\\n  margin-top: 10px; }\\n\\nmd-card {\\n  font-family: \\\"UHC-Sans-Regular\\\", sans-serif !important; }\\n\\n.heading h3 {\\n  font-size: 16px;\\n  font-weight: Bold;\\n  color: #000;\\n  padding-top: 10px; }\\n\\nh2 {\\n  font-size: 12px;\\n  font-weight: Bold;\\n  color: #000;\\n  padding-top: 10px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/dashboard/receivables-chart/receivables-chart.component.scss\n// module id = ../../../../../src/app/components/admin/dashboard/receivables-chart/receivables-chart.component.scss\n// module chunks = 1","import { Component, OnInit, Output, EventEmitter, Input } from \"@angular/core\";\r\nimport { AppService } from \"../../../../shared/service/app.service\";\r\nimport { AnimationService } from \"../../../../shared/service/animation.service\";\r\nimport { RestService } from \"./../../../../common/rest.service\";\r\nimport { Prop } from \"./../../../../common/props\";\r\nimport { ReportFilter } from \"app/entities/report-filter.entity\";\r\nimport { BaseReportComponent } from \"app/shared/component/base.report.component\";\r\nimport { WebReportFilter } from \"app/entities/web-report-filter.entity\";\r\ndeclare let google: any;\r\n\r\n@Component({\r\n  selector: \"app-receivables-chart\",\r\n  templateUrl: \"./receivables-chart.component.html\",\r\n  styleUrls: [\"./receivables-chart.component.scss\"]\r\n})\r\nexport class ReceivablesChartComponent implements OnInit {\r\n  reportFilter: WebReportFilter = new WebReportFilter();\r\n  x: any;\r\n  data: any;\r\n  @Input()\r\n  monthsList: any[];\r\n  receivableCurrent: any;\r\n  receivableOverdue: any;\r\n  totalReceivables: any;\r\n  overduePercent: any;\r\n  currentPercent: any;\r\n\r\n  constructor(\r\n    private appService: AppService,\r\n    private restService: RestService,\r\n    private basReportOp: BaseReportComponent\r\n  ) {\r\n    google.charts.load(\"current\", { packages: [\"corechart\", \"bar\"] });\r\n    google.charts.setOnLoadCallback(this.drawAxisTickColors);\r\n    this.receivableLoad();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.x = setInterval(() => {\r\n      this.drawAxisTickColors();\r\n    }, 1000);\r\n    // this.pauseTimeLine(this.x);\r\n    setTimeout(() => {\r\n      this.pauseTimeLine(this.x);\r\n    }, 3000);\r\n  }\r\n  drawAxisTickColors = () => {\r\n    var date = new Date();\r\n    var prevYear = date.getFullYear() - 1;\r\n    var year =\r\n      prevYear +\r\n      \"-\" +\r\n      date\r\n        .getFullYear()\r\n        .toString()\r\n        .substring(2);\r\n    var data = google.visualization.arrayToDataTable([\r\n      [\"Genre\", \"Current\", \"Over Due\", { role: \"annotation\" }],\r\n      [year, this.currentPercent, this.overduePercent, \"\"]\r\n    ]);\r\n\r\n    var options = {\r\n      colors: [\"#009688\", \"#ffc107\"],\r\n\r\n      height: 40,\r\n      legend: { position: \"top\" },\r\n      isStacked: true\r\n    };\r\n    var chart = new google.visualization.BarChart(\r\n      document.getElementById(\"chart\")\r\n    );\r\n    chart.draw(data, options);\r\n  };\r\n\r\n  onSelectMonth(item) {\r\n    this.reportFilter.month = item.key;\r\n    this.receivableLoad();\r\n  }\r\n  receivableLoad() {\r\n    this.reportFilter.report = \"report=DB_RECEIVABLES\";\r\n    this.data = this.basReportOp\r\n      .getDS(this.reportFilter)\r\n      .subscribe((results: any) => {\r\n        // console.log(results);\r\n        this.receivableCurrent = results[0].TotalCurrent;\r\n        this.receivableOverdue = results[0].TotalOverDue;\r\n        this.totalReceivables = results[0].TotalReceivables;\r\n        this.currentPercent =\r\n          (this.receivableCurrent / this.totalReceivables) * 100;\r\n        this.overduePercent = 100 - this.currentPercent;\r\n\r\n        if (\r\n          this.receivableCurrent == null &&\r\n          this.receivableOverdue == null &&\r\n          this.totalReceivables == null\r\n        ) {\r\n          this.receivableCurrent = 0;\r\n          this.receivableOverdue = 0;\r\n          this.totalReceivables = 0;\r\n          this.currentPercent = 0;\r\n          this.overduePercent = 0;\r\n        }\r\n        // console.log(this.overduePercent);\r\n\r\n        this.drawAxisTickColors();\r\n      });\r\n  }\r\n\r\n  pauseTimeLine(x) {\r\n    clearInterval(this.x);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/dashboard/receivables-chart/receivables-chart.component.ts","module.exports = \"<!-- <div id=\\\"chart2\\\"></div> -->\\r\\n<md-card style=\\\"margin:20px 20px 0px 10px\\\">\\r\\n  <div fxLayout=\\\"row wrap\\\">\\r\\n    <div\\r\\n      fxFlex=\\\"50\\\"\\r\\n      fxFlex.lg=\\\"50\\\"\\r\\n      fxFlex.md=\\\"50\\\"\\r\\n      fxFlex.sm=\\\"50\\\"\\r\\n      fxFlex.xs=\\\"50\\\"\\r\\n    >\\r\\n      <h2>Sales</h2>\\r\\n      <!-- <h2>₹{{ item.salesAmount }}</h2> -->\\r\\n    </div>\\r\\n    <div\\r\\n      fxFlex=\\\"50\\\"\\r\\n      fxFlex.lg=\\\"50\\\"\\r\\n      fxFlex.md=\\\"50\\\"\\r\\n      fxFlex.sm=\\\"50\\\"\\r\\n      fxFlex.xs=\\\"50\\\"\\r\\n    >\\r\\n      <md-select\\r\\n        placeholder=\\\"Previous Fiscal Year\\\"\\r\\n        [(ngModel)]=\\\"reportFilter.year\\\"\\r\\n      >\\r\\n        <md-option\\r\\n          *ngFor=\\\"let item of yearsList\\\"\\r\\n          [value]=\\\"item\\\"\\r\\n          (click)=\\\"onSelectYear(item)\\\"\\r\\n          >{{ item }}</md-option\\r\\n        >\\r\\n      </md-select>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div fxLayout=\\\"row wrap\\\">\\r\\n    <div\\r\\n      fxFlex=\\\"100\\\"\\r\\n      fxFlex.lg=\\\"100\\\"\\r\\n      fxFlex.md=\\\"100\\\"\\r\\n      fxFlex.sm=\\\"100\\\"\\r\\n      fxFlex.xs=\\\"100\\\"\\r\\n    >\\r\\n      <div id=\\\"chart2\\\"></div>\\r\\n      <!-- <app-sales-chart></app-sales-chart> -->\\r\\n    </div>\\r\\n  </div>\\r\\n</md-card>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/dashboard/sales-chart/sales-chart.component.html\n// module id = ../../../../../src/app/components/admin/dashboard/sales-chart/sales-chart.component.html\n// module chunks = 1","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".margin {\\n  margin-bottom: 80px; }\\n\\n.head {\\n  font-size: 22px;\\n  text-align: center;\\n  margin-top: 10px; }\\n\\nmd-card {\\n  font-family: \\\"UHC-Sans-Regular\\\", sans-serif !important; }\\n\\n.heading h3 {\\n  font-size: 16px;\\n  font-weight: Bold;\\n  color: #000;\\n  padding-top: 10px; }\\n\\nh2 {\\n  font-size: 12px;\\n  font-weight: Bold;\\n  color: #000;\\n  padding-top: 10px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/dashboard/sales-chart/sales-chart.component.scss\n// module id = ../../../../../src/app/components/admin/dashboard/sales-chart/sales-chart.component.scss\n// module chunks = 1","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { AppService } from \"../../../../shared/service/app.service\";\r\nimport { AnimationService } from \"../../../../shared/service/animation.service\";\r\nimport { RestService } from \"./../../../../common/rest.service\";\r\nimport { Prop } from \"./../../../../common/props\";\r\nimport { WebReportFilter } from \"app/entities/web-report-filter.entity\";\r\nimport { BaseReportComponent } from \"app/shared/component/base.report.component\";\r\ndeclare let google: any;\r\n\r\n@Component({\r\n  selector: \"app-sales-chart\",\r\n  templateUrl: \"./sales-chart.component.html\",\r\n  styleUrls: [\"./sales-chart.component.scss\"]\r\n})\r\nexport class SalesChartComponent implements OnInit {\r\n  salesHead: any[] = [];\r\n  salesData: any[];\r\n  x: any;\r\n  data: any;\r\n  @Input()\r\n  yearsList: any[];\r\n  salesMonth: any;\r\n  monthly: any[];\r\n  finalData: any[] = [];\r\n  totalSales: any;\r\n  reportFilter: WebReportFilter = new WebReportFilter();\r\n  constructor(\r\n    private appService: AppService,\r\n    private restService: RestService,\r\n    private basReportOp: BaseReportComponent\r\n  ) {\r\n    // this.lineDataLoad();\r\n    this.salesLoad();\r\n  }\r\n\r\n  ngOnInit() {\r\n    google.charts.load(\"current\", { packages: [\"corechart\", \"line\"] });\r\n    google.charts.setOnLoadCallback(this.drawBasic);\r\n\r\n    this.x = setInterval(() => {\r\n      this.drawBasic();\r\n    }, 1000);\r\n    // this.pauseTimeLine(this.x);\r\n    setTimeout(() => {\r\n      this.pauseTimeLine(this.x);\r\n    }, 3000);\r\n  }\r\n\r\n  drawBasic = () => {\r\n    var data = new google.visualization.DataTable();\r\n    data.addColumn(\"string\", \"Months\");\r\n    data.addColumn(\"number\", \"sales\");\r\n    data.addRows(this.finalData);\r\n\r\n    var options = {\r\n      colors: [\"#58bc82\"],\r\n      vAxis: {}\r\n    };\r\n    var chart = new google.visualization.LineChart(\r\n      document.getElementById(\"chart2\")\r\n    );\r\n\r\n    chart.draw(data, options);\r\n  };\r\n  onSelectYear(item) {\r\n    this.reportFilter.year = item;\r\n    // console.log(item);\r\n    this.salesLoad();\r\n  }\r\n  salesLoad() {\r\n    this.finalData = [];\r\n    this.reportFilter.report = \"report=DB_SALES\";\r\n    this.data = this.basReportOp\r\n      .getDS(this.reportFilter)\r\n      .subscribe((results: any) => {\r\n        // console.log(results);\r\n        this.salesData = results;\r\n        this.monthSort();\r\n        // console.log(this.monthly);\r\n        this.monthly.map(x => {\r\n          var xArray: any[] = [x.SalesMonthName, x.TotalSales];\r\n          // console.log(\"xArray :: \" + xArray);\r\n          this.finalData.push(xArray);\r\n        });\r\n        this.drawBasic();\r\n      });\r\n  }\r\n  monthSort() {\r\n    var allMonths = [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\"\r\n    ];\r\n\r\n    this.monthly = this.salesData.sort((a, b) => {\r\n      return (\r\n        allMonths.indexOf(a.SalesMonthName) -\r\n        allMonths.indexOf(b.SalesMonthName)\r\n      );\r\n    });\r\n    // console.log(this.monthly);\r\n  }\r\n\r\n  pauseTimeLine(x) {\r\n    clearInterval(this.x);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/dashboard/sales-chart/sales-chart.component.ts","module.exports = \"<!-- <div id=\\\"piechart1\\\" style=\\\"width:650px;height:250px;\\\"></div> -->\\r\\n<md-card style=\\\"margin:5px 20px 0px 10px\\\">\\r\\n  <div fxLayout=\\\"row wrap\\\">\\r\\n    <div\\r\\n      fxFlex=\\\"50\\\"\\r\\n      fxFlex.lg=\\\"50\\\"\\r\\n      fxFlex.md=\\\"50\\\"\\r\\n      fxFlex.sm=\\\"50\\\"\\r\\n      fxFlex.xs=\\\"50\\\"\\r\\n    >\\r\\n      <h2>Stock Management</h2>\\r\\n    </div>\\r\\n    <div\\r\\n      fxFlex=\\\"50\\\"\\r\\n      fxFlex.lg=\\\"50\\\"\\r\\n      fxFlex.md=\\\"50\\\"\\r\\n      fxFlex.sm=\\\"50\\\"\\r\\n      fxFlex.xs=\\\"50\\\"\\r\\n    >\\r\\n      <md-select placeholder=\\\"Last 12 Months\\\" [(ngModel)]=\\\"reportFilter.month\\\">\\r\\n        <md-option\\r\\n          *ngFor=\\\"let item of monthsList\\\"\\r\\n          [value]=\\\"item.key\\\"\\r\\n          (click)=\\\"onSelectMonth(item)\\\"\\r\\n          >{{ item.value }}</md-option\\r\\n        >\\r\\n      </md-select>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div fxLayout=\\\"row wrap\\\">\\r\\n    <div\\r\\n      fxFlex=\\\"100\\\"\\r\\n      fxFlex.lg=\\\"100\\\"\\r\\n      fxFlex.md=\\\"100\\\"\\r\\n      fxFlex.sm=\\\"100\\\"\\r\\n      fxFlex.xs=\\\"100\\\"\\r\\n    >\\r\\n      <div id=\\\"piechart1\\\" style=\\\"width:650px;height:250px;\\\"></div>\\r\\n      <!-- <app-stock-pie-chart></app-stock-pie-chart> -->\\r\\n    </div>\\r\\n  </div>\\r\\n  <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"space-betweeen\\\">\\r\\n    <div\\r\\n      fxFlex=\\\"50\\\"\\r\\n      fxFlex.lg=\\\"50\\\"\\r\\n      fxFlex.md=\\\"50\\\"\\r\\n      fxFlex.sm=\\\"50\\\"\\r\\n      fxFlex.xs=\\\"50\\\"\\r\\n    >\\r\\n      <h3 class=\\\"heading\\\" style=\\\"color:#009688\\\">Stock At Hand</h3>\\r\\n      <h2>{{ totalStockAtHand }}</h2>\\r\\n    </div>\\r\\n\\r\\n    <div\\r\\n      fxFlex=\\\"50\\\"\\r\\n      fxFlex.lg=\\\"50\\\"\\r\\n      fxFlex.md=\\\"50\\\"\\r\\n      fxFlex.sm=\\\"50\\\"\\r\\n      fxFlex.xs=\\\"50\\\"\\r\\n    >\\r\\n      <h3 class=\\\"heading\\\" style=\\\"color:#f2aa2b\\\">Stock Sold</h3>\\r\\n      <h2>{{ totalStockSold }}</h2>\\r\\n    </div>\\r\\n  </div>\\r\\n</md-card>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/dashboard/stock-pie-chart/stock-pie-chart.component.html\n// module id = ../../../../../src/app/components/admin/dashboard/stock-pie-chart/stock-pie-chart.component.html\n// module chunks = 1","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".margin {\\n  margin-bottom: 80px; }\\n\\n.head {\\n  text-align: center;\\n  margin-top: 10px; }\\n\\nmd-card {\\n  font-family: \\\"UHC-Sans-Regular\\\", sans-serif !important; }\\n\\n.heading h3 {\\n  font-size: 16px;\\n  font-weight: Bold;\\n  color: #000;\\n  padding-top: 10px; }\\n\\nh2 {\\n  font-size: 12px;\\n  font-weight: Bold;\\n  color: #000;\\n  padding-top: 10px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/dashboard/stock-pie-chart/stock-pie-chart.component.scss\n// module id = ../../../../../src/app/components/admin/dashboard/stock-pie-chart/stock-pie-chart.component.scss\n// module chunks = 1","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { AppService } from \"../../../../shared/service/app.service\";\r\nimport { AnimationService } from \"../../../../shared/service/animation.service\";\r\nimport { RestService } from \"./../../../../common/rest.service\";\r\nimport { Prop } from \"./../../../../common/props\";\r\nimport { ReportFilter } from \"app/entities/report-filter.entity\";\r\nimport { BaseReportComponent } from \"app/shared/component/base.report.component\";\r\nimport { WebReportFilter } from \"app/entities/web-report-filter.entity\";\r\ndeclare let google: any;\r\n\r\n@Component({\r\n  selector: \"app-stock-pie-chart\",\r\n  templateUrl: \"./stock-pie-chart.component.html\",\r\n  styleUrls: [\"./stock-pie-chart.component.scss\"]\r\n})\r\nexport class StockPieChartComponent implements OnInit {\r\n  mode: string;\r\n  totalStockAtHand: any;\r\n  totalStockSold: any;\r\n  stockAtHandPercent: any;\r\n  stockSoldPercent: any;\r\n  x: any;\r\n  data: any;\r\n  reportFilter: WebReportFilter = new WebReportFilter();\r\n\r\n  @Input()\r\n  monthsList: any[];\r\n  constructor(\r\n    private appService: AppService,\r\n    private restService: RestService,\r\n    private basReportOp: BaseReportComponent\r\n  ) {\r\n    this.stockLoad();\r\n  }\r\n\r\n  ngOnInit() {\r\n    google.charts.load(\"current\", { packages: [\"corechart\"] });\r\n    google.charts.setOnLoadCallback(this.drawChart1);\r\n    this.x = setInterval(() => {\r\n      this.drawChart1();\r\n    }, 1000);\r\n    // this.pauseTimeLine(this.x);\r\n    setTimeout(() => {\r\n      this.pauseTimeLine(this.x);\r\n    }, 3000);\r\n  }\r\n\r\n  drawChart1 = () => {\r\n    var data = google.visualization.arrayToDataTable([\r\n      [\"Task\", \"Hours per Day\"],\r\n      [\"Stock Sold\", this.stockSoldPercent],\r\n      [\"Stock at Hand\", this.stockAtHandPercent]\r\n    ]);\r\n    var options = {\r\n      colors: [\"#f2aa2b\", \"#009688\"],\r\n      pieHole: 0.4\r\n    };\r\n    var chart = new google.visualization.PieChart(\r\n      document.getElementById(\"piechart1\")\r\n    );\r\n    chart.draw(data, options);\r\n  };\r\n  onSelectMonth(item) {\r\n    this.reportFilter.month = item.key;\r\n    // console.log(item.key);\r\n    this.stockLoad();\r\n  }\r\n  stockLoad() {\r\n    this.reportFilter.report = \"report=DB_STOCKATHAND_AND_SOLD\";\r\n    this.data = this.basReportOp\r\n      .getDS(this.reportFilter)\r\n      .subscribe((results: any) => {\r\n        // console.log(results);\r\n        this.totalStockAtHand = results[0].StockatHand;\r\n        this.totalStockSold = results[0].TotalStockSold;\r\n        this.stockAtHandPercent =\r\n          (this.totalStockAtHand /\r\n            (this.totalStockAtHand + this.totalStockSold)) *\r\n          100;\r\n        this.stockSoldPercent = 100 - this.stockAtHandPercent;\r\n        // console.log(this.stockAtHandPercent);\r\n        // console.log(this.stockSoldPercent);\r\n        this.drawChart1();\r\n      });\r\n  }\r\n\r\n  pauseTimeLine(x) {\r\n    clearInterval(this.x);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/dashboard/stock-pie-chart/stock-pie-chart.component.ts","import {\r\n  Component,\r\n  Inject,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ViewChild,\r\n  ElementRef\r\n} from \"@angular/core\";\r\nimport { MdDialog, MdDialogRef, MD_DIALOG_DATA } from \"@angular/material\";\r\nimport { RestService } from \"./../../../common/rest.service\";\r\nimport { AppService } from \"../../../shared/service/app.service\";\r\n\r\nimport {\r\n  TdDataTableService,\r\n  TdDataTableSortingOrder,\r\n  ITdDataTableSortChangeEvent,\r\n  ITdDataTableColumn\r\n} from \"@covalent/core\";\r\n@Component({\r\n  selector: \"dialog-content-example-dialog\",\r\n  template:\r\n    '<h2 style=\"color:#000;\">Delete Confirmation</h2><hr style=\"background:#fff;\" /><br/><p style=\"font-size:16px;\">Are you sure you want to delete Expense ?</p><br/><br/><button  md-button color=\"primary\" (click)=\"ok()\" style=\"background:#ffc107; color:#fff;\">Yes</button><button md-button color=\"primary\" (click)=\"cancel()\" style=\"float:right; background:#ffc107; color:#fff;\">No</button>'\r\n})\r\nexport class DialogContentExampleDialogExpense {\r\n  id: any = null;\r\n  constructor(\r\n    private restService: RestService,\r\n    private appService: AppService,\r\n    public dialogRef: MdDialogRef<DialogContentExampleDialogExpense>,\r\n    @Inject(MD_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.id = data;\r\n  }\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  ok() {\r\n    this.restService.expenseDelete(this.id).subscribe(result => {\r\n      this.dialogRef.close();\r\n      this.appService.showMessage(\"Expense Deleted Successfully \");\r\n    });\r\n  }\r\n  cancel() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/expensemanagement/DialogContentExampleDialogExpense.ts","import { Component, OnInit } from \"@angular/core\";\r\nimport { DataSource } from \"@angular/cdk\";\r\nimport { AppService } from \"../../../shared/service/app.service\";\r\nimport { AnimationService } from \"../../../shared/service/animation.service\";\r\nimport { RestService } from \"../../../common/rest.service\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { MdSort, MdPaginator } from \"@angular/material\";\r\nimport \"rxjs/add/operator/startWith\";\r\nimport \"rxjs/add/observable/merge\";\r\nimport \"rxjs/add/operator/map\";\r\n\r\nexport class ExpenseDataSource extends DataSource<any> {\r\n  private data: any[] = [];\r\n\r\n  constructor(\r\n    private restService: RestService,\r\n    private searchObject: any,\r\n    private sort: MdSort,\r\n    private paginator: MdPaginator\r\n  ) {\r\n    super();\r\n    this.getDataList();\r\n  }\r\n\r\n  getDataList() {\r\n    console.log(this.searchObject);\r\n    this.restService.showLoader(true);\r\n    this.restService.searchExpense(this.searchObject).subscribe(results => {\r\n      if (results) {\r\n        this.data = results;\r\n        console.log(\"Expense Response: \" + this.data);\r\n        this.restService.showLoader(false);\r\n      }\r\n    });\r\n  }\r\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\r\n  connect(): any {\r\n    const displayDataChanges = [\r\n      this.restService.searchExpense(this.searchObject),\r\n      this.sort.mdSortChange,\r\n      this.paginator.page\r\n    ];\r\n\r\n    return Observable.merge(...displayDataChanges).map(() => {\r\n      //return this.getSortedData();\r\n      //const data = this.data.slice();\r\n      const myData = this.getSortedData();\r\n      //this.getSortedData();\r\n      // Grab the page's slice of data.\r\n      const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n      return myData.splice(startIndex, this.paginator.pageSize);\r\n    });\r\n    // return Promise.resolve([])\r\n  }\r\n\r\n  disconnect() {}\r\n\r\n  getSortedData(): any[] {\r\n    const data = this.data.slice();\r\n    if (this.sort.active && this.sort.direction == \"\") {\r\n      return data;\r\n    }\r\n\r\n    return data.sort((a, b) => {\r\n      let propertyA: number | string | Date = \"\";\r\n      let propertyB: number | string | Date = \"\";\r\n\r\n      switch (this.sort.active) {\r\n        case \"payeeId.id\":\r\n          [propertyA, propertyB] = [a.payeeId.id, b.payeeId.id];\r\n          break;\r\n        case \"payeeId.name\":\r\n          [propertyA, propertyB] = [a.payeeId.name, b.payeeId.name];\r\n          break;\r\n        case \"billDate\":\r\n          [propertyA, propertyB] = [a.billDate, b.billDate];\r\n          break;\r\n        case \"name\":\r\n          [propertyA, propertyB] = [\r\n            a.supplierId.firstName,\r\n            b.supplierId.firstName\r\n          ];\r\n          break;\r\n        case \"paymentMode\":\r\n          [propertyA, propertyB] = [a.paymentMode, b.paymentMode];\r\n          break;\r\n        case \"amount\":\r\n          [propertyA, propertyB] = [a.amount, b.amount];\r\n          break;\r\n        case \"fromDate\":\r\n          [propertyA, propertyB] = [a.fromDate, b.fromDate];\r\n          break;\r\n        case \"toDate\":\r\n          [propertyA, propertyB] = [a.toDate, b.toDate];\r\n          break;\r\n      }\r\n      let valueA = isNaN(+propertyA) ? propertyA : +propertyA;\r\n      let valueB = isNaN(+propertyB) ? propertyB : +propertyB;\r\n\r\n      return (\r\n        (valueA < valueB ? -1 : 1) * (this.sort.direction == \"asc\" ? 1 : -1)\r\n      );\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/expensemanagement/expense.datasource.ts","module.exports = \"<div id=\\\"page-header\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n  <h2>Expenses</h2>\\r\\n</div>\\r\\n<aside id=\\\"page-content\\\">\\r\\n  <div class=\\\"row center-xs padding\\\" style=\\\"margin: 20px 0;\\\">\\r\\n    <md-toolbar color=\\\"primary\\\">\\r\\n      <!-- <md-input-container>\\r\\n                    <input mdInput #filter placeholder=\\\"Search by Supplier Name\\\">\\r\\n                    <input mdInput placeholder=\\\"Search by Supplier Name\\\" [(ngModel)]=\\\"searchObject.name\\\" (change)=\\\"callDataSource()\\\">\\r\\n            </md-input-container> -->\\r\\n\\r\\n      <div class=\\\"col-xs-2 padding-side\\\">\\r\\n        <md-input-container>\\r\\n          <input\\r\\n            mdInput\\r\\n            placeholder=\\\"Payee Name\\\"\\r\\n            [(ngModel)]=\\\"searchObject.companyName\\\"\\r\\n            (keyup)=\\\"callDataSource()\\\"\\r\\n            style=\\\"text-transform: capitalize\\\"\\r\\n          />\\r\\n        </md-input-container>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col-xs-2 padding-side\\\">\\r\\n        <md-input-container>\\r\\n          <input\\r\\n            mdInput\\r\\n            [mdDatepicker]=\\\"ExpensesFrom\\\"\\r\\n            placeholder=\\\"From Date\\\"\\r\\n            [(ngModel)]=\\\"searchObject.fromDate\\\"\\r\\n            (ngModelChange)=\\\"callDataSource()\\\"\\r\\n          />\\r\\n          <button mdSuffix [mdDatepickerToggle]=\\\"ExpensesFrom\\\"></button>\\r\\n        </md-input-container>\\r\\n        <md-datepicker #ExpensesFrom></md-datepicker>\\r\\n      </div>\\r\\n      <div class=\\\"col-xs-2 padding-side\\\">\\r\\n        <md-input-container>\\r\\n          <input\\r\\n            mdInput\\r\\n            [mdDatepicker]=\\\"ExpensesTo\\\"\\r\\n            placeholder=\\\"To Date\\\"\\r\\n            [(ngModel)]=\\\"searchObject.toDate\\\"\\r\\n            (ngModelChange)=\\\"callDataSource()\\\"\\r\\n          />\\r\\n          <button mdSuffix [mdDatepickerToggle]=\\\"ExpensesTo\\\"></button>\\r\\n        </md-input-container>\\r\\n        <md-datepicker #ExpensesTo></md-datepicker>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col-xs-2 padding-side\\\">\\r\\n        <md-select\\r\\n          placeholder=\\\"Payment Mode\\\"\\r\\n          [(ngModel)]=\\\"searchObject.paymentMode\\\"\\r\\n          (change)=\\\"callDataSource()\\\"\\r\\n        >\\r\\n          <md-option *ngFor=\\\"let item of payModeList\\\" [value]=\\\"item.key\\\">\\r\\n            {{ item.value }}\\r\\n          </md-option>\\r\\n        </md-select>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col-xs-2 padding-side\\\">\\r\\n        <md-select\\r\\n          placeholder=\\\"Period\\\"\\r\\n          [(ngModel)]=\\\"searchObject.period\\\"\\r\\n          (change)=\\\"callDataSource()\\\"\\r\\n        >\\r\\n          <md-option *ngFor=\\\"let item of periodList\\\" [value]=\\\"item.key\\\">\\r\\n            {{ item.value }}\\r\\n          </md-option>\\r\\n        </md-select>\\r\\n      </div>\\r\\n\\r\\n      <!-- <div class=\\\"col-xs-3 padding-side\\\">\\r\\n          <md-select\\r\\n            placeholder=\\\"Range\\\"\\r\\n            [(ngModel)]=\\\"searchObject.range\\\"\\r\\n            (change)=\\\"callDataSource()\\\"\\r\\n          >\\r\\n            <md-option *ngFor=\\\"let item of rangeList\\\" [value]=\\\"item.key\\\">\\r\\n              {{ item.value }}\\r\\n            </md-option>\\r\\n          </md-select>\\r\\n        </div> -->\\r\\n    </md-toolbar>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row center-xs padding\\\">\\r\\n    <md-card class=\\\"col-xs-12\\\">\\r\\n      <!--  <div class=\\\"row\\\">\\r\\n                \\r\\n                <div class=\\\"col-xs-12 end-xs padding-height\\\">\\r\\n                    <md-icon color=\\\"accent\\\">print</md-icon>\\r\\n                    <md-icon color=\\\"accent\\\">settings</md-icon>\\r\\n                </div>\\r\\n            </div> -->\\r\\n      <md-card-content class=\\\"start-xs \\\">\\r\\n        <md-table\\r\\n          #table\\r\\n          [dataSource]=\\\"dataSource\\\"\\r\\n          mdSort\\r\\n          style=\\\"height: 500px; overflow-x: auto; overflow-y: scroll;\\\"\\r\\n        >\\r\\n          <!--- Note that these columns can be defined in any order.\\r\\n          The actual rendered columns are set as a property on the row definition\\\" -->\\r\\n\\r\\n          <!-- ID Column -->\\r\\n          <ng-container cdkColumnDef=\\\"companyName\\\">\\r\\n            <md-header-cell *cdkHeaderCellDef md-sort-header\\r\\n              >Payee Name\\r\\n            </md-header-cell>\\r\\n            <md-cell *cdkCellDef=\\\"let row\\\" (click)=\\\"myFun(row)\\\">\\r\\n              {{ row.payeeId?.id != null ? row.payeeId?.name : \\\"\\\" }}\\r\\n            </md-cell>\\r\\n          </ng-container>\\r\\n          <!-- Name Column -->\\r\\n          <ng-container cdkColumnDef=\\\"billDate\\\">\\r\\n            <md-header-cell *cdkHeaderCellDef md-sort-header>\\r\\n              Bill Date\\r\\n            </md-header-cell>\\r\\n            <md-cell *cdkCellDef=\\\"let row\\\" (click)=\\\"myFun(row)\\\">\\r\\n              {{ row.billDate }}\\r\\n            </md-cell>\\r\\n          </ng-container>\\r\\n          <ng-container cdkColumnDef=\\\"amount\\\">\\r\\n            <md-header-cell *cdkHeaderCellDef md-sort-header>\\r\\n              Amount\\r\\n            </md-header-cell>\\r\\n            <md-cell *cdkCellDef=\\\"let row\\\" (click)=\\\"myFun(row)\\\">\\r\\n              {{ row.amount }}</md-cell\\r\\n            >\\r\\n          </ng-container>\\r\\n          <ng-container cdkColumnDef=\\\"paymentMode\\\">\\r\\n            <md-header-cell *cdkHeaderCellDef md-sort-header\\r\\n              >Payment Mode\\r\\n            </md-header-cell>\\r\\n            <md-cell *cdkCellDef=\\\"let row\\\" (click)=\\\"myFun(row)\\\">\\r\\n              {{ row.paymentMode }}\\r\\n            </md-cell>\\r\\n          </ng-container>\\r\\n          <!--  <ng-container cdkColumnDef=\\\"tax\\\">\\r\\n                        <md-header-cell *cdkHeaderCellDef>Tax </md-header-cell>\\r\\n                        <md-cell *cdkCellDef=\\\"let row\\\"> {{row.expenseAccountDetails.tax}} </md-cell>\\r\\n                    </ng-container>\\r\\n                    <ng-container cdkColumnDef=\\\"paymentMode\\\">\\r\\n                        <md-header-cell *cdkHeaderCellDef>PaymentMode </md-header-cell>\\r\\n                        <md-cell *cdkCellDef=\\\"let row\\\"> {{row.paymentMode}} </md-cell>\\r\\n                    </ng-container> -->\\r\\n          <!-- <ng-container cdkColumnDef=\\\"balance\\\">\\r\\n                        <md-header-cell *cdkHeaderCellDef>OpenBalance </md-header-cell>\\r\\n                        <md-cell *cdkCellDef=\\\"let row\\\"> {{row.openingBalance}} </md-cell>\\r\\n                    </ng-container> -->\\r\\n\\r\\n          <!-- Color Column -->\\r\\n          <ng-container cdkColumnDef=\\\"action\\\">\\r\\n            <md-header-cell\\r\\n              *cdkHeaderCellDef\\r\\n              fxLayoutAlign=\\\"center\\\"\\r\\n              fxFlex=\\\"10%\\\"\\r\\n              >Action</md-header-cell\\r\\n            >\\r\\n            <md-cell\\r\\n              *cdkCellDef=\\\"let row\\\"\\r\\n              (click)=\\\"onSelectedItem(row)\\\"\\r\\n              [mdMenuTriggerFor]=\\\"sendMenu\\\"\\r\\n              fxLayoutAlign=\\\"center\\\"\\r\\n              fxFlex=\\\"10%\\\"\\r\\n            >\\r\\n              <md-icon color=\\\"accent\\\">more_vert</md-icon>\\r\\n            </md-cell>\\r\\n          </ng-container>\\r\\n\\r\\n          <md-header-row\\r\\n            *cdkHeaderRowDef=\\\"displayedColumns\\\"\\r\\n            style=\\\" position: sticky;\\r\\n            top: 0;\\r\\n            z-index: 100;\\r\\n            background: white;\\\"\\r\\n          ></md-header-row>\\r\\n          <md-row *cdkRowDef=\\\"let row; columns: displayedColumns\\\"></md-row>\\r\\n        </md-table>\\r\\n      </md-card-content>\\r\\n    </md-card>\\r\\n    <md-paginator\\r\\n      style=\\\"width:100%;\\\"\\r\\n      #paginator\\r\\n      [length]=\\\"dataSource.data.length\\\"\\r\\n      [pageIndex]=\\\"0\\\"\\r\\n      [pageSize]=\\\"10\\\"\\r\\n      [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"\\r\\n    >\\r\\n    </md-paginator>\\r\\n  </div>\\r\\n  <md-menu #sendMenu=\\\"mdMenu\\\" style=\\\"padding: 1rem;\\\">\\r\\n    <!-- <button md-menu-item (click)=\\\"print()\\\"> Print </button>\\r\\n        <button md-menu-item (click)=\\\"open()\\\"> Open </button> -->\\r\\n    <button md-menu-item (click)=\\\"view()\\\">View</button>\\r\\n    <!-- <button md-menu-item (click)=\\\"download()\\\"> Download </button> -->\\r\\n    <!-- <button md-menu-item (click)=\\\"sendEmail()\\\"> Send Email </button> -->\\r\\n    <button md-menu-item (click)=\\\"edit()\\\">Edit</button>\\r\\n    <button md-menu-item (click)=\\\"delete()\\\">Delete</button>\\r\\n  </md-menu>\\r\\n</aside>\\r\\n\\r\\n<md-sidenav\\r\\n  #sidenav\\r\\n  align=\\\"end\\\"\\r\\n  mode=\\\"over\\\"\\r\\n  [opened]=\\\"showSide\\\"\\r\\n  style=\\\"width:700px\\\"\\r\\n>\\r\\n  <app-search-email\\r\\n    (close)=\\\"onClose('reload')\\\"\\r\\n    [(email)]=\\\"email\\\"\\r\\n    (emailSave)=\\\"emailSave()\\\"\\r\\n  ></app-search-email>\\r\\n</md-sidenav>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/expensemanagement/expense.search.component.html\n// module id = ../../../../../src/app/components/admin/expensemanagement/expense.search.component.html\n// module chunks = 1","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".position {\\n  position: fixed;\\n  left: 0px;\\n  right: 0px;\\n  overflow-x: hidden; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/expensemanagement/expense.search.component.scss\n// module id = ../../../../../src/app/components/admin/expensemanagement/expense.search.component.scss\n// module chunks = 1","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ViewChild,\r\n  ElementRef\r\n} from \"@angular/core\";\r\nimport { AppService } from \"../../../shared/service/app.service\";\r\nimport { AnimationService } from \"../../../shared/service/animation.service\";\r\nimport { RestService } from \"./../../../common/rest.service\";\r\nimport { Prop } from \"./../../../common/props\";\r\nimport { Util } from \"../../../shared/utils/util\";\r\nimport { ExpenseManagement } from \"../../../entities/expensemanagement\";\r\nimport { SupplierManagement } from \"../../../entities/suppliermanagement\";\r\nimport { ExpenseFormGroup } from \"../../../forms/expense.form\";\r\nimport { ExpenseDataSource } from \"./expense.datasource\";\r\nimport { ApexService } from \"../../../shared/service/apex.service\";\r\nimport {\r\n  TdDataTableService,\r\n  TdDataTableSortingOrder,\r\n  ITdDataTableSortChangeEvent,\r\n  ITdDataTableColumn\r\n} from \"@covalent/core\";\r\nimport { DataSource } from \"@angular/cdk\";\r\nimport { MdSort } from \"@angular/material\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport \"rxjs/add/observable/fromEvent\";\r\nimport \"rxjs/add/operator/debounceTime\";\r\nimport \"rxjs/add/operator/distinctUntilChanged\";\r\nimport { Email } from \"../../../entities/expenseSearchEmail.entity\";\r\nimport { DialogContentExampleDialogExpense } from \"./DialogContentExampleDialogExpense\";\r\nimport {\r\n  MdDialog,\r\n  MdDialogRef,\r\n  MD_DIALOG_DATA,\r\n  MdPaginator\r\n} from \"@angular/material\";\r\n\r\n@Component({\r\n  selector: \"app-expense-search\",\r\n  templateUrl: \"./expense.search.component.html\",\r\n  styleUrls: [\"./expense.search.component.scss\"]\r\n})\r\nexport class ExpenseSearchComponent implements OnInit {\r\n  // dataSource: any\r\n  dataSource: ExpenseDataSource = null;\r\n  supplierManagement: SupplierManagement;\r\n  suppliers: SupplierManagement[] = [];\r\n  //dataSource: SupplierDataSource = null\r\n  selectedItemForView: any = null;\r\n  displayedColumns: any[] = [\r\n    \"companyName\",\r\n    \"billDate\",\r\n    \"amount\",\r\n    \"paymentMode\",\r\n    \"action\"\r\n  ];\r\n  selectedItem: any = null;\r\n  showSide: boolean = false;\r\n  searchObject: any = {};\r\n  email: any = {};\r\n  min: Date;\r\n  max: Date;\r\n  //@ViewChild('filter') filter: ElementRef;\r\n  //searchObj: any = {};\r\n  @ViewChild(MdSort) sort: MdSort;\r\n  @ViewChild(MdPaginator) paginator: MdPaginator;\r\n\r\n  constructor(\r\n    private appService: AppService,\r\n    private restService: RestService,\r\n    private apexService: ApexService,\r\n    private _dataTableService: TdDataTableService,\r\n    public dialog: MdDialog\r\n  ) {\r\n    this.supplierManagement = new SupplierManagement();\r\n    this.retriveSuppliers();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // this.dataSource = this.restService.dataloadFromFile('./assets/json/allexpenses.json')\r\n    // console.log('hhjhjgjgj'+this.dataSource);\r\n    this.dataSource = new ExpenseDataSource(\r\n      this.restService,\r\n      this.searchObject,\r\n      this.sort,\r\n      this.paginator\r\n    );\r\n\r\n    //    $(el.nativeElement).on('click', function () {\r\n    //            $(this).confirm({\r\n    //                confirm: function () {\r\n    //                    return true;\r\n    //                }\r\n    //            });\r\n    //\r\n    //            return false;\r\n    //        });\r\n    this.payModeLoad();\r\n    this.rangeLoad();\r\n    this.periodLoad();\r\n  }\r\n\r\n  clearAll() {\r\n    this.searchObject = {};\r\n    this.dataSource = new ExpenseDataSource(\r\n      this.restService,\r\n      this.searchObject,\r\n      this.sort,\r\n      this.paginator\r\n    );\r\n    this.supplierManagement = new SupplierManagement();\r\n  }\r\n\r\n  //     @Output() confirm = new EventEmitter<any>();\r\n  //\r\n  //   constructor(private el: ElementRef) {\r\n  //   }\r\n  //\r\n  //   @HostListener('click')\r\n  //    onClick() {\r\n  //      $.confirm({\r\n  //      buttons: {\r\n  //     confirm: () => this.confirm.emit()\r\n  //   }\r\n  //  });\r\n  // }\r\n\r\n  dataList: any = [];\r\n\r\n  selectedSupplier(item: SupplierManagement) {\r\n    this.searchObject.supplierId = item.id;\r\n    this.dataSource = new ExpenseDataSource(\r\n      this.restService,\r\n      this.searchObject,\r\n      this.sort,\r\n      this.paginator\r\n    );\r\n  }\r\n  //ngOnInit(){\r\n  //    Observable.fromEvent(this.filter.nativeElement, 'keyup')\r\n  //        .debounceTime(100)\r\n  //        .distinctUntilChanged()\r\n  //        .subscribe(() => {\r\n  //          if (!this.dataSource) { return; }\r\n  //          this.dataSource.filter = this.filter.nativeElement.value;\r\n  //        });\r\n  //}\r\n  //searchObject: any = {}\r\n  //  dataList: any = []\r\n  edit() {\r\n    this.appService.navigate(\"./admin/expense-management\", [\r\n      { id: this.selectedItem.id, isEditable: true }\r\n    ]);\r\n  }\r\n\r\n  openDialog(id) {\r\n    const dialogRef = this.dialog.open(DialogContentExampleDialogExpense, {\r\n      width: \"500px\",\r\n      height: \"250px\",\r\n      data: id\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.clearAll();\r\n    });\r\n  }\r\n\r\n  delete() {\r\n    this.openDialog({ id: [this.selectedItem.id] });\r\n  }\r\n\r\n  payModeList: any[] = [];\r\n  payModeLoad() {\r\n    this.restService\r\n      .dataloadFromFile(\"./assets/json/common.json\")\r\n      .subscribe(results => {\r\n        if (results) {\r\n          this.payModeList = results[\"PayMode\"];\r\n          console.log(\"payModeList\");\r\n        }\r\n      });\r\n  }\r\n  periodList: any[] = [];\r\n  periodLoad() {\r\n    this.restService\r\n      .dataloadFromFile(\"./assets/json/common.json\")\r\n      .subscribe(results => {\r\n        this.periodList = results[\"Period\"];\r\n        // this.sortBy('value');\r\n      });\r\n  }\r\n  // sortBy(field: string) {\r\n  //   this.periodList.sort((a: any, b: any) => {\r\n  //     if (a[field] < b[field]) {\r\n  //         return -1;\r\n  //     } else if (a[field] > b[field]) {\r\n  //         return 1;\r\n  //     } else {\r\n  //         return 0;\r\n  //     }\r\n  // });\r\n  // this.periodList = this.periodList;\r\n  // }\r\n  rangeList: any[] = [];\r\n  rangeLoad() {\r\n    this.restService\r\n      .dataloadFromFile(\"./assets/json/common.json\")\r\n      .subscribe(results => {\r\n        this.rangeList = results[\"Range\"];\r\n      });\r\n  }\r\n\r\n  retriveSuppliers() {\r\n    this.restService.retriveSuppliers().subscribe(result => {\r\n      if (result) {\r\n        this.suppliers = result;\r\n        this.suppliers.forEach(item => {\r\n          item.displayName =\r\n            item.firstName + \" \" + item.middleName + \" \" + item.lastName;\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  filteredSuppliers: any[] = [];\r\n\r\n  filterSuppliers(val: string) {\r\n    this.filteredSuppliers =\r\n      val && val != \"\"\r\n        ? this.suppliers.filter(\r\n            s => s.firstName.toLowerCase().indexOf(val.toLowerCase()) >= 0\r\n          )\r\n        : this.suppliers;\r\n  }\r\n\r\n  onSelectedItem(row) {\r\n    this.selectedItem = row;\r\n  }\r\n\r\n  callDataSource() {\r\n    if (\r\n      this.searchObject.fromDate &&\r\n      typeof this.searchObject.fromDate == \"object\"\r\n    ) {\r\n      this.searchObject.fromDate = Util.ISODate(\r\n        this.searchObject.fromDate.toISOString()\r\n      );\r\n    }\r\n    if (\r\n      this.searchObject.toDate &&\r\n      typeof this.searchObject.toDate == \"object\"\r\n    ) {\r\n      this.searchObject.toDate = Util.ISODate(\r\n        this.searchObject.toDate.toISOString()\r\n      );\r\n    }\r\n    this.dataSource = new ExpenseDataSource(\r\n      this.restService,\r\n      this.searchObject,\r\n      this.sort,\r\n      this.paginator\r\n    );\r\n  }\r\n\r\n  print() {\r\n    //    this.restService.paymentPrintPDF(this.selectedItem.id);\r\n    this.restService.expensePrint(this.selectedItem.id);\r\n  }\r\n  open() {\r\n    this.restService.expenseOpen(this.selectedItem.id);\r\n  }\r\n  view() {\r\n    this.appService.navigate(\"./admin/expense-managementView\", [\r\n      { id: this.selectedItem.id }\r\n    ]);\r\n  }\r\n  download() {\r\n    this.restService.expenseDownload(this.selectedItem.id);\r\n  }\r\n\r\n  sendEmail() {\r\n    this.showSide = true;\r\n    // if (!item) {\r\n    let item = new Email();\r\n    // }\r\n    this.email = Object.assign({}, item);\r\n    this.email.to = this.selectedItem.emailId;\r\n  }\r\n  onClose(item: any) {\r\n    this.showSide = false;\r\n  }\r\n  emailSave() {\r\n    this.email.from = this.appService.getSessionUser().email;\r\n    this.email.fileName = \"Expense.pdf\";\r\n    this.email.content = btoa(this.email.message);\r\n    delete this.email.message;\r\n\r\n    this.restService\r\n      .expenseEmail(this.selectedItem.id, this.email)\r\n      .subscribe(result => {\r\n        this.showSide = false;\r\n      });\r\n  }\r\n\r\n  myFun(row) {\r\n    this.selectedItemForView = row;\r\n    this.appService.navigate(\"./admin/expense-managementView\", [\r\n      { id: this.selectedItemForView.id }\r\n    ]);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/expensemanagement/expense.search.component.ts","module.exports = \"<div id=\\\"page-header\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n  <h2>{{ isEdit ? \\\"Edit Expense\\\" : \\\"New Expense\\\" }}</h2>\\r\\n</div>\\r\\n\\r\\n<aside id=\\\"page-content\\\">\\r\\n  <div class=\\\"row center-xs parent-container\\\" style=\\\"margin: 10px 0;\\\">\\r\\n    <md-card class=\\\"col-xs-12 child-container padding\\\" style=\\\"max-width:950px;\\\">\\r\\n      <md-card-content class=\\\"start-xs \\\">\\r\\n        <form [formGroup]=\\\"myForm\\\" novalidate autocomplete=\\\"on\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <aside class=\\\"col-xs-6 padding-side\\\" style=\\\"font-size:12px\\\">\\r\\n              <md-input-container>\\r\\n                <input\\r\\n                  mdInput\\r\\n                  placeholder=\\\"Payee Name\\\"\\r\\n                  required\\r\\n                  [formControl]=\\\"myForm.controls.payee_name\\\"\\r\\n                  [(ngModel)]=\\\"expenseManagement.payeeId.name\\\"\\r\\n                  [mdAutocomplete]=\\\"payeeName\\\"\\r\\n                  (focus)=\\\"filterpayees(null)\\\"\\r\\n                  (keyup)=\\\"filterpayees($event.target.value)\\\"\\r\\n                />\\r\\n                <md-autocomplete #payeeName=\\\"mdAutocomplete\\\">\\r\\n                  <md-option\\r\\n                    *ngFor=\\\"let payee of filteredpayees\\\"\\r\\n                    value=\\\"{{ payee.name }}\\\"\\r\\n                    (click)=\\\"selectedPayee(payee)\\\"\\r\\n                  >\\r\\n                    {{ payee.name }} - {{ payee.gst_reg_number }}\\r\\n                  </md-option>\\r\\n                </md-autocomplete>\\r\\n                <md-hint>\\r\\n                  <form-messages [control]=\\\"myForm.controls.payee_name\\\">\\r\\n                  </form-messages>\\r\\n                </md-hint>\\r\\n              </md-input-container>\\r\\n            </aside>\\r\\n            <aside class=\\\"col-xs-6 padding-side\\\" style=\\\"font-size:12px\\\">\\r\\n              <md-input-container>\\r\\n                <input\\r\\n                  mdInput\\r\\n                  placeholder=\\\"Address\\\"\\r\\n                  [formControl]=\\\"myForm.controls.payee_address\\\"\\r\\n                  [(ngModel)]=\\\"expenseManagement.payeeId.address\\\"\\r\\n                />\\r\\n                <md-hint>\\r\\n                  <form-messages [control]=\\\"myForm.controls.payee_address\\\">\\r\\n                  </form-messages>\\r\\n                </md-hint>\\r\\n              </md-input-container>\\r\\n            </aside>\\r\\n            <aside class=\\\"col-xs-6 padding-side\\\" style=\\\"font-size:12px\\\">\\r\\n              <md-input-container>\\r\\n                <input\\r\\n                  mdInput\\r\\n                  placeholder=\\\"GSTIN\\\"\\r\\n                  [formControl]=\\\"myForm.controls.payee_gstin\\\"\\r\\n                  [(ngModel)]=\\\"expenseManagement.payeeId.gst_reg_number\\\"\\r\\n                />\\r\\n                <md-hint>\\r\\n                  <form-messages [control]=\\\"myForm.controls.payee_gstin\\\">\\r\\n                  </form-messages>\\r\\n                </md-hint>\\r\\n              </md-input-container>\\r\\n            </aside>\\r\\n            <aside class=\\\"col-xs-6 padding-side\\\" style=\\\"font-size:12px\\\">\\r\\n              <md-input-container>\\r\\n                <input\\r\\n                  mdInput\\r\\n                  required\\r\\n                  placeholder=\\\"Choose State\\\"\\r\\n                  [formControl]=\\\"myForm.controls.payee_address_state\\\"\\r\\n                  [(ngModel)]=\\\"expenseManagement.payeeId.state\\\"\\r\\n                  [mdAutocomplete]=\\\"states\\\"\\r\\n                  (focus)=\\\"filterStates(null)\\\"\\r\\n                  (keyup)=\\\"filterStates($event.target.value)\\\"\\r\\n                />\\r\\n                <md-autocomplete #states=\\\"mdAutocomplete\\\">\\r\\n                  <md-option\\r\\n                    *ngFor=\\\"let option of filteredStates\\\"\\r\\n                    [value]=\\\"option.key\\\"\\r\\n                  >\\r\\n                    {{ option.key }}\\r\\n                  </md-option>\\r\\n                </md-autocomplete>\\r\\n                <md-hint>\\r\\n                  <form-messages\\r\\n                    [control]=\\\"myForm.controls.payee_address_state\\\"\\r\\n                  >\\r\\n                  </form-messages>\\r\\n                </md-hint>\\r\\n              </md-input-container>\\r\\n            </aside>\\r\\n          </div>\\r\\n          <div style=\\\"font-size:12px\\\">\\r\\n            <md-input-container class=\\\"col-xs-6 padding-side\\\">\\r\\n              <input\\r\\n                mdInput\\r\\n                placeholder=\\\"Bill Date\\\"\\r\\n                required\\r\\n                [formControl]=\\\"myForm.controls.bill_date\\\"\\r\\n                [(ngModel)]=\\\"expenseManagement.billDate\\\"\\r\\n                [mdDatepicker]=\\\"billDateToggle\\\"\\r\\n                readonly\\r\\n              />\\r\\n              <button mdSuffix [mdDatepickerToggle]=\\\"billDateToggle\\\"></button>\\r\\n              <md-hint>\\r\\n                <form-messages [control]=\\\"myForm.controls.bill_date\\\">\\r\\n                </form-messages>\\r\\n              </md-hint>\\r\\n            </md-input-container>\\r\\n            <md-datepicker #billDateToggle></md-datepicker>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row \\\">\\r\\n            <md-input-container\\r\\n              class=\\\"col-xs-6 padding-side\\\"\\r\\n              style=\\\"font-size:12px\\\"\\r\\n            >\\r\\n              <input\\r\\n                mdInput\\r\\n                placeholder=\\\"Date of Payment\\\"\\r\\n                [formControl]=\\\"myForm.controls.payment_date\\\"\\r\\n                [(ngModel)]=\\\"expenseManagement.paymentDate\\\"\\r\\n                [mdDatepicker]=\\\"paymentDateToggle\\\"\\r\\n                readonly\\r\\n              />\\r\\n              <button\\r\\n                mdSuffix\\r\\n                [mdDatepickerToggle]=\\\"paymentDateToggle\\\"\\r\\n              ></button>\\r\\n              <md-hint>\\r\\n                <form-messages [control]=\\\"myForm.controls.payment_date\\\">\\r\\n                </form-messages>\\r\\n              </md-hint>\\r\\n              <!-- <md-hint *ngIf=\\\"showControls\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<span style=\\\"color: #FF0000\\\"> Payment Date should be greater than Bill Date !</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</md-hint> -->\\r\\n            </md-input-container>\\r\\n            <md-datepicker #paymentDateToggle></md-datepicker>\\r\\n\\r\\n            <div class=\\\"md-select col-xs-6 padding-side\\\">\\r\\n              <md-select\\r\\n                required\\r\\n                placeholder=\\\"Payment Method\\\"\\r\\n                [formControl]=\\\"myForm.controls.payment_mode\\\"\\r\\n                (change)=\\\"onPayModeChange(expenseManagement.paymentMode)\\\"\\r\\n                [(ngModel)]=\\\"expenseManagement.paymentMode\\\"\\r\\n              >\\r\\n                <md-option *ngFor=\\\"let item of payModeList\\\" [value]=\\\"item.key\\\">\\r\\n                  {{ item.value }}\\r\\n                </md-option>\\r\\n              </md-select>\\r\\n              <md-hint>\\r\\n                <form-messages [control]=\\\"myForm.controls.payment_mode\\\">\\r\\n                </form-messages>\\r\\n              </md-hint>\\r\\n            </div>\\r\\n\\r\\n            <md-input-container\\r\\n              class=\\\"col-xs-6 padding-side\\\"\\r\\n              style=\\\"font-size:12px\\\"\\r\\n            >\\r\\n              <input\\r\\n                mdInput\\r\\n                placeholder=\\\"Reference Number\\\"\\r\\n                [formControl]=\\\"myForm.controls.referenceNumber\\\"\\r\\n                [(ngModel)]=\\\"expenseManagement.referenceNo\\\"\\r\\n              />\\r\\n              <md-hint>\\r\\n                <form-messages [control]=\\\"myForm.controls.referenceNumber\\\">\\r\\n                </form-messages>\\r\\n              </md-hint>\\r\\n            </md-input-container>\\r\\n          </div>\\r\\n          <div class=\\\"row \\\"></div>\\r\\n\\r\\n          <aside class=\\\"row\\\" *ngIf=\\\"showCheque\\\" style=\\\"margin-top:-15px;\\\">\\r\\n            <div class=\\\"col-xs-6 padding-side\\\">\\r\\n              <md-input-container>\\r\\n                <input\\r\\n                  mdInput\\r\\n                  required\\r\\n                  placeholder=\\\"Bank\\\"\\r\\n                  [formControl]=\\\"myForm.controls.bank_name\\\"\\r\\n                  [(ngModel)]=\\\"expenseManagement.bankName\\\"\\r\\n                  [mdAutocomplete]=\\\"bankName\\\"\\r\\n                  (focus)=\\\"filterBanks(null)\\\"\\r\\n                  (keyup)=\\\"filterBanks($event.target.value)\\\"\\r\\n                />\\r\\n                <md-autocomplete #bankName=\\\"mdAutocomplete\\\">\\r\\n                  <md-option\\r\\n                    *ngFor=\\\"let keyValues of filteredBanks\\\"\\r\\n                    [value]=\\\"keyValues.key\\\"\\r\\n                  >\\r\\n                    {{ keyValues.value }}\\r\\n                  </md-option>\\r\\n                </md-autocomplete>\\r\\n                <md-hint>\\r\\n                  <form-messages [control]=\\\"myForm.controls.bank_name\\\">\\r\\n                  </form-messages>\\r\\n                </md-hint>\\r\\n              </md-input-container>\\r\\n            </div>\\r\\n\\r\\n            <md-input-container class=\\\"col-xs-6 padding-side\\\">\\r\\n              <input\\r\\n                mdInput\\r\\n                placeholder=\\\"Cheque Number\\\"\\r\\n                required\\r\\n                [formControl]=\\\"myForm.controls.cheque_number\\\"\\r\\n                [(ngModel)]=\\\"expenseManagement.chequeNo\\\"\\r\\n              />\\r\\n              <md-hint>\\r\\n                <form-messages [control]=\\\"myForm.controls.cheque_number\\\">\\r\\n                </form-messages>\\r\\n              </md-hint>\\r\\n            </md-input-container>\\r\\n\\r\\n            <md-input-container class=\\\"col-xs-6 padding-side\\\">\\r\\n              <input\\r\\n                mdInput\\r\\n                placeholder=\\\"Cheque Date\\\"\\r\\n                required\\r\\n                [formControl]=\\\"myForm.controls.cheque_date\\\"\\r\\n                [(ngModel)]=\\\"expenseManagement.chequeDate\\\"\\r\\n                [mdDatepicker]=\\\"chequeDateToggle\\\"\\r\\n                readonly\\r\\n                (ngModelChange)=\\\"comparePaymentDate()\\\"\\r\\n              />\\r\\n              <button mdSuffix [mdDatepickerToggle]=\\\"chequeDateToggle\\\"></button>\\r\\n              <md-hint>\\r\\n                <form-messages [control]=\\\"myForm.controls.cheque_date\\\">\\r\\n                </form-messages>\\r\\n              </md-hint>\\r\\n            </md-input-container>\\r\\n            <md-datepicker #chequeDateToggle></md-datepicker>\\r\\n          </aside>\\r\\n        </form>\\r\\n      </md-card-content>\\r\\n    </md-card>\\r\\n  </div>\\r\\n\\r\\n  <aside style=\\\"max-width: 98%; margin-bottom: 10px;\\\">\\r\\n    <div layout=\\\"row\\\" layout-align=\\\"end center\\\">\\r\\n      <div flex=\\\"50\\\"></div>\\r\\n      <button\\r\\n        md-raised-button\\r\\n        color=\\\"accent\\\"\\r\\n        (click)=\\\"clearItem()\\\"\\r\\n        flex=\\\"10\\\"\\r\\n        style=\\\"float: right;margin-bottom: 1em;margin-right:2px\\\"\\r\\n      >\\r\\n        Clear\\r\\n      </button>\\r\\n    </div>\\r\\n  </aside>\\r\\n\\r\\n  <div class=\\\"padding-side\\\">\\r\\n    <md-card class=\\\"invoice-form-table\\\">\\r\\n      <aside class=\\\"invoice-form-th\\\">\\r\\n        <md-list>\\r\\n          <md-list-item layout=\\\"row\\\" layout-wrap class=\\\"invoice-form-list-item\\\">\\r\\n            <span flex=\\\"5\\\" class=\\\"padding-side\\\">S.no</span>\\r\\n            <span flex=\\\"30\\\" class=\\\"padding-side\\\">Expense Particulars</span>\\r\\n            <span flex=\\\"30\\\" class=\\\"padding-side\\\">Description</span>\\r\\n            <span flex=\\\"15\\\" class=\\\"padding-side\\\">Amount</span>\\r\\n            <span flex=\\\"15\\\" class=\\\"padding-side\\\">Tax</span>\\r\\n            <span flex=\\\"10\\\" class=\\\"padding-side\\\">&nbsp;</span>\\r\\n          </md-list-item>\\r\\n        </md-list>\\r\\n      </aside>\\r\\n      <br />\\r\\n      <aside class=\\\"invoice-form-tb\\\">\\r\\n        <md-list>\\r\\n          <ng-template\\r\\n            let-index=\\\"index\\\"\\r\\n            let-item\\r\\n            let-last=\\\"last\\\"\\r\\n            ngFor\\r\\n            [ngForOf]=\\\"expenseManagement.expenseAccountDetails\\\"\\r\\n          >\\r\\n            <md-list-item layout=\\\"row\\\" *ngIf=\\\"item.expenseTypes\\\">\\r\\n              <span flex=\\\"5\\\" style=\\\"margin-left: 10px;margin-top: 20px;\\\">\\r\\n                {{ index + 1 }}</span\\r\\n              >\\r\\n\\r\\n              <span flex=\\\"30\\\" class=\\\"padding-side\\\">\\r\\n                <md-input-container>\\r\\n                  <input\\r\\n                    mdInput\\r\\n                    placeholder=\\\"Expense category\\\"\\r\\n                    required\\r\\n                    (focus)=\\\"filterExpenseType(null)\\\"\\r\\n                    (keyup)=\\\"filterExpenseType($event.target.value)\\\"\\r\\n                    [mdAutocomplete]=\\\"expenseType\\\"\\r\\n                    [(ngModel)]=\\\"item.expenseTypes.expenseName\\\"\\r\\n                    [readOnly]=\\\"isEditable == 'false'\\\"\\r\\n                    (onChange)=\\\"taxInfo()\\\"\\r\\n                  />\\r\\n                  <!-- <input mdInput placeholder=\\\"Product Category\\\" [formControl]=\\\"productForm.controls.si_category\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t (focus)=\\\"filterCategoryList($event.target.values)\\\" [(ngModel)]=\\\"stockItem.categoryName\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t (keyup)=\\\"filterCategoryList($event.target.value)\\\" [mdAutocomplete]=\\\"autoCategory\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t (change)=\\\"selectCategory($event.target.value)\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t [readOnly]=\\\"isEditable == 'false'\\\"> -->\\r\\n                  <md-autocomplete #expenseType=\\\"mdAutocomplete\\\">\\r\\n                    <md-option\\r\\n                      *ngFor=\\\"let option of filteredExpenseTypes\\\"\\r\\n                      [value]=\\\"option.expenseName\\\"\\r\\n                      (click)=\\\"item.expenseTypes.id = option.id\\\"\\r\\n                    >\\r\\n                      {{ option.expenseName }}\\r\\n                    </md-option>\\r\\n                  </md-autocomplete>\\r\\n                </md-input-container>\\r\\n              </span>\\r\\n\\r\\n              <span flex=\\\"30\\\" class=\\\"padding-side\\\">\\r\\n                <md-input-container>\\r\\n                  <input mdInput type=\\\"text\\\" [(ngModel)]=\\\"item.description\\\" />\\r\\n                </md-input-container>\\r\\n              </span>\\r\\n              <span flex=\\\"15\\\" class=\\\"padding-side\\\">\\r\\n                <md-input-container style=\\\"width:5rem\\\">\\r\\n                  <input\\r\\n                    mdInput\\r\\n                    type=\\\"number\\\"\\r\\n                    onkeydown=\\\"return event.keyCode !== 69\\\"\\r\\n                    [(ngModel)]=\\\"item.amount\\\"\\r\\n                    (change)=\\\"itemValueChange(item, 'q')\\\"\\r\\n                    [readOnly]=\\\"isReadOnlyC(item, isEditable)\\\"\\r\\n                  />\\r\\n                </md-input-container>\\r\\n              </span>\\r\\n              <span flex=\\\"15\\\" class=\\\"padding-side\\\">\\r\\n                <md-input-container style=\\\"width:5rem\\\">\\r\\n                  <input\\r\\n                    mdInput\\r\\n                    type=\\\"number\\\"\\r\\n                    onkeydown=\\\"return event.keyCode !== 69\\\"\\r\\n                    [(ngModel)]=\\\"item.tax\\\"\\r\\n                    (change)=\\\"itemValueChange(item, 'r')\\\"\\r\\n                    [readOnly]=\\\"isReadOnlyAmount(item, isEditable)\\\"\\r\\n                  />\\r\\n                </md-input-container>\\r\\n              </span>\\r\\n\\r\\n              <span flex=\\\"10\\\" class=\\\"padding-side\\\">\\r\\n                <button\\r\\n                  md-button\\r\\n                  color=\\\"accent\\\"\\r\\n                  (click)=\\\"removeItem(index)\\\"\\r\\n                  *ngIf=\\\"expenseManagement.expenseAccountDetails.length > 1\\\"\\r\\n                  style=\\\"cursor: pointer\\\"\\r\\n                >\\r\\n                  <md-icon color=\\\"accent\\\">delete</md-icon>\\r\\n                </button>\\r\\n              </span>\\r\\n            </md-list-item>\\r\\n          </ng-template>\\r\\n        </md-list>\\r\\n      </aside>\\r\\n      <br />\\r\\n    </md-card>\\r\\n\\r\\n    <md-card>\\r\\n      <div layout=\\\"row\\\" layout-align=\\\"end\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-xs-12\\\">\\r\\n            <div\\r\\n              class=\\\"font-14-px\\\"\\r\\n              style=\\\"margin:10px;\\\"\\r\\n              layout=\\\"row\\\"\\r\\n              layout-align=\\\"start\\\"\\r\\n            >\\r\\n              <span class=\\\"color-dark-gray\\\" flex=\\\"70\\\">Sub Total</span>\\r\\n              <b flex=\\\"30\\\"> {{ expenseManagement.subTotal | amount }}</b>\\r\\n            </div>\\r\\n          </div>\\r\\n          <br />\\r\\n          <div class=\\\"col-xs-12\\\">\\r\\n            <div\\r\\n              class=\\\"font-14-px\\\"\\r\\n              style=\\\"margin:10px;\\\"\\r\\n              layout=\\\"row\\\"\\r\\n              layout-align=\\\"start\\\"\\r\\n            >\\r\\n              <span class=\\\"color-dark-gray\\\" flex=\\\"70\\\">Tax</span>\\r\\n              <b flex=\\\"30\\\"> {{ expenseManagement.totalTax | amount }}</b>\\r\\n            </div>\\r\\n          </div>\\r\\n          <br />\\r\\n          <div class=\\\"col-xs-12\\\">\\r\\n            <div\\r\\n              class=\\\"font-14-px\\\"\\r\\n              style=\\\"margin:10px;\\\"\\r\\n              layout=\\\"row\\\"\\r\\n              layout-align=\\\"start\\\"\\r\\n            >\\r\\n              <span class=\\\"color-dark-gray\\\" flex=\\\"70\\\">Grand Total</span>\\r\\n              <b flex=\\\"30\\\"> {{ expenseManagement.grandTotal | amount }}</b>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </md-card>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\" style=\\\"padding: 1rem; margin-bottom: 7em;\\\">\\r\\n    <div class=\\\"col-xs-offset-6 col-xs-6 end-xs\\\">\\r\\n      <button\\r\\n        md-raised-button\\r\\n        color=\\\"accent\\\"\\r\\n        [disabled]=\\\"!myForm.valid || !isValidPurchaseOrder()\\\"\\r\\n        (click)=\\\"save()\\\"\\r\\n      >\\r\\n        {{ isEdit ? \\\"Update Expense\\\" : \\\"Save\\\" }}\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n</aside>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/expensemanagement/expensemanagement.component.html\n// module id = ../../../../../src/app/components/admin/expensemanagement/expensemanagement.component.html\n// module chunks = 1","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/expensemanagement/expensemanagement.component.scss\n// module id = ../../../../../src/app/components/admin/expensemanagement/expensemanagement.component.scss\n// module chunks = 1","import { Component, OnInit, Input, Output, EventEmitter } from \"@angular/core\";\r\nimport { AppService } from \"../../../shared/service/app.service\";\r\nimport { Storage } from \"../../../shared/utils/storage\";\r\nimport { AnimationService } from \"../../../shared/service/animation.service\";\r\nimport { RestService } from \"./../../../common/rest.service\";\r\nimport { Prop } from \"./../../../common/props\";\r\nimport { ExpenseFormGroup } from \"../../../forms/expense.form\";\r\nimport { ExpenseManagement } from \"../../../entities/expensemanagement\";\r\nimport { SupplierManagement } from \"../../../entities/suppliermanagement\";\r\n\r\nimport { ExpenseAccountDetails } from \"../../../entities/expenseaccountdetails.entity\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport \"rxjs/add/operator/startWith\";\r\nimport \"rxjs/add/operator/map\";\r\nimport { FormControl, Validators } from \"@angular/forms\";\r\nimport { ExpensePayee } from \"../../../../app/entities/expensepayee.entity\";\r\n// import { SSL_OP_ALL } from 'constants';\r\n\r\n@Component({\r\n  selector: \"app-expensemanagement\",\r\n  templateUrl: \"./expensemanagement.component.html\",\r\n  styleUrls: [\"./expensemanagement.component.scss\"]\r\n})\r\nexport class ExpensemanagementComponent implements OnInit {\r\n  myForm: any = ExpenseFormGroup.init();\r\n  expense: any;\r\n  controls: any;\r\n  // email = new FormControl('', [Validators.required, Validators.email]);\r\n\r\n  supplierManagement: SupplierManagement;\r\n  firstName: string = null;\r\n  middleName: string = null;\r\n  lastName: string = null;\r\n  suppliers: SupplierManagement[] = [];\r\n  expenseManagement: ExpenseManagement;\r\n  showElectric = false;\r\n  showCheque = false;\r\n  isRecordFound = false;\r\n  isSupplierToggle = true;\r\n  public showControls: boolean = false;\r\n  public showMsg: boolean = false;\r\n  stateList: any[] = [];\r\n  filteredStates: any[] = [];\r\n  filteredBanks: any[] = [];\r\n\r\n  sales: any;\r\n  isEditable: string = \"true\";\r\n  isEdit: boolean = false;\r\n  public isvalid: boolean;\r\n  public isInvalid: boolean;\r\n  minDate: Date;\r\n\r\n  newExpense() {\r\n    return {};\r\n  }\r\n  constructor(\r\n    private appService: AppService,\r\n    private restService: RestService\r\n  ) {\r\n    ExpenseFormGroup.newPayee(this.myForm);\r\n    ExpenseFormGroup.edit(this.myForm);\r\n\r\n    this.expenseManagement = new ExpenseManagement();\r\n\r\n    this.supplierManagement = new SupplierManagement();\r\n\r\n    this.expense = this.newExpense;\r\n    this.expenseManagement.isSupplier = true;\r\n    this.expenseManagement.payeeId.id = null;\r\n    this.minDate = this.expenseManagement.billDate = new Date();\r\n    this.minDate.setDate(this.minDate.getDate());\r\n  }\r\n\r\n  ngOnInit() {\r\n    let id = this.appService.getParam(\"id\");\r\n    this.isEditable = this.appService.getParam(\"isEditable\");\r\n    if (id !== undefined) {\r\n      this.expenseDetails(id);\r\n      this.retriveSuppliers(id);\r\n      this.isEdit = true;\r\n    } else {\r\n      this.isEdit = false;\r\n      this.isEditable = \"true\";\r\n    }\r\n\r\n    this.payModeLoad();\r\n    this.addItem();\r\n    this.clearItem();\r\n    this.bankLoad();\r\n    this.stateLoad();\r\n    this.payeeLoad();\r\n    this.retreiveExpenseType();\r\n    this.minDate = new Date();\r\n  }\r\n\r\n  stateLoad() {\r\n    this.restService\r\n      .dataloadFromFile(\"./assets/json/states.json\")\r\n      .subscribe(results => {\r\n        this.stateList = results[\"states\"];\r\n      });\r\n  }\r\n  filterStates(val: string) {\r\n    console.log(val);\r\n    this.filteredStates =\r\n      val && val != \"\"\r\n        ? this.stateList.filter(\r\n            s => s.key.toLowerCase().indexOf(val.toLowerCase()) >= 0\r\n          )\r\n        : this.stateList;\r\n  }\r\n\r\n  // Check Payment Date should be greater than Bill Date\r\n  // compareDate() {\r\n  //   let billDate = this.expenseManagement.billDate;\r\n  //   let payDate = this.expenseManagement.paymentDate;\r\n  //   if (payDate < billDate) {\r\n  //     this.showControls = true;\r\n  //   } else {\r\n  //     this.showControls = false;\r\n  //   }\r\n  // }\r\n  // Check Payment Date should be greater than cheque Date\r\n  comparePaymentDate() {\r\n    let payDate = this.expenseManagement.paymentDate;\r\n    let chequeDate = this.expenseManagement.chequeDate;\r\n    //if(chequeDate !== null){\r\n    if (chequeDate < payDate) {\r\n      this.showMsg = true;\r\n    } else {\r\n      this.showMsg = false;\r\n    }\r\n  }\r\n\r\n  onSupplierToggleChange($event) {\r\n    if ($event.checked) {\r\n      this.expenseManagement.expenseName = null;\r\n      this.expenseManagement.payeeId.id = null;\r\n    } else {\r\n      ExpenseFormGroup.newPayee(this.myForm);\r\n    }\r\n  }\r\n\r\n  onPayeeToggleChange($event) {\r\n    if ($event.checked) {\r\n      ExpenseFormGroup.newPayee(this.myForm);\r\n    }\r\n  }\r\n\r\n  onPayeeChange($event) {\r\n    console.log($event);\r\n  }\r\n\r\n  expenseDetails(id) {\r\n    this.restService.expenseEdit(id).subscribe(result => {\r\n      console.log(\"Response:\" + JSON.stringify(result));\r\n      if (result) {\r\n        this.expenseManagement = result;\r\n        this.expenseManagement.creditAccountId = result[\"creditAccountId\"];\r\n        this.expenseManagement.referenceNo = result[\"referenceNo\"];\r\n\r\n        this.isSupplierToggle = this.expenseManagement.isSupplier;\r\n        if (this.isSupplierToggle) {\r\n          ExpenseFormGroup.supplierName(this.myForm);\r\n          this.isSupplierToggle = true;\r\n          this.expenseManagement.isSupplier = true;\r\n          this.expenseManagement.expenseName = null;\r\n          this.expenseManagement.payeeId = new ExpensePayee();\r\n          this.expenseManagement.payeeId.id = null;\r\n        } else {\r\n          ExpenseFormGroup.newPayee(this.myForm);\r\n        }\r\n\r\n        this.isRecordFound = true;\r\n        this.onPayModeChange(this.expenseManagement.paymentMode);\r\n        this.totalCalculate();\r\n      }\r\n    });\r\n  }\r\n\r\n  totalCalculate() {\r\n    let subTotal: number = 0;\r\n    let totalTax: number = 0;\r\n\r\n    this.expenseManagement.expenseAccountDetails.forEach(item => {\r\n      subTotal += item.amount;\r\n      totalTax += item.tax;\r\n\r\n      console.log(\"sub total\", subTotal);\r\n      console.log(\"total tax\", totalTax);\r\n    });\r\n\r\n    this.expenseManagement.subTotal = parseFloat(subTotal.toString());\r\n    this.expenseManagement.totalTax = parseFloat(totalTax.toString());\r\n    this.expenseManagement.grandTotal =\r\n      this.expenseManagement.subTotal + this.expenseManagement.totalTax;\r\n    this.expenseManagement.amount = this.expenseManagement.grandTotal;\r\n  }\r\n\r\n  taxInfo() {\r\n    // if(this.expenseManagement.expenseName == \"\" || this.expenseManagement.expenseName == null){\r\n    //   let item = new ExpenseAccountDetails();\r\n    //   item.tax = 0;\r\n    // }\r\n    // let item = new ExpenseAccountDetails();\r\n    //    if(item.amount = 0){\r\n    //       item.tax = 0;\r\n    //     }\r\n  }\r\n\r\n  itemValueChange(item: any, field: string) {\r\n    console.log(\"field is \", field);\r\n    //  this.taxInfo();\r\n    this.itemCalculate(item);\r\n    this.totalCalculate();\r\n    if (field == \"r\") {\r\n      this.addItem();\r\n    }\r\n  }\r\n  itemCalculate(item: any) {\r\n    item.itemTotal = item.amount * item.tax;\r\n  }\r\n  addItem() {\r\n    if (\r\n      this.expenseManagement.expenseAccountDetails.length == 0 ||\r\n      this.expenseManagement.expenseAccountDetails[\r\n        this.expenseManagement.expenseAccountDetails.length - 1\r\n      ].expenseTypes != null\r\n    )\r\n      console.log(\"inside addItem\");\r\n    let item = new ExpenseAccountDetails();\r\n    item.id = null;\r\n    item.description = item.description;\r\n    item.tax = 0;\r\n    this.expenseManagement.expenseAccountDetails.push(item);\r\n  }\r\n\r\n  clearItem() {\r\n    this.expenseManagement = new ExpenseManagement();\r\n    this.myForm.reset();\r\n    setTimeout(() => {\r\n      this.addItem();\r\n    }, 10);\r\n  }\r\n\r\n  // newExpense() {\r\n  //   return {};\r\n  // }\r\n  //mycode\r\n\r\n  onPayModeChange(val: string) {\r\n    if (val == \"Cheque\") {\r\n      ExpenseFormGroup.cheque(this.myForm);\r\n\r\n      this.showCheque = true;\r\n      this.showElectric = false;\r\n      this.expenseManagement.referenceNo = null;\r\n    } else if (val == \"Electronic\") {\r\n      ExpenseFormGroup.electric(this.myForm);\r\n\r\n      this.showElectric = true;\r\n      this.showCheque = false;\r\n      this.expenseManagement.bankName = null;\r\n      this.expenseManagement.chequeNo = null;\r\n      this.expenseManagement.chequeDate = null;\r\n    } else {\r\n      ExpenseFormGroup.cash(this.myForm);\r\n      this.showCheque = false;\r\n      this.showElectric = false;\r\n      this.expenseManagement.bankName = null;\r\n      this.expenseManagement.chequeNo = null;\r\n      this.expenseManagement.chequeDate = null;\r\n      this.expenseManagement.referenceNo = null;\r\n    }\r\n  }\r\n\r\n  save() {\r\n    console.log(\"Request: \" + JSON.stringify(this.expenseManagement));\r\n    let filteredItems: ExpenseAccountDetails[] = this.expenseManagement.expenseAccountDetails.filter(\r\n      s => s.expenseTypes.id != \"undefined\" && s.expenseTypes.id != null\r\n    );\r\n    this.expenseManagement.expenseAccountDetails = filteredItems;\r\n    this.restService.expenseSave(this.expenseManagement).subscribe(result => {\r\n      let message = \"-----------------\";\r\n      if (this.isEdit) {\r\n        message = \"Expense updated successfully.\";\r\n        //this.expenseManagement = result;\r\n      } else {\r\n        message = \"Expense saved successfully.\";\r\n      }\r\n\r\n      this.appService.showMessage(message);\r\n\r\n      if (this.isRecordFound) {\r\n        this.appService.navigate(\"./admin/expense-search\", []);\r\n      } else {\r\n        this.appService.navigate(\"./admin/expense-search\", []);\r\n        //this.appService.navigate('./admin/expense-managementView', [{ id: this.expenseManagement.id }]);\r\n      }\r\n    });\r\n  }\r\n\r\n  retriveSuppliers(id: string) {\r\n    this.restService.retriveSupplier().subscribe(result => {\r\n      if (result) {\r\n        this.suppliers = result;\r\n        this.isEdit = true;\r\n        this.suppliers.forEach(item => {\r\n          item.displayName = item.companyName;\r\n        });\r\n      }\r\n    });\r\n  }\r\n  expenseTypes: any = [];\r\n  retreiveExpenseType() {\r\n    this.restService.getExpenseTypes().subscribe(res => {\r\n      if (res) {\r\n        this.expenseTypes = res;\r\n        this.sortBy(\"expenseName\");\r\n      }\r\n    });\r\n  }\r\n  sortBy(field: string) {\r\n    this.expenseTypes.sort((a: any, b: any) => {\r\n      if (a[field] < b[field]) {\r\n        return -1;\r\n      } else if (a[field] > b[field]) {\r\n        return 1;\r\n      } else {\r\n        return 0;\r\n      }\r\n    });\r\n    this.expenseTypes = this.expenseTypes;\r\n  }\r\n  payModeList: any[] = [];\r\n  payModeLoad() {\r\n    this.restService\r\n      .dataloadFromFile(\"./assets/json/common.json\")\r\n      .subscribe(results => {\r\n        if (results) {\r\n          this.payModeList = results.PayMode;\r\n        }\r\n      });\r\n  }\r\n\r\n  bankList: any[] = [];\r\n  bankLoad() {\r\n    this.restService\r\n      .dataloadFromFile(\"./assets/json/common.json\")\r\n      .subscribe(results => {\r\n        this.bankList = results.Bank;\r\n      });\r\n  }\r\n\r\n  filterBanks(val: string) {\r\n    console.log(val);\r\n    this.filteredBanks =\r\n      val && val != \"\"\r\n        ? this.bankList.filter(\r\n            s => s.key.toLowerCase().indexOf(val.toLowerCase()) >= 0\r\n          )\r\n        : this.bankList;\r\n  }\r\n\r\n  taxList: any[] = [];\r\n  taxLoad() {\r\n    this.restService\r\n      .dataloadFromFile(\"./assets/json/common.json\")\r\n      .subscribe(results => {\r\n        if (results) {\r\n          this.taxList = results.Tax;\r\n        }\r\n      });\r\n  }\r\n  // expenseTypeList: any[] = [];\r\n  // expenseTypeLoad() {\r\n  //   this.restService.dataload(\"ExpenseType\").subscribe(results => {\r\n  //     if (results) {\r\n  //       this.expenseTypeList = results;\r\n  //     }\r\n  //   });\r\n  //   this.addItem();\r\n  // }\r\n\r\n  generalExpenseList: any[] = [];\r\n  generalExpenseLoad() {\r\n    this.restService.dataload(\"GeneralExpense\").subscribe(results => {\r\n      if (results) {\r\n        this.generalExpenseList = results;\r\n      }\r\n    });\r\n  }\r\n\r\n  getDataOnSuccess(response) {\r\n    this.expenseManagement.expenseAccountDetails = response.Items;\r\n  }\r\n\r\n  removeItem(index: number) {\r\n    // if (index !== -1) {\r\n    //   // this.sales.items.splice(index, 1);\r\n    //   // this.expense.expenseDetails.splice(index, 1);\r\n    //   this.expenseManagement.expenseAccountDetails.splice(index, 1);\r\n    //   this.totalCalculate();\r\n    // }\r\n    this.expenseManagement.expenseAccountDetails[index].expenseTypes = null;\r\n    if (this.expenseManagement.expenseAccountDetails.length > 0) {\r\n      setTimeout(() => {\r\n        this.expenseManagement.expenseAccountDetails.splice(index, 1);\r\n        this.totalCalculate();\r\n      }, 10);\r\n    }\r\n  }\r\n\r\n  printPriview() {\r\n    this.restService.invoiceOpen(this.sales.id);\r\n  }\r\n  payeeList: any[] = [];\r\n  payeeListTemp: any[] = [];\r\n\r\n  payeeLoad() {\r\n    this.restService.getPayees().subscribe(results => {\r\n      this.payeeList = results;\r\n      console.log(this.payeeList);\r\n      this.payeeListTemp = results;\r\n    });\r\n  }\r\n\r\n  filteredpayees: any[] = [];\r\n\r\n  filterpayees(val: string) {\r\n    console.log(\"value selected : \", val);\r\n    console.log(this.payeeList);\r\n\r\n    this.filteredpayees =\r\n      val && val != \"\"\r\n        ? this.payeeList.filter(\r\n            s =>\r\n              s.name.toLowerCase().indexOf(val.toLowerCase()) >= 0 ||\r\n              s.gst_reg_number.toLowerCase().indexOf(val.toLowerCase()) >= 0\r\n          )\r\n        : this.payeeList;\r\n  }\r\n  gstnumber: any;\r\n  payeeId: any;\r\n\r\n  selectedPayee(payee: any) {\r\n    this.expenseManagement.payeeId.id = payee.id;\r\n    // if ()\r\n    this.expenseManagement.payeeId.gst_reg_number = payee.gst_reg_number;\r\n    this.expenseManagement.payeeId.address = payee.address;\r\n    this.expenseManagement.payeeId.state = payee.state;\r\n  }\r\n\r\n  compareByOptionId(payeeId, gstnumber) {\r\n    return payeeId && gstnumber && payeeId.id == gstnumber.id;\r\n  }\r\n\r\n  isReadOnlyC(item, isEditable) {\r\n    if (isEditable == \"true\") {\r\n      console.log(\"isEditable is \", isEditable);\r\n      console.log(\"Expense is  \", item.expenseTypes.id);\r\n      console.log(\"expense \", item.amount);\r\n      if (item.expenseTypes.id == null) {\r\n        console.log(\"Expense is  \", isEditable);\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    } else {\r\n      console.log(\"isEditable is \", isEditable);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  isReadOnlyAmount(item, isEditable) {\r\n    if (isEditable == \"true\") {\r\n      console.log(\"isEditable is \", isEditable);\r\n      console.log(\"Expense is  \", item.expenseTypes.id);\r\n      console.log(\"expense \", item.amount);\r\n      if (item.amount <= 0) {\r\n        return true;\r\n      }\r\n      if (item.expenseTypes.id == null) {\r\n        console.log(\"Expense is  \", isEditable);\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    } else {\r\n      console.log(\"isEditable is \", isEditable);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  filteredExpenseTypes: any[] = [];\r\n  filterExpenseType(val: string) {\r\n    this.filteredExpenseTypes =\r\n      val && val != \"\"\r\n        ? this.expenseTypes.filter(\r\n            s => s.expenseName.toLowerCase().indexOf(val.toLowerCase()) >= 0\r\n          )\r\n        : this.expenseTypes;\r\n  }\r\n  isValidPurchaseOrder() {\r\n    const first = this.expenseManagement.expenseAccountDetails[0];\r\n    if (first && first.expenseTypes) {\r\n      return first.amount > 0;\r\n    }\r\n    return false;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/expensemanagement/expensemanagement.component.ts","module.exports = \"<div id=\\\"page-header\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n  <h2>Expense View</h2>\\r\\n</div>\\r\\n<aside>\\r\\n  <div id=\\\"page-content\\\">\\r\\n    <div class=\\\"row center-xs parent-container\\\" style=\\\"margin: 10px 0;\\\">\\r\\n      <md-card\\r\\n        class=\\\"col-xs-12 child-container padding\\\"\\r\\n        style=\\\"max-width:950px;\\\"\\r\\n      >\\r\\n        <md-card-content class=\\\"start-xs \\\">\\r\\n          <form [formGroup]=\\\"myForm\\\" novalidate autocomplete=\\\"off\\\">\\r\\n            <aside class=\\\"row\\\" *ngIf=\\\"!isSupplierToggle\\\">\\r\\n              <aside class=\\\"col-xs-6 padding-side\\\">\\r\\n                <md-input-container>\\r\\n                  <input\\r\\n                    mdInput\\r\\n                    readonly\\r\\n                    placeholder=\\\"Payee Name\\\"\\r\\n                    [formControl]=\\\"myForm.controls.payee_name\\\"\\r\\n                    [(ngModel)]=\\\"expenseManagement.payeeId.name\\\"\\r\\n                    style=\\\"text-transform: capitalize\\\"\\r\\n                  />\\r\\n                </md-input-container>\\r\\n              </aside>\\r\\n              <aside class=\\\"col-xs-6 padding-side\\\">\\r\\n                <md-input-container>\\r\\n                  <input\\r\\n                    mdInput\\r\\n                    readonly\\r\\n                    placeholder=\\\"Address\\\"\\r\\n                    [formControl]=\\\"myForm.controls.payee_address\\\"\\r\\n                    [(ngModel)]=\\\"expenseManagement.payeeId.address\\\"\\r\\n                  />\\r\\n                </md-input-container>\\r\\n              </aside>\\r\\n              <aside class=\\\"col-xs-6 padding-side\\\">\\r\\n                <md-input-container>\\r\\n                  <input\\r\\n                    mdInput\\r\\n                    readonly\\r\\n                    placeholder=\\\"GSTIN\\\"\\r\\n                    [formControl]=\\\"myForm.controls.payee_gstin\\\"\\r\\n                    [(ngModel)]=\\\"expenseManagement.payeeId.gst_reg_number\\\"\\r\\n                  />\\r\\n                </md-input-container>\\r\\n              </aside>\\r\\n              <aside class=\\\"col-xs-6 padding-side\\\">\\r\\n                <md-input-container>\\r\\n                  <input\\r\\n                    mdInput\\r\\n                    readonly\\r\\n                    placeholder=\\\"State\\\"\\r\\n                    [formControl]=\\\"myForm.controls.payee_address_state\\\"\\r\\n                    [(ngModel)]=\\\"expenseManagement.payeeId.state\\\"\\r\\n                  />\\r\\n                </md-input-container>\\r\\n              </aside>\\r\\n            </aside>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n              <md-input-container class=\\\"col-xs-6 padding-side\\\">\\r\\n                <input\\r\\n                  readonly\\r\\n                  mdInput\\r\\n                  placeholder=\\\"Bill Date\\\"\\r\\n                  [formControl]=\\\"myForm.controls.bill_date\\\"\\r\\n                  [(ngModel)]=\\\"expenseManagement.billDate\\\"\\r\\n                  [mdDatepicker]=\\\"billDateToggle\\\"\\r\\n                />\\r\\n                <button\\r\\n                  disabled\\r\\n                  mdSuffix\\r\\n                  [mdDatepickerToggle]=\\\"billDateToggle\\\"\\r\\n                ></button>\\r\\n              </md-input-container>\\r\\n              <md-datepicker #billDateToggle></md-datepicker>\\r\\n\\r\\n              <!-- <md-input-container class=\\\"col-xs-6 padding-side\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input mdInput readonly required placeholder=\\\"Choose an Account\\\" [formControl]=\\\"myForm.controls.account_credit\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t [(ngModel)]=\\\"expenseManagement.creditAccountId.account_name\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<md-hint>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<form-messages [control]=\\\"myForm.controls.account_credit\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</form-messages>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</md-hint>\\r\\n\\t\\t\\t\\t\\t\\t\\t</md-input-container> -->\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n              <md-input-container class=\\\"col-xs-6 padding-side\\\">\\r\\n                <input\\r\\n                  readonly\\r\\n                  mdInput\\r\\n                  placeholder=\\\"Date of Payment\\\"\\r\\n                  [formControl]=\\\"myForm.controls.payment_date\\\"\\r\\n                  [(ngModel)]=\\\"expenseManagement.paymentDate\\\"\\r\\n                  [mdDatepicker]=\\\"paymentDateToggle\\\"\\r\\n                />\\r\\n                <button\\r\\n                  disabled\\r\\n                  mdSuffix\\r\\n                  [mdDatepickerToggle]=\\\"paymentDateToggle\\\"\\r\\n                ></button>\\r\\n              </md-input-container>\\r\\n              <md-datepicker #paymentDateToggle></md-datepicker>\\r\\n\\r\\n              <!-- <md-input-container class=\\\"col-xs-6 padding-side\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input mdInput readonly required placeholder=\\\"Choose an Account\\\" [formControl]=\\\"myForm.controls.account_credit\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t [(ngModel)]=\\\"expenseManagement.creditAccountId.account_name\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<md-hint>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<form-messages [control]=\\\"myForm.controls.account_credit\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</form-messages>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</md-hint>\\r\\n\\t\\t\\t\\t\\t\\t\\t</md-input-container> -->\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n              <md-input-container class=\\\"col-xs-6 padding-side\\\">\\r\\n                <input\\r\\n                  mdInput\\r\\n                  placeholder=\\\"Payment Mode\\\"\\r\\n                  readonly\\r\\n                  [formControl]=\\\"myForm.controls.payment_mode\\\"\\r\\n                  [(ngModel)]=\\\"expenseManagement.paymentMode\\\"\\r\\n                />\\r\\n                <md-hint>\\r\\n                  <form-messages [control]=\\\"myForm.controls.payment_mode\\\">\\r\\n                  </form-messages>\\r\\n                </md-hint>\\r\\n              </md-input-container>\\r\\n              <md-input-container class=\\\"col-xs-6 padding-side\\\">\\r\\n                <input\\r\\n                  readonly\\r\\n                  mdInput\\r\\n                  placeholder=\\\"Reference Number\\\"\\r\\n                  [formControl]=\\\"myForm.controls.referenceNumber\\\"\\r\\n                  [(ngModel)]=\\\"expenseManagement.referenceNo\\\"\\r\\n                />\\r\\n                <md-hint>\\r\\n                  <form-messages [control]=\\\"myForm.controls.referenceNumber\\\">\\r\\n                  </form-messages>\\r\\n                </md-hint>\\r\\n              </md-input-container>\\r\\n            </div>\\r\\n            <aside class=\\\"row\\\" *ngIf=\\\"showCheque\\\" style=\\\"margin-top:-15px;\\\">\\r\\n              <md-input-container class=\\\"col-xs-6 padding-side\\\">\\r\\n                <input\\r\\n                  readonly\\r\\n                  mdInput\\r\\n                  placeholder=\\\"Bank Name\\\"\\r\\n                  required\\r\\n                  [formControl]=\\\"myForm.controls.bank_name\\\"\\r\\n                  [(ngModel)]=\\\"expenseManagement.bankName\\\"\\r\\n                />\\r\\n                <md-hint>\\r\\n                  <form-messages [control]=\\\"myForm.controls.bank_name\\\">\\r\\n                  </form-messages>\\r\\n                </md-hint>\\r\\n              </md-input-container>\\r\\n\\r\\n              <md-input-container class=\\\"col-xs-6 padding-side\\\">\\r\\n                <input\\r\\n                  readonly\\r\\n                  mdInput\\r\\n                  placeholder=\\\"Cheque Number\\\"\\r\\n                  required\\r\\n                  [formControl]=\\\"myForm.controls.cheque_number\\\"\\r\\n                  [(ngModel)]=\\\"expenseManagement.chequeNo\\\"\\r\\n                />\\r\\n                <md-hint>\\r\\n                  <form-messages [control]=\\\"myForm.controls.cheque_number\\\">\\r\\n                  </form-messages>\\r\\n                </md-hint>\\r\\n              </md-input-container>\\r\\n\\r\\n              <md-input-container class=\\\"col-xs-6 padding-side\\\">\\r\\n                <input\\r\\n                  readonly\\r\\n                  mdInput\\r\\n                  placeholder=\\\"Cheque Date\\\"\\r\\n                  required\\r\\n                  [formControl]=\\\"myForm.controls.cheque_date\\\"\\r\\n                  [(ngModel)]=\\\"expenseManagement.chequeDate\\\"\\r\\n                  [mdDatepicker]=\\\"chequeDateToggle\\\"\\r\\n                  readonly\\r\\n                />\\r\\n                <button\\r\\n                  disabled\\r\\n                  mdSuffix\\r\\n                  [mdDatepickerToggle]=\\\"chequeDateToggle\\\"\\r\\n                ></button>\\r\\n                <md-hint>\\r\\n                  <form-messages [control]=\\\"myForm.controls.cheque_date\\\">\\r\\n                  </form-messages>\\r\\n                </md-hint>\\r\\n              </md-input-container>\\r\\n              <md-datepicker #chequeDateToggle></md-datepicker>\\r\\n            </aside>\\r\\n          </form>\\r\\n        </md-card-content>\\r\\n      </md-card>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"padding-side\\\">\\r\\n      <md-card class=\\\"invoice-form-table\\\">\\r\\n        <aside class=\\\"invoice-form-th\\\">\\r\\n          <md-list>\\r\\n            <md-list-item\\r\\n              layout=\\\"row\\\"\\r\\n              layout-wrap\\r\\n              class=\\\"invoice-form-list-item\\\"\\r\\n            >\\r\\n              <span flex=\\\"5\\\"> S.no</span>\\r\\n              <span flex=\\\"35\\\">Expense Particulars</span>\\r\\n              <span flex=\\\"30\\\">Description</span>\\r\\n              <span flex=\\\"15\\\">Amount</span>\\r\\n              <span flex=\\\"15\\\">Tax</span>\\r\\n            </md-list-item>\\r\\n          </md-list>\\r\\n        </aside>\\r\\n        <br />\\r\\n        <aside class=\\\"invoice-form-tb\\\">\\r\\n          <md-list>\\r\\n            <ng-template\\r\\n              let-index=\\\"index\\\"\\r\\n              let-item\\r\\n              let-last=\\\"last\\\"\\r\\n              ngFor\\r\\n              [ngForOf]=\\\"expenseManagement.expenseAccountDetails\\\"\\r\\n            >\\r\\n              <md-list-item layout=\\\"row\\\">\\r\\n                <span flex=\\\"10\\\"> {{ index + 1 }}</span>\\r\\n                <!-- <span flex=\\\"35\\\" style=\\\"margin-top:-20px; margin-right: 10px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<md-input-container>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input mdInput placeholder=\\\"AccountName\\\" readonly [(ngModel)]=\\\"item.debitAccountId.account_name\\\" />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</md-input-container>\\r\\n                </span> -->\\r\\n                <span flex=\\\"70\\\" style=\\\"margin-top:-20px; margin-right: 10px\\\">\\r\\n                  <md-input-container>\\r\\n                    <input\\r\\n                      readonly\\r\\n                      mdInput\\r\\n                      type=\\\"text\\\"\\r\\n                      [(ngModel)]=\\\"item.expenseTypes.expenseName\\\"\\r\\n                    />\\r\\n                  </md-input-container>\\r\\n                </span>\\r\\n                <span flex=\\\"60\\\" style=\\\"margin-top:-20px; margin-right: 10px\\\">\\r\\n                  <md-input-container>\\r\\n                    <input\\r\\n                      readonly\\r\\n                      mdInput\\r\\n                      type=\\\"text\\\"\\r\\n                      [(ngModel)]=\\\"item.description\\\"\\r\\n                    />\\r\\n                  </md-input-container>\\r\\n                </span>\\r\\n                <span flex=\\\"30\\\" style=\\\"margin-top:-20px; margin-right: 10px\\\">\\r\\n                  <md-input-container>\\r\\n                    <input\\r\\n                      readonly\\r\\n                      mdInput\\r\\n                      type=\\\"text\\\"\\r\\n                      [(ngModel)]=\\\"item.amount\\\"\\r\\n                    />\\r\\n                  </md-input-container>\\r\\n                </span>\\r\\n                <span flex=\\\"30\\\" style=\\\"margin-top:-20px; \\\">\\r\\n                  <md-input-container>\\r\\n                    <input\\r\\n                      mdInput\\r\\n                      placeholder=\\\"Tax\\\"\\r\\n                      readonly\\r\\n                      [(ngModel)]=\\\"item.tax\\\"\\r\\n                    />\\r\\n                  </md-input-container>\\r\\n                </span>\\r\\n              </md-list-item>\\r\\n            </ng-template>\\r\\n          </md-list>\\r\\n        </aside>\\r\\n      </md-card>\\r\\n\\r\\n      <md-card style=\\\"margin-bottom: 80px;\\\">\\r\\n        <div layout=\\\"row\\\" layout-align=\\\"end\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-xs-12\\\">\\r\\n              <div\\r\\n                class=\\\"font-14-px\\\"\\r\\n                style=\\\"margin:10px;\\\"\\r\\n                layout=\\\"row\\\"\\r\\n                layout-align=\\\"start\\\"\\r\\n              >\\r\\n                <span class=\\\"color-dark-gray\\\" flex=\\\"70\\\">Sub Total</span>\\r\\n                <b flex=\\\"30\\\"> {{ expenseManagement.subTotal | amount }}</b>\\r\\n              </div>\\r\\n            </div>\\r\\n            <br />\\r\\n            <div class=\\\"col-xs-12\\\">\\r\\n              <div\\r\\n                class=\\\"font-14-px\\\"\\r\\n                style=\\\"margin:10px;\\\"\\r\\n                layout=\\\"row\\\"\\r\\n                layout-align=\\\"start\\\"\\r\\n              >\\r\\n                <span class=\\\"color-dark-gray\\\" flex=\\\"70\\\">Tax</span>\\r\\n                <b flex=\\\"30\\\"> {{ expenseManagement.totalTax | amount }}</b>\\r\\n              </div>\\r\\n            </div>\\r\\n            <br />\\r\\n            <div class=\\\"col-xs-12\\\">\\r\\n              <div\\r\\n                class=\\\"font-14-px\\\"\\r\\n                style=\\\"margin:10px;\\\"\\r\\n                layout=\\\"row\\\"\\r\\n                layout-align=\\\"start\\\"\\r\\n              >\\r\\n                <span class=\\\"color-dark-gray\\\" flex=\\\"70\\\">Grand Total</span>\\r\\n                <b flex=\\\"30\\\"> {{ expenseManagement.grandTotal | amount }}</b>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end end\\\">\\r\\n          <button md-raised-button color=\\\"accent\\\" (click)=\\\"done()\\\">\\r\\n            Done\\r\\n          </button>\\r\\n        </div>\\r\\n      </md-card>\\r\\n    </div>\\r\\n    <!-- dynamic table -->\\r\\n    <!-- dynamic table -->\\r\\n  </div>\\r\\n</aside>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/expensemanagement/expensemanagement.view.component.html\n// module id = ../../../../../src/app/components/admin/expensemanagement/expensemanagement.view.component.html\n// module chunks = 1","import { Component, OnInit, Input, Output, EventEmitter } from \"@angular/core\";\r\nimport { AppService } from \"../../../shared/service/app.service\";\r\nimport { Storage } from \"../../../shared/utils/storage\";\r\nimport { AnimationService } from \"../../../shared/service/animation.service\";\r\nimport { RestService } from \"./../../../common/rest.service\";\r\nimport { Prop } from \"./../../../common/props\";\r\nimport { ExpenseFormGroup } from \"../../../forms/expense.form\";\r\nimport { ExpenseManagement } from \"../../../entities/expensemanagement\";\r\nimport { SupplierManagement } from \"../../../entities/suppliermanagement\";\r\n\r\nimport { ExpenseAccountDetails } from \"../../../entities/expenseaccountdetails.entity\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport \"rxjs/add/operator/startWith\";\r\nimport \"rxjs/add/operator/map\";\r\nimport { FormControl } from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: \"app-expensemanagement\",\r\n  templateUrl: \"./expensemanagement.view.component.html\",\r\n  styleUrls: [\"./expensemanagement.component.scss\"]\r\n})\r\nexport class ExpensemanagementViewComponent implements OnInit {\r\n  myForm: any = ExpenseFormGroup.init();\r\n  expense: any;\r\n  supplierManagement: SupplierManagement;\r\n  firstName: string = null;\r\n  middleName: string = null;\r\n  lastName: string = null;\r\n  suppliers: SupplierManagement[] = [];\r\n  expenseManagement: ExpenseManagement;\r\n  showElectric = false;\r\n  showCheque = false;\r\n  isRecordFound = false;\r\n  isSupplierToggle = true;\r\n  chartAccounts: any[] = [];\r\n  filteredChartAccounts: any[] = [];\r\n\r\n  constructor(\r\n    private appService: AppService,\r\n    private restService: RestService\r\n  ) {\r\n    ExpenseFormGroup.edit(this.myForm);\r\n    ExpenseFormGroup.supplierName(this.myForm);\r\n\r\n    this.expenseManagement = new ExpenseManagement();\r\n\r\n    this.retriveSuppliers();\r\n    // this.chartAccountsLoad();\r\n    this.expense = this.newExpense;\r\n\r\n    let id = this.appService.getParam(\"id\");\r\n    if (id !== undefined) {\r\n      this.expenseDetails(id);\r\n      console.log(\"id :\" + id);\r\n    }\r\n  }\r\n\r\n  //    onExpenceChange($event) {\r\n  //        if ($event.checked) {\r\n  //            ExpenseFormGroup.supplierName(this.myForm);\r\n  //            this.isSupplierToggle = true;\r\n  //            this.expenseManagement.isSupplier = true;\r\n  //            this.expenseManagement.expenseName = null;\r\n  //\r\n  //        } else {\r\n  //            ExpenseFormGroup.expenseName(this.myForm);\r\n  //            this.isSupplierToggle = false;\r\n  //            this.expenseManagement.isSupplier = false;\r\n  //            this.expenseManagement.supplierId.id = null;\r\n  //\r\n  //        }\r\n  //\r\n  //    }\r\n\r\n  expenseDetails(id) {\r\n    this.restService.expenseEdit(id).subscribe(result => {\r\n      if (result) {\r\n        this.expenseManagement = result;\r\n        this.isRecordFound = true;\r\n        this.onPayModeChange(this.expenseManagement.paymentMode);\r\n        this.isSupplierToggle = this.expenseManagement.isSupplier;\r\n\r\n        if (this.expenseManagement.isSupplier) {\r\n          ExpenseFormGroup.supplierName(this.myForm);\r\n          this.isSupplierToggle = true;\r\n          this.expenseManagement.isSupplier = true;\r\n          this.expenseManagement.expenseName = null;\r\n        } else {\r\n          ExpenseFormGroup.newPayee(this.myForm);\r\n        }\r\n        this.totalCalculate();\r\n      }\r\n    });\r\n  }\r\n\r\n  totalCalculate() {\r\n    let subTotal = 0;\r\n    let totalTax = 0;\r\n    let grandTotal = 0;\r\n    this.expenseManagement.expenseAccountDetails.forEach(item => {\r\n      let itemTax = 0;\r\n      let itemTotal = 0;\r\n\r\n      subTotal += item.amount;\r\n      totalTax += item.tax;\r\n    });\r\n\r\n    this.expenseManagement.subTotal = parseFloat(subTotal.toString());\r\n    this.expenseManagement.totalTax = parseFloat(totalTax.toString());\r\n    this.expenseManagement.grandTotal =\r\n      this.expenseManagement.subTotal + this.expenseManagement.totalTax;\r\n    this.expenseManagement.amount = this.expenseManagement.grandTotal;\r\n  }\r\n\r\n  ngOnInit() {\r\n    //this.supplierLoad();\r\n    // this.payModeLoad();\r\n    this.addItem();\r\n    // this.taxLoad();\r\n    // this.expenseTypeLoad();\r\n  }\r\n\r\n  // private chartAccountsLoad(){\r\n  //     this.restService.dataload(\"chartaccounts\")\r\n  //     .subscribe(results =>{\r\n  //         this.chartAccounts = results\r\n  //     });\r\n  // }\r\n\r\n  addItem() {\r\n    console.log(\"inside addItem\");\r\n    let item = new ExpenseAccountDetails();\r\n    item.id = null;\r\n\r\n    item.expenseTypes.id = null;\r\n    item.description = item.description;\r\n    item.amount = item.amount;\r\n    item.tax = item.tax;\r\n    this.expenseManagement.expenseAccountDetails.push(item);\r\n  }\r\n\r\n  newExpense() {\r\n    return {};\r\n  }\r\n  //mycode\r\n\r\n  onPayModeChange(val: string) {\r\n    if (val == \"Cheque\") {\r\n      ExpenseFormGroup.cheque(this.myForm);\r\n\r\n      this.showCheque = true;\r\n      this.showElectric = false;\r\n      this.expenseManagement.referenceNo = null;\r\n    } else if (val == \"Electronic\") {\r\n      ExpenseFormGroup.electric(this.myForm);\r\n\r\n      this.showElectric = true;\r\n      this.showCheque = false;\r\n      this.expenseManagement.bankName = null;\r\n      this.expenseManagement.chequeNo = null;\r\n      this.expenseManagement.chequeDate = null;\r\n    } else {\r\n      ExpenseFormGroup.cash(this.myForm);\r\n      this.showCheque = false;\r\n      this.showElectric = false;\r\n      this.expenseManagement.bankName = null;\r\n      this.expenseManagement.chequeNo = null;\r\n      this.expenseManagement.chequeDate = null;\r\n      this.expenseManagement.referenceNo = null;\r\n    }\r\n  }\r\n\r\n  finish() {\r\n    this.appService.navigate(\"./admin/expense-management\", []);\r\n  }\r\n\r\n  retriveSuppliers() {\r\n    this.restService.retriveSuppliers().subscribe(result => {\r\n      if (result) {\r\n        this.suppliers = result;\r\n        this.suppliers.forEach(item => {\r\n          item.displayName =\r\n            item.firstName + \" \" + item.middleName + \" \" + item.lastName;\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  filteredSuppliers: any[] = [];\r\n\r\n  filterSuppliers(val: string) {\r\n    this.filteredSuppliers =\r\n      val && val != \"\"\r\n        ? this.suppliers.filter(\r\n            s => s.firstName.toLowerCase().indexOf(val.toLowerCase()) >= 0\r\n          )\r\n        : this.suppliers;\r\n  }\r\n\r\n  //   payModeList: any[] = [];\r\n  //   payModeLoad() {\r\n  //     this.restService.dataload(\"PayMode\").subscribe(results => {\r\n  //       if (results) {\r\n  //         this.payModeList = results;\r\n  //       }\r\n  //     });\r\n  //   }\r\n\r\n  //   taxList: any[] = [];\r\n  //   taxLoad() {\r\n  //     this.restService.dataload(\"Tax\").subscribe(results => {\r\n  //       if (results) {\r\n  //         this.taxList = results;\r\n  //       }\r\n  //     });\r\n  //   }\r\n  //   expenseTypeList: any[] = [];\r\n  //   expenseTypeLoad() {\r\n  //     this.restService.dataload(\"ExpenseType\").subscribe(results => {\r\n  //       if (results) {\r\n  //         this.expenseTypeList = results;\r\n  //       }\r\n  //     });\r\n  //   }\r\n\r\n  removeItem(index: number) {\r\n    if (index !== -1) {\r\n      // this.sales.items.splice(index, 1);\r\n      // this.expense.expenseDetails.splice(index, 1);\r\n      this.expenseManagement.expenseAccountDetails.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  printPriview() {\r\n    //    this.restService.invoiceOpen(this.sales.id);\r\n  }\r\n\r\n  done() {\r\n    this.appService.navigate(\"/admin/expense-search\", []);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/expensemanagement/expensemanagement.view.component.ts","import {\r\n  Component,\r\n  Inject,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ViewChild,\r\n  ElementRef\r\n} from \"@angular/core\";\r\nimport { MdDialog, MdDialogRef, MD_DIALOG_DATA } from \"@angular/material\";\r\nimport { RestService } from \"../../../common/rest.service\";\r\nimport { AppService } from \"../../../shared/service/app.service\";\r\n\r\nimport {\r\n  TdDataTableService,\r\n  TdDataTableSortingOrder,\r\n  ITdDataTableSortChangeEvent,\r\n  ITdDataTableColumn\r\n} from \"@covalent/core\";\r\n@Component({\r\n  selector: \"dialog-content-example-dialog\",\r\n  template:\r\n    '<h2 style=\"color:#000;\">Delete Confirmation</h2><hr style=\"background:#fff;\" /><br/><p style=\"font-size:16px;\">Are you sure you want to delete invoice ?</p><br/><br/><button  md-button color=\"primary\" (click)=\"ok()\" style=\"background:#ffc107; color:#fff;\">Yes</button><button md-button color=\"primary\" (click)=\"cancel()\" style=\"float:right; background:#ffc107; color:#fff;\">No</button>'\r\n})\r\nexport class DialogContentExampleDialogInvoice {\r\n  id: any = null;\r\n  toIsoString;\r\n  selectedItem: any;\r\n\r\n  constructor(\r\n    private restService: RestService,\r\n    private appService: AppService,\r\n    public dialogRef: MdDialogRef<DialogContentExampleDialogInvoice>,\r\n    @Inject(MD_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.id = data;\r\n  }\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  ok() {\r\n    this.restService.invoiceDelete(this.id).subscribe(result => {\r\n      this.dialogRef.close();\r\n      this.appService.showMessage(\"Invoice Deleted Successfully \");\r\n    });\r\n  }\r\n  cancel() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  print(cmpName) {\r\n    let printContents = document.getElementById(cmpName).innerHTML;\r\n    let originalContents = document.body.innerHTML;\r\n\r\n    this.print(printContents);\r\n    this.print(originalContents);\r\n    document.body.innerHTML = printContents;\r\n\r\n    window.print();\r\n\r\n    //  document.body.innerHTML = originalContents;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/invoice/DialogContentExampleDialogInvoice.ts","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { DataSource } from \"@angular/cdk\";\r\nimport { AppService } from \"../../../shared/service/app.service\";\r\nimport { AnimationService } from \"../../../shared/service/animation.service\";\r\nimport { RestService } from \"../../../common/rest.service\";\r\nimport { MdSort, MdPaginator } from \"@angular/material\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport \"rxjs/add/observable/merge\";\r\n\r\nexport class InvoiceDataSource extends DataSource<any> {\r\n  public data: any[] = [];\r\n  renderedData: any[] = [];\r\n  constructor(\r\n    private restService: RestService,\r\n    private searchObj: any,\r\n    private sort: MdSort,\r\n    private paginator: MdPaginator\r\n  ) {\r\n    super();\r\n    this.getDataList();\r\n  }\r\n\r\n  getDataList() {\r\n    console.log(this.searchObj);\r\n    this.restService.showLoader(true);\r\n    this.restService.searchInvoice(this.searchObj).subscribe(results => {\r\n      if (results) {\r\n        this.data = results;\r\n        this.restService.showLoader(false);\r\n        console.log(this.data);\r\n      }\r\n    });\r\n  }\r\n  /** Connect function called by the table to retrieve aone stream containing the data to render. */\r\n  connect(): any {\r\n    const displayDataChanges = [\r\n      this.restService.searchInvoice(this.searchObj),\r\n      this.sort.mdSortChange,\r\n      this.paginator.page\r\n    ];\r\n\r\n    return Observable.merge(...displayDataChanges).map(() => {\r\n      //return this.getSortedData();\r\n      //const myData = this.data.slice();\r\n      const myData = this.getSortedData();\r\n\r\n      // Grab the page's slice of data.\r\n      const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n      return myData.splice(startIndex, this.paginator.pageSize);\r\n      //return this.getSortedData();\r\n    });\r\n    // return Promise.resolve([])\r\n  }\r\n\r\n  disconnect() {}\r\n\r\n  getSortedData(): any[] {\r\n    const data = this.data.slice();\r\n    if (this.sort.active && this.sort.direction == \"\") {\r\n      return data;\r\n    }\r\n\r\n    return data.sort((a, b) => {\r\n      let propertyA: number | string | Date = \"\";\r\n      let propertyB: number | string | Date = \"\";\r\n      switch (this.sort.active) {\r\n        case \"date\":\r\n          [propertyA, propertyB] = [a.invoiceDate, b.invoiceDate];\r\n          break;\r\n        case \"invoice\":\r\n          [propertyA, propertyB] = [a.invoiceNumber, b.invoiceNumber];\r\n          break;\r\n        case \"businessName\":\r\n          [propertyA, propertyB] = [\r\n            a.customer.businessName,\r\n            b.customer.businessName\r\n          ];\r\n          break;\r\n        case \"mobile\":\r\n          [propertyA, propertyB] = [a.customer.mobile, b.customer.mobile];\r\n          break;\r\n        case \"amount\":\r\n          [propertyA, propertyB] = [a.total, b.total];\r\n          break;\r\n        case \"invoicetype\":\r\n          [propertyA, propertyB] = [a.invoiceType, b.invoiceType];\r\n          break;\r\n        case \"fromDate\":\r\n          [propertyA, propertyB] = [a.fromDate, b.fromDate];\r\n          break;\r\n        case \"toDate\":\r\n          [propertyA, propertyB] = [a.toDate, b.toDate];\r\n          break;\r\n      }\r\n      let valueA = isNaN(+propertyA) ? propertyA : +propertyA;\r\n      let valueB = isNaN(+propertyB) ? propertyB : +propertyB;\r\n\r\n      return (\r\n        (valueA < valueB ? -1 : 1) * (this.sort.direction == \"asc\" ? 1 : -1)\r\n      );\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/invoice/invoice.datasource.ts","module.exports = \"<div id=\\\"page-header\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n        <h2>Edit Invoice</h2>\\r\\n    </div>\\r\\n    \\r\\n    <aside id=\\\"page-content\\\">\\r\\n        <div class=\\\"row center-xs parent-container\\\" style=\\\"margin: 20px 0;\\\">\\r\\n            <md-card class=\\\"col-xs-12 child-container padding\\\" style=\\\"max-width:950px;\\\">\\r\\n                <md-card-content class=\\\"start-xs \\\">\\r\\n                    <form [formGroup]=\\\"myForm\\\" novalidate autocomplete='off'>\\r\\n                        <div class=\\\"row \\\">\\r\\n                            <!--                         <md-input-container class=\\\"col-xs-8 padding-side\\\"> -->\\r\\n                            <!--                             <input mdInput placeholder=\\\"Search by Product or Service\\\" [(ngModel)]=\\\"product.productName\\\" (focus)=\\\"filterProducts(null)\\\" (keyup)=\\\"filterProducts($event.target.value)\\\" [mdAutocomplete]=\\\"autoProducts\\\" [ngModelOptions]=\\\"{standalone: true}\\\"> -->\\r\\n                            <!--                             <md-autocomplete #autoProducts=\\\"mdAutocomplete\\\"> -->\\r\\n                            <!--                                 <md-option *ngFor=\\\"let option of filteredProducts\\\" [value]=\\\"option.productName\\\" (click)=\\\"selectedProduct(option)\\\"> -->\\r\\n                            <!--                                     <b> {{ option.productName }} </b> - {{option.productCode}} -->\\r\\n                            <!--                                 </md-option> -->\\r\\n                            <!--                             </md-autocomplete> -->\\r\\n                            <!--                         </md-input-container> -->\\r\\n    \\r\\n    \\r\\n    \\r\\n                            <md-input-container class=\\\"col-xs-12 padding-side \\\">\\r\\n                                <input mdInput placeholder=\\\"Choose Customer\\\" [ngModel]=\\\"customer.mobile\\\" (focus)=\\\"filterPhones(null)\\\"\\r\\n                                    type=\\\"number\\\" (keyup)=\\\"filterPhones($event.target.value)\\\" [mdAutocomplete]=\\\"autoMobile\\\"\\r\\n                                    [ngModelOptions]=\\\"{standalone: true}\\\" (change)=\\\"selectedCustomer($event.target.value)\\\">\\r\\n                                <md-autocomplete #autoMobile=\\\"mdAutocomplete\\\">\\r\\n                                    <md-option *ngFor=\\\"let option of filteredPhones \\\" (click)=\\\"selectedCustomer(option)\\\">\\r\\n                                        {{ option.firstName }} - {{option.mobile}}\\r\\n                                    </md-option>\\r\\n                                </md-autocomplete>\\r\\n                            </md-input-container>\\r\\n    \\r\\n                            <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n                                <input mdInput placeholder=\\\"Customer Name\\\" [(ngModel)]=\\\"customer.firstName\\\" required\\r\\n                                    [formControl]=\\\"myForm.controls.sales_firstName\\\">\\r\\n                                <md-hint>\\r\\n                                    <form-messages [control]=\\\"myForm.controls.sales_firstName \\\"> </form-messages>\\r\\n                                </md-hint>\\r\\n                            </md-input-container>\\r\\n                            <!-- <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n                                <input mdInput placeholder=\\\"Mobile Number\\\" [(ngModel)]=\\\"customer.mobile\\\" type=\\\"number\\\"\\r\\n                                    required [formControl]=\\\"myForm.controls.sales_mobile\\\">\\r\\n                                <md-hint>\\r\\n                                    <form-messages [control]=\\\"myForm.controls.sales_mobile\\\"> </form-messages>\\r\\n                                </md-hint>\\r\\n                            </md-input-container>\\r\\n                            <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n                                <input mdInput placeholder=\\\"Address\\\" [(ngModel)]=\\\"customer.inlineAddress\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                            </md-input-container> -->\\r\\n                            <!-- <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n                                <input mdInput placeholder=\\\"Customer Email\\\" [(ngModel)]=\\\"customer.email\\\" [formControl]=\\\"myForm.controls.sales_email\\\">\\r\\n                                <md-hint>\\r\\n                                    <form-messages [control]=\\\"myForm.controls.sales_email\\\"> </form-messages>\\r\\n                                </md-hint>\\r\\n                            </md-input-container>\\r\\n                            <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n                                <input mdInput placeholder=\\\"State\\\" [(ngModel)]=\\\"customer.address.state\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                            </md-input-container> -->\\r\\n                            <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n                                <input mdInput placeholder=\\\"Purchase order Number\\\" [(ngModel)]=\\\"customer.webSite\\\" [formControl]=\\\"myForm.controls.sales_website\\\">\\r\\n                                <md-hint>\\r\\n                                    <form-messages [control]=\\\"myForm.controls.sales_website\\\"> </form-messages>\\r\\n                                </md-hint>\\r\\n                            </md-input-container>\\r\\n                            <div class=\\\"md-select col-xs-4 padding-side\\\">\\r\\n                                <md-select placeholder=\\\"Invoice Type\\\" [formControl]=\\\"myForm.controls.sales_termsOfPayment\\\"\\r\\n                                    [(ngModel)]=\\\"sales.paymentTerms\\\">\\r\\n                                    <md-option *ngFor=\\\"let item of termsList\\\" [value]=\\\"item[0]\\\">\\r\\n                                        {{item[1]}}\\r\\n                                    </md-option>\\r\\n                                </md-select>\\r\\n                                <md-hint>\\r\\n                                    <form-messages [control]=\\\"myForm.controls.sales_termsOfPayment \\\"> </form-messages>\\r\\n                                </md-hint>\\r\\n                            </div>\\r\\n                            <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n                                <input mdInput required placeholder=\\\"Invoice Date\\\" [formControl]=\\\"myForm.controls.sales_invoiceDate \\\"\\r\\n                                    [(ngModel)]=\\\"sales.invoiceDate\\\" [mdDatepicker]=\\\"invoiceDateToggle\\\" readonly>\\r\\n                                <button mdSuffix [mdDatepickerToggle]=\\\"invoiceDateToggle\\\"></button>\\r\\n                                <md-hint>\\r\\n                                    <form-messages [control]=\\\"myForm.controls.sales_invoiceDate \\\"> </form-messages>\\r\\n                                </md-hint>\\r\\n                            </md-input-container>\\r\\n                            <md-datepicker #invoiceDateToggle></md-datepicker>\\r\\n                            <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n                                <input mdInput placeholder=\\\"Due Date\\\" [formControl]=\\\"myForm.controls.sales_dueDate \\\"\\r\\n                                    [(ngModel)]=\\\"sales.dueDate\\\" [mdDatepicker]=\\\"dueDateToggle\\\" readonly>\\r\\n                                <button mdSuffix [mdDatepickerToggle]=\\\"dueDateToggle\\\"></button>\\r\\n                                <md-hint>\\r\\n                                    <form-messages [control]=\\\"myForm.controls.sales_dueDate \\\"> </form-messages>\\r\\n                                </md-hint>\\r\\n                            </md-input-container>\\r\\n                            <md-datepicker #dueDateToggle></md-datepicker>\\r\\n                        </div>\\r\\n                    </form>\\r\\n                    <span class=\\\"padding\\\">Billing Address is same as Shipping address:</span>\\r\\n                    <md-slide-toggle color=\\\"primary\\\" [(ngModel)]=\\\"sales.isBillingAddress\\\" (change)=\\\"onAddressChange($event)\\\">\\r\\n                    </md-slide-toggle>\\r\\n                    <aside class=\\\"row\\\" *ngIf=\\\"showAddress\\\">\\r\\n    \\r\\n                        <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n                            <input mdInput required placeholder=\\\"H.no\\\" [formControl]=\\\"myForm.controls.sales_address_lane \\\"\\r\\n                                [(ngModel)]=\\\"sales.address.lane\\\">\\r\\n                            <md-hint>\\r\\n                                <form-messages [control]=\\\"myForm.controls.sales_address_lane \\\"> </form-messages>\\r\\n                            </md-hint>\\r\\n                        </md-input-container>\\r\\n    \\r\\n                        <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n                            <input mdInput required placeholder=\\\"Street\\\" [formControl]=\\\"myForm.controls.sales_address_street \\\"\\r\\n                                [(ngModel)]=\\\"sales.address.street\\\">\\r\\n                            <md-hint>\\r\\n                                <form-messages [control]=\\\"myForm.controls.sales_address_street \\\"> </form-messages>\\r\\n                            </md-hint>\\r\\n                        </md-input-container>\\r\\n    \\r\\n                        <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n                            <input mdInput required placeholder=\\\"Area\\\" [formControl]=\\\"myForm.controls.sales_address_area \\\"\\r\\n                                [(ngModel)]=\\\"sales.address.area\\\">\\r\\n                            <md-hint>\\r\\n                                <form-messages [control]=\\\"myForm.controls.sales_address_area \\\"> </form-messages>\\r\\n                            </md-hint>\\r\\n                        </md-input-container>\\r\\n    \\r\\n                        <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n                            <input mdInput required placeholder=\\\"City\\\" [formControl]=\\\"myForm.controls.sales_address_city \\\"\\r\\n                                [(ngModel)]=\\\"sales.address.city\\\">\\r\\n                            <md-hint>\\r\\n                                <form-messages [control]=\\\"myForm.controls.sales_address_city \\\"> </form-messages>\\r\\n                            </md-hint>\\r\\n                        </md-input-container>\\r\\n    \\r\\n                        <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n                            <input mdInput required placeholder=\\\"State\\\" [formControl]=\\\"myForm.controls.sales_address_state \\\"\\r\\n                                [(ngModel)]=\\\"sales.address.state\\\">\\r\\n                            <md-hint>\\r\\n                                <form-messages [control]=\\\"myForm.controls.sales_address_state \\\"> </form-messages>\\r\\n                            </md-hint>\\r\\n                        </md-input-container>\\r\\n    \\r\\n                        <!--<md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n                            <input mdInput placeholder=\\\"Country\\\" [(ngModel)]=\\\"sales.address.country\\\">\\r\\n                        </md-input-container>-->\\r\\n    \\r\\n                        <!-- <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n                            <input mdInput required placeholder=\\\"Zipcode\\\" [formControl]=\\\"myForm.controls.sales_address_zipCode \\\"\\r\\n                                [(ngModel)]=\\\"sales.address.zipCode\\\">\\r\\n                            <md-hint>\\r\\n                                <form-messages [control]=\\\"myForm.controls.sales_address_zipCode \\\"> </form-messages>\\r\\n                            </md-hint>\\r\\n                        </md-input-container> -->\\r\\n    \\r\\n    \\r\\n                    </aside>\\r\\n                    <span class=\\\"padding\\\">E-Commerce</span>\\r\\n                    <md-slide-toggle color=\\\"primary\\\" [(ngModel)]=\\\"sales.isECommerce\\\" (change)=\\\"onEcommerceChange($event)\\\">\\r\\n                    </md-slide-toggle>\\r\\n                    <aside class=\\\"row\\\" *ngIf=\\\"showEcommerce\\\">\\r\\n    \\r\\n                        <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n                            <input mdInput required placeholder=\\\"Ecommerce\\\" [formControl]=\\\"myForm.controls.sales_address_lane \\\"\\r\\n                                [(ngModel)]=\\\"sales.address.lane\\\">\\r\\n                            <md-hint>\\r\\n                                <form-messages [control]=\\\"myForm.controls.sales_address_lane \\\"> </form-messages>\\r\\n                            </md-hint>\\r\\n                        </md-input-container>\\r\\n    \\r\\n                        <!-- <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n                            <input mdInput required placeholder=\\\"Street\\\" [formControl]=\\\"myForm.controls.sales_address_street \\\"\\r\\n                                [(ngModel)]=\\\"sales.address.street\\\">\\r\\n                            <md-hint>\\r\\n                                <form-messages [control]=\\\"myForm.controls.sales_address_street \\\"> </form-messages>\\r\\n                            </md-hint>\\r\\n                        </md-input-container>\\r\\n    \\r\\n                        <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n                            <input mdInput required placeholder=\\\"Area\\\" [formControl]=\\\"myForm.controls.sales_address_area \\\"\\r\\n                                [(ngModel)]=\\\"sales.address.area\\\">\\r\\n                            <md-hint>\\r\\n                                <form-messages [control]=\\\"myForm.controls.sales_address_area \\\"> </form-messages>\\r\\n                            </md-hint>\\r\\n                        </md-input-container>\\r\\n    \\r\\n                        <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n                            <input mdInput required placeholder=\\\"City\\\" [formControl]=\\\"myForm.controls.sales_address_city \\\"\\r\\n                                [(ngModel)]=\\\"sales.address.city\\\">\\r\\n                            <md-hint>\\r\\n                                <form-messages [control]=\\\"myForm.controls.sales_address_city \\\"> </form-messages>\\r\\n                            </md-hint>\\r\\n                        </md-input-container>\\r\\n    \\r\\n                        <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n                            <input mdInput required placeholder=\\\"State\\\" [formControl]=\\\"myForm.controls.sales_address_state \\\"\\r\\n                                [(ngModel)]=\\\"sales.address.state\\\">\\r\\n                            <md-hint>\\r\\n                                <form-messages [control]=\\\"myForm.controls.sales_address_state \\\"> </form-messages>\\r\\n                            </md-hint>\\r\\n                        </md-input-container> -->\\r\\n    \\r\\n                        <!--<md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n                            <input mdInput placeholder=\\\"Country\\\" [(ngModel)]=\\\"sales.address.country\\\">\\r\\n                        </md-input-container>-->\\r\\n    \\r\\n                        <!-- <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n                            <input mdInput required placeholder=\\\"Zipcode\\\" [formControl]=\\\"myForm.controls.sales_address_zipCode \\\"\\r\\n                                [(ngModel)]=\\\"sales.address.zipCode\\\">\\r\\n                            <md-hint>\\r\\n                                <form-messages [control]=\\\"myForm.controls.sales_address_zipCode \\\"> </form-messages>\\r\\n                            </md-hint>\\r\\n                        </md-input-container> -->\\r\\n    \\r\\n    \\r\\n                    </aside>\\r\\n                 \\r\\n                        <md-input-container *ngIf=\\\"sales.isEcommerce\\\" fxFlex=\\\"33.33\\\" class=\\\"padding-side\\\">\\r\\n                          <input required mdInput placeholder=\\\"Ecommerce GSTIN\\\" [formControl]=\\\"myForm.controls.sales_ecommerceGSTIN\\\"\\r\\n                          [(ngModel)]=\\\"sales.ecommerceGSTIN\\\">\\r\\n                          <md-hint>\\r\\n                            <form-messages [control]=\\\"myForm.controls.sales_ecommerceGSTIN\\\"></form-messages>\\r\\n                          </md-hint>\\r\\n                        </md-input-container>\\r\\n                </md-card-content>\\r\\n             \\r\\n            </md-card>\\r\\n            x\\r\\n        </div>\\r\\n        <aside style=\\\"max-width: 98%;\\\">\\r\\n            <div layout=\\\"row\\\" layout-align=\\\"end center\\\">\\r\\n                <div flex=\\\"10\\\">\\r\\n                    <span>Product</span>\\r\\n                    <md-slide-toggle color=\\\"primary\\\" [(ngModel)]=\\\"sales.isProduct\\\" (change)=\\\"changeProduct(true)\\\"></md-slide-toggle>\\r\\n                </div>\\r\\n                <div flex=\\\"10\\\">\\r\\n                    <span>Service</span>\\r\\n                    <md-slide-toggle color=\\\"primary\\\" [(ngModel)]=\\\"sales.isService\\\" (change)=\\\"changeProduct(false)\\\"></md-slide-toggle>\\r\\n                </div>\\r\\n    \\r\\n                <div flex=\\\"10\\\">\\r\\n                    <span>GST</span>\\r\\n                    <md-slide-toggle color=\\\"primary\\\" [(ngModel)]=\\\"sales.isCgst\\\" (change)=\\\"changeGst(true)\\\"></md-slide-toggle>\\r\\n                </div>\\r\\n                <div flex=\\\"10\\\">\\r\\n                    <span>IGST</span>\\r\\n                    <md-slide-toggle color=\\\"primary\\\" [(ngModel)]=\\\"sales.isIgst\\\" (change)=\\\"changeGst(false)\\\"></md-slide-toggle>\\r\\n                </div>\\r\\n                <div flex=\\\"20\\\" style=\\\"margin-bottom: 50px;\\\">\\r\\n                    <!-- <md-input-container style=\\\"width:12rem\\\">\\r\\n                        <input mdInput placeholder=\\\"Amounts are (Excluding all tax)\\\" [(ngModel)]=\\\"this.unitSellPrice\\\" [ngModelOptions]=\\\"{standalone: true}\\\" type=\\\"number\\\">\\r\\n                    </md-input-container> -->\\r\\n                </div>\\r\\n                <button md-raised-button color=\\\"accent\\\" (click)=\\\"addItem()\\\" flex=\\\"10\\\">Add item</button>&nbsp;\\r\\n                <button md-raised-button color=\\\"accent\\\" (click)=\\\"addService()\\\" flex=\\\"10\\\">Add Service</button>\\r\\n    \\r\\n            </div>\\r\\n        </aside>\\r\\n    \\r\\n        <div class=\\\"padding-side\\\">\\r\\n            <md-card class=\\\"invoice-form-table\\\">\\r\\n                <aside class=\\\"invoice-form-th\\\">\\r\\n                    <md-list>\\r\\n                        <md-list-item layout=\\\"row\\\" layout-wrap class=\\\"invoice-form-list-item\\\">\\r\\n                            <span flex=\\\"0.5\\\"> S.no</span>\\r\\n                            <span flex=\\\"40\\\" *ngIf=\\\"sales.isProduct\\\">Product</span>\\r\\n                            <span flex=\\\"40\\\" *ngIf=\\\"sales.isService\\\">Service</span>\\r\\n                            <!-- <span flex=\\\"6\\\" *ngIf=\\\"sales.isProduct\\\">HSN Code</span> -->\\r\\n                            <span flex=\\\"6\\\" *ngIf=\\\"sales.isService\\\">SAC Code</span>\\r\\n                            <span flex=\\\"1\\\" *ngIf=\\\"sales.isProduct\\\">Qty</span>\\r\\n                            <span flex=\\\"0.6\\\">Rate</span>\\r\\n                            <span flex=\\\"0.6\\\">Discount</span>\\r\\n                            <span flex=\\\"0.6\\\">Total</span>\\r\\n                            <!--  <span flex=\\\"0.9\\\">GST Rate</span>-->\\r\\n                            <span flex=\\\"0.6\\\" *ngIf=\\\"sales.isCgst\\\">CGST</span>\\r\\n                            <span flex=\\\"0.6\\\" *ngIf=\\\"sales.isCgst\\\">SGST</span>\\r\\n                            <span flex=\\\"0.6\\\" *ngIf=\\\"sales.isIgst\\\">IGST</span>\\r\\n                            <span flex=\\\"0.9\\\">Amount</span>\\r\\n                            <span flex=\\\"0\\\">&nbsp;</span>\\r\\n                        </md-list-item>\\r\\n    \\r\\n    \\r\\n    \\r\\n    \\r\\n                    </md-list>\\r\\n    \\r\\n                </aside>\\r\\n    \\r\\n                <!--<div class=\\\"row padding\\\">\\r\\n                    <span class=\\\"col-xs-9\\\">In Words:</span>\\r\\n                    <span class=\\\"col-xs-3\\\">\\r\\n                        <div layout=\\\"row\\\"  layout-align=\\\"space-between center\\\">\\r\\n                            <span flex=\\\"70\\\">Subtotal</span>\\r\\n                            <b flex=\\\"30\\\"> :{{sales.subtotal | amount}}</b>\\r\\n                        </div>\\r\\n                    </span>\\r\\n    \\r\\n                </div>-->\\r\\n                <br />\\r\\n                <aside class=\\\"invoice-form-tb\\\">\\r\\n                    <md-list>\\r\\n                        <ng-template let-index=\\\"index\\\" let-item let-last=\\\"last\\\" ngFor [ngForOf]=\\\"sales.items\\\">\\r\\n    \\r\\n                            <md-list-item layout=\\\"row\\\">\\r\\n                                <span class=\\\"invoice-form-list-item-index\\\" flex=\\\"0.5\\\"> {{index+1}}</span>\\r\\n    \\r\\n                                <span flex=\\\"40\\\" *ngIf=\\\"sales.isProduct\\\" style=\\\"margin-top:-20px;\\\">\\r\\n    \\r\\n                                    <md-input-container>\\r\\n                                        <input style=\\\"margin-right:20px;\\\" mdInput placeholder=\\\"Choose stock Item\\\"\\r\\n                                            [(ngModel)]=\\\"item.productName\\\" (focus)=\\\"filterProducts(null)\\\" (keyup)=\\\"filterProducts($event.target.value)\\\"\\r\\n                                            [mdAutocomplete]=\\\"autoProducts\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                                        <md-autocomplete #autoProducts=\\\"mdAutocomplete\\\">\\r\\n                                            <md-option *ngFor=\\\"let option of filteredProducts\\\" [value]=\\\"option.productName\\\"\\r\\n                                                (click)=\\\"selectedProduct(option)\\\">\\r\\n                                                <b> {{ option.productName }} </b> - {{option.productType}}\\r\\n                                            </md-option>\\r\\n                                        </md-autocomplete>\\r\\n                                    </md-input-container>\\r\\n    \\r\\n                                </span>\\r\\n    \\r\\n                                <span flex=\\\"40\\\" *ngIf=\\\"sales.isService\\\" style=\\\"margin-top:-20px;\\\">\\r\\n    \\r\\n                                    <md-input-container>\\r\\n                                        <input style=\\\"margin-right:20px;\\\" mdInput placeholder=\\\"Search by Service\\\"\\r\\n                                            [(ngModel)]=\\\"item.serviceName\\\" (focus)=\\\"filterServices(null)\\\" (keyup)=\\\"filterServices($event.target.value)\\\"\\r\\n                                            [mdAutocomplete]=\\\"autoServices\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                                        <md-autocomplete #autoServices=\\\"mdAutocomplete\\\">\\r\\n                                            <md-option *ngFor=\\\"let option of filteredServices\\\" [value]=\\\"option.serviceName\\\"\\r\\n                                                (click)=\\\"selectedService(option)\\\">\\r\\n                                                <b> {{ option.serviceName }} </b> - {{option.serviceCode}}\\r\\n                                            </md-option>\\r\\n                                        </md-autocomplete>\\r\\n                                    </md-input-container>\\r\\n    \\r\\n                                </span>\\r\\n    \\r\\n                                <!--                             <span flex=\\\"40\\\" *ngIf=\\\"!item.product.id\\\"> -->\\r\\n                                <!--                                  <md-input-container > -->\\r\\n                                <!--                                     <input mdInput type=\\\"text\\\" [(ngModel)]=\\\"item.product.productName\\\" > -->\\r\\n                                <!--                                 </md-input-container>     -->\\r\\n                                <!--                             </span> -->\\r\\n                                <span flex=\\\"6\\\" class=\\\"invoice-form-field\\\" *ngIf=\\\"sales.isProduct\\\">{{item.productCode}}</span>\\r\\n                                <span flex=\\\"6\\\" class=\\\"invoice-form-field invoice-form-input-form-width\\\" *ngIf=\\\"sales.isService\\\">{{item.serviceCode}}</span>\\r\\n                                <span flex=\\\"6\\\" *ngIf=\\\"sales.isProduct\\\">\\r\\n                                    <md-input-container style=\\\"width:4em;margin-left: 5px !important;\\\">\\r\\n                                        <input mdInput type=\\\"number\\\" [(ngModel)]=\\\"item.quantity\\\" (change)=\\\"itemCalculate(item)\\\">\\r\\n                                    </md-input-container>\\r\\n                                </span>\\r\\n                                <span flex=\\\"1\\\">\\r\\n                                    <md-input-container style=\\\"width:4em;position:relative;left:15px\\\">\\r\\n                                        <input  mdInput type=\\\"number\\\" [(ngModel)]=\\\"item.unit\\\">\\r\\n                                    </md-input-container>\\r\\n                                </span>\\r\\n                                <span flex=\\\"0.6\\\">\\r\\n                                    <md-input-container style=\\\"width:4em;position:relative;left:18px\\\">\\r\\n                                        <input mdInput type=\\\"text\\\" [(ngModel)]=\\\"item.discount\\\" (change)=\\\"itemCalculate(item)\\\">\\r\\n                                        <span mdSuffix>%</span>\\r\\n                                    </md-input-container>\\r\\n                                </span>\\r\\n                                <span flex=\\\"0.6\\\">\\r\\n                                    <md-input-container style=\\\"width:4em;position:relative;left:25px\\\">\\r\\n                                        <input readonly mdInput type=\\\"number\\\" [(ngModel)]=\\\"item.total\\\" (change)=\\\"itemCalculate(item)\\\">\\r\\n                                    </md-input-container>\\r\\n                                </span>\\r\\n                                <!-- <span flex=\\\"0.9\\\">{{item.taxrate}}</span>-->\\r\\n                                <span flex=\\\"0.6\\\" *ngIf=\\\"sales.isCgst\\\" style=\\\"position: relative; left:50px;\\\">{{item.cgst |\\r\\n                                    amount}}</span>\\r\\n                                <span flex=\\\"0.6\\\" *ngIf=\\\"sales.isCgst\\\" style=\\\"position: relative; left:60px;\\\">{{item.sgst |\\r\\n                                    amount}}</span>\\r\\n                                <span flex=\\\"0.6\\\" *ngIf=\\\"sales.isIgst\\\" style=\\\"position: relative; left:60px;\\\">{{item.igst |\\r\\n                                    amount}}</span>\\r\\n                                <!-- <span flex=\\\"0.6\\\" *ngIf=\\\"sales.isCgst\\\">\\r\\n                                    <md-input-container style=\\\"width:3rem\\\">\\r\\n                                        <input readonly mdInput type=\\\"number\\\" [(ngModel)]=\\\"item.cgst\\\">\\r\\n                                    </md-input-container>\\r\\n                                </span>\\r\\n                                <span flex=\\\"0.6\\\" *ngIf=\\\"sales.isCgst\\\">\\r\\n                                    <md-input-container style=\\\"width:3rem\\\">\\r\\n                                        <input readonly mdInput type=\\\"number\\\" [(ngModel)]=\\\"item.sgst\\\" >\\r\\n                                    </md-input-container>\\r\\n                                </span>\\r\\n                                <span flex=\\\"0.6\\\" *ngIf=\\\"sales.isIgst\\\">\\r\\n                                    <md-input-container style=\\\"width:3rem\\\">\\r\\n                                        <input readonly mdInput type=\\\"number\\\" [(ngModel)]=\\\"item.igst\\\">\\r\\n                                    </md-input-container>\\r\\n                                </span>                             -->\\r\\n                                <span flex=\\\"0.6\\\" style=\\\"position: relative; left:75px;\\\">{{item.amount | amount}}</span>\\r\\n                                <span flex=\\\".9\\\" style=\\\"cursor: pointer;text-align:right;position: relative; left:15px;\\\">\\r\\n                                    <md-icon color=\\\"accent\\\" (click)=\\\"removeItem(index)\\\">delete</md-icon>\\r\\n                                </span>\\r\\n                            </md-list-item>\\r\\n                        </ng-template>\\r\\n                    </md-list>\\r\\n                    <div layout=\\\"row\\\" layout-align=\\\"space-between start\\\" class=\\\"invoice-form-grand-tot\\\">\\r\\n                        <div flex=\\\"30\\\">\\r\\n                            <div layout=\\\"column\\\">\\r\\n                                <!-- <div>\\r\\n                                    <span>Words</span>\\r\\n                                    <b> :</b>\\r\\n                                </div> -->\\r\\n                                <div>\\r\\n                                    <md-input-container>\\r\\n                                        <input mdInput placeholder=\\\"Message displayed on Invoice\\\" [formControl]=\\\"myForm.controls.sales_invoiceMessage\\\"\\r\\n                                            [(ngModel)]=\\\"sales.invoiceMessage\\\">\\r\\n                                        <!--                                     <md-hint> -->\\r\\n                                        <!--                                         <form-messages [control]=\\\"myForm.controls.sales_invoiceMessage\\\"> </form-messages> -->\\r\\n                                        <!--                                     </md-hint> -->\\r\\n                                    </md-input-container>\\r\\n                                </div>\\r\\n                                <div>\\r\\n                                    <md-input-container>\\r\\n                                        <textarea mdInput required type=\\\"textarea\\\" placeholder=\\\"Statement Memo\\\"\\r\\n                                            [formControl]=\\\"myForm.controls.sales_memo\\\" [(ngModel)]=\\\"sales.memo\\\"></textarea>\\r\\n                                        <md-hint>\\r\\n                                            <form-messages [control]=\\\"myForm.controls.sales_memo\\\"> </form-messages>\\r\\n                                        </md-hint>\\r\\n                                    </md-input-container>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div flex-offset=\\\"55\\\">\\r\\n                            <div layout=\\\"column\\\">\\r\\n                                <div class=\\\"font-14-px\\\" layout=\\\"row\\\" layout-align=\\\"space-between end\\\">\\r\\n                                    <span class=\\\"color-dark-gray\\\" flex=\\\"60\\\">Sub Total</span>\\r\\n                                    <b flex=\\\"30\\\"> {{sales.subTotal | amount}}</b>\\r\\n                                </div>\\r\\n    \\r\\n                                <!-- <div layout=\\\"row\\\" layout-align=\\\"space-between center\\\">\\r\\n                                    <div flex=\\\"70\\\">\\r\\n                                        <span flex=\\\"50\\\">Discount @&nbsp;</span>\\r\\n                                        <md-input-container flex=\\\"50\\\">\\r\\n                                            <input mdInput [(ngModel)]=\\\"sales.discount\\\" type=\\\"number\\\" (change)=\\\"changeCalculate()\\\">\\r\\n                                            <span mdSuffix>%</span>\\r\\n                                        </md-input-container>\\r\\n                                    </div>\\r\\n                                    <span flex=\\\"30\\\">\\r\\n                                        <b>:{{sales.discountValue | amount}}</b>\\r\\n                                    </span>\\r\\n                                </div> -->\\r\\n    \\r\\n                                <div class=\\\"font-14-px\\\" layout=\\\"row\\\" layout-align=\\\"space-between center\\\">\\r\\n                                    <div flex=\\\"60\\\">\\r\\n                                        <span class=\\\"color-dark-gray\\\" flex=\\\"50\\\">Cess @ &nbsp;&nbsp;&nbsp;</span>\\r\\n                                        <md-input-container flex=\\\"40\\\">\\r\\n                                            <input mdInput type=\\\"number\\\" [(ngModel)]=\\\"sales.cess\\\" (change)=\\\"changeCalculate()\\\">\\r\\n                                            <span mdSuffix>%</span>\\r\\n                                        </md-input-container>\\r\\n                                    </div>\\r\\n                                    <span flex=\\\"30\\\">\\r\\n                                        <b>{{sales.cessValue | amount}}</b>\\r\\n                                    </span>\\r\\n                                </div>\\r\\n    \\r\\n                                <div class=\\\"font-14-px\\\" layout=\\\"row\\\" layout-align=\\\"space-between end\\\">\\r\\n                                    <span class=\\\"color-dark-gray\\\" flex=\\\"60\\\">Total</span>\\r\\n                                    <b flex=\\\"30\\\"> {{sales.total | amount}}</b>\\r\\n                                </div>\\r\\n    \\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </aside>\\r\\n            </md-card>\\r\\n        </div>\\r\\n    \\r\\n    \\r\\n        <div class=\\\"padding-side\\\">\\r\\n                <md-card class=\\\"invoice-form-table\\\">\\r\\n                    <aside class=\\\"invoice-form-th\\\">\\r\\n                        <md-list>\\r\\n                            <md-list-item layout=\\\"row\\\" layout-wrap class=\\\"invoice-form-list-item\\\">\\r\\n                                <span flex=\\\"0.5\\\"> S.no</span>\\r\\n                                <span flex=\\\"40\\\" *ngIf=\\\"sales.isProduct\\\">Service</span>\\r\\n                                <span flex=\\\"40\\\" *ngIf=\\\"sales.isService\\\">SAC Code</span>\\r\\n                                <span flex=\\\"6\\\" *ngIf=\\\"sales.isProduct\\\">Rate</span>\\r\\n                                <span flex=\\\"6\\\" *ngIf=\\\"sales.isService\\\">Discount Code</span>\\r\\n                                <span flex=\\\"1\\\" *ngIf=\\\"sales.isProduct\\\">Subtotal</span>\\r\\n                                <!-- <span flex=\\\"0.6\\\">Rate</span>\\r\\n                                <span flex=\\\"0.6\\\">Discount</span>\\r\\n                                <span flex=\\\"0.6\\\">Total</span> -->\\r\\n                                <!--  <span flex=\\\"0.9\\\">GST Rate</span>-->\\r\\n                                <span flex=\\\"0.6\\\" *ngIf=\\\"sales.isCgst\\\">TAX AMOUNT</span>\\r\\n                                <span flex=\\\"0.6\\\" *ngIf=\\\"sales.isCgst\\\">Cess</span>\\r\\n                                <!-- <span flex=\\\"0.6\\\" *ngIf=\\\"sales.isIgst\\\">IGST</span> -->\\r\\n                                <span flex=\\\"0.9\\\">Amount</span>\\r\\n                                <span flex=\\\"0\\\">&nbsp;</span>\\r\\n                            </md-list-item>\\r\\n        \\r\\n        \\r\\n        \\r\\n        \\r\\n                        </md-list>\\r\\n        \\r\\n                    </aside>\\r\\n        \\r\\n                    <!--<div class=\\\"row padding\\\">\\r\\n                        <span class=\\\"col-xs-9\\\">In Words:</span>\\r\\n                        <span class=\\\"col-xs-3\\\">\\r\\n                            <div layout=\\\"row\\\"  layout-align=\\\"space-between center\\\">\\r\\n                                <span flex=\\\"70\\\">Subtotal</span>\\r\\n                                <b flex=\\\"30\\\"> :{{sales.subtotal | amount}}</b>\\r\\n                            </div>\\r\\n                        </span>\\r\\n        \\r\\n                    </div>-->\\r\\n                    <br />\\r\\n                    <aside class=\\\"invoice-form-tb\\\">\\r\\n                        <md-list>\\r\\n                            <ng-template let-index=\\\"index\\\" let-item let-last=\\\"last\\\" ngFor [ngForOf]=\\\"sales.items\\\">\\r\\n        \\r\\n                                <md-list-item layout=\\\"row\\\">\\r\\n                                    <span class=\\\"invoice-form-list-item-index\\\" flex=\\\"0.5\\\"> {{index+1}}</span>\\r\\n        \\r\\n                                    <span flex=\\\"40\\\" *ngIf=\\\"sales.isProduct\\\" style=\\\"margin-top:-20px;\\\">\\r\\n        \\r\\n                                        <md-input-container>\\r\\n                                            <input style=\\\"margin-right:20px;\\\" mdInput placeholder=\\\"Search by service\\\"\\r\\n                                                [(ngModel)]=\\\"item.productName\\\" (focus)=\\\"filterProducts(null)\\\" (keyup)=\\\"filterProducts($event.target.value)\\\"\\r\\n                                                [mdAutocomplete]=\\\"autoProducts\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                                            <md-autocomplete #autoProducts=\\\"mdAutocomplete\\\">\\r\\n                                                <md-option *ngFor=\\\"let option of filteredProducts\\\" [value]=\\\"option.productName\\\"\\r\\n                                                    (click)=\\\"selectedProduct(option)\\\">\\r\\n                                                    <b> {{ option.productName }} </b> - {{option.productType}}\\r\\n                                                </md-option>\\r\\n                                            </md-autocomplete>\\r\\n                                        </md-input-container>\\r\\n        \\r\\n                                    </span>\\r\\n        \\r\\n                                    <span flex=\\\"40\\\" *ngIf=\\\"sales.isService\\\" style=\\\"margin-top:-20px;\\\">\\r\\n        \\r\\n                                        <md-input-container>\\r\\n                                            <input style=\\\"margin-right:20px;\\\" mdInput placeholder=\\\"Search by Service\\\"\\r\\n                                                [(ngModel)]=\\\"item.serviceName\\\" (focus)=\\\"filterServices(null)\\\" (keyup)=\\\"filterServices($event.target.value)\\\"\\r\\n                                                [mdAutocomplete]=\\\"autoServices\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                                            <md-autocomplete #autoServices=\\\"mdAutocomplete\\\">\\r\\n                                                <md-option *ngFor=\\\"let option of filteredServices\\\" [value]=\\\"option.serviceName\\\"\\r\\n                                                    (click)=\\\"selectedService(option)\\\">\\r\\n                                                    <b> {{ option.serviceName }} </b> - {{option.serviceCode}}\\r\\n                                                </md-option>\\r\\n                                            </md-autocomplete>\\r\\n                                        </md-input-container>\\r\\n        \\r\\n                                    </span>\\r\\n        \\r\\n                                    <!--                             <span flex=\\\"40\\\" *ngIf=\\\"!item.product.id\\\"> -->\\r\\n                                    <!--                                  <md-input-container > -->\\r\\n                                    <!--                                     <input mdInput type=\\\"text\\\" [(ngModel)]=\\\"item.product.productName\\\" > -->\\r\\n                                    <!--                                 </md-input-container>     -->\\r\\n                                    <!--                             </span> -->\\r\\n                                    <span flex=\\\"6\\\" class=\\\"invoice-form-field\\\" *ngIf=\\\"sales.isProduct\\\">{{item.productCode}}</span>\\r\\n                                    <span flex=\\\"6\\\" class=\\\"invoice-form-field invoice-form-input-form-width\\\" *ngIf=\\\"sales.isService\\\">{{item.serviceCode}}</span>\\r\\n                                    <span flex=\\\"6\\\" *ngIf=\\\"sales.isProduct\\\">\\r\\n                                        <md-input-container style=\\\"width:4em;margin-left: 5px !important;\\\">\\r\\n                                            <input mdInput type=\\\"number\\\" [(ngModel)]=\\\"item.quantity\\\" (change)=\\\"itemCalculate(item)\\\">\\r\\n                                        </md-input-container>\\r\\n                                    </span>\\r\\n                                    <span flex=\\\"1\\\">\\r\\n                                        <md-input-container style=\\\"width:4em;position:relative;left:15px\\\">\\r\\n                                            <input  mdInput type=\\\"number\\\" [(ngModel)]=\\\"item.unit\\\">\\r\\n                                        </md-input-container>\\r\\n                                    </span>\\r\\n                                    <span flex=\\\"0.6\\\">\\r\\n                                        <md-input-container style=\\\"width:4em;position:relative;left:18px\\\">\\r\\n                                            <input mdInput type=\\\"text\\\" [(ngModel)]=\\\"item.discount\\\" (change)=\\\"itemCalculate(item)\\\">\\r\\n                                            <span mdSuffix>%</span>\\r\\n                                        </md-input-container>\\r\\n                                    </span>\\r\\n                                    <span flex=\\\"0.6\\\">\\r\\n                                        <md-input-container style=\\\"width:4em;position:relative;left:25px\\\">\\r\\n                                            <input readonly mdInput type=\\\"number\\\" [(ngModel)]=\\\"item.total\\\" (change)=\\\"itemCalculate(item)\\\">\\r\\n                                        </md-input-container>\\r\\n                                    </span>\\r\\n                                    <!-- <span flex=\\\"0.9\\\">{{item.taxrate}}</span>-->\\r\\n                                    <span flex=\\\"0.6\\\" *ngIf=\\\"sales.isCgst\\\" style=\\\"position: relative; left:50px;\\\">{{item.cgst |\\r\\n                                        amount}}</span>\\r\\n                                    <span flex=\\\"0.6\\\" *ngIf=\\\"sales.isCgst\\\" style=\\\"position: relative; left:60px;\\\">{{item.sgst |\\r\\n                                        amount}}</span>\\r\\n                                    <span flex=\\\"0.6\\\" *ngIf=\\\"sales.isIgst\\\" style=\\\"position: relative; left:60px;\\\">{{item.igst |\\r\\n                                        amount}}</span>\\r\\n                                    <!-- <span flex=\\\"0.6\\\" *ngIf=\\\"sales.isCgst\\\">\\r\\n                                        <md-input-container style=\\\"width:3rem\\\">\\r\\n                                            <input readonly mdInput type=\\\"number\\\" [(ngModel)]=\\\"item.cgst\\\">\\r\\n                                        </md-input-container>\\r\\n                                    </span>\\r\\n                                    <span flex=\\\"0.6\\\" *ngIf=\\\"sales.isCgst\\\">\\r\\n                                        <md-input-container style=\\\"width:3rem\\\">\\r\\n                                            <input readonly mdInput type=\\\"number\\\" [(ngModel)]=\\\"item.sgst\\\" >\\r\\n                                        </md-input-container>\\r\\n                                    </span>\\r\\n                                    <span flex=\\\"0.6\\\" *ngIf=\\\"sales.isIgst\\\">\\r\\n                                        <md-input-container style=\\\"width:3rem\\\">\\r\\n                                            <input readonly mdInput type=\\\"number\\\" [(ngModel)]=\\\"item.igst\\\">\\r\\n                                        </md-input-container>\\r\\n                                    </span>                             -->\\r\\n                                    <span flex=\\\"0.6\\\" style=\\\"position: relative; left:75px;\\\">{{item.amount | amount}}</span>\\r\\n                                    <span flex=\\\".9\\\" style=\\\"cursor: pointer;text-align:right;position: relative; left:15px;\\\">\\r\\n                                        <md-icon color=\\\"accent\\\" (click)=\\\"removeItem(index)\\\">delete</md-icon>\\r\\n                                    </span>\\r\\n                                </md-list-item>\\r\\n                            </ng-template>\\r\\n                        </md-list>\\r\\n                        <div layout=\\\"row\\\" layout-align=\\\"space-between start\\\" class=\\\"invoice-form-grand-tot\\\">\\r\\n                            <div flex=\\\"30\\\">\\r\\n                                <div layout=\\\"column\\\">\\r\\n                                    <!-- <div>\\r\\n                                        <span>Words</span>\\r\\n                                        <b> :</b>\\r\\n                                    </div> -->\\r\\n                                    <div>\\r\\n                                        <md-input-container>\\r\\n                                            <input mdInput placeholder=\\\"Message displayed on Invoice\\\" [formControl]=\\\"myForm.controls.sales_invoiceMessage\\\"\\r\\n                                                [(ngModel)]=\\\"sales.invoiceMessage\\\">\\r\\n                                            <!--                                     <md-hint> -->\\r\\n                                            <!--                                         <form-messages [control]=\\\"myForm.controls.sales_invoiceMessage\\\"> </form-messages> -->\\r\\n                                            <!--                                     </md-hint> -->\\r\\n                                        </md-input-container>\\r\\n                                    </div>\\r\\n                                    <div>\\r\\n                                        <md-input-container>\\r\\n                                            <textarea mdInput required type=\\\"textarea\\\" placeholder=\\\"Statement Memo\\\"\\r\\n                                                [formControl]=\\\"myForm.controls.sales_memo\\\" [(ngModel)]=\\\"sales.memo\\\"></textarea>\\r\\n                                            <md-hint>\\r\\n                                                <form-messages [control]=\\\"myForm.controls.sales_memo\\\"> </form-messages>\\r\\n                                            </md-hint>\\r\\n                                        </md-input-container>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div flex-offset=\\\"55\\\">\\r\\n                                <div layout=\\\"column\\\">\\r\\n                                    <div class=\\\"font-14-px\\\" layout=\\\"row\\\" layout-align=\\\"space-between end\\\">\\r\\n                                        <span class=\\\"color-dark-gray\\\" flex=\\\"60\\\">Sub Total</span>\\r\\n                                        <b flex=\\\"30\\\"> {{sales.subTotal | amount}}</b>\\r\\n                                    </div>\\r\\n        \\r\\n                                    <!-- <div layout=\\\"row\\\" layout-align=\\\"space-between center\\\">\\r\\n                                        <div flex=\\\"70\\\">\\r\\n                                            <span flex=\\\"50\\\">Discount @&nbsp;</span>\\r\\n                                            <md-input-container flex=\\\"50\\\">\\r\\n                                                <input mdInput [(ngModel)]=\\\"sales.discount\\\" type=\\\"number\\\" (change)=\\\"changeCalculate()\\\">\\r\\n                                                <span mdSuffix>%</span>\\r\\n                                            </md-input-container>\\r\\n                                        </div>\\r\\n                                        <span flex=\\\"30\\\">\\r\\n                                            <b>:{{sales.discountValue | amount}}</b>\\r\\n                                        </span>\\r\\n                                    </div> -->\\r\\n        \\r\\n                                    <div class=\\\"font-14-px\\\" layout=\\\"row\\\" layout-align=\\\"space-between center\\\">\\r\\n                                        <div flex=\\\"60\\\">\\r\\n                                            <span class=\\\"color-dark-gray\\\" flex=\\\"50\\\">Cess @ &nbsp;&nbsp;&nbsp;</span>\\r\\n                                            <md-input-container flex=\\\"40\\\">\\r\\n                                                <input mdInput type=\\\"number\\\" [(ngModel)]=\\\"sales.cess\\\" (change)=\\\"changeCalculate()\\\">\\r\\n                                                <span mdSuffix>%</span>\\r\\n                                            </md-input-container>\\r\\n                                        </div>\\r\\n                                        <span flex=\\\"30\\\">\\r\\n                                            <b>{{sales.cessValue | amount}}</b>\\r\\n                                        </span>\\r\\n                                    </div>\\r\\n        \\r\\n                                    <div class=\\\"font-14-px\\\" layout=\\\"row\\\" layout-align=\\\"space-between end\\\">\\r\\n                                        <span class=\\\"color-dark-gray\\\" flex=\\\"60\\\">Total</span>\\r\\n                                        <b flex=\\\"30\\\"> {{sales.total | amount}}</b>\\r\\n                                    </div>\\r\\n        \\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </aside>\\r\\n                </md-card>\\r\\n            </div>\\r\\n        <div class=\\\"row\\\" style=\\\"padding: 1rem; margin-bottom: 7em;\\\">\\r\\n            <div class=\\\"col-xs-6 start-xs\\\">\\r\\n                <button md-raised-button (click)=\\\"clear()\\\" color=\\\"accent\\\">Clear</button>\\r\\n                <button md-raised-button color=\\\"primary\\\" [disabled]=\\\"!isPrintEnable\\\" (click)=\\\"printPriview()\\\">Print or\\r\\n                    Preview</button>\\r\\n            </div>\\r\\n            <div class=\\\"col-xs-6 end-xs\\\">\\r\\n                <button md-raised-button color=accent (click)=\\\"billing()\\\" [disabled]=\\\"!myForm.valid\\\">Billing</button>\\r\\n                <button md-raised-button color=accent (click)=\\\"save()\\\" [disabled]=\\\"!myForm.valid\\\"> Save</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </aside>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/invoice/invoice.edit.component.html\n// module id = ../../../../../src/app/components/admin/invoice/invoice.edit.component.html\n// module chunks = 1","import { Component, OnInit } from \"@angular/core\";\r\n\r\nimport { AppService } from \"../../../shared/service/app.service\";\r\nimport { AnimationService } from \"../../../shared/service/animation.service\";\r\nimport { RestService } from \"./../../../common/rest.service\";\r\nimport { Prop } from \"./../../../common/props\";\r\n\r\nimport { Storage } from \"../../../shared/utils/storage\";\r\nimport { Sales } from \"./../../../entities/sales.entity\";\r\nimport { Item } from \"./../../../entities/item.entity\";\r\nimport { Address } from \"./../../../entities/address.entity\";\r\nimport { Customer } from \"../../../entities/customer.entity\";\r\n//import { Service } from '../../../entities/Service.entity';\r\nimport { InvoiceFormGroup } from \"../../../forms/invoice.form\";\r\nimport { CustomerPayment } from \"../../../entities/customerpayment.entity\";\r\nimport { CustomerTax } from \"../../../entities/customertax.entity\";\r\n\r\n@Component({\r\n  selector: \"app-invoice-edit\",\r\n  templateUrl: \"./invoice.edit.component.html\"\r\n})\r\nexport class InvoiceEditComponent implements OnInit {\r\n  myForm: any = InvoiceFormGroup.init();\r\n  customer: Customer;\r\n  //service: Service;\r\n  product: any;\r\n  productName: string = null;\r\n  service: any;\r\n  serviceName: string = null;\r\n  sales: Sales;\r\n  columns: any[] = [];\r\n  products: any[] = [];\r\n  services: any[] = [];\r\n  customers: Customer[] = [];\r\n  //services: Service[] = [];\r\n  company: any = {};\r\n  unitSellPrice: number = 0;\r\n  showAddress = false;\r\n  showEcommerce = false;\r\n  isPrintEnable = false;\r\n  testRowIndex: number;\r\n\r\n  constructor(\r\n    private appService: AppService,\r\n    private restService: RestService\r\n  ) {\r\n    InvoiceFormGroup.edit(this.myForm);\r\n\r\n    this.customer = new Customer();\r\n    //this.service = new Service();\r\n    this.sales = new Sales();\r\n    // this.sales.company = {}\r\n    // this.sales.company.id = this.appService.getBranch().id;\r\n    // this.sales.company.name = this.appService.getBranch().name;\r\n    // this.sales.user = {};\r\n    // this.sales.user.id = this.appService.getSessionUser().id;\r\n    this.sales.companyId = this.appService.getBranch().id;\r\n    this.sales.userId = this.appService.getSessionUser().id;\r\n    this.sales.isBillingAddress = true;\r\n    this.sales.isECommerce = true;\r\n    this.retriveCustomer();\r\n    this.retriveProducts();\r\n    this.retriveServices();\r\n    //this.product = this.newProduct();\r\n\r\n    //this.service = this.newService();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.termsLoad();\r\n  }\r\n\r\n  retriveProducts() {\r\n    this.restService.retriveProducts().subscribe(result => {\r\n      if (result) {\r\n        this.products = result;\r\n      }\r\n    });\r\n  }\r\n\r\n  retriveServices() {\r\n    this.restService.retriveServices().subscribe(result => {\r\n      if (result) {\r\n        this.services = result;\r\n        // this.services.forEach(item => {\r\n        //   console.log(\"sss======\"+item.serviceName);\r\n        // });\r\n      }\r\n    });\r\n  }\r\n\r\n  //for service\r\n  filteredServices: any[] = [];\r\n\r\n  filterServices(val: string) {\r\n    this.filteredServices =\r\n      val && val != \"\"\r\n        ? this.services.filter(\r\n            s => s.serviceName.toLowerCase().indexOf(val.toLowerCase()) >= 0\r\n          )\r\n        : this.services;\r\n  }\r\n\r\n  removeItem(index: number) {\r\n    if (index !== -1) {\r\n      this.sales.items.splice(index, 1);\r\n      this.changeCalculate();\r\n    }\r\n  }\r\n\r\n  retriveCustomer() {\r\n    this.restService.retriveCustomer().subscribe(result => {\r\n      if (result) {\r\n        this.customers = result;\r\n        this.customers.forEach(item => {\r\n          item.gstRegNumber =\r\n            item.gstRegNumber == \"\" ? \"Not Registered\" : item.gstRegNumber;\r\n          item.displayName = item.firstName + \" \" + item.lastName;\r\n          item.inlineAddress =\r\n            (item.address.lane == null ? \"\" : item.address.lane) +\r\n            \" \" +\r\n            (item.address.area == null ? \"\" : item.address.area) +\r\n            \" \" +\r\n            (item.address.city == null ? \"\" : item.address.city) +\r\n            \" \" +\r\n            (item.address.state == null ? \"\" : item.address.state);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  filteredPhones: any[] = [];\r\n\r\n  filterPhones(val: string) {\r\n    this.filteredPhones =\r\n      val && val != \"\"\r\n        ? this.customers.filter(\r\n            s => s.mobile.toLowerCase().indexOf(val.toLowerCase()) >= 0\r\n          )\r\n        : this.customers;\r\n  }\r\n\r\n  filteredProducts: any[] = [];\r\n\r\n  filterProducts(val: string) {\r\n    if (val) {\r\n      this.productName = val;\r\n    }\r\n    this.filteredProducts =\r\n      val && val != \"\"\r\n        ? this.products.filter(\r\n            s => s.productName.toLowerCase().indexOf(val.toLowerCase()) >= 0\r\n          )\r\n        : this.products;\r\n  }\r\n\r\n  filteredservice: any[] = [];\r\n\r\n  filterservice(val: string) {\r\n    if (val) {\r\n      this.serviceName = val;\r\n    }\r\n    this.filteredServices =\r\n      val && val != \"\"\r\n        ? this.service.filter(\r\n            s => s.serviceName.toLowerCase().indexOf(val.toLowerCase()) >= 0\r\n          )\r\n        : this.products;\r\n  }\r\n\r\n  changeGst(flipCgst: boolean) {\r\n    if (flipCgst) {\r\n      if (this.sales.isCgst) {\r\n        this.sales.isIgst = false;\r\n      } else {\r\n        this.sales.isIgst = true;\r\n      }\r\n    } else {\r\n      if (this.sales.isIgst) {\r\n        this.sales.isCgst = false;\r\n      } else {\r\n        this.sales.isCgst = true;\r\n      }\r\n    }\r\n\r\n    // this.sales.items.forEach(item => {\r\n    //   this.commonItemCalculate(item);\r\n    // });\r\n    // this.changeCalculate();\r\n  }\r\n\r\n  changeProduct(flipProduct: boolean) {\r\n    if (flipProduct) {\r\n      if (this.sales.isProduct) {\r\n        this.sales.isService = false;\r\n      } else {\r\n        this.sales.isService = true;\r\n      }\r\n    } else {\r\n      if (this.sales.isService) {\r\n        this.sales.isProduct = false;\r\n      } else {\r\n        this.sales.isProduct = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  itemCalculate(item: Item) {\r\n    this.commonItemCalculate(item);\r\n    this.changeCalculate();\r\n  }\r\n\r\n  addItem() {\r\n    let item = new Item();\r\n    item.id = null;\r\n    //item.company = this.sales.company;\r\n    if (this.sales.isProduct) {\r\n      item.service = Object.assign({}, this.service);\r\n    } else {\r\n      item.stockItemId = Object.assign({}, this.product);\r\n    }\r\n\r\n    //item.unit = 0;\r\n    item.cgst = 0;\r\n    item.sgst = 0;\r\n    item.igst = 0;\r\n    item.igst = 0;\r\n\r\n    this.testRowIndex = this.sales.items.push(item) - 1;\r\n\r\n    //this.itemCalculate(item);\r\n    // if (this.sales.isService) {\r\n    //   this.retriveServices();\r\n    // }\r\n  }\r\n\r\n  addService() {\r\n    let service = new Item();\r\n    service.id = null;\r\n    //item.company = this.sales.company;\r\n    if (this.sales.isService) {\r\n      service.service = Object.assign({}, this.service);\r\n    } else {\r\n      service.service = Object.assign({}, this.service);\r\n    }\r\n\r\n    service.unit = 0;\r\n    service.cgst = 0;\r\n    service.sgst = 0;\r\n    service.igst = 0;\r\n    service.igst = 0;\r\n\r\n    this.testRowIndex = this.sales.items.push(service) - 1;\r\n\r\n    //this.itemCalculate(item);\r\n    // if (this.sales.isService) {\r\n    //   this.retriveServices();\r\n    // }\r\n  }\r\n\r\n  selectedProduct(item: any) {\r\n    this.sales.items[this.testRowIndex].unit =\r\n      item.productPriceListItems.unitSellPrice;\r\n    this.sales.items[this.testRowIndex].stockItemId = item;\r\n    this.sales.items[this.testRowIndex].taxrate =\r\n      item.productPriceListItems.tax;\r\n    //new code for productId\r\n    this.sales.items[this.testRowIndex].stockItemId = item.id;\r\n    this.itemCalculate(this.sales.items[this.testRowIndex]);\r\n  }\r\n\r\n  selectedService(item: any) {\r\n    // console.log(item.tax);\r\n\r\n    this.sales.items[this.testRowIndex].unit = item.salesUnit;\r\n    this.sales.items[this.testRowIndex].service = item;\r\n    this.sales.items[this.testRowIndex].taxrate = item.tax;\r\n    //this.sales.items[this.testRowIndex].serviceId = item.id;\r\n  }\r\n\r\n  changeCalculate() {\r\n    let total = 0;\r\n    this.sales.items.forEach(item => {\r\n      total += item.totalAmount;\r\n    });\r\n    this.sales.subTotal = total;\r\n    this.sales.cessValue = total * (this.sales.cess / 100);\r\n    this.sales.total = total + this.sales.cessValue;\r\n  }\r\n\r\n  commonItemCalculate(item: Item) {\r\n    if (this.sales.isProduct) {\r\n      let total = 0;\r\n      let beforeTaxAmount = item.quantity * item.unit;\r\n      item.totalAmount =\r\n        beforeTaxAmount - beforeTaxAmount * (item.discount / 100);\r\n      total = item.totalAmount;\r\n      if (this.sales.isCgst) {\r\n        if (item.taxrate && item.taxrate != \"Nil\") {\r\n          item.cgst =\r\n            (total * (parseFloat(item.taxrate.replace(\"%\", \"\")) / 100)) / 2;\r\n          item.sgst =\r\n            (total * (parseFloat(item.taxrate.replace(\"%\", \"\")) / 100)) / 2;\r\n          item.totalAfterTax =\r\n            total + total * (parseFloat(item.taxrate.replace(\"%\", \"\")) / 100);\r\n        } else {\r\n          item.cgst = 0;\r\n          item.sgst = 0;\r\n          item.totalAfterTax = total;\r\n        }\r\n      }\r\n      if (this.sales.isIgst) {\r\n        if (item.taxrate != \"Nil\") {\r\n          item.igst = total * (parseFloat(item.taxrate.replace(\"%\", \"\")) / 100);\r\n          item.totalAfterTax =\r\n            total + total * (parseFloat(item.taxrate.replace(\"%\", \"\")) / 100);\r\n        } else {\r\n          item.igst = 0;\r\n          item.totalAfterTax = total;\r\n        }\r\n      }\r\n    } else {\r\n      let total = 0;\r\n      let beforeTaxAmount = item.unit;\r\n      item.discountAmount = beforeTaxAmount * (item.discount / 100);\r\n      item.totalAfterTax = beforeTaxAmount - item.discountAmount;\r\n      total = item.totalAfterTax;\r\n      if (this.sales.isCgst) {\r\n        if (item.taxrate && item.taxrate != \"Nil\") {\r\n          item.cgst =\r\n            (total * (parseFloat(item.taxrate.replace(\"%\", \"\")) / 100)) / 2;\r\n          item.sgst =\r\n            (total * (parseFloat(item.taxrate.replace(\"%\", \"\")) / 100)) / 2;\r\n          item.totalAfterTax =\r\n            total + total * (parseFloat(item.taxrate.replace(\"%\", \"\")) / 100);\r\n        } else {\r\n          item.cgst = 0;\r\n          item.sgst = 0;\r\n          item.totalAfterTax = total;\r\n        }\r\n      }\r\n      if (this.sales.isIgst) {\r\n        if (item.taxrate != \"Nil\") {\r\n          item.igst = total * (parseFloat(item.taxrate.replace(\"%\", \"\")) / 100);\r\n          item.totalAfterTax =\r\n            total + total * (parseFloat(item.taxrate.replace(\"%\", \"\")) / 100);\r\n        } else {\r\n          item.igst = 0;\r\n          item.totalAfterTax = total;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  selectedCustomer(item: any) {\r\n    console.log(item);\r\n    if (item && typeof item == \"object\") {\r\n      this.customer = item;\r\n    } else {\r\n      if (!isNaN(item)) {\r\n        this.customer = new Customer();\r\n        this.customer.mobile = item;\r\n      }\r\n    }\r\n  }\r\n\r\n  valid() {\r\n    let returnVal = true;\r\n\r\n    // if (this.sales.items.length == 0) {\r\n    //   returnVal = false;\r\n    //   this.appService.showMessage(\"please select product\");\r\n    // }\r\n    // let isNotProductFound: boolean = false;\r\n    // this.sales.items.forEach(element => {\r\n    //   if (!element.product.productName || element.product.productName == \"\") {\r\n    //     isNotProductFound = true;\r\n    //   }\r\n    // });\r\n    // if (isNotProductFound) {\r\n    //   this.appService.showMessage(\"please enter product name\");\r\n    //   returnVal = false;\r\n    // }\r\n    if (\r\n      returnVal &&\r\n      (!this.customer.mobile ||\r\n        this.customer.mobile == \"0\" ||\r\n        !this.customer.firstName)\r\n    ) {\r\n      returnVal = false;\r\n      this.appService.showMessage(\"please select customer name and mobile\");\r\n    }\r\n\r\n    return returnVal;\r\n  }\r\n\r\n  save() {\r\n    // if (!this.valid()) return;\r\n    //this.sales.customer = {};\r\n    if (this.customer.id == null) {\r\n      this.sales.customer = this.customer;\r\n\r\n      if (this.customer.address) {\r\n        this.sales.customer.address = this.customer.address;\r\n      } else {\r\n        this.sales.customer.address = new Address();\r\n      }\r\n      this.sales.customer.address.lane = this.customer.inlineAddress;\r\n      if (this.sales.isBillingAddress) {\r\n        this.sales.customer.shippingAddress = this.sales.customer.address;\r\n      } else {\r\n        this.sales.customer.shippingAddress = this.sales.address;\r\n      }\r\n      this.sales.customer.customerPayment = new CustomerPayment();\r\n      this.sales.customer.customerTax = new CustomerTax();\r\n    } else {\r\n      this.sales.customer.id = this.customer.id;\r\n    }\r\n\r\n    //this.sales.user = {};\r\n    //this.sales.user = this.appService.getSessionUser().account;\r\n    this.sales.userId = this.appService.getSessionUser().id;\r\n    // this.sales.items.forEach(item => {\r\n    //   console.log(item.product);\r\n    // });\r\n\r\n    this.restService.saveInvoice(this.sales).subscribe(result => {\r\n      if (result) {\r\n        this.appService.showMessage(\r\n          \"Invoice generated successfully : \" + result.invoiceNumber\r\n        );\r\n        //this.appService.navigate(Prop.INVOICE_SEARCH_PAGE, {});\r\n        // this.sales.id = result.id;\r\n        // this.sales.invoiceNumber = result.invoiceNumber;\r\n        // this.sales.items = result.items;\r\n        // // this.sales.items.forEach(item => {\r\n        // //   delete item.product.productPriceListItems.stockAsOfDate;\r\n        // // })\r\n        // this.isPrintEnable = true;\r\n        // this.myForm.reset();\r\n        this.appService.navigate(\"admin/invoice-search\", []);\r\n      }\r\n\r\n      // this.appService.navigate('admin/invoice-search',[])\r\n    });\r\n  }\r\n  billing() {\r\n    if (!this.valid()) return;\r\n    // this.sales.customer = {};\r\n    // this.sales.status = \"BILLING\";\r\n    // this.sales.customer = {};\r\n    if (this.customer.id == null) {\r\n      this.sales.customer = this.customer;\r\n\r\n      if (this.customer.address) {\r\n        this.sales.customer.address = this.customer.address;\r\n      } else {\r\n        this.sales.customer.address = new Address();\r\n      }\r\n      this.sales.customer.address.lane = this.customer.inlineAddress;\r\n      if (this.sales.isBillingAddress) {\r\n        this.sales.customer.shippingAddress = this.sales.customer.address;\r\n      } else {\r\n        this.sales.customer.shippingAddress = this.sales.address;\r\n      }\r\n      this.sales.customer.customerPayment = new CustomerPayment();\r\n      this.sales.customer.customerTax = new CustomerTax();\r\n    } else {\r\n      this.sales.customer.id = this.customer.id;\r\n    }\r\n    this.restService.saveInvoice(this.sales).subscribe(result => {\r\n      if (result) {\r\n        this.appService.showMessage(\r\n          \"Bill save successfully : \" + result.invoiceNumber\r\n        );\r\n        //this.appService.navigate(Prop.INVOICE_SEARCH_PAGE, {});\r\n        // this.sales.id= result.id;\r\n        // this.sales.invoiceNumber = result.invoiceNumber;\r\n        // this.sales.items= result.items;\r\n        // this.sales.items.forEach( item => {\r\n        //   delete item.product.priceListItems.stockAsOfDate;\r\n        // })\r\n        // this.isPrintEnable = true;\r\n        // this.clear();\r\n        this.appService.navigate(\"admin/invoice-search\", []);\r\n      }\r\n    });\r\n  }\r\n  clear() {\r\n    this.sales = Object.assign({}, new Sales());\r\n    // this.sales.company = {}\r\n    // this.sales.company.id = this.appService.getBranch().id;\r\n    // this.sales.company.name = this.appService.getBranch().name;\r\n    this.sales.companyId = this.appService.getBranch().id;\r\n    this.customer = new Customer();\r\n    this.productName = \"\";\r\n    this.isPrintEnable = false;\r\n    this.myForm = InvoiceFormGroup.init();\r\n    InvoiceFormGroup.edit(this.myForm);\r\n    InvoiceFormGroup.address(this.myForm, false);\r\n    this.showAddress = false;\r\n    this.showEcommerce = false;\r\n  }\r\n  onAddressChange($event) {\r\n    if ($event.checked) {\r\n      InvoiceFormGroup.address(this.myForm, false);\r\n      this.showAddress = false;\r\n    } else {\r\n      InvoiceFormGroup.address(this.myForm, true);\r\n      this.showAddress = true;\r\n    }\r\n  }\r\n\r\n  onEcommerceChange($event) {\r\n    if ($event.checked) {\r\n      InvoiceFormGroup.address(this.myForm, false);\r\n      this.showEcommerce = false;\r\n    } else {\r\n      InvoiceFormGroup.address(this.myForm, true);\r\n      this.showEcommerce = true;\r\n    }\r\n  }\r\n\r\n  newProduct() {\r\n    return {\r\n      id: null,\r\n      productCode: Math.floor(Math.random() * (999999999 - 1)),\r\n      productName: null,\r\n      hsnCode: Math.floor(Math.random() * (9999 - 1)),\r\n      companyId: this.sales.companyId,\r\n      active: true,\r\n      productPurchasing: {\r\n        id: null,\r\n        leadTimeDays: 0,\r\n        cgsTax: \"0\",\r\n        sgsTax: \"0\",\r\n        igsTax: \"0\"\r\n      },\r\n      productPriceListItems: {\r\n        id: null,\r\n        initialStockAtHand: \"100\",\r\n        unitPrice: 1,\r\n        unitSellPrice: 1,\r\n        stockAsOfDate: \"2000-01-01T18:30:00.000Z\",\r\n        stockAlertQty: 10,\r\n        purchaseTaxInclusive: \"1\",\r\n        taxInclusive: \"0\"\r\n      }\r\n    };\r\n  }\r\n\r\n  termsList: any[] = [];\r\n  termsLoad() {\r\n    this.restService.dataload(\"Terms\").subscribe(results => {\r\n      if (results) {\r\n        this.termsList = results;\r\n      }\r\n    });\r\n  }\r\n  printPriview() {\r\n    this.restService.invoiceOpen(this.sales.id);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/invoice/invoice.edit.component.ts","module.exports = \"<div class=\\\"position\\\">\\r\\n  <div id=\\\"page-header\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n    <h2>Invoices</h2>\\r\\n  </div>\\r\\n\\r\\n  <aside id=\\\"page-content\\\" style=\\\"overflow:auto;\\\">\\r\\n    <div class=\\\"padding-side\\\" style=\\\"margin: 20px 0;\\\">\\r\\n      <md-toolbar color=\\\"primary\\\">\\r\\n        <!--  <md-input-container>\\r\\n                  <input mdInput [mdDatepicker]=\\\"fromDate\\\" placeholder=\\\"From\\\" [(ngModel)]=\\\"serachObj.from\\\" (ngModelChange)=\\\"callDataSource()\\\" (click)=\\\"clearAll()\\\">\\r\\n                  <button mdSuffix [mdDatepickerToggle]=\\\"fromDate\\\"></button>\\r\\n              </md-input-container>\\r\\n              <md-datepicker #fromDate></md-datepicker>\\r\\n  \\r\\n  \\r\\n              <md-input-container>\\r\\n                  <input mdInput [mdDatepicker]=\\\"toDate\\\" placeholder=\\\"To\\\" [(ngModel)]=\\\"serachObj.to\\\" (ngModelChange)=\\\"callDataSource()\\\">\\r\\n                  <button mdSuffix [mdDatepickerToggle]=\\\"toDate\\\"></button>\\r\\n              </md-input-container>\\r\\n              <md-datepicker #toDate></md-datepicker> -->\\r\\n\\r\\n        <md-input-container class=\\\"col-xs-2\\\">\\r\\n          <input\\r\\n            mdInput\\r\\n            placeholder=\\\"Invoice #\\\"\\r\\n            [(ngModel)]=\\\"serachObj.invoice\\\"\\r\\n            (keyup)=\\\"callDataSource()\\\"\\r\\n          />\\r\\n        </md-input-container>\\r\\n\\r\\n        <!--             <md-input-container> -->\\r\\n        <!--                 <input mdInput placeholder=\\\"CustomerName\\\" [(ngModel)]=\\\"serachObj.name\\\" (keyup)=\\\"callDataSource()\\\" (click)=\\\"clearAll()\\\"> -->\\r\\n        <!--             </md-input-container> -->\\r\\n\\r\\n        <md-input-container class=\\\"col-xs-2\\\">\\r\\n          <input\\r\\n            mdInput\\r\\n            placeholder=\\\"Business Name\\\"\\r\\n            [(ngModel)]=\\\"serachObj.businessName\\\"\\r\\n            (keyup)=\\\"callDataSource()\\\"\\r\\n          />\\r\\n        </md-input-container>\\r\\n\\r\\n        <md-input-container class=\\\"col-xs-1\\\">\\r\\n          <input\\r\\n            mdInput\\r\\n            type=\\\"number\\\"\\r\\n            placeholder=\\\"Mobile\\\"\\r\\n            [(ngModel)]=\\\"serachObj.mobile\\\"\\r\\n            (keyup)=\\\"callDataSource()\\\"\\r\\n          />\\r\\n        </md-input-container>\\r\\n        <md-input-container class=\\\"col-xs-2\\\">\\r\\n          <input\\r\\n            mdInput\\r\\n            [mdDatepicker]=\\\"InvoiceFrom\\\"\\r\\n            placeholder=\\\"From Date\\\"\\r\\n            [(ngModel)]=\\\"serachObj.fromDate\\\"\\r\\n            (ngModelChange)=\\\"callDataSource()\\\"\\r\\n          />\\r\\n          <button mdSuffix [mdDatepickerToggle]=\\\"InvoiceFrom\\\"></button>\\r\\n        </md-input-container>\\r\\n        <md-datepicker #InvoiceFrom></md-datepicker>\\r\\n        <md-input-container class=\\\"col-xs-2\\\">\\r\\n          <input\\r\\n            mdInput\\r\\n            [mdDatepicker]=\\\"InvoiceTo\\\"\\r\\n            placeholder=\\\"To Date\\\"\\r\\n            [(ngModel)]=\\\"serachObj.toDate\\\"\\r\\n            (ngModelChange)=\\\"callDataSource()\\\"\\r\\n          />\\r\\n          <button mdSuffix [mdDatepickerToggle]=\\\"InvoiceTo\\\"></button>\\r\\n        </md-input-container>\\r\\n        <md-datepicker #InvoiceTo></md-datepicker>\\r\\n        <div class=\\\"padding-side\\\">\\r\\n          <md-select\\r\\n            placeholder=\\\"Period\\\"\\r\\n            [(ngModel)]=\\\"serachObj.period\\\"\\r\\n            (change)=\\\"callDataSource()\\\"\\r\\n          >\\r\\n            <md-option *ngFor=\\\"let item of periodList\\\" [value]=\\\"item.key\\\">\\r\\n              {{ item.value }}\\r\\n            </md-option>\\r\\n          </md-select>\\r\\n        </div>\\r\\n        <!-- <div>\\r\\n          <md-select\\r\\n            placeholder=\\\"Range\\\"\\r\\n            [(ngModel)]=\\\"serachObj.range\\\"\\r\\n            (change)=\\\"callDataSource()\\\"\\r\\n          >\\r\\n            <md-option *ngFor=\\\"let item of rangeList\\\" [value]=\\\"item.key\\\">\\r\\n              {{ item.value }}\\r\\n            </md-option>\\r\\n          </md-select>\\r\\n        </div> -->\\r\\n        <div>\\r\\n          <md-select\\r\\n            placeholder=\\\"Status\\\"\\r\\n            [(ngModel)]=\\\"serachObj.invoicetype\\\"\\r\\n            (change)=\\\"callDataSource()\\\"\\r\\n          >\\r\\n            <md-option [value]=\\\"null\\\">All</md-option>\\r\\n            <md-option value=\\\"save\\\">Saved</md-option>\\r\\n            <md-option value=\\\"BILLING\\\">Billed</md-option>\\r\\n            <md-option value=\\\"QUOTATIONS\\\">Quotations</md-option>\\r\\n          </md-select>\\r\\n        </div>\\r\\n      </md-toolbar>\\r\\n    </div>\\r\\n    <div class=\\\"row center-xs padding\\\">\\r\\n      <md-card class=\\\"col-xs-12 \\\">\\r\\n        <md-card-content class=\\\"start-xs \\\">\\r\\n          <md-table\\r\\n            #table\\r\\n            [dataSource]=\\\"dataSource\\\"\\r\\n            mdSort\\r\\n            style=\\\"height: 500px; overflow-y: auto\\\"\\r\\n          >\\r\\n            <!--- Note that these columns can be defined in any order.\\r\\n            The actual rendered columns are set as a property on the row definition\\\" -->\\r\\n\\r\\n            <!-- Progress Column -->\\r\\n            <ng-container cdkColumnDef=\\\"invoice\\\">\\r\\n              <md-header-cell *cdkHeaderCellDef md-sort-header fxFlex=\\\"20\\\">\\r\\n                Invoice#\\r\\n              </md-header-cell>\\r\\n              <md-cell\\r\\n                *cdkCellDef=\\\"let row\\\"\\r\\n                (click)=\\\"view(row)\\\"\\r\\n                style=\\\"cursor: text;\\\"\\r\\n                fxFlex=\\\"20\\\"\\r\\n              >\\r\\n                {{ row.invoiceNumber }}\\r\\n              </md-cell>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Name Column -->\\r\\n            <!--                     <ng-container cdkColumnDef=\\\"customername\\\"> -->\\r\\n            <!--                         <md-header-cell *cdkHeaderCellDef md-sort-header>CustomerName </md-header-cell> -->\\r\\n            <!--                         <md-cell *cdkCellDef=\\\"let row\\\"> {{row.customer.firstName}} {{row.customer.lastName}} </md-cell> -->\\r\\n            <!--                     </ng-container> -->\\r\\n\\r\\n            <ng-container cdkColumnDef=\\\"businessName\\\">\\r\\n              <md-header-cell *cdkHeaderCellDef md-sort-header fxFlex=\\\"30\\\"\\r\\n                >Business Name\\r\\n              </md-header-cell>\\r\\n              <md-cell\\r\\n                *cdkCellDef=\\\"let row\\\"\\r\\n                (click)=\\\"view(row)\\\"\\r\\n                style=\\\"cursor: text;\\\"\\r\\n                fxFlex=\\\"30\\\"\\r\\n              >\\r\\n                {{ row.businessName | titlecase }}\\r\\n              </md-cell>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- ID Column -->\\r\\n            <ng-container cdkColumnDef=\\\"date\\\">\\r\\n              <md-header-cell *cdkHeaderCellDef md-sort-header fxFlex=\\\"15\\\">\\r\\n                Date\\r\\n              </md-header-cell>\\r\\n              <md-cell\\r\\n                *cdkCellDef=\\\"let row\\\"\\r\\n                (click)=\\\"view(row)\\\"\\r\\n                style=\\\"cursor: text;\\\"\\r\\n                fxFlex=\\\"15\\\"\\r\\n              >\\r\\n                {{ row.invoiceDate | date }}\\r\\n              </md-cell>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- <ng-container cdkColumnDef=\\\"mobile\\\">\\r\\n              <md-header-cell *cdkHeaderCellDef md-sort-header\\r\\n                >Mobile Number\\r\\n              </md-header-cell>\\r\\n              <md-cell *cdkCellDef=\\\"let row\\\" (click)=\\\"view(row)\\\" fxFlex=\\\"15\\\">\\r\\n                {{ row.customer.mobile }}\\r\\n              </md-cell>\\r\\n            </ng-container> -->\\r\\n            <ng-container cdkColumnDef=\\\"amount\\\">\\r\\n              <md-header-cell *cdkHeaderCellDef md-sort-header fxFlex=\\\"40\\\"\\r\\n                >Amount\\r\\n              </md-header-cell>\\r\\n              <md-cell\\r\\n                *cdkCellDef=\\\"let row\\\"\\r\\n                style=\\\"cursor: text;\\\"\\r\\n                (click)=\\\"view(row)\\\"\\r\\n                fxFlex=\\\"40\\\"\\r\\n              >\\r\\n                {{ row.total }}\\r\\n              </md-cell>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Color Column -->\\r\\n            <ng-container cdkColumnDef=\\\"action\\\">\\r\\n              <md-header-cell\\r\\n                *cdkHeaderCellDef\\r\\n                fxLayoutAlign=\\\"end center\\\"\\r\\n                fxFlex=\\\"5\\\"\\r\\n                >Action</md-header-cell\\r\\n              >\\r\\n              <md-cell\\r\\n                *cdkCellDef=\\\"let row\\\"\\r\\n                (click)=\\\"onSelectedItem(row)\\\"\\r\\n                fxLayoutAlign=\\\"end center\\\"\\r\\n                fxFlex=\\\"5\\\"\\r\\n              >\\r\\n                <md-icon color=\\\"accent\\\" [mdMenuTriggerFor]=\\\"sendMenu\\\"\\r\\n                  >more_vert</md-icon\\r\\n                >\\r\\n              </md-cell>\\r\\n            </ng-container>\\r\\n\\r\\n            <md-header-row\\r\\n              *cdkHeaderRowDef=\\\"displayedColumns\\\"\\r\\n              style=\\\" position: sticky;\\r\\n            top: 0;\\r\\n            z-index: 100;\\r\\n            background: white;\\\"\\r\\n            ></md-header-row>\\r\\n            <md-row *cdkRowDef=\\\"let row; columns: displayedColumns\\\"></md-row>\\r\\n          </md-table>\\r\\n        </md-card-content>\\r\\n        <md-paginator\\r\\n          style=\\\"width:100%;\\\"\\r\\n          #paginator\\r\\n          [length]=\\\"dataSource.data.length\\\"\\r\\n          [pageIndex]=\\\"0\\\"\\r\\n          [pageSize]=\\\"10\\\"\\r\\n          [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"\\r\\n        >\\r\\n        </md-paginator>\\r\\n      </md-card>\\r\\n    </div>\\r\\n    <md-menu #sendMenu=\\\"mdMenu\\\">\\r\\n      <!-- <button md-menu-item (click)=\\\"edit()\\\"> Edit </button> -->\\r\\n      <!-- <button md-menu-item (click)=\\\"print()\\\">Print</button> -->\\r\\n      <!-- <button md-menu-item (click)=\\\"open()\\\">Open</button> -->\\r\\n      <button md-menu-item (click)=\\\"edit()\\\">Edit</button>\\r\\n      <button md-menu-item (click)=\\\"pop()\\\">Print</button>\\r\\n      <!-- <button md-menu-item (click)=\\\"download()\\\">Download</button> -->\\r\\n      <!-- <button md-menu-item (click)=\\\"sendEmail()\\\">Send Email</button> -->\\r\\n      <button md-menu-item (click)=\\\"delete()\\\">Delete</button>\\r\\n    </md-menu>\\r\\n  </aside>\\r\\n  <!--<td-paging-bar #pagingBar [pageSizes]=\\\"[5, 10, 15, 20]\\\" [total]=\\\"filteredTotal\\\" (change)=\\\"page($event)\\\">\\r\\n      <span td-paging-bar-label hide-xs>Row per page:</span> {{pagingBar.range}} <span hide-xs>of {{pagingBar.total}}</span>\\r\\n  </td-paging-bar>-->\\r\\n  <md-sidenav\\r\\n    #sidenav\\r\\n    align=\\\"end\\\"\\r\\n    mode=\\\"over\\\"\\r\\n    [opened]=\\\"showSide\\\"\\r\\n    style=\\\"width:700px\\\"\\r\\n  >\\r\\n    <app-search-email\\r\\n      (close)=\\\"onClose('reload')\\\"\\r\\n      [(email)]=\\\"email\\\"\\r\\n      (emailSave)=\\\"emailSave()\\\"\\r\\n    ></app-search-email>\\r\\n  </md-sidenav>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/invoice/invoice.search.component.html\n// module id = ../../../../../src/app/components/admin/invoice/invoice.search.component.html\n// module chunks = 1","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/invoice/invoice.search.component.scss\n// module id = ../../../../../src/app/components/admin/invoice/invoice.search.component.scss\n// module chunks = 1","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { AppService } from \"../../../shared/service/app.service\";\r\nimport { AnimationService } from \"../../../shared/service/animation.service\";\r\nimport { RestService } from \"./../../../common/rest.service\";\r\nimport { Prop } from \"./../../../common/props\";\r\nimport { Util } from \"../../../shared/utils/util\";\r\nimport { Storage } from \"../../../shared/utils/storage\";\r\nimport { Sales } from \"./../../../entities/sales.entity\";\r\nimport { Item } from \"./../../../entities/item.entity\";\r\nimport { Customer } from \"../../../entities/customer.entity\";\r\nimport { InvoiceFormGroup } from \"../../../forms/invoice.form\";\r\nimport {\r\n  TdDataTableService,\r\n  TdDataTableSortingOrder,\r\n  ITdDataTableSortChangeEvent,\r\n  ITdDataTableColumn\r\n} from \"@covalent/core\";\r\nimport { IPageChangeEvent } from \"@covalent/core\";\r\nimport { DataSource } from \"@angular/cdk\";\r\nimport { InvoiceDataSource } from \"./invoice.datasource\";\r\nimport { Email } from \"./../../../entities/invoiceSearchEmail.entity\";\r\nimport { MdSort } from \"@angular/material\";\r\nimport { DialogContentExampleDialogInvoice } from \"./DialogContentExampleDialogInvoice\";\r\nimport {\r\n  MdDialog,\r\n  MdDialogRef,\r\n  MD_DIALOG_DATA,\r\n  MdPaginator\r\n} from \"@angular/material\";\r\nimport { DialogContentExampleDialogInvoices } from \"./DialogContentExampleDialogInvoices.component\";\r\nimport { Invoice80mmComponent } from \"../invoice80mm/invoice80mm.component\";\r\n// import {MdDialog} from '@angular/material';\r\n\r\n@Component({\r\n  selector: \"app-invoice-search\",\r\n  templateUrl: \"./invoice.search.component.html\",\r\n  styleUrls: [\"./invoice.search.component.scss\"]\r\n})\r\nexport class InvoiceSearchComponent implements OnInit {\r\n  @ViewChild(MdSort) sort: MdSort;\r\n  @ViewChild(MdPaginator) paginator: MdPaginator;\r\n  dataSource: InvoiceDataSource = null;\r\n  displayedColumns: any[] = [\r\n    \"invoice\",\r\n    \"businessName\",\r\n    \"date\",\r\n    \"amount\",\r\n    \"action\"\r\n  ];\r\n  // \"mobile\",\r\n  selectedItem: any;\r\n  showSide: boolean = false;\r\n  email: any = {};\r\n  serachObj: any = {};\r\n\r\n  constructor(\r\n    private appService: AppService,\r\n    private restService: RestService,\r\n    private _dataTableService: TdDataTableService,\r\n    public dialog: MdDialog\r\n  ) {}\r\n  ngOnInit(): void {\r\n    // this.searchCall();\r\n    // this.serachObj.period = \"year\";\r\n    this.dataSource = new InvoiceDataSource(\r\n      this.restService,\r\n      this.serachObj,\r\n      this.sort,\r\n      this.paginator\r\n    );\r\n    this.periodLoad();\r\n    this.rangeLoad();\r\n  }\r\n  clearAll() {\r\n    this.serachObj = {};\r\n    this.dataSource = new InvoiceDataSource(\r\n      this.restService,\r\n      this.serachObj,\r\n      this.sort,\r\n      this.paginator\r\n    );\r\n  }\r\n  dataList: any = [];\r\n  // searchCall(){\r\n  //   this.searchObject.period = \"year\";\r\n  //   this.restService.searchInvoice(this.searchObject)\r\n  //     .subscribe( result => {\r\n  //       this.dataList = result;\r\n  //       console.log(result)\r\n  //     })\r\n  // }\r\n\r\n  onSelectedItem(item: any) {\r\n    this.selectedItem = item;\r\n    console.log(this.selectedItem);\r\n  }\r\n  // edit() {\r\n  //   this.restService.invoicePrint(this.selectedItem.id);\r\n  // }\r\n\r\n  print() {\r\n    this.restService.invoicePrint(this.selectedItem.id);\r\n  }\r\n  open() {\r\n    this.restService.invoiceOpen(this.selectedItem.id);\r\n  }\r\n\r\n  view(row) {\r\n    this.selectedItem = row;\r\n    Storage.setLocalItem(\"selectedItem\", this.selectedItem);\r\n    setTimeout(() => {\r\n      this.opens(null);\r\n    }, 10);\r\n  }\r\n\r\n  pop() {\r\n    Storage.setLocalItem(\"selectedItem\", this.selectedItem);\r\n    setTimeout(() => {\r\n      this.opens(null);\r\n    }, 10);\r\n  }\r\n  // // opens() {\r\n  // //   const dialogRef = this.dialog.open(DialogContentExampleDialogInvoices, {\r\n  // //     width: '794px',\r\n  // //     height: '900px',\r\n  // //     // data: id\r\n\r\n  // //   });\r\n\r\n  //   dialogRef.afterClosed().subscribe(result => {\r\n  //   this.clearAll();\r\n  //   });\r\n  // }\r\n\r\n  download() {\r\n    this.restService.invoiceDownload(this.selectedItem.id);\r\n  }\r\n  opens(id) {\r\n    // let pageLayoutId : string = Storage.getLocalItem('pageLayoutId');\r\n    let companyInfo = Storage.getSessionUser();\r\n\r\n    let pageLayoutId = companyInfo.company.settingPayload.printLayoutId;\r\n    if (parseInt(pageLayoutId) == 1) {\r\n      const dialogRef = this.dialog.open(DialogContentExampleDialogInvoices, {\r\n        // width: \"1500px\",\r\n        // height: \"850px\",\r\n        data: id\r\n      });\r\n    }\r\n    if (parseInt(pageLayoutId) == 2) {\r\n      const dialogRef = this.dialog.open(Invoice80mmComponent, {\r\n        // width: \"279.66\",\r\n        // height: \"508.92px\",\r\n        data: id\r\n      });\r\n    }\r\n  }\r\n\r\n  openDialog(id) {\r\n    const dialogRef = this.dialog.open(DialogContentExampleDialogInvoice, {\r\n      width: \"500px\",\r\n      height: \"250px\",\r\n      data: id\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.clearAll();\r\n    });\r\n  }\r\n  delete() {\r\n    this.openDialog(this.selectedItem.id);\r\n  }\r\n  onClose(item: any) {\r\n    this.showSide = false;\r\n  }\r\n  emailSave() {\r\n    this.email.from = this.appService.getSessionUser().email;\r\n    this.email.fileName = \"Invoice.pdf\";\r\n    this.email.content = btoa(this.email.message);\r\n    delete this.email.message;\r\n\r\n    this.restService\r\n      .invoiceEmail(this.selectedItem.id, this.email)\r\n      .subscribe(result => {\r\n        this.showSide = false;\r\n      });\r\n  }\r\n  sendEmail() {\r\n    this.showSide = true;\r\n    // if (!item) {\r\n    let item = new Email();\r\n    // }\r\n    this.email = Object.assign({}, item);\r\n    this.email.to = this.selectedItem.emailId;\r\n  }\r\n\r\n  periodList: any[] = [];\r\n  periodLoad() {\r\n    this.restService\r\n      .dataloadFromFile(\"./assets/json/common.json\")\r\n      .subscribe(results => {\r\n        this.periodList = results[\"Period\"];\r\n      });\r\n  }\r\n\r\n  rangeList: any[] = [];\r\n  rangeLoad() {\r\n    this.restService\r\n      .dataloadFromFile(\"./assets/json/common.json\")\r\n      .subscribe(results => {\r\n        this.rangeList = results[\"Range\"];\r\n      });\r\n  }\r\n\r\n  callDataSource() {\r\n    console.log(this.serachObj.fromDate);\r\n    if (this.serachObj.fromDate && typeof this.serachObj.fromDate == \"object\") {\r\n      this.serachObj.fromDate = Util.ISODate(\r\n        this.serachObj.fromDate.toISOString()\r\n      );\r\n    }\r\n    if (this.serachObj.toDate && typeof this.serachObj.toDate == \"object\") {\r\n      this.serachObj.toDate = Util.ISODate(this.serachObj.toDate.toISOString());\r\n    }\r\n    this.dataSource = new InvoiceDataSource(\r\n      this.restService,\r\n      this.serachObj,\r\n      this.sort,\r\n      this.paginator\r\n    );\r\n  }\r\n  edit() {\r\n    console.log(\r\n      \"edit function called\" + this.selectedItem.customer.businessName\r\n    );\r\n    Storage.setLocalItem(\"selectedItem\", this.selectedItem);\r\n    this.appService.navigate(\"/invoice/add/\", [{ isEditable: true }]);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/invoice/invoice.search.component.ts","module.exports = \"<md-toolbar id=\\\"page-header\\\" color=\\\"primary\\\" style=\\\"font-weight: 300\\\">\\r\\n    <span>Send the document as an email</span>\\r\\n    <span flex></span>\\r\\n    <md-icon color=\\\"warn\\\" (click)=\\\"onClose()\\\"> clear</md-icon>\\r\\n</md-toolbar>\\r\\n<aside id=\\\"page-content\\\">\\r\\n    <form [formGroup]=\\\"myForm\\\" novalidate autocomplete='off' class=\\\"padding\\\">\\r\\n        <div fxLayout=\\\"column\\\">\\r\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n                <div fxFlex=\\\"10\\\">To</div>\\r\\n                <md-input-container fxFlex>\\r\\n                    <input mdInput placeholder=\\\"Enter multiple email address divided by commas..\\\" required [formControl]=\\\"myForm.controls.email_to\\\"\\r\\n                        [(ngModel)]=\\\"email.to\\\">\\r\\n                    <md-hint>\\r\\n                        <form-messages [control]=\\\"myForm.controls.email_to \\\"> </form-messages>\\r\\n                    </md-hint>\\r\\n                </md-input-container>\\r\\n            </div>\\r\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n                <div fxFlex=\\\"10\\\">subject</div>\\r\\n                <md-input-container fxFlex>\\r\\n                    <input mdInput placeholder=\\\"Enter the subject\\\" required [formControl]=\\\"myForm.controls.email_subject\\\" [(ngModel)]=\\\"email.subject\\\">\\r\\n                    <md-hint>\\r\\n                        <form-messages [control]=\\\"myForm.controls.email_subject \\\"> </form-messages>\\r\\n                    </md-hint>\\r\\n                </md-input-container>\\r\\n            </div>\\r\\n            <md-divider></md-divider>\\r\\n            <div>\\r\\n                <md-input-container>\\r\\n                    <textarea mdInput placeholder=\\\"Message\\\" required [formControl]=\\\"myForm.controls.email_message\\\" [(ngModel)]=\\\"email.message\\\" rows=\\\"10\\\"> </textarea>\\r\\n                    <md-hint>\\r\\n                        <form-messages [control]=\\\"myForm.controls.email_message \\\"> </form-messages>\\r\\n                    </md-hint>\\r\\n                </md-input-container>\\r\\n            </div>\\r\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end end\\\">\\r\\n                <!-- <md-icon color=\\\"accent\\\" class=\\\"md-36\\\">attachment</md-icon> -->\\r\\n                 <span style=\\\"margin-left: 1rem;\\\">&nbsp;</span>\\r\\n                <button md-raised-button color=accent (click)=\\\"onClose()\\\" > Cancel</button> \\r\\n                <span style=\\\"margin-left: 1rem;\\\">&nbsp;</span>\\r\\n                 <button md-raised-button color=accent (click)=\\\"onSend()\\\" [disabled]=\\\"!myForm.valid\\\"> Send</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </form>\\r\\n</aside>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/invoice/search.email.component.html\n// module id = ../../../../../src/app/components/admin/invoice/search.email.component.html\n// module chunks = 1","import { Component, OnInit , Input, Output, SimpleChanges, EventEmitter} from '@angular/core';\r\nimport { AppService } from '../../../shared/service/app.service';\r\nimport { AnimationService } from '../../../shared/service/animation.service';\r\nimport { RestService } from '../../../common/rest.service';\r\nimport {Email} from './../../../entities/invoiceSearchEmail.entity';\r\nimport { InvoiceFormGroup } from '../../../forms/invoice.form';\r\n\r\n\r\n@Component({\r\n  selector: 'app-search-email',\r\n  templateUrl: './search.email.component.html'\r\n \r\n})\r\nexport class SearchEmailComponent implements OnInit{\r\n   myForm: any  = InvoiceFormGroup.init();\r\n  \r\n   topicsList: any[] = [];\r\n   selectedIndex  = 0;\r\n\r\n   @Input() email: Email;\r\n  @Output() close: EventEmitter<any> =  new EventEmitter();\r\n   @Output() emailSave: EventEmitter<any> =  new EventEmitter();\r\n  constructor(private appService: AppService, private restService: RestService) {\r\n      InvoiceFormGroup.email(this.myForm);\r\n      this.email = new Email();\r\n    \r\n  }\r\n\r\n    ngOnInit(){\r\n\r\n    }\r\n    ngOnChanges(changes: SimpleChanges) {\r\n      if(changes['email']) {\r\n    \r\n      }\r\n    }\r\n\r\n    onClose() {\r\n      this.close.emit();\r\n    }\r\n\r\n    onSend() {\r\n      this.emailSave.emit();\r\n    }\r\n// typesLoad(){\r\n//   this.restService.topicsLoad().subscribe(result => {\r\n//     if(result){\r\n//       this.topicsList = result;\r\n    \r\n//     }\r\n//   })\r\n// }\r\n//     save() {\r\n//       this.restService.topicDataSave(this.topic)\r\n//         .subscribe( result =>{\r\n//             this.onClose();\r\n//            console.log(this.topic) \r\n//            this.topicData.emit(this.topic)\r\n//         })\r\n//     }\r\n//     open(item: any) {\r\n//       this.topic = new Topics();\r\n//       console.log(this.topic);\r\n//     }\r\n  }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/invoice/search.email.component.ts","module.exports = \"<div style=\\\"overflow-y:scroll;height:500px;overflow-x: hidden;\\\">\\r\\n  <div id=\\\"invoice-POS\\\">\\r\\n    <div align=\\\"center\\\">\\r\\n      <button md-raised-button color=\\\"accent\\\" (click)=\\\"print()\\\">\\r\\n        Print\\r\\n      </button>\\r\\n      <button md-raised-button color=\\\"accent\\\" (click)=\\\"cancel()\\\">\\r\\n        Cancel\\r\\n      </button>\\r\\n    </div>\\r\\n    <div id=\\\"component1\\\">\\r\\n      <div\\r\\n        fxLayout=\\\"row wrap\\\"\\r\\n        fxLayoutAlign=\\\"start start\\\"\\r\\n        style=\\\"margin-top:15px;margin-bottom:5px;text-align:center\\\"\\r\\n      >\\r\\n        <div\\r\\n          fxFlex=\\\"100\\\"\\r\\n          fxFlex.md=\\\"100\\\"\\r\\n          fxFlex.lg=\\\"100\\\"\\r\\n          fxFlex.xs=\\\"100\\\"\\r\\n          fxFlex.sm=\\\"100\\\"\\r\\n        >\\r\\n          <span\\r\\n            style=\\\"font-size:18px;font-family:arial, sans-serif;font-weight:600;\\\"\\r\\n            >{{ companyInfo.name }}</span\\r\\n          >\\r\\n        </div>\\r\\n      </div>\\r\\n      <div\\r\\n        fxLayout=\\\"row wrap\\\"\\r\\n        fxLayoutAlign=\\\"start start\\\"\\r\\n        style=\\\"margin-top:10px;margin-bottom:5px;text-align: center\\\"\\r\\n      >\\r\\n        <div\\r\\n          fxFlex=\\\"100\\\"\\r\\n          fxFlex.md=\\\"100\\\"\\r\\n          fxFlex.lg=\\\"100\\\"\\r\\n          fxFlex.xs=\\\"100\\\"\\r\\n          fxFlex.sm=\\\"100\\\"\\r\\n        >\\r\\n          <span\\r\\n            style=\\\"font-size:14px;font-family:arial, sans-serif;font-weight:500;\\\"\\r\\n            >GSTIN :\\r\\n          </span>\\r\\n\\r\\n          <span style=\\\"font-size:14px;font-family:arial, sans-serif\\\">{{\\r\\n            companyInfo.gstin\\r\\n          }}</span>\\r\\n          <br />\\r\\n          <span\\r\\n            style=\\\"font-size:13px;font-family:arial, sans-serif;font-weight:500;\\\"\\r\\n            >Street No : {{ companyInfo.address.street }},</span\\r\\n          >\\r\\n          <span\\r\\n            style=\\\"font-size:13px;font-family:arial, sans-serif;font-weight:500;\\\"\\r\\n            >{{ companyInfo.address.street }},</span\\r\\n          >\\r\\n          <br />\\r\\n          <span\\r\\n            style=\\\"font-size:13px;font-family:arial, sans-serif;font-weight:500;\\\"\\r\\n            >{{ companyInfo.address.city }} -\\r\\n            {{ companyInfo.address.zipCode }}</span\\r\\n          >\\r\\n        </div>\\r\\n      </div>\\r\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n        <table *ngIf=\\\"stockItemDataSource.length <= 0\\\">\\r\\n          <tbody>\\r\\n            <tr>\\r\\n              <td>No data found</td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n        <table\\r\\n          style=\\\" font-family: arial, sans-serif;\\r\\n          border-collapse: collapse;\\r\\n          width: 100%;font-size:12px\\\"\\r\\n          *ngIf=\\\"stockItemDataSource.length > 0\\\"\\r\\n        >\\r\\n          <tr>\\r\\n            <th\\r\\n              style=\\\" border: 1px solid #dddddd;\\r\\n              text-align: left;\\r\\n           font-weight:700;padding:3px\\\"\\r\\n            >\\r\\n              Item\\r\\n            </th>\\r\\n\\r\\n            <th\\r\\n              style=\\\" border: 1px solid #dddddd;\\r\\n              text-align: left;\\r\\n              font-weight:700;padding:3px\\\"\\r\\n            >\\r\\n              Qty\\r\\n            </th>\\r\\n            <th\\r\\n              style=\\\" border: 1px solid #dddddd;\\r\\n              text-align: left;\\r\\n             font-weight:700;padding:3px;\\\"\\r\\n            >\\r\\n              Rate\\r\\n            </th>\\r\\n            <th\\r\\n              style=\\\" border: 1px solid #dddddd;\\r\\n              text-align: left;\\r\\n             font-weight:700;padding:3px;\\\"\\r\\n            >\\r\\n              Discount\\r\\n            </th>\\r\\n            <th\\r\\n              style=\\\" border: 1px solid #dddddd;\\r\\n              text-align: left;\\r\\n             font-weight:700;padding:3px\\\"\\r\\n            >\\r\\n              Taxable\\r\\n            </th>\\r\\n\\r\\n            <th\\r\\n              style=\\\" border: 1px solid #dddddd;\\r\\n              text-align: left;\\r\\n              font-weight:700;padding:3px\\\"\\r\\n            >\\r\\n              Value\\r\\n            </th>\\r\\n          </tr>\\r\\n          <tr *ngFor=\\\"let row of stockItemDataSource\\\">\\r\\n            <td\\r\\n              style=\\\" border: 1px solid #dddddd;\\r\\n                text-align: left;padding:3px\\r\\n               \\\"\\r\\n            >\\r\\n              {{ row.stockItemId.productName }}\\r\\n            </td>\\r\\n            <td style=\\\" border: 1px solid #dddddd;text-align: left;padding:3px\\\">\\r\\n              {{ row.quantity }}\\r\\n            </td>\\r\\n            <td style=\\\" border: 1px solid #dddddd;text-align: left;padding:3px\\\">\\r\\n              {{ row.unit }}\\r\\n            </td>\\r\\n            <td style=\\\" border: 1px solid #dddddd;text-align: left;padding:3px\\\">\\r\\n              {{ row.discountAmount }}\\r\\n            </td>\\r\\n            <td\\r\\n              style=\\\" border: 1px solid #dddddd;text-align: left;padding:3px;\\\"\\r\\n            >\\r\\n              {{ row.taxAmount }}\\r\\n            </td>\\r\\n            <td style=\\\" border: 1px solid #dddddd;text-align: left;padding:3px\\\">\\r\\n              {{ row.totalAfterTax }}\\r\\n            </td>\\r\\n          </tr>\\r\\n          <!-- <tr *ngFor=\\\"let row of stockItemDataSource\\\">\\r\\n          <th></th>\\r\\n          <th></th>\\r\\n          <th></th>\\r\\n          <th\\r\\n            style=\\\"\\r\\n              text-align: left;\\r\\n              padding: 8px;font-weight:700;\\\"\\r\\n          >\\r\\n            Total(₹)\\r\\n          </th>\\r\\n\\r\\n          <th style=\\\"text-align: left;padding: 8px;font-weight:700;\\\">\\r\\n            {{ row.taxAmount }}\\r\\n          </th>\\r\\n\\r\\n          <th style=\\\" text-align: left;padding: 8px;font-weight:700;\\\">\\r\\n            {{ row.totalAfterTax }}\\r\\n          </th>\\r\\n        </tr> -->\\r\\n        </table>\\r\\n      </div>\\r\\n      <div style=\\\"padding-bottom:10px\\\"></div>\\r\\n      <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n        <div\\r\\n          fxFlex=\\\"100\\\"\\r\\n          fxFlex.md=\\\"100\\\"\\r\\n          fxFlex.lg=\\\"100\\\"\\r\\n          fxFlex.xs=\\\"100\\\"\\r\\n          fxFlex.sm=\\\"100\\\"\\r\\n        >\\r\\n          <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n            <div\\r\\n              fxFlex=\\\"50\\\"\\r\\n              fxFlex.md=\\\"50\\\"\\r\\n              fxFlex.lg=\\\"50\\\"\\r\\n              fxFlex.xs=\\\"100\\\"\\r\\n              fxFlex.sm=\\\"100\\\"\\r\\n            >\\r\\n              <div style=\\\"text-align: right;padding:0px 10px\\\">\\r\\n                <span\\r\\n                  style=\\\"font-family:arial, sans-serif;font-size:14px;font-weight:500\\\"\\r\\n                  >Taxable Amount :\\r\\n                </span>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div\\r\\n              fxFlex=\\\"50\\\"\\r\\n              fxFlex.md=\\\"50\\\"\\r\\n              fxFlex.lg=\\\"50\\\"\\r\\n              fxFlex.xs=\\\"100\\\"\\r\\n              fxFlex.sm=\\\"100\\\"\\r\\n            >\\r\\n              <div style=\\\"text-align: right;padding:0px 10px\\\">\\r\\n                <span\\r\\n                  style=\\\"font-family:arial, sans-serif;font-size:13px;font-weight:500\\\"\\r\\n                  >₹ {{ dataSource.totalBeforeTax }}</span\\r\\n                >\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n        <div\\r\\n          fxFlex=\\\"100\\\"\\r\\n          fxFlex.md=\\\"100\\\"\\r\\n          fxFlex.lg=\\\"100\\\"\\r\\n          fxFlex.xs=\\\"100\\\"\\r\\n          fxFlex.sm=\\\"100\\\"\\r\\n        >\\r\\n          <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n            <div\\r\\n              fxFlex=\\\"50\\\"\\r\\n              fxFlex.md=\\\"50\\\"\\r\\n              fxFlex.lg=\\\"50\\\"\\r\\n              fxFlex.xs=\\\"100\\\"\\r\\n              fxFlex.sm=\\\"100\\\"\\r\\n            >\\r\\n              <div style=\\\"text-align: right;padding:0px 10px\\\">\\r\\n                <span\\r\\n                  style=\\\"font-family:arial, sans-serif;font-size:14px;font-weight:500\\\"\\r\\n                  >Tax :\\r\\n                </span>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div\\r\\n              fxFlex=\\\"50\\\"\\r\\n              fxFlex.md=\\\"50\\\"\\r\\n              fxFlex.lg=\\\"50\\\"\\r\\n              fxFlex.xs=\\\"100\\\"\\r\\n              fxFlex.sm=\\\"100\\\"\\r\\n            >\\r\\n              <div style=\\\"text-align: right;padding:0px 10px\\\">\\r\\n                <span\\r\\n                  style=\\\"font-family:arial, sans-serif;font-size:13px;font-weight:500\\\"\\r\\n                >\\r\\n                  ₹ {{ dataSource.cumilativeTax }}\\r\\n                </span>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n        <div\\r\\n          fxFlex=\\\"100\\\"\\r\\n          fxFlex.md=\\\"100\\\"\\r\\n          fxFlex.lg=\\\"100\\\"\\r\\n          fxFlex.xs=\\\"100\\\"\\r\\n          fxFlex.sm=\\\"100\\\"\\r\\n        >\\r\\n          <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n            <div\\r\\n              fxFlex=\\\"50\\\"\\r\\n              fxFlex.md=\\\"50\\\"\\r\\n              fxFlex.lg=\\\"50\\\"\\r\\n              fxFlex.xs=\\\"100\\\"\\r\\n              fxFlex.sm=\\\"100\\\"\\r\\n            >\\r\\n              <div style=\\\"text-align: right;padding:0px 10px\\\">\\r\\n                <span\\r\\n                  style=\\\"font-family:arial, sans-serif;font-size:14px;font-weight:500\\\"\\r\\n                  >Total :\\r\\n                </span>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div\\r\\n              fxFlex=\\\"50\\\"\\r\\n              fxFlex.md=\\\"50\\\"\\r\\n              fxFlex.lg=\\\"50\\\"\\r\\n              fxFlex.xs=\\\"100\\\"\\r\\n              fxFlex.sm=\\\"100\\\"\\r\\n            >\\r\\n              <div style=\\\"text-align: right;padding:0px 10px\\\">\\r\\n                <span\\r\\n                  style=\\\"font-family:arial, sans-serif;font-size:13px;font-weight:500\\\"\\r\\n                >\\r\\n                  ₹ {{ dataSource.total }}\\r\\n                </span>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <!-- <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n      <div\\r\\n        fxFlex=\\\"100\\\"\\r\\n        fxFlex.md=\\\"100\\\"\\r\\n        fxFlex.lg=\\\"100\\\"\\r\\n        fxFlex.xs=\\\"100\\\"\\r\\n        fxFlex.sm=\\\"100\\\"\\r\\n      >\\r\\n        <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n          <div\\r\\n            fxFlex=\\\"50\\\"\\r\\n            fxFlex.md=\\\"50\\\"\\r\\n            fxFlex.lg=\\\"50\\\"\\r\\n            fxFlex.xs=\\\"100\\\"\\r\\n            fxFlex.sm=\\\"100\\\"\\r\\n          >\\r\\n            <div style=\\\"text-align: right;padding:0px 10px\\\">\\r\\n              <span\\r\\n                style=\\\"font-family:arial, sans-serif;font-size:14px;font-weight:500\\\"\\r\\n                >Invoice Total (In Words):\\r\\n              </span>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div\\r\\n            fxFlex=\\\"50\\\"\\r\\n            fxFlex.md=\\\"50\\\"\\r\\n            fxFlex.lg=\\\"50\\\"\\r\\n            fxFlex.xs=\\\"100\\\"\\r\\n            fxFlex.sm=\\\"100\\\"\\r\\n          >\\r\\n            <div style=\\\"text-align: right;padding:0px 10px\\\">\\r\\n              <span\\r\\n                style=\\\"font-family:arial, sans-serif;font-size:13px;font-weight:500\\\"\\r\\n              >\\r\\n                {{ dataSource.total | numberToWords }}\\r\\n              </span>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div> -->\\r\\n\\r\\n      <div style=\\\"text-align:center; margin-top: 5mm;font-size: 16px\\\">\\r\\n        <p>\\r\\n          <strong>Thank you for your business!</strong>\\r\\n          <br />\\r\\n          Visit again.\\r\\n        </p>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!--End InvoiceBot-->\\r\\n\\r\\n<!--End Invoice-->\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/invoice80mm/invoice80mm.component.html\n// module id = ../../../../../src/app/components/admin/invoice80mm/invoice80mm.component.html\n// module chunks = 1","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"#invoice-POS {\\n  padding: 2mm;\\n  margin: 0 auto;\\n  width: 80mm;\\n  background: #fff; }\\n\\nh1 {\\n  font-size: 1.5em;\\n  color: #222; }\\n\\nh2 {\\n  font-size: 1em;\\n  text-align: center;\\n  padding-bottom: 5px; }\\n\\nh3 {\\n  font-size: 1.2em;\\n  font-weight: 300;\\n  line-height: 2em; }\\n\\np {\\n  font-size: 0.8em;\\n  color: #666;\\n  line-height: 1.2em;\\n  text-align: center;\\n  display: block;\\n  -webkit-margin-before: 1em;\\n          margin-block-start: 1em;\\n  -webkit-margin-after: 1em;\\n          margin-block-end: 1em;\\n  -webkit-margin-start: 0px;\\n          margin-inline-start: 0px;\\n  -webkit-margin-end: 0px;\\n          margin-inline-end: 0px; }\\n\\n#top,\\n#mid,\\n#bot {\\n  /* Targets all id with 'col-' */\\n  border-bottom: 1px solid #eee; }\\n\\n#top {\\n  min-height: 20px; }\\n\\n#mid {\\n  min-height: 80px; }\\n\\n#bot {\\n  min-height: 50px; }\\n\\n/* #top.logo {\\r\\n        height: 60px;\\r\\n        width: 60px;\\r\\n        background: url(http://michaeltruong.ca/images/logo1.png) no-repeat;\\r\\n        background-size: 60px 60px;\\r\\n    }\\r\\n\\r\\n    .clientlogo {\\r\\n        float: left;\\r\\n        height: 60px;\\r\\n        width: 60px;\\r\\n        background: url(http://michaeltruong.ca/images/client.jpg) no-repeat;\\r\\n        background-size: 60px 60px;\\r\\n        border-radius: 50px;\\r\\n    } */\\n.info {\\n  display: block;\\n  margin-left: 0; }\\n\\n.title {\\n  float: right; }\\n\\n.title p {\\n  text-align: right; }\\n\\ntable {\\n  width: 100%;\\n  border-collapse: collapse; }\\n\\n.tabletitle {\\n  font-size: 1em;\\n  background: #eee; }\\n\\n.service {\\n  border-bottom: 1px solid #eee; }\\n\\n.hsn {\\n  width: 15%; }\\n\\n.item {\\n  width: 45%; }\\n\\n.qty {\\n  width: 10%; }\\n\\n.rate {\\n  width: 15%; }\\n\\n.value {\\n  width: 15%; }\\n\\n.itemtext {\\n  font-size: 0.8em; }\\n\\n#legalcopy {\\n  margin-top: 5mm;\\n  text-align: center; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/invoice80mm/invoice80mm.component.scss\n// module id = ../../../../../src/app/components/admin/invoice80mm/invoice80mm.component.scss\n// module chunks = 1","import {\r\n  Component,\r\n  Inject,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ViewChild,\r\n  ElementRef\r\n} from \"@angular/core\";\r\nimport { MdDialog, MdDialogRef, MD_DIALOG_DATA } from \"@angular/material\";\r\nimport { RestService } from \"../../../common/rest.service\";\r\nimport { AppService } from \"../../../shared/service/app.service\";\r\nimport { Storage } from \"../../../shared/utils/storage\";\r\n\r\nimport {\r\n  TdDataTableService,\r\n  TdDataTableSortingOrder,\r\n  ITdDataTableSortChangeEvent,\r\n  ITdDataTableColumn\r\n} from \"@covalent/core\";\r\nimport { Sales } from \"app/entities/sales.entity\";\r\nimport { DataSource } from \"@angular/cdk\";\r\n\r\n@Component({\r\n  selector: \"app-invoice80mm\",\r\n  templateUrl: \"./invoice80mm.component.html\",\r\n  styleUrls: [\"./invoice80mm.component.scss\"]\r\n})\r\nexport class Invoice80mmComponent {\r\n  id: any;\r\n  sales: any;\r\n  // akhdfbv:\"\"jhdfb\";\r\n  dataSource: any;\r\n  companyInfo: any;\r\n  bankDetails: any;\r\n  stockItemDataSource: any[] = [];\r\n  servicesDataSource: any;\r\n  selectedItem: any;\r\n  displayedColumns: any[] = [\r\n    \"Item\",\r\n    \"HSN\",\r\n    \"Qty\",\r\n    \"Rate\",\r\n    \"Discount\",\r\n    \"Taxable Value\",\r\n    \"SGST\",\r\n    \"CGST\",\r\n    \"IGST\",\r\n    \"CESS\",\r\n    \"Total\"\r\n  ];\r\n  displayedColumnsDef: any[] = [\r\n    \"stockItemId.productName\",\r\n    \"stockItemId.hsnCodeNames\",\r\n    \"quantity\",\r\n    \"unit\",\r\n    \"discountAmount\",\r\n    \"taxAmount\",\r\n    \"sgstAmount\",\r\n    \"csgstAmount\",\r\n    \"IgstAmount\",\r\n    \"cessAmount\",\r\n    \"totalAfterTax\"\r\n  ];\r\n  constructor(\r\n    private restService: RestService,\r\n    private appService: AppService,\r\n    public dialogRef: MdDialogRef<Invoice80mmComponent>,\r\n    @Inject(MD_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.companyInfo = Storage.getSessionUser().company;\r\n    console.log(this.companyInfo);\r\n    this.dataSource = Storage.getLocalItem(\"selectedItem\");\r\n    console.log(this.dataSource);\r\n    this.stockItemDataSource = this.dataSource.productItems;\r\n    this.servicesDataSource = this.dataSource.serviceItems;\r\n    console.log(\" this.stockItemDataSource \", this.stockItemDataSource);\r\n    this.bankDetails = Storage.getSessionUser().bankDetails;\r\n    console.log(\"this.bankDetails\", this.bankDetails);\r\n  }\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  ok() {\r\n    this.restService.invoiceDelete(this.id).subscribe(result => {\r\n      this.dialogRef.close();\r\n      this.appService.showMessage(\"Invoice Deleted Successfully \");\r\n    });\r\n  }\r\n\r\n  print() {\r\n    const printContent = document.getElementById(\"component1\");\r\n\r\n    const WindowPrt = window.open(\r\n      \"\",\r\n      \"\",\r\n      \"left=0,top=0,width=900,height=900,toolbar=0,scrollbars=0,status=0\"\r\n    );\r\n    WindowPrt.document.write(printContent.innerHTML);\r\n    WindowPrt.document.close();\r\n    WindowPrt.focus();\r\n    WindowPrt.print();\r\n    WindowPrt.close();\r\n  }\r\n  cancel() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/invoice80mm/invoice80mm.component.ts","import {\r\n  Component,\r\n  Inject,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ViewChild,\r\n  ElementRef\r\n} from \"@angular/core\";\r\nimport { MdDialog, MdDialogRef, MD_DIALOG_DATA } from \"@angular/material\";\r\nimport { RestService } from \"./../../../common/rest.service\";\r\nimport { AppService } from \"../../../shared/service/app.service\";\r\n\r\nimport {\r\n  TdDataTableService,\r\n  TdDataTableSortingOrder,\r\n  ITdDataTableSortChangeEvent,\r\n  ITdDataTableColumn\r\n} from \"@covalent/core\";\r\n@Component({\r\n  selector: \"dialog-content-example-dialog\",\r\n  template:\r\n    '<h2 style=\"color:#000;\">Delete Confirmation</h2><hr style=\"background:#fff;\" /><br/><p style=\"font-size:16px;\">Are you sure you want to delete payment receipt ?</p><br/><br/><button  md-button color=\"primary\" (click)=\"ok()\" style=\"background:#ffc107; color:#fff;\">Yes</button><button md-button color=\"primary\" (click)=\"cancel()\" style=\"float:right; background:#ffc107; color:#fff;\">No</button>'\r\n})\r\nexport class DialogContentExampleDialogPayment {\r\n  id: any = null;\r\n  constructor(\r\n    private restService: RestService,\r\n    private appService: AppService,\r\n    public dialogRef: MdDialogRef<DialogContentExampleDialogPayment>,\r\n    @Inject(MD_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.id = data;\r\n  }\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  ok() {\r\n    this.restService.paymentDelete(this.id).subscribe(result => {\r\n      this.dialogRef.close();\r\n      this.appService.showMessage(\"Payment Deleted Successfully \");\r\n    });\r\n  }\r\n  cancel() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/payment/DialogContentExampleDialogPayment.ts","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { DataSource } from \"@angular/cdk\";\r\nimport { AppService } from \"../../../shared/service/app.service\";\r\nimport { AnimationService } from \"../../../shared/service/animation.service\";\r\nimport { RestService } from \"../../../common/rest.service\";\r\nimport { MdSort, MdPaginator } from \"@angular/material\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport \"rxjs/add/observable/merge\";\r\n\r\nexport class PaymentDataSource extends DataSource<any> {\r\n  public data: any[] = [];\r\n\r\n  constructor(\r\n    private restService: RestService,\r\n    private searchObj: any,\r\n    private sort: MdSort,\r\n    private paginator: MdPaginator\r\n  ) {\r\n    super();\r\n    this.getDataList();\r\n  }\r\n\r\n  getDataList() {\r\n    console.log(this.searchObj);\r\n    this.restService.showLoader(true);\r\n    this.restService.searchPayment(this.searchObj).subscribe(results => {\r\n      if (results) {\r\n        this.data = results;\r\n        this.restService.showLoader(false);\r\n      }\r\n    });\r\n  }\r\n  /** Connect function called by the table to retrieve one astream containing the data to render. */\r\n  connect(): any {\r\n    const displayDataChanges = [\r\n      this.restService.searchPayment(this.searchObj),\r\n      this.sort.mdSortChange,\r\n      this.paginator.page\r\n    ];\r\n\r\n    return Observable.merge(...displayDataChanges).map(() => {\r\n      const myData = this.getSortedData();\r\n      const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n      return myData.splice(startIndex, this.paginator.pageSize);\r\n    });\r\n  }\r\n\r\n  disconnect() {}\r\n\r\n  getSortedData(): any[] {\r\n    const data = this.data.slice();\r\n    if (this.sort.active && this.sort.direction == \"\") {\r\n      return data;\r\n    }\r\n\r\n    return data.sort((a, b) => {\r\n      let propertyA: number | string | Date = \"\";\r\n      let propertyB: number | string | Date = \"\";\r\n      // displayedColumns: any[] = [\"customerId\", \"Invoice Number\", \"Payment Date\", \"Payment Mode\", \"Amount\"];\r\n      switch (this.sort.active) {\r\n        case \"paymentDt\":\r\n          [propertyA, propertyB] = [a.paymentDate, b.paymentDate];\r\n          break;\r\n        case \"companyName\":\r\n          [propertyA, propertyB] = [\r\n            a.customer.businessName,\r\n            b.customer.businessName\r\n          ];\r\n          break;\r\n        case \"Customer_Name\":\r\n          [propertyA, propertyB] = [a.customer.firstName, b.customer.firstName];\r\n          break;\r\n        case \"Invoice_Number\":\r\n          [propertyA, propertyB] = [a.invoiceNumber, b.invoiceNumber];\r\n          break;\r\n\r\n        case \"Payment_Mode\":\r\n          [propertyA, propertyB] = [a.paymentMode, b.paymentMode];\r\n          break;\r\n        case \"Payment_Date\":\r\n          [propertyA, propertyB] = [a.paymentDateStr, b.paymentDateStr];\r\n          break;\r\n        case \"amount\":\r\n          [propertyA, propertyB] = [a.amount, b.amount];\r\n          break;\r\n        case \"fromDate\":\r\n          [propertyA, propertyB] = [a.fromDate, b.fromDate];\r\n          break;\r\n        case \"toDate\":\r\n          [propertyA, propertyB] = [a.toDate, b.toDate];\r\n          break;\r\n      }\r\n      let valueA = isNaN(+propertyA) ? propertyA : +propertyA;\r\n      let valueB = isNaN(+propertyB) ? propertyB : +propertyB;\r\n\r\n      return (\r\n        (valueA < valueB ? -1 : 1) * (this.sort.direction == \"asc\" ? 1 : -1)\r\n      );\r\n    });\r\n  }\r\n\r\n  // _filterChange = new BehaviorSubject('');\r\n\r\n  // public get filter(): string { return this._filterChange.value; }\r\n  // public set filter(filter: string) { this._filterChange.next(filter); }\r\n\r\n  //private data: any[] = [];\r\n  //  constructor(private restService: RestService, private searchObj: any, private sort: MdSort) {\r\n  //    super();\r\n  //    this.restService.searchSupplier(this.searchObj).subscribe(results => {\r\n  //      if (results) {\r\n  //        this.data = results;\r\n  //      }\r\n  //    })\r\n  //\r\n  //  }\r\n  //\r\n  //  /** Connect function called by the table to retrieve one stream containing the data to render. */\r\n  //  connect(): any {\r\n  //    const displayDataChanges = [\r\n  //     this.restService.searchSupplier(this.searchObj),\r\n  //      this._filterChange,\r\n  //    ];\r\n  //    return Observable.merge(...displayDataChanges).map(() => {\r\n  //      return this.data.slice().filter((item: any) => {\r\n  //        console.log(item)\r\n  //        if(item) {\r\n  //            let searchStr: string = (item.firstName +\"\"+ item.lastName +\"\"+ item.email);\r\n  //            console.log(searchStr);\r\n  //            return searchStr.toLowerCase().indexOf(this.filter.toLowerCase()) != -1;\r\n  //        } else {\r\n  //          return true;\r\n  //        }\r\n  //\r\n  //      });\r\n  //    });\r\n  //   // return Promise.resolve([])\r\n  //     return Observable.merge(...displayDataChanges).map(() => {\r\n  //      return this.getSortedData();\r\n  //    });\r\n  //\r\n  //  }\r\n  //\r\n  //  disconnect() {}\r\n  //\r\n  //   getSortedData(): any[] {\r\n  //    const data = this.data.slice();\r\n  //    if (!this.sort.active || this.sort.direction == '') { return data; }\r\n  //\r\n  //    return data.sort((a, b) => {\r\n  //      let propertyA: number | string | Date = '';\r\n  //      let propertyB: number | string | Date = '';\r\n  //\r\n  //      switch (this.sort.active) {\r\n  //        case 'date': [propertyA, propertyB] = [a.supplierDate, b.supplierDate]; break;\r\n  //        case 'phone': [propertyA, propertyB] = [a.supplierPhNumber, b.supplierPhNumber]; break;\r\n  //        case 'company': [propertyA, propertyB] = [a.supplierCompany, b.supplierCompany]; break;\r\n  //        //case 'amount': [propertyA, propertyB] = [a.total, b.total]; break;\r\n  //      }\r\n  //      let val= N(+propertyA) ? propertyA : +propertyA;\r\n  //      let valueB = isNaN(+propertyB) ? propertyB : +propertyB;\r\n  //\r\n  //      return (valueA < valueB ? -1 : 1) * (this.sort.direction == 'asc' ? 1 : -1);\r\n  //    });\r\n  //  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/payment/payment.datasource.ts","module.exports = \"<div class=\\\"position\\\">\\r\\n  <div id=\\\"page-header\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n    <h2>Payments Received</h2>\\r\\n  </div>\\r\\n  <aside id=\\\"page-content\\\" style=\\\"overflow: auto;\\\">\\r\\n    <div class=\\\"padding-side\\\" style=\\\"margin: 20px 0;\\\">\\r\\n      <md-toolbar color=\\\"primary\\\">\\r\\n        <md-input-container class=\\\"col-xs-2\\\">\\r\\n          <input\\r\\n            mdInput\\r\\n            placeholder=\\\"Search by Invoice Number\\\"\\r\\n            [(ngModel)]=\\\"serachObj.invoiceNumber\\\"\\r\\n            (keyup)=\\\"callDataSource()\\\"\\r\\n          />\\r\\n        </md-input-container>\\r\\n\\r\\n        <div class=\\\"col-xs-2 padding-side\\\">\\r\\n          <md-input-container>\\r\\n            <input\\r\\n              mdInput\\r\\n              placeholder=\\\"Business Name\\\"\\r\\n              [(ngModel)]=\\\"serachObj.companyName\\\"\\r\\n              (keyup)=\\\"callDataSource()\\\"\\r\\n            />\\r\\n          </md-input-container>\\r\\n        </div>\\r\\n\\r\\n        <!--    <div class=\\\"col-xs-3 \\\">\\r\\n                <md-select  placeholder=\\\"Search by Customer Name\\\"  [(ngModel)]=\\\"searchObject.customerId\\\" (change)=\\\"callDataSource()\\\" (click)=\\\"clearAll()\\\">\\r\\n                    <md-option *ngFor=\\\"let item of customerList\\\" [value]=\\\"item[0]\\\">\\r\\n                        {{item[1]}} {{item[2]}}\\r\\n                    </md-option>\\r\\n                </md-select>\\r\\n            </div> -->\\r\\n\\r\\n        <md-input-container class=\\\"col-xs-2\\\">\\r\\n          <input\\r\\n            mdInput\\r\\n            [mdDatepicker]=\\\"paymentDt\\\"\\r\\n            placeholder=\\\"Payment Date\\\"\\r\\n            [(ngModel)]=\\\"serachObj.paymentDate\\\"\\r\\n            (ngModelChange)=\\\"callDataSource()\\\"\\r\\n          />\\r\\n          <button mdSuffix [mdDatepickerToggle]=\\\"paymentDt\\\"></button>\\r\\n        </md-input-container>\\r\\n        <md-datepicker #paymentDt></md-datepicker>\\r\\n        <md-input-container class=\\\"col-xs-1\\\">\\r\\n          <input\\r\\n            mdInput\\r\\n            [mdDatepicker]=\\\"paymentFrom\\\"\\r\\n            placeholder=\\\"From Date\\\"\\r\\n            [(ngModel)]=\\\"serachObj.fromDate\\\"\\r\\n            (ngModelChange)=\\\"callDataSource()\\\"\\r\\n          />\\r\\n          <button mdSuffix [mdDatepickerToggle]=\\\"paymentFrom\\\"></button>\\r\\n        </md-input-container>\\r\\n        <md-datepicker #paymentFrom></md-datepicker>\\r\\n        <md-input-container class=\\\"col-xs-1\\\">\\r\\n          <input\\r\\n            mdInput\\r\\n            [mdDatepicker]=\\\"paymentTo\\\"\\r\\n            placeholder=\\\"To Date\\\"\\r\\n            [(ngModel)]=\\\"serachObj.toDate\\\"\\r\\n            (ngModelChange)=\\\"callDataSource()\\\"\\r\\n          />\\r\\n          <button mdSuffix [mdDatepickerToggle]=\\\"paymentTo\\\"></button>\\r\\n        </md-input-container>\\r\\n        <md-datepicker #paymentTo></md-datepicker>\\r\\n        <div class=\\\"col-xs-2 padding-side\\\">\\r\\n          <md-select\\r\\n            placeholder=\\\"Search by Payment Mode\\\"\\r\\n            [(ngModel)]=\\\"serachObj.paymentMode\\\"\\r\\n            (change)=\\\"callDataSource()\\\"\\r\\n          >\\r\\n            <md-option *ngFor=\\\"let item of payModeList\\\" [value]=\\\"item.key\\\">\\r\\n              {{ item.value }}\\r\\n            </md-option>\\r\\n          </md-select>\\r\\n        </div>\\r\\n        <div class=\\\"col-xs-2 \\\">\\r\\n          <md-select\\r\\n            placeholder=\\\"Period\\\"\\r\\n            [(ngModel)]=\\\"serachObj.period\\\"\\r\\n            (change)=\\\"callDataSource()\\\"\\r\\n          >\\r\\n            <md-option *ngFor=\\\"let item of periodList\\\" [value]=\\\"item.key\\\">\\r\\n              {{ item.value }}\\r\\n            </md-option>\\r\\n          </md-select>\\r\\n        </div>\\r\\n\\r\\n        <!-- <div class=\\\"col-xs-2 padding-side\\\">\\r\\n          <md-select\\r\\n            placeholder=\\\"Range\\\"\\r\\n            [(ngModel)]=\\\"serachObj.range\\\"\\r\\n            (change)=\\\"callDataSource()\\\"\\r\\n          >\\r\\n            <md-option *ngFor=\\\"let item of rangeList\\\" [value]=\\\"item.key\\\">\\r\\n              {{ item.value }}\\r\\n            </md-option>\\r\\n          </md-select>\\r\\n        </div> -->\\r\\n      </md-toolbar>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row center-xs padding\\\">\\r\\n      <md-card class=\\\"col-xs-12 \\\">\\r\\n        <!-- <div class=\\\"row\\\">\\r\\n                \\r\\n                <div class=\\\"col-xs-12 end-xs padding-height\\\">\\r\\n                    <md-icon color=\\\"accent\\\" >print</md-icon>\\r\\n                    <md-icon color=\\\"accent\\\">settings</md-icon>\\r\\n                </div>\\r\\n            </div> -->\\r\\n        <md-card-content class=\\\"start-xs \\\">\\r\\n          <md-table\\r\\n            #table\\r\\n            fixed-header\\r\\n            [dataSource]=\\\"dataSource\\\"\\r\\n            mdSort\\r\\n            style=\\\"height: 500px; overflow-x: auto; overflow-y: scroll;\\\"\\r\\n          >\\r\\n            <!--- Note that these columns can be defined in any order.\\r\\n          The actual rendered columns are set as a property on the row definition\\\" -->\\r\\n\\r\\n            <!-- Progress Column -->\\r\\n            <ng-container cdkColumnDef=\\\"Invoice_Number\\\">\\r\\n              <md-header-cell *cdkHeaderCellDef md-sort-header fxFlex=\\\"25%\\\"\\r\\n                >Invoice Number</md-header-cell\\r\\n              >\\r\\n              <md-cell *cdkCellDef=\\\"let row\\\" (click)=\\\"myFun(row)\\\" fxFlex=\\\"25%\\\">\\r\\n                {{ row.invoiceNumber }}\\r\\n              </md-cell>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- ID Column -->\\r\\n            <ng-container cdkColumnDef=\\\"companyName\\\">\\r\\n              <md-header-cell *cdkHeaderCellDef md-sort-header fxFlex=\\\"25%\\\"\\r\\n                >Business Name\\r\\n              </md-header-cell>\\r\\n              <md-cell *cdkCellDef=\\\"let row\\\" (click)=\\\"myFun(row)\\\" fxFlex=\\\"25%\\\">\\r\\n                {{ row.customer.businessName }}\\r\\n              </md-cell>\\r\\n            </ng-container>\\r\\n            <!-- \\r\\n            <ng-container cdkColumnDef=\\\"Customer_Name\\\">\\r\\n              <md-header-cell *cdkHeaderCellDef md-sort-header fxFlex=\\\"15%\\\"\\r\\n                >Customer Name\\r\\n              </md-header-cell>\\r\\n              <md-cell *cdkCellDef=\\\"let row\\\" (click)=\\\"myFun(row)\\\" fxFlex=\\\"15%\\\">\\r\\n                {{ row.customer.firstName }}\\r\\n                {{ row.customer.lastName }}</md-cell\\r\\n              >\\r\\n            </ng-container> -->\\r\\n\\r\\n            <!-- Name Column -->\\r\\n            <ng-container cdkColumnDef=\\\"Payment_Date\\\">\\r\\n              <md-header-cell *cdkHeaderCellDef md-sort-header fxFlex=\\\"15%\\\"\\r\\n                >Payment Date\\r\\n              </md-header-cell>\\r\\n              <md-cell *cdkCellDef=\\\"let row\\\" (click)=\\\"myFun(row)\\\" fxFlex=\\\"15%\\\">\\r\\n                {{ row.paymentDateStr }}\\r\\n              </md-cell>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-container cdkColumnDef=\\\"Payment_Mode\\\">\\r\\n              <md-header-cell *cdkHeaderCellDef md-sort-header fxFlex=\\\"15%\\\"\\r\\n                >Payment Mode\\r\\n              </md-header-cell>\\r\\n              <md-cell *cdkCellDef=\\\"let row\\\" (click)=\\\"myFun(row)\\\" fxFlex=\\\"15%\\\">\\r\\n                {{ row.paymentMode }}\\r\\n              </md-cell>\\r\\n            </ng-container>\\r\\n            <ng-container cdkColumnDef=\\\"amount\\\">\\r\\n              <md-header-cell *cdkHeaderCellDef md-sort-header fxFlex=\\\"10%\\\"\\r\\n                >Amount\\r\\n              </md-header-cell>\\r\\n              <md-cell *cdkCellDef=\\\"let row\\\" (click)=\\\"myFun(row)\\\" fxFlex=\\\"10%\\\">\\r\\n                {{ row.amount }}\\r\\n              </md-cell>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Color Column -->\\r\\n            <!--                     <ng-container cdkColumnDef=\\\"Action\\\" > -->\\r\\n            <!--                         <md-header-cell *cdkHeaderCellDef fxLayoutAlign=\\\"end center\\\">Action</md-header-cell> -->\\r\\n            <!--                         <md-cell *cdkCellDef=\\\"let row\\\"  (click)=\\\"onSelectedItem(row)\\\" [mdMenuTriggerFor]=\\\"sendMenu\\\" fxLayoutAlign=\\\"end center\\\"> -->\\r\\n            <!--                             <md-icon color=\\\"accent\\\" >more_vert</md-icon> -->\\r\\n            <!--                         </md-cell> -->\\r\\n            <!--                     </ng-container> -->\\r\\n            <ng-container cdkColumnDef=\\\"Action\\\">\\r\\n              <md-header-cell\\r\\n                *cdkHeaderCellDef\\r\\n                fxLayoutAlign=\\\"end center\\\"\\r\\n                fxFlex=\\\"5%\\\"\\r\\n                >Action</md-header-cell\\r\\n              >\\r\\n              <md-cell\\r\\n                *cdkCellDef=\\\"let row\\\"\\r\\n                (click)=\\\"onSelectedItem(row)\\\"\\r\\n                fxLayoutAlign=\\\"end center\\\"\\r\\n                fxFlex=\\\"5%\\\"\\r\\n              >\\r\\n                <md-icon color=\\\"accent\\\" [mdMenuTriggerFor]=\\\"sendMenu\\\"\\r\\n                  >more_vert</md-icon\\r\\n                >\\r\\n              </md-cell>\\r\\n            </ng-container>\\r\\n\\r\\n            <md-header-row\\r\\n              *cdkHeaderRowDef=\\\"displayedColumns\\\"\\r\\n              style=\\\" position: sticky;\\r\\n            top: 0;\\r\\n            z-index: 100;\\r\\n            background: white;\\\"\\r\\n            ></md-header-row>\\r\\n            <md-row *cdkRowDef=\\\"let row; columns: displayedColumns\\\"></md-row>\\r\\n          </md-table>\\r\\n        </md-card-content>\\r\\n      </md-card>\\r\\n      <md-paginator\\r\\n        style=\\\"width: 100%;\\\"\\r\\n        #paginator\\r\\n        [length]=\\\"dataSource.data.length\\\"\\r\\n        [pageIndex]=\\\"0\\\"\\r\\n        [pageSize]=\\\"10\\\"\\r\\n        [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"\\r\\n      >\\r\\n      </md-paginator>\\r\\n      <!-- <div layout-xs=\\\"column\\\" layout=\\\"row\\\" layout-align-xs=\\\"end end\\\" layout-align=\\\"end center\\\">\\r\\n            <grid-pagination max-size=\\\"5\\\"\\r\\n                             boundary-links=\\\"true\\\"\\r\\n                             class=\\\"pagination\\\"\\r\\n                             ng-if=\\\"paginationOptions.totalItems  > paginationOptions.itemsPerPage\\\"\\r\\n                             total-items=\\\"paginationOptions.totalItems\\\"\\r\\n                             ng-model=\\\"paginationOptions.currentPage\\\"\\r\\n                             ng-change=\\\"reloadGrid()\\\"\\r\\n                             items-per-page=\\\"paginationOptions.itemsPerPage\\\"></grid-pagination>\\r\\n            <md-input-container flex-offset-gt-xs=\\\"5\\\" class=\\\"items-per-page\\\">\\r\\n                <md-select ng-model=\\\"paginationOptions.itemsPerPage\\\"\\r\\n                           ng-change=\\\"reloadGrid()\\\">\\r\\n                    <md-option ng-value=\\\"10\\\">10</md-option>\\r\\n                    <md-option ng-value=\\\"25\\\">25</md-option>\\r\\n                    <md-option ng-value=\\\"50\\\">50</md-option>\\r\\n                    <md-option ng-value=\\\"75\\\">75</md-option>\\r\\n                </md-select>\\r\\n            </md-input-container>\\r\\n        </div> -->\\r\\n    </div>\\r\\n    <md-menu #sendMenu=\\\"mdMenu\\\" style=\\\"padding: 1rem;\\\">\\r\\n      <button md-menu-item (click)=\\\"pop()\\\">Print</button>\\r\\n      <!-- <button md-menu-item (click)=\\\"open()\\\">Open</button> -->\\r\\n      <button md-menu-item (click)=\\\"view()\\\">View</button>\\r\\n      <!-- <button md-menu-item (click)=\\\"download()\\\">Download</button> -->\\r\\n      <!-- <button md-menu-item (click)=\\\"sendEmail()\\\">Send Email</button> -->\\r\\n      <button md-menu-item (click)=\\\"edit()\\\">Edit</button>\\r\\n      <button md-menu-item (click)=\\\"delete()\\\">Delete</button>\\r\\n    </md-menu>\\r\\n  </aside>\\r\\n\\r\\n  <md-sidenav\\r\\n    #sidenav\\r\\n    align=\\\"end\\\"\\r\\n    mode=\\\"over\\\"\\r\\n    [opened]=\\\"showSide\\\"\\r\\n    style=\\\"width:700px\\\"\\r\\n  >\\r\\n    <app-search-email\\r\\n      (close)=\\\"onClose('reload')\\\"\\r\\n      [(email)]=\\\"email\\\"\\r\\n      (emailSave)=\\\"emailSave()\\\"\\r\\n    ></app-search-email>\\r\\n  </md-sidenav>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/payment/payment.search.component.html\n// module id = ../../../../../src/app/components/admin/payment/payment.search.component.html\n// module chunks = 1","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".position {\\n  position: fixed;\\n  left: 0px;\\n  right: 0px;\\n  overflow-x: hidden; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/payment/payment.search.component.scss\n// module id = ../../../../../src/app/components/admin/payment/payment.search.component.scss\n// module chunks = 1","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ViewChild,\r\n  ElementRef\r\n} from \"@angular/core\";\r\nimport { AppService } from \"../../../shared/service/app.service\";\r\nimport { AnimationService } from \"../../../shared/service/animation.service\";\r\nimport { RestService } from \"./../../../common/rest.service\";\r\nimport { Prop } from \"./../../../common/props\";\r\nimport { Util } from \"../../../shared/utils/util\";\r\nimport { Email } from \"../../../entities/paymentSearchEmail.entity\";\r\nimport { Storage } from \"../../../shared/utils/storage\";\r\nimport { Payment } from \"../../../entities/payment\";\r\nimport { PaymentFormGroup } from \"../../../forms/payment.form\";\r\nimport { PaymentDataSource } from \"./payment.datasource\";\r\nimport { ApexService } from \"../../../shared/service/apex.service\";\r\nimport {\r\n  TdDataTableService,\r\n  TdDataTableSortingOrder,\r\n  ITdDataTableSortChangeEvent,\r\n  ITdDataTableColumn\r\n} from \"@covalent/core\";\r\nimport { DataSource } from \"@angular/cdk\";\r\nimport { MdSort } from \"@angular/material\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport \"rxjs/add/observable/fromEvent\";\r\nimport \"rxjs/add/operator/debounceTime\";\r\nimport \"rxjs/add/operator/distinctUntilChanged\";\r\n\r\nimport { DialogContentExampleDialogPayment } from \"./DialogContentExampleDialogPayment\";\r\nimport {\r\n  MdDialog,\r\n  MdDialogRef,\r\n  MD_DIALOG_DATA,\r\n  MdPaginator\r\n} from \"@angular/material\";\r\nimport { PmPaymentDialogContentComponent } from \"./pm.payment-dialog-content.component\";\r\n\r\n@Component({\r\n  selector: \"app-payment-search\",\r\n  templateUrl: \"./payment.search.component.html\",\r\n  styleUrls: [\"./payment.search.component.scss\"]\r\n})\r\n// implements OnInit\r\nexport class PaymentSearchComponent {\r\n  dataSource: PaymentDataSource = null;\r\n  selectedItem: any;\r\n  showSide: boolean = false;\r\n  selectedItemForView: any = null;\r\n  serachObj: any = {};\r\n  email: any = {};\r\n  @ViewChild(MdSort) sort: MdSort;\r\n  @ViewChild(MdPaginator) paginator: MdPaginator;\r\n  displayedColumns: any[] = [\r\n    \"Invoice_Number\",\r\n    \"companyName\",\r\n    \"Payment_Date\",\r\n    \"Payment_Mode\",\r\n    \"amount\",\r\n    \"Action\"\r\n  ];\r\n  //  dataSource : any = null;\r\n  constructor(\r\n    private appService: AppService,\r\n    private restService: RestService,\r\n    private apexService: ApexService,\r\n    private _dataTableService: TdDataTableService,\r\n    public dialog: MdDialog\r\n  ) {}\r\n  //\r\n  ngOnInit(): void {\r\n    //this.serachObj.period = \"year\";\r\n    this.dataSource = new PaymentDataSource(\r\n      this.restService,\r\n      this.serachObj,\r\n      this.sort,\r\n      this.paginator\r\n    );\r\n    //        this.customerLoad();\r\n    this.payModeLoad();\r\n    this.periodLoad();\r\n    this.rangeLoad();\r\n  }\r\n\r\n  payModeList: any[] = [];\r\n  payModeLoad() {\r\n    this.restService\r\n      .dataloadFromFile(\"./assets/json/common.json\")\r\n      .subscribe(results => {\r\n        if (results) {\r\n          this.payModeList = results[\"PayModeSearch\"];\r\n        }\r\n      });\r\n  }\r\n\r\n  periodList: any[] = [];\r\n  periodLoad() {\r\n    this.restService\r\n      .dataloadFromFile(\"./assets/json/common.json\")\r\n      .subscribe(results => {\r\n        this.periodList = results[\"Period\"];\r\n      });\r\n  }\r\n  rangeList: any[] = [];\r\n  rangeLoad() {\r\n    this.restService\r\n      .dataloadFromFile(\"./assets/json/common.json\")\r\n      .subscribe(results => {\r\n        this.rangeList = results[\"Range\"];\r\n      });\r\n  }\r\n\r\n  //    customerList: any[] = [];\r\n  //    customerLoad() {\r\n  //\r\n  //        this.restService.retriveCustomerAllforCMB()\r\n  //            .subscribe(results => {\r\n  //                if (results) {\r\n  //                    this.customerList = results;\r\n  //\r\n  //                }\r\n  //            })\r\n  //    }\r\n  clearAll() {\r\n    this.serachObj = {};\r\n    this.dataSource = new PaymentDataSource(\r\n      this.restService,\r\n      this.serachObj,\r\n      this.sort,\r\n      this.paginator\r\n    );\r\n  }\r\n\r\n  // dataList: any = []\r\n\r\n  edit() {\r\n    console.log(\r\n      \"edit function called\" + this.selectedItem.customer.businessName\r\n    );\r\n    Storage.setLocalItem(\"selectedItem\", this.selectedItem);\r\n    this.appService.navigate(\"./admin/payment\", [\r\n      { id: this.selectedItem.id, isEdit: \"true\" }\r\n    ]);\r\n  }\r\n  pop() {\r\n    Storage.setLocalItem(\"selectedItem\", this.selectedItem);\r\n    setTimeout(() => {\r\n      this.opens(null);\r\n    }, 10);\r\n  }\r\n  opens(id) {\r\n    // let pageLayoutId : string = Storage.getLocalItem('pageLayoutId');\r\n    let companyInfo = Storage.getSessionUser();\r\n\r\n    let pageLayoutId = companyInfo.company.settingPayload.printLayoutId;\r\n    if (parseInt(pageLayoutId) == 1) {\r\n      const dialogRef = this.dialog.open(PmPaymentDialogContentComponent, {\r\n        width: \"600px\",\r\n        data: id\r\n      });\r\n    }\r\n  }\r\n\r\n  openDialog(id) {\r\n    const dialogRef = this.dialog.open(DialogContentExampleDialogPayment, {\r\n      width: \"500px\",\r\n      height: \"250px\",\r\n      data: id\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.clearAll();\r\n    });\r\n  }\r\n\r\n  delete() {\r\n    this.openDialog({ id: [this.selectedItem.id] });\r\n    // this.restService.paymentDelete({ id: [this.selectedItem.id] })\r\n    //     .subscribe(result => {\r\n\r\n    //         this.apexService.showMessages(\"payment receipt deleted successfully.\", 1500);\r\n    //         this.dataSource = new PaymentDataSource(this.restService, this.searchObject, this.sort);\r\n    //     });\r\n  }\r\n  //\r\n  onSelectedItem(row) {\r\n    this.selectedItem = row;\r\n  }\r\n  // serachObj: any = {};\r\n  //\r\n  callDataSource() {\r\n    if (this.serachObj.fromDate && typeof this.serachObj.fromDate == \"object\") {\r\n      this.serachObj.fromDate = Util.ISODate(\r\n        this.serachObj.fromDate.toISOString()\r\n      );\r\n    }\r\n    if (this.serachObj.toDate && typeof this.serachObj.toDate == \"object\") {\r\n      this.serachObj.toDate = Util.ISODate(this.serachObj.toDate.toISOString());\r\n    }\r\n    if (\r\n      this.serachObj.paymentDate &&\r\n      typeof this.serachObj.paymentDate == \"object\"\r\n    ) {\r\n      this.serachObj.paymentDate = Util.ISODate(\r\n        this.serachObj.paymentDate.toISOString()\r\n      );\r\n    }\r\n\r\n    this.dataSource = new PaymentDataSource(\r\n      this.restService,\r\n      this.serachObj,\r\n      this.sort,\r\n      this.paginator\r\n    );\r\n  }\r\n  // pop() {\r\n  //   Storage.setLocalItem(\"selectedItem\", this.selectedItem);\r\n  //   setTimeout(() => {\r\n  //     this.opens(null);\r\n  //   }, 10);\r\n  // }\r\n  // opens(id) {\r\n  //   // let pageLayoutId : string = Storage.getLocalItem('pageLayoutId');\r\n  //   let companyInfo = Storage.getSessionUser();\r\n\r\n  //   let pageLayoutId = companyInfo.company.settingPayload.printLayoutId;\r\n  //   if (parseInt(pageLayoutId) == 1) {\r\n  //     const dialogRef = this.dialog.open(PmPaymentDialogContentComponent, {\r\n  //       width: \"600px\",\r\n  //       data: id\r\n  //     });\r\n  //   }\r\n  // }\r\n  view() {\r\n    this.appService.navigate(\"./admin/paymentView\", [\r\n      { id: this.selectedItem.id, isEdit: \"false\" }\r\n    ]);\r\n  }\r\n  download() {\r\n    this.restService.paymentDownload(this.selectedItem.id);\r\n  }\r\n\r\n  sendEmail() {\r\n    this.showSide = true;\r\n    // if (!item) {\r\n    let item = new Email();\r\n    // }\r\n    this.email = Object.assign({}, item);\r\n    this.email.to = this.selectedItem.emailId;\r\n  }\r\n  onClose(item: any) {\r\n    this.showSide = false;\r\n  }\r\n  emailSave() {\r\n    this.email.from = this.appService.getSessionUser().email;\r\n    this.email.fileName = \"Payment.pdf\";\r\n    this.email.content = btoa(this.email.message);\r\n    delete this.email.message;\r\n\r\n    this.restService\r\n      .paymentEmail(this.selectedItem.id, this.email)\r\n      .subscribe(result => {\r\n        this.showSide = false;\r\n      });\r\n  }\r\n\r\n  myFun(row) {\r\n    this.selectedItemForView = row;\r\n    this.appService.navigate(\"./admin/paymentView\", [\r\n      { id: this.selectedItemForView.id }\r\n    ]);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/payment/payment.search.component.ts","module.exports = \"<div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-around center\\\">\\r\\n  <div\\r\\n    fxFlex=\\\"100\\\"\\r\\n    fxFlex.md=\\\"100\\\"\\r\\n    fxFlex.lg=\\\"100\\\"\\r\\n    fxFlex.xs=\\\"100\\\"\\r\\n    fxFlex.sm=\\\"100\\\"\\r\\n  >\\r\\n    <button md-raised-button color=\\\"accent\\\" (click)=\\\"print('component1')\\\">\\r\\n      Print\\r\\n    </button>\\r\\n    <button md-raised-button color=\\\"accent\\\" (click)=\\\"cancel()\\\">\\r\\n      Cancel\\r\\n    </button>\\r\\n  </div>\\r\\n</div>\\r\\n<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\" id=\\\"component1\\\">\\r\\n  <div\\r\\n    fxFlex=\\\"100\\\"\\r\\n    fxFlex.md=\\\"100\\\"\\r\\n    fxFlex.lg=\\\"100\\\"\\r\\n    fxFlex.xs=\\\"100\\\"\\r\\n    fxFlex.sm=\\\"100\\\"\\r\\n  >\\r\\n    <!-- <div style=\\\"text-align: center;padding:10px 0px 10px 0px;\\\">\\r\\n      <span align=\\\"center\\\" style=\\\"font-family:arial, sans-serif;font-size:30px;\\\"\\r\\n        >RECEIPT</span\\r\\n      >\\r\\n    </div> -->\\r\\n    <div\\r\\n      fxLayout=\\\"row wrap\\\"\\r\\n      fxLayoutAlign=\\\"start start\\\"\\r\\n      style=\\\"margin-top:15px;margin-bottom:5px\\\"\\r\\n    >\\r\\n      <div\\r\\n        fxFlex=\\\"100\\\"\\r\\n        fxFlex.md=\\\"100\\\"\\r\\n        fxFlex.lg=\\\"100\\\"\\r\\n        fxFlex.xs=\\\"100\\\"\\r\\n        fxFlex.sm=\\\"100\\\"\\r\\n      >\\r\\n        <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n          <div\\r\\n            fxFlex=\\\"50\\\"\\r\\n            fxFlex.md=\\\"50\\\"\\r\\n            fxFlex.lg=\\\"50\\\"\\r\\n            fxFlex.xs=\\\"100\\\"\\r\\n            fxFlex.sm=\\\"100\\\"\\r\\n          >\\r\\n            <span\\r\\n              style=\\\"font-size:15px;font-family:arial, sans-serif;font-weight:600;\\\"\\r\\n              >{{ dataSource.company.name }}</span\\r\\n            >\\r\\n          </div>\\r\\n          <div\\r\\n            fxFlex=\\\"50\\\"\\r\\n            fxFlex.md=\\\"50\\\"\\r\\n            fxFlex.lg=\\\"50\\\"\\r\\n            fxFlex.xs=\\\"100\\\"\\r\\n            fxFlex.sm=\\\"100\\\"\\r\\n          >\\r\\n            <span\\r\\n              style=\\\"font-size:15px;font-family:arial, sans-serif;font-weight:600;float:right\\\"\\r\\n              >Total : ₹ {{ dataSource.amount }}</span\\r\\n            >\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div\\r\\n      fxLayout=\\\"row wrap\\\"\\r\\n      fxLayoutAlign=\\\"start start\\\"\\r\\n      style=\\\"margin-top:5px;margin-bottom:5px\\\"\\r\\n    >\\r\\n      <div\\r\\n        fxFlex=\\\"100\\\"\\r\\n        fxFlex.md=\\\"100\\\"\\r\\n        fxFlex.lg=\\\"100\\\"\\r\\n        fxFlex.xs=\\\"100\\\"\\r\\n        fxFlex.sm=\\\"100\\\"\\r\\n      >\\r\\n        <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n          <div\\r\\n            fxFlex=\\\"50\\\"\\r\\n            fxFlex.md=\\\"50\\\"\\r\\n            fxFlex.lg=\\\"50\\\"\\r\\n            fxFlex.xs=\\\"100\\\"\\r\\n            fxFlex.sm=\\\"100\\\"\\r\\n          >\\r\\n            <div fxLayoutGap=\\\"30px\\\">\\r\\n              <span\\r\\n                style=\\\"font-size:12px;font-family:arial, sans-serif;font-weight:700;\\\"\\r\\n                >GSTIN\\r\\n              </span>\\r\\n\\r\\n              <span style=\\\"font-size:12px;font-family:arial, sans-serif\\\">{{\\r\\n                dataSource.company.gstin\\r\\n              }}</span>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div\\r\\n            fxFlex=\\\"50\\\"\\r\\n            fxFlex.md=\\\"50\\\"\\r\\n            fxFlex.lg=\\\"50\\\"\\r\\n            fxFlex.xs=\\\"100\\\"\\r\\n            fxFlex.sm=\\\"100\\\"\\r\\n          >\\r\\n            <div style=\\\"float:right\\\">\\r\\n              <span\\r\\n                style=\\\"font-family:arial, sans-serif;font-size:12px;font-weight:700\\\"\\r\\n                >Recipt Date :\\r\\n              </span>\\r\\n              <span\\r\\n                style=\\\"font-family:arial, sans-serif;font-size:12px;float:right\\\"\\r\\n                >{{ dataSource.paymentDateStr }}</span\\r\\n              >\\r\\n              <br />\\r\\n              <span\\r\\n                style=\\\"font-family:arial, sans-serif;font-size:12px;font-weight:700\\\"\\r\\n                >Recipt No :\\r\\n              </span>\\r\\n              <span\\r\\n                style=\\\"font-family:arial, sans-serif;font-size:12px;float:right\\\"\\r\\n                >{{ dataSource.invoiceNumber }}</span\\r\\n              >\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n      <div\\r\\n        fxFlex=\\\"100\\\"\\r\\n        fxFlex.md=\\\"100\\\"\\r\\n        fxFlex.lg=\\\"100\\\"\\r\\n        fxFlex.xs=\\\"100\\\"\\r\\n        fxFlex.sm=\\\"100\\\"\\r\\n      >\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <div fxFlex=\\\"35\\\">\\r\\n            <div\\r\\n              style=\\\"width:100%; border:1px solid rgb(102, 98, 98);margin-top:15px\\\"\\r\\n            ></div>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"30\\\">\\r\\n            <div style=\\\"text-align: center;\\\">\\r\\n              <span\\r\\n                align=\\\"center\\\"\\r\\n                style=\\\"font-family:arial, sans-serif;font-size:28px;\\\"\\r\\n                >RECEIPT</span\\r\\n              >\\r\\n            </div>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"35\\\">\\r\\n            <div\\r\\n              style=\\\"width:100%; border:1px solid rgb(102, 98, 98);margin-top:15px\\\"\\r\\n            ></div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div style=\\\"margin-bottom:10px\\\"></div>\\r\\n    <!-- </ng-container> -->\\r\\n\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n      <div\\r\\n        fxFlex=\\\"70\\\"\\r\\n        fxFlex.md=\\\"70\\\"\\r\\n        fxFlex.lg=\\\"70\\\"\\r\\n        fxFlex.xs=\\\"100\\\"\\r\\n        fxFlex.sm=\\\"100\\\"\\r\\n      >\\r\\n        <div\\r\\n          style=\\\"font-weight: 600;font-family:arial, sans-serif;font-size:12px\\\"\\r\\n        >\\r\\n          Payment Received From\\r\\n        </div>\\r\\n\\r\\n        <div style=\\\"padding: 3px;font-family:arial, sans-serif;font-size:12px\\\">\\r\\n          {{ dataSource.customer.businessName }}\\r\\n        </div>\\r\\n\\r\\n        <div\\r\\n          *ngIf=\\\"dataSource.customer.address.lane\\\"\\r\\n          style=\\\"padding: 3px;font-family:arial, sans-serif;font-size:12px\\\"\\r\\n        >\\r\\n          {{ dataSource.customer.address.lane }}\\r\\n        </div>\\r\\n        <span\\r\\n          *ngIf=\\\"dataSource.customer.address.street\\\"\\r\\n          style=\\\"padding: 3px;font-family:arial, sans-serif;font-size:12px\\\"\\r\\n        >\\r\\n          {{ dataSource.customer.address.street }}\\r\\n        </span>\\r\\n\\r\\n        <div\\r\\n          *ngIf=\\\"dataSource.customer.address.area\\\"\\r\\n          style=\\\"padding: 3px;font-family:arial, sans-serif;font-size:12px\\\"\\r\\n        >\\r\\n          {{ dataSource.customer.address.area }}\\r\\n        </div>\\r\\n\\r\\n        <div\\r\\n          *ngIf=\\\"dataSource.customer.address.city\\\"\\r\\n          style=\\\"padding: 3px;font-family:arial, sans-serif;font-size:12px\\\"\\r\\n        >\\r\\n          {{ dataSource.customer.address.city }}\\r\\n        </div>\\r\\n\\r\\n        <div style=\\\"padding: 3px;font-family:arial, sans-serif;font-size:12px\\\">\\r\\n          {{ dataSource.customer.address.state }} -\\r\\n        </div>\\r\\n        <span\\r\\n          *ngIf=\\\"dataSource.customer.address.zipCode\\\"\\r\\n          style=\\\"padding: 3px;font-family:arial, sans-serif;font-size:12px\\\"\\r\\n        >\\r\\n          {{ dataSource.customer.address.zipCode }}\\r\\n        </span>\\r\\n      </div>\\r\\n      <div\\r\\n        fxFlex=\\\"30\\\"\\r\\n        fxFlex.md=\\\"30\\\"\\r\\n        fxFlex.lg=\\\"30\\\"\\r\\n        fxFlex.xs=\\\"100\\\"\\r\\n        fxFlex.sm=\\\"100\\\"\\r\\n      >\\r\\n        <span\\r\\n          style=\\\"font-weight: 600;padding-top:15px;font-family: arial, sans-serif;font-size:12px\\\"\\r\\n        >\\r\\n          Name : {{ dataSource.customer.firstName }}\\r\\n        </span>\\r\\n        <br />\\r\\n        <span style=\\\"padding: 3px;font-family:arial, sans-serif;font-size:12px\\\"\\r\\n          >Phone : {{ dataSource.customer.mobile }}</span\\r\\n        >\\r\\n        <br />\\r\\n        <span style=\\\"padding: 3px;font-family:arial, sans-serif;font-size:12px\\\"\\r\\n          >Email : {{ dataSource.customer.email }}</span\\r\\n        >\\r\\n      </div>\\r\\n    </div>\\r\\n    <div style=\\\"padding-bottom:10px\\\"></div>\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n      <table\\r\\n        style=\\\" font-family: arial, sans-serif;\\r\\n    border-collapse: collapse;\\r\\n    width: 100%;font-size:12px\\\"\\r\\n      >\\r\\n        <tr>\\r\\n          <th\\r\\n            style=\\\" border: 1px solid #dddddd;\\r\\n        text-align: left;\\r\\n        padding: 8px;font-weight:700\\\"\\r\\n          >\\r\\n            Payment Mode\\r\\n          </th>\\r\\n          <th\\r\\n            style=\\\" border: 1px solid #dddddd;\\r\\n        text-align: left;\\r\\n        padding: 8px;font-weight:700\\\"\\r\\n            *ngIf=\\\"dataSource.bankName\\\"\\r\\n          >\\r\\n            Bank Name\\r\\n          </th>\\r\\n          <th\\r\\n            style=\\\" border: 1px solid #dddddd;\\r\\n        text-align: left;\\r\\n        padding: 8px;font-weight:700\\\"\\r\\n            *ngIf=\\\"dataSource.chequeNumber\\\"\\r\\n          >\\r\\n            Cheque Number\\r\\n          </th>\\r\\n          <th\\r\\n            style=\\\" border: 1px solid #dddddd;\\r\\n        text-align: left;\\r\\n        padding: 8px;font-weight:700;\\\"\\r\\n            *ngIf=\\\"dataSource.referenceNo\\\"\\r\\n          >\\r\\n            Reference No\\r\\n          </th>\\r\\n          <th\\r\\n            style=\\\" border: 1px solid #dddddd;\\r\\n        text-align: left;\\r\\n        padding: 8px;font-weight:700;\\\"\\r\\n          >\\r\\n            Payment Date\\r\\n          </th>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td\\r\\n            style=\\\" border: 1px solid #dddddd;\\r\\n          text-align: left;\\r\\n          padding: 8px;\\\"\\r\\n          >\\r\\n            {{ dataSource.paymentMode }}\\r\\n          </td>\\r\\n          <td\\r\\n            style=\\\" border: 1px solid #dddddd;text-align: left;padding: 8px;\\\"\\r\\n            *ngIf=\\\"dataSource.bankName\\\"\\r\\n          >\\r\\n            {{ dataSource.bankName }}\\r\\n          </td>\\r\\n          <td\\r\\n            style=\\\" border: 1px solid #dddddd;text-align: left;padding: 8px;\\\"\\r\\n            *ngIf=\\\"dataSource.chequeNumber\\\"\\r\\n          >\\r\\n            {{ dataSource.chequeNumber }}\\r\\n          </td>\\r\\n          <td\\r\\n            style=\\\" border: 1px solid #dddddd;text-align: left;padding: 8px;\\\"\\r\\n            *ngIf=\\\"dataSource.referenceNo\\\"\\r\\n          >\\r\\n            {{ dataSource.referenceNo }}\\r\\n          </td>\\r\\n          <td style=\\\" border: 1px solid #dddddd;text-align: left;padding: 8px;\\\">\\r\\n            {{ dataSource.paymentDateStr }}\\r\\n          </td>\\r\\n        </tr>\\r\\n      </table>\\r\\n    </div>\\r\\n    <div style=\\\"padding-bottom:10px\\\"></div>\\r\\n\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start end\\\">\\r\\n      <div\\r\\n        fxFlex=\\\"100\\\"\\r\\n        fxFlex.md=\\\"100\\\"\\r\\n        fxFlex.lg=\\\"100\\\"\\r\\n        fxFlex.xs=\\\"100\\\"\\r\\n        fxFlex.sm=\\\"100\\\"\\r\\n      >\\r\\n        <div style=\\\"text-align: right;\\\">\\r\\n          <span style=\\\"font-family:arial, sans-serif;font-size:16px;\\\"\\r\\n            >Amount :</span\\r\\n          >\\r\\n          <span style=\\\"font-family:arial, sans-serif;font-size:16px;\\\">\\r\\n            ₹ {{ dataSource.amount }}\\r\\n          </span>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n      <div\\r\\n        fxFlex=\\\"100\\\"\\r\\n        fxFlex.md=\\\"100\\\"\\r\\n        fxFlex.lg=\\\"100\\\"\\r\\n        fxFlex.xs=\\\"100\\\"\\r\\n        fxFlex.sm=\\\"100\\\"\\r\\n      >\\r\\n        <span\\r\\n          style=\\\"padding-bottom:10px;font-family: arial,sans-serif;font-size:12px\\\"\\r\\n          >Notes:</span\\r\\n        >\\r\\n        <p\\r\\n          style=\\\"padding-bottom:10px;font-family: arial,sans-serif;font-size:12px\\\"\\r\\n        >\\r\\n          1. All disputes are subject to Hyderabad jurisdiction only.\\r\\n        </p>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n      <div\\r\\n        fxFlex=\\\"50\\\"\\r\\n        fxFlex.md=\\\"50\\\"\\r\\n        fxFlex.lg=\\\"50\\\"\\r\\n        fxFlex.xs=\\\"100\\\"\\r\\n        fxFlex.sm=\\\"100\\\"\\r\\n      >\\r\\n        <span\\r\\n          style=\\\"font-size: 12px;\\r\\n        padding: 7px;\\r\\n        text-align: center;\\r\\n        font-family: arial,sans-serif;float:left\\\"\\r\\n          >Thank you for your business</span\\r\\n        >\\r\\n      </div>\\r\\n      <div\\r\\n        fxFlex=\\\"50\\\"\\r\\n        fxFlex.md=\\\"50\\\"\\r\\n        fxFlex.lg=\\\"50\\\"\\r\\n        fxFlex.xs=\\\"100\\\"\\r\\n        fxFlex.sm=\\\"100\\\"\\r\\n      >\\r\\n        <span\\r\\n          style=\\\"text-align: right;\\r\\n          font-size: 12px;\\r\\n          padding: 5px;\\r\\n          font-family: arial,sans-serif;float:right\\\"\\r\\n          >Powered by\\r\\n          <svg\\r\\n            id=\\\"svg\\\"\\r\\n            version=\\\"1.1\\\"\\r\\n            width=\\\"15\\\"\\r\\n            height=\\\"15\\\"\\r\\n            viewBox=\\\"0 0 400 530\\\"\\r\\n            xmlns=\\\"http://www.w3.org/2000/svg\\\"\\r\\n            xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\r\\n            style=\\\"vertical-align: middle\\\"\\r\\n          >\\r\\n            <g id=\\\"svgg\\\">\\r\\n              <path\\r\\n                id=\\\"path0\\\"\\r\\n                d=\\\"M341.500 7.872 C 339.355 7.958,337.600 8.176,337.600 8.356 C 337.600 8.536,335.485 8.808,332.900 8.962 C 330.315 9.115,328.140 9.411,328.067 9.620 C 327.993 9.829,327.318 10.000,326.567 10.000 C 325.815 10.000,325.200 10.163,325.200 10.362 C 325.200 10.562,324.300 10.849,323.200 11.000 C 322.100 11.151,321.200 11.424,321.200 11.606 C 321.200 11.788,320.660 12.055,320.000 12.200 C 319.340 12.345,318.800 12.610,318.800 12.788 C 318.800 12.967,318.370 13.221,317.844 13.353 C 314.952 14.079,316.432 14.800,320.813 14.800 C 323.471 14.800,325.200 14.958,325.200 15.200 C 325.200 15.420,324.570 15.600,323.800 15.600 C 323.030 15.600,322.400 15.756,322.400 15.947 C 322.400 16.138,321.654 16.395,320.742 16.517 C 319.831 16.639,318.976 16.907,318.842 17.112 C 318.709 17.317,317.925 17.609,317.100 17.760 C 316.275 17.912,315.600 18.188,315.600 18.373 C 315.600 18.558,314.790 18.831,313.800 18.979 C 312.810 19.128,312.000 19.418,312.000 19.625 C 312.000 19.831,311.550 20.000,311.000 20.000 C 310.450 20.000,310.000 20.160,310.000 20.355 C 310.000 20.550,309.190 20.831,308.200 20.979 C 307.210 21.128,306.400 21.405,306.400 21.596 C 306.400 21.786,305.410 22.066,304.200 22.217 C 302.990 22.368,302.000 22.635,302.000 22.809 C 302.000 22.983,301.100 23.249,300.000 23.400 C 298.900 23.551,298.000 23.817,298.000 23.991 C 298.000 24.165,297.653 24.397,297.230 24.508 C 296.688 24.650,296.523 24.544,296.674 24.151 C 296.792 23.844,297.318 23.485,297.844 23.353 C 298.370 23.221,298.800 22.967,298.800 22.788 C 298.800 22.610,299.340 22.345,300.000 22.200 C 300.660 22.055,301.200 21.791,301.200 21.614 C 301.200 21.436,302.010 21.169,303.000 21.021 C 303.990 20.872,304.800 20.582,304.800 20.375 C 304.800 20.169,305.430 20.000,306.200 20.000 C 306.970 20.000,307.600 19.836,307.600 19.635 C 307.600 19.434,308.320 19.149,309.200 19.000 C 310.080 18.851,310.800 18.585,310.800 18.408 C 310.800 18.231,311.255 17.973,311.810 17.833 C 313.418 17.430,315.048 15.600,313.800 15.600 C 313.470 15.600,313.200 15.763,313.200 15.962 C 313.200 16.162,312.300 16.449,311.200 16.600 C 310.100 16.751,309.200 17.027,309.200 17.213 C 309.200 17.399,308.390 17.672,307.400 17.821 C 306.410 17.969,305.600 18.234,305.600 18.408 C 305.600 18.583,303.890 18.854,301.800 19.010 C 299.710 19.167,298.000 19.454,298.000 19.648 C 298.000 19.841,297.370 20.000,296.600 20.000 C 295.830 20.000,295.200 20.163,295.200 20.362 C 295.200 20.562,294.300 20.849,293.200 21.000 C 292.100 21.151,291.200 21.424,291.200 21.606 C 291.200 21.788,290.660 22.055,290.000 22.200 C 289.340 22.345,288.800 22.610,288.800 22.788 C 288.800 22.967,288.370 23.221,287.844 23.353 C 284.952 24.079,286.432 24.800,290.813 24.800 C 293.471 24.800,295.200 24.958,295.200 25.200 C 295.200 25.420,294.750 25.600,294.200 25.600 C 293.650 25.600,293.200 25.763,293.200 25.962 C 293.200 26.162,292.300 26.449,291.200 26.600 C 290.100 26.751,289.200 27.027,289.200 27.213 C 289.200 27.399,288.390 27.672,287.400 27.821 C 286.410 27.969,285.600 28.236,285.600 28.414 C 285.600 28.591,285.060 28.855,284.400 29.000 C 283.740 29.145,283.200 29.429,283.200 29.632 C 283.200 29.834,282.930 30.000,282.600 30.000 C 282.270 30.000,282.000 30.160,282.000 30.357 C 282.000 30.553,281.550 30.826,281.000 30.964 C 280.450 31.102,280.000 31.392,280.000 31.608 C 280.000 31.823,279.739 32.000,279.419 32.000 C 279.100 32.000,278.227 32.630,277.479 33.400 C 276.731 34.170,275.986 34.800,275.824 34.800 C 275.661 34.800,277.535 32.801,279.989 30.358 C 282.442 27.915,284.339 25.805,284.203 25.670 C 284.067 25.534,283.831 25.620,283.678 25.861 C 283.525 26.102,282.815 26.426,282.100 26.582 C 281.385 26.737,280.800 27.009,280.800 27.187 C 280.800 27.365,280.170 27.629,279.400 27.774 C 278.630 27.918,278.000 28.208,278.000 28.418 C 278.000 28.628,277.724 28.800,277.387 28.800 C 277.051 28.800,276.671 29.070,276.545 29.400 C 276.418 29.730,276.064 30.000,275.757 30.000 C 275.451 30.000,275.200 30.163,275.200 30.362 C 275.200 30.562,274.300 30.849,273.200 31.000 C 272.100 31.151,271.200 31.424,271.200 31.606 C 271.200 31.788,270.660 32.055,270.000 32.200 C 269.340 32.345,268.800 32.610,268.800 32.788 C 268.800 32.967,268.370 33.221,267.844 33.353 C 264.952 34.079,266.432 34.800,270.813 34.800 C 273.471 34.800,275.200 34.958,275.200 35.200 C 275.200 35.420,274.570 35.600,273.800 35.600 C 273.030 35.600,272.400 35.756,272.400 35.947 C 272.400 36.138,271.654 36.395,270.742 36.517 C 269.831 36.639,268.976 36.907,268.842 37.112 C 268.709 37.317,267.925 37.609,267.100 37.760 C 266.275 37.912,265.600 38.191,265.600 38.381 C 265.600 38.570,263.890 38.854,261.800 39.010 C 259.710 39.167,258.000 39.454,258.000 39.648 C 258.000 39.841,257.370 40.000,256.600 40.000 C 255.830 40.000,255.200 40.160,255.200 40.355 C 255.200 40.551,254.570 40.829,253.800 40.974 C 253.030 41.118,252.400 41.394,252.400 41.586 C 252.400 41.779,251.860 42.055,251.200 42.200 C 250.540 42.345,250.000 42.610,250.000 42.788 C 250.000 42.967,249.507 43.237,248.904 43.388 C 248.301 43.540,247.716 43.805,247.604 43.978 C 247.492 44.151,246.953 44.432,246.407 44.602 C 245.750 44.808,246.942 43.392,249.932 40.414 C 252.417 37.940,254.339 35.805,254.203 35.670 C 254.067 35.534,253.829 35.629,253.674 35.880 C 253.519 36.131,252.899 36.460,252.296 36.612 C 251.693 36.763,251.200 37.033,251.200 37.212 C 251.200 37.390,250.660 37.655,250.000 37.800 C 249.340 37.945,248.800 38.215,248.800 38.400 C 248.800 38.585,248.260 38.855,247.600 39.000 C 246.940 39.145,246.400 39.429,246.400 39.632 C 246.400 39.834,246.130 40.000,245.800 40.000 C 245.470 40.000,245.200 40.163,245.200 40.362 C 245.200 40.562,244.300 40.849,243.200 41.000 C 242.100 41.151,241.200 41.424,241.200 41.606 C 241.200 41.788,240.660 42.055,240.000 42.200 C 239.340 42.345,238.800 42.610,238.800 42.788 C 238.800 42.967,238.370 43.221,237.844 43.353 C 234.952 44.079,236.432 44.800,240.813 44.800 C 243.471 44.800,245.200 44.958,245.200 45.200 C 245.200 45.420,244.750 45.600,244.200 45.600 C 243.650 45.600,243.200 45.759,243.200 45.954 C 243.200 46.149,242.210 46.432,241.000 46.583 C 239.790 46.734,238.800 47.022,238.800 47.224 C 238.800 47.426,238.080 47.706,237.200 47.846 C 236.320 47.987,235.600 48.245,235.600 48.419 C 235.600 48.594,235.060 48.855,234.400 49.000 C 233.740 49.145,233.200 49.429,233.200 49.632 C 233.200 49.834,232.930 50.000,232.600 50.000 C 232.270 50.000,232.000 50.160,232.000 50.357 C 232.000 50.553,231.550 50.826,231.000 50.964 C 230.450 51.102,230.000 51.392,230.000 51.608 C 230.000 51.823,229.739 52.000,229.419 52.000 C 229.100 52.000,228.227 52.630,227.479 53.400 C 226.731 54.170,225.986 54.800,225.824 54.800 C 225.661 54.800,227.535 52.801,229.989 50.358 C 232.442 47.915,234.339 45.805,234.203 45.670 C 234.067 45.534,233.831 45.620,233.678 45.861 C 233.525 46.102,232.815 46.426,232.100 46.582 C 231.385 46.737,230.800 47.009,230.800 47.187 C 230.800 47.365,230.170 47.629,229.400 47.774 C 228.630 47.918,228.000 48.208,228.000 48.418 C 228.000 48.628,227.724 48.800,227.387 48.800 C 227.051 48.800,226.671 49.070,226.545 49.400 C 226.418 49.730,226.064 50.000,225.757 50.000 C 225.451 50.000,225.200 50.163,225.200 50.362 C 225.200 50.562,224.300 50.849,223.200 51.000 C 222.100 51.151,221.200 51.424,221.200 51.606 C 221.200 51.788,220.660 52.055,220.000 52.200 C 219.340 52.345,218.800 52.610,218.800 52.788 C 218.800 52.967,218.370 53.221,217.844 53.353 C 214.952 54.079,216.432 54.800,220.813 54.800 C 223.471 54.800,225.200 54.958,225.200 55.200 C 225.200 55.420,224.570 55.600,223.800 55.600 C 223.030 55.600,222.400 55.759,222.400 55.954 C 222.400 56.149,221.365 56.437,220.100 56.595 C 218.835 56.752,217.700 57.042,217.577 57.239 C 217.455 57.436,215.970 57.714,214.277 57.857 C 212.585 58.000,211.200 58.250,211.200 58.413 C 211.200 58.575,210.210 58.832,209.000 58.983 C 207.790 59.134,206.800 59.425,206.800 59.629 C 206.800 59.833,206.440 60.000,206.000 60.000 C 205.560 60.000,205.200 60.160,205.200 60.355 C 205.200 60.551,204.570 60.829,203.800 60.974 C 203.030 61.118,202.400 61.394,202.400 61.586 C 202.400 61.779,201.860 62.055,201.200 62.200 C 200.540 62.345,200.000 62.610,200.000 62.788 C 200.000 62.967,199.507 63.237,198.904 63.388 C 198.301 63.540,197.716 63.805,197.604 63.978 C 197.492 64.151,196.953 64.432,196.407 64.602 C 195.750 64.808,196.942 63.392,199.932 60.414 C 202.417 57.940,204.339 55.805,204.203 55.670 C 204.067 55.534,203.829 55.629,203.674 55.880 C 203.519 56.131,202.899 56.460,202.296 56.612 C 201.693 56.763,201.200 57.033,201.200 57.212 C 201.200 57.390,200.660 57.655,200.000 57.800 C 199.340 57.945,198.800 58.215,198.800 58.400 C 198.800 58.585,198.260 58.855,197.600 59.000 C 196.940 59.145,196.400 59.429,196.400 59.632 C 196.400 59.834,196.130 60.000,195.800 60.000 C 195.470 60.000,195.200 60.163,195.200 60.362 C 195.200 60.562,194.300 60.849,193.200 61.000 C 192.100 61.151,191.200 61.424,191.200 61.606 C 191.200 61.788,190.660 62.055,190.000 62.200 C 189.340 62.345,188.800 62.610,188.800 62.788 C 188.800 62.967,188.370 63.221,187.844 63.353 C 184.952 64.079,186.432 64.800,190.813 64.800 C 193.471 64.800,195.200 64.958,195.200 65.200 C 195.200 65.420,194.750 65.600,194.200 65.600 C 193.650 65.600,193.200 65.759,193.200 65.954 C 193.200 66.149,192.210 66.432,191.000 66.583 C 189.790 66.734,188.800 67.022,188.800 67.224 C 188.800 67.426,188.080 67.706,187.200 67.846 C 186.320 67.987,185.600 68.245,185.600 68.419 C 185.600 68.594,185.060 68.855,184.400 69.000 C 183.740 69.145,183.200 69.429,183.200 69.632 C 183.200 69.834,182.930 70.000,182.600 70.000 C 182.270 70.000,182.000 70.160,182.000 70.357 C 182.000 70.553,181.550 70.826,181.000 70.964 C 180.450 71.102,180.000 71.392,180.000 71.608 C 180.000 71.823,179.739 72.000,179.419 72.000 C 179.100 72.000,178.227 72.630,177.479 73.400 C 176.731 74.170,175.986 74.800,175.824 74.800 C 175.661 74.800,177.535 72.801,179.989 70.358 C 182.442 67.915,184.339 65.805,184.203 65.670 C 184.067 65.534,183.831 65.620,183.678 65.861 C 183.525 66.102,182.815 66.426,182.100 66.582 C 181.385 66.737,180.800 67.009,180.800 67.187 C 180.800 67.365,180.170 67.629,179.400 67.774 C 178.630 67.918,178.000 68.208,178.000 68.418 C 178.000 68.628,177.724 68.800,177.387 68.800 C 177.051 68.800,176.671 69.070,176.545 69.400 C 176.355 69.893,175.328 70.000,170.757 70.000 C 167.701 70.000,165.200 70.163,165.200 70.362 C 165.200 70.562,164.300 70.849,163.200 71.000 C 162.100 71.151,161.200 71.424,161.200 71.606 C 161.200 71.788,160.660 72.055,160.000 72.200 C 159.340 72.345,158.800 72.610,158.800 72.788 C 158.800 72.967,158.370 73.221,157.844 73.353 C 154.952 74.079,156.432 74.800,160.813 74.800 C 163.471 74.800,165.200 74.958,165.200 75.200 C 165.200 75.420,164.840 75.600,164.400 75.600 C 163.960 75.600,163.600 75.760,163.600 75.955 C 163.600 76.151,162.970 76.429,162.200 76.574 C 161.430 76.718,160.800 76.988,160.800 77.174 C 160.800 77.359,160.170 77.629,159.400 77.774 C 158.630 77.918,158.000 78.208,158.000 78.418 C 158.000 78.628,157.724 78.800,157.387 78.800 C 157.051 78.800,156.671 79.070,156.545 79.400 C 156.418 79.730,156.064 80.000,155.757 80.000 C 155.451 80.000,155.200 80.160,155.200 80.355 C 155.200 80.551,154.570 80.829,153.800 80.974 C 153.030 81.118,152.400 81.394,152.400 81.586 C 152.400 81.779,151.860 82.055,151.200 82.200 C 150.540 82.345,150.000 82.610,150.000 82.788 C 150.000 82.967,149.507 83.237,148.904 83.388 C 148.301 83.540,147.716 83.805,147.604 83.978 C 147.492 84.151,146.953 84.432,146.407 84.602 C 145.750 84.808,146.942 83.392,149.932 80.414 C 152.417 77.940,154.339 75.805,154.203 75.670 C 154.067 75.534,153.829 75.629,153.674 75.880 C 153.519 76.131,152.899 76.460,152.296 76.612 C 151.693 76.763,151.200 77.033,151.200 77.212 C 151.200 77.390,150.660 77.655,150.000 77.800 C 149.340 77.945,148.800 78.215,148.800 78.400 C 148.800 78.585,148.260 78.855,147.600 79.000 C 146.940 79.145,146.400 79.429,146.400 79.632 C 146.400 79.834,146.130 80.000,145.800 80.000 C 145.470 80.000,145.200 80.163,145.200 80.362 C 145.200 80.562,144.300 80.849,143.200 81.000 C 142.100 81.151,141.200 81.424,141.200 81.606 C 141.200 81.788,140.660 82.055,140.000 82.200 C 139.340 82.345,138.800 82.610,138.800 82.788 C 138.800 82.967,138.370 83.221,137.844 83.353 C 134.952 84.079,136.432 84.800,140.813 84.800 C 143.471 84.800,145.200 84.958,145.200 85.200 C 145.200 85.420,144.840 85.600,144.400 85.600 C 143.960 85.600,143.600 85.760,143.600 85.955 C 143.600 86.151,142.970 86.429,142.200 86.574 C 141.430 86.718,140.800 86.988,140.800 87.174 C 140.800 87.359,140.170 87.629,139.400 87.774 C 138.630 87.918,138.000 88.208,138.000 88.418 C 138.000 88.628,137.724 88.800,137.387 88.800 C 137.051 88.800,136.671 89.070,136.545 89.400 C 136.418 89.730,136.146 90.000,135.940 90.000 C 135.398 90.000,132.643 92.618,125.000 100.397 C 124.780 100.621,123.565 101.797,122.300 103.010 C 121.035 104.224,120.000 105.483,120.000 105.808 C 120.000 106.134,119.834 106.400,119.632 106.400 C 119.429 106.400,119.145 106.940,119.000 107.600 C 118.855 108.260,118.585 108.800,118.400 108.800 C 118.215 108.800,117.945 109.340,117.800 110.000 C 117.655 110.660,117.385 111.200,117.200 111.200 C 117.015 111.200,116.745 111.740,116.600 112.400 C 116.455 113.060,116.184 113.600,115.998 113.600 C 115.811 113.600,115.576 113.915,115.476 114.300 C 115.375 114.685,115.272 113.065,115.246 110.700 C 115.221 108.335,115.033 106.400,114.829 106.400 C 114.258 106.400,113.200 107.588,113.200 108.229 C 113.200 108.543,113.034 108.800,112.832 108.800 C 112.629 108.800,112.345 109.340,112.200 110.000 C 112.055 110.660,111.791 111.200,111.614 111.200 C 111.436 111.200,111.169 112.010,111.021 113.000 C 110.872 113.990,110.582 114.800,110.375 114.800 C 110.157 114.800,110.000 117.541,110.000 121.367 C 110.000 125.901,109.860 127.980,109.547 128.084 C 109.237 128.188,109.029 130.944,108.888 136.805 C 108.733 143.255,108.549 145.509,108.141 145.916 C 107.844 146.214,107.600 146.695,107.600 146.986 C 107.600 147.277,107.330 147.618,107.000 147.745 C 106.670 147.871,106.400 148.251,106.400 148.587 C 106.400 148.924,106.232 149.200,106.027 149.200 C 105.822 149.200,105.545 149.544,105.411 149.965 C 105.233 150.525,104.639 150.802,103.184 151.002 C 102.093 151.152,101.200 151.424,101.200 151.606 C 101.200 151.788,100.660 152.055,100.000 152.200 C 99.340 152.345,98.800 152.610,98.800 152.788 C 98.800 152.967,98.370 153.221,97.844 153.353 C 94.952 154.079,96.432 154.800,100.813 154.800 C 103.471 154.800,105.200 154.958,105.200 155.200 C 105.200 155.420,104.750 155.600,104.200 155.600 C 103.650 155.600,103.200 155.759,103.200 155.954 C 103.200 156.149,102.210 156.432,101.000 156.583 C 99.790 156.734,98.800 157.022,98.800 157.224 C 98.800 157.426,98.080 157.706,97.200 157.846 C 96.320 157.987,95.600 158.239,95.600 158.406 C 95.600 158.573,94.790 158.831,93.800 158.979 C 92.810 159.128,92.000 159.418,92.000 159.625 C 92.000 159.831,91.550 160.000,91.000 160.000 C 90.450 160.000,90.000 160.160,90.000 160.355 C 90.000 160.550,89.190 160.831,88.200 160.979 C 87.210 161.128,86.400 161.405,86.400 161.596 C 86.400 161.786,85.410 162.066,84.200 162.217 C 82.990 162.368,82.000 162.635,82.000 162.809 C 82.000 162.983,81.100 163.249,80.000 163.400 C 78.900 163.551,78.000 163.817,78.000 163.991 C 78.000 164.165,77.653 164.397,77.230 164.508 C 76.688 164.650,76.523 164.544,76.674 164.151 C 76.792 163.844,77.318 163.485,77.844 163.353 C 78.370 163.221,78.800 162.967,78.800 162.788 C 78.800 162.610,79.340 162.345,80.000 162.200 C 80.660 162.055,81.200 161.788,81.200 161.606 C 81.200 161.424,82.100 161.151,83.200 161.000 C 84.300 160.849,85.200 160.562,85.200 160.362 C 85.200 160.163,85.740 160.000,86.400 160.000 C 87.060 160.000,87.600 159.836,87.600 159.635 C 87.600 159.434,88.320 159.149,89.200 159.000 C 90.080 158.851,90.800 158.585,90.800 158.408 C 90.800 158.231,91.255 157.973,91.810 157.833 C 93.418 157.430,95.048 155.600,93.800 155.600 C 93.470 155.600,93.200 155.763,93.200 155.962 C 93.200 156.162,92.300 156.449,91.200 156.600 C 90.100 156.751,89.200 157.027,89.200 157.213 C 89.200 157.399,88.390 157.672,87.400 157.821 C 86.410 157.969,85.600 158.234,85.600 158.408 C 85.600 158.583,83.890 158.854,81.800 159.010 C 79.710 159.167,78.000 159.454,78.000 159.648 C 78.000 159.841,77.370 160.000,76.600 160.000 C 75.830 160.000,75.200 160.163,75.200 160.362 C 75.200 160.562,74.300 160.849,73.200 161.000 C 72.100 161.151,71.200 161.424,71.200 161.606 C 71.200 161.788,70.660 162.055,70.000 162.200 C 69.340 162.345,68.800 162.610,68.800 162.788 C 68.800 162.967,68.370 163.221,67.844 163.353 C 64.952 164.079,66.432 164.800,70.813 164.800 C 73.471 164.800,75.200 164.958,75.200 165.200 C 75.200 165.420,74.570 165.600,73.800 165.600 C 73.030 165.600,72.400 165.762,72.400 165.961 C 72.400 166.159,71.320 166.447,70.000 166.600 C 68.680 166.753,67.600 167.020,67.600 167.193 C 67.600 167.366,66.610 167.632,65.400 167.783 C 64.190 167.934,63.200 168.222,63.200 168.424 C 63.200 168.626,62.480 168.906,61.600 169.046 C 60.720 169.187,60.000 169.459,60.000 169.651 C 60.000 169.843,59.730 170.000,59.400 170.000 C 59.070 170.000,58.800 170.166,58.800 170.368 C 58.800 170.571,58.260 170.855,57.600 171.000 C 56.940 171.145,56.400 171.416,56.400 171.603 C 56.400 171.790,55.410 172.066,54.200 172.217 C 52.990 172.368,52.000 172.635,52.000 172.809 C 52.000 172.983,51.100 173.249,50.000 173.400 C 48.900 173.551,48.000 173.817,48.000 173.991 C 48.000 174.165,47.653 174.397,47.230 174.508 C 46.688 174.650,46.523 174.544,46.674 174.151 C 46.792 173.844,47.318 173.485,47.844 173.353 C 48.370 173.221,48.800 172.967,48.800 172.788 C 48.800 172.610,49.340 172.345,50.000 172.200 C 50.660 172.055,51.200 171.788,51.200 171.606 C 51.200 171.424,52.100 171.151,53.200 171.000 C 54.300 170.849,55.200 170.562,55.200 170.362 C 55.200 170.163,55.470 170.000,55.800 170.000 C 56.130 170.000,56.400 169.834,56.400 169.632 C 56.400 169.429,56.940 169.145,57.600 169.000 C 58.260 168.855,58.800 168.585,58.800 168.400 C 58.800 168.215,59.340 167.945,60.000 167.800 C 60.660 167.655,61.200 167.384,61.200 167.198 C 61.200 167.011,61.515 166.765,61.900 166.650 C 62.285 166.536,61.790 166.544,60.800 166.668 C 59.810 166.793,58.940 167.053,58.866 167.248 C 58.793 167.442,58.028 167.714,57.166 167.852 C 56.305 167.990,55.600 168.242,55.600 168.414 C 55.600 168.585,53.890 168.854,51.800 169.010 C 49.710 169.167,48.000 169.454,48.000 169.648 C 48.000 169.841,47.370 170.000,46.600 170.000 C 45.830 170.000,45.200 170.163,45.200 170.362 C 45.200 170.562,44.300 170.849,43.200 171.000 C 42.100 171.151,41.200 171.424,41.200 171.606 C 41.200 171.788,40.660 172.055,40.000 172.200 C 39.340 172.345,38.800 172.610,38.800 172.788 C 38.800 172.967,38.370 173.221,37.844 173.353 C 34.952 174.079,36.432 174.800,40.813 174.800 C 43.471 174.800,45.200 174.958,45.200 175.200 C 45.200 175.420,44.750 175.600,44.200 175.600 C 43.650 175.600,43.200 175.759,43.200 175.954 C 43.200 176.149,42.210 176.432,41.000 176.583 C 39.790 176.734,38.800 177.022,38.800 177.224 C 38.800 177.426,38.080 177.706,37.200 177.846 C 36.320 177.987,35.600 178.245,35.600 178.419 C 35.600 178.594,35.060 178.855,34.400 179.000 C 33.740 179.145,33.200 179.429,33.200 179.632 C 33.200 179.834,32.930 180.000,32.600 180.000 C 32.270 180.000,32.000 180.160,32.000 180.357 C 32.000 180.553,31.550 180.826,31.000 180.964 C 30.450 181.102,30.000 181.392,30.000 181.608 C 30.000 181.823,29.739 182.000,29.419 182.000 C 29.100 182.000,28.227 182.630,27.479 183.400 C 26.731 184.170,25.986 184.800,25.824 184.800 C 25.661 184.800,27.535 182.801,29.989 180.358 C 32.442 177.915,34.339 175.805,34.203 175.670 C 34.067 175.534,33.831 175.620,33.678 175.861 C 33.525 176.102,32.815 176.426,32.100 176.582 C 31.385 176.737,30.800 177.009,30.800 177.187 C 30.800 177.365,30.170 177.629,29.400 177.774 C 28.630 177.918,28.000 178.208,28.000 178.418 C 28.000 178.628,27.724 178.800,27.387 178.800 C 27.051 178.800,26.671 179.070,26.545 179.400 C 26.418 179.730,26.064 180.000,25.757 180.000 C 25.451 180.000,25.200 180.168,25.200 180.373 C 25.200 180.578,24.802 180.872,24.315 181.027 C 23.290 181.352,21.473 183.083,21.089 184.100 C 20.944 184.485,20.639 184.800,20.413 184.800 C 20.186 184.800,20.000 185.250,20.000 185.800 C 20.000 186.350,19.833 186.800,19.629 186.800 C 19.425 186.800,19.134 187.790,18.983 189.000 C 18.832 190.210,18.568 191.200,18.396 191.200 C 18.225 191.200,17.954 192.865,17.795 194.900 C 17.635 196.935,17.329 198.711,17.114 198.847 C 16.880 198.995,16.699 203.119,16.662 209.145 C 16.614 216.884,16.485 219.196,16.100 219.197 C 15.701 219.199,15.600 250.548,15.600 374.600 L 15.600 530.000 120.600 530.000 L 225.600 530.000 225.600 527.405 L 225.600 524.809 227.200 524.554 C 228.080 524.413,228.800 524.155,228.800 523.981 C 228.800 523.806,229.340 523.545,230.000 523.400 C 230.660 523.255,231.200 522.985,231.200 522.800 C 231.200 522.615,231.740 522.345,232.400 522.200 C 233.060 522.055,233.600 521.774,233.600 521.576 C 233.600 521.378,234.050 521.102,234.600 520.964 C 235.150 520.826,235.600 520.553,235.600 520.357 C 235.600 520.160,235.870 520.000,236.200 520.000 C 236.530 520.000,236.800 519.834,236.800 519.632 C 236.800 519.429,237.340 519.145,238.000 519.000 C 238.660 518.855,239.200 518.591,239.200 518.413 C 239.200 518.235,239.830 517.971,240.600 517.826 C 241.370 517.682,242.000 517.411,242.000 517.225 C 242.000 517.039,242.493 516.763,243.096 516.612 C 243.699 516.460,244.319 516.131,244.474 515.880 C 244.629 515.629,244.901 515.578,245.078 515.766 C 245.255 515.955,245.174 516.190,244.897 516.289 C 244.621 516.388,243.607 517.285,242.645 518.282 C 240.497 520.509,240.517 520.489,238.248 522.679 C 236.153 524.702,236.094 524.805,237.200 524.516 C 237.640 524.401,238.000 524.156,238.000 523.971 C 238.000 523.787,238.630 523.518,239.400 523.374 C 240.170 523.229,240.800 522.971,240.800 522.799 C 240.800 522.627,241.293 522.363,241.896 522.212 C 242.499 522.060,243.122 521.726,243.281 521.468 C 243.474 521.154,245.547 520.958,249.585 520.871 C 252.924 520.800,255.600 520.577,255.600 520.371 C 255.600 520.167,256.050 520.000,256.600 520.000 C 257.150 520.000,257.600 519.836,257.600 519.635 C 257.600 519.434,258.320 519.149,259.200 519.000 C 260.080 518.851,260.800 518.585,260.800 518.408 C 260.800 518.231,261.255 517.973,261.810 517.833 C 262.727 517.603,264.400 516.290,264.400 515.800 C 264.400 515.690,262.420 515.600,260.000 515.600 C 255.554 515.600,254.086 515.052,257.200 514.554 C 258.080 514.413,258.800 514.155,258.800 513.981 C 258.800 513.806,259.340 513.545,260.000 513.400 C 260.660 513.255,261.200 512.985,261.200 512.800 C 261.200 512.615,261.740 512.345,262.400 512.200 C 263.060 512.055,263.600 511.774,263.600 511.576 C 263.600 511.378,264.050 511.102,264.600 510.964 C 265.150 510.826,265.600 510.553,265.600 510.357 C 265.600 510.160,265.870 510.000,266.200 510.000 C 266.530 510.000,266.800 509.834,266.800 509.632 C 266.800 509.429,267.340 509.145,268.000 509.000 C 268.660 508.855,269.200 508.591,269.200 508.413 C 269.200 508.235,269.830 507.971,270.600 507.826 C 271.370 507.682,272.000 507.411,272.000 507.225 C 272.000 507.039,272.493 506.763,273.096 506.612 C 273.699 506.460,274.319 506.131,274.474 505.880 C 274.629 505.629,274.901 505.578,275.078 505.766 C 275.255 505.955,275.174 506.190,274.897 506.289 C 274.621 506.388,273.607 507.285,272.645 508.282 C 270.497 510.509,270.517 510.489,268.248 512.679 C 266.153 514.702,266.094 514.805,267.200 514.516 C 267.640 514.401,268.000 514.156,268.000 513.971 C 268.000 513.787,268.630 513.518,269.400 513.374 C 270.170 513.229,270.800 512.965,270.800 512.787 C 270.800 512.609,271.340 512.345,272.000 512.200 C 272.660 512.055,273.200 511.785,273.200 511.600 C 273.200 511.415,273.740 511.145,274.400 511.000 C 275.060 510.855,275.600 510.571,275.600 510.368 C 275.600 510.166,276.050 510.000,276.600 510.000 C 277.150 510.000,277.600 509.836,277.600 509.635 C 277.600 509.434,278.320 509.149,279.200 509.000 C 280.080 508.851,280.800 508.585,280.800 508.408 C 280.800 508.231,281.255 507.973,281.810 507.833 C 282.727 507.603,284.400 506.290,284.400 505.800 C 284.400 505.690,282.420 505.600,280.000 505.600 C 275.799 505.600,274.297 505.142,276.600 504.564 C 277.150 504.426,277.600 504.153,277.600 503.957 C 277.600 503.760,277.810 503.600,278.066 503.600 C 278.547 503.600,278.877 503.329,281.103 501.103 C 283.329 498.877,283.600 498.547,283.600 498.066 C 283.600 497.810,283.780 497.600,284.000 497.600 C 284.220 497.600,284.400 497.330,284.400 497.000 C 284.400 496.670,284.568 496.400,284.773 496.400 C 284.978 496.400,285.260 496.040,285.400 495.601 C 285.539 495.161,286.091 494.692,286.627 494.558 C 287.162 494.423,287.600 494.153,287.600 493.957 C 287.600 493.760,287.810 493.600,288.066 493.600 C 288.547 493.600,288.877 493.329,291.103 491.103 C 293.329 488.877,293.600 488.547,293.600 488.066 C 293.600 487.810,293.780 487.600,294.000 487.600 C 294.220 487.600,294.400 487.407,294.400 487.171 C 294.400 486.936,294.670 486.473,295.000 486.143 C 295.533 485.610,295.600 486.035,295.600 489.971 C 295.600 492.407,295.690 494.400,295.800 494.400 C 296.290 494.400,297.603 492.727,297.833 491.810 C 297.973 491.255,298.231 490.800,298.408 490.800 C 298.585 490.800,298.851 490.080,299.000 489.200 C 299.149 488.320,299.434 487.600,299.635 487.600 C 299.836 487.600,300.000 487.150,300.000 486.600 C 300.000 486.050,300.166 485.600,300.368 485.600 C 300.571 485.600,300.855 485.060,301.000 484.400 C 301.145 483.740,301.415 483.200,301.600 483.200 C 301.785 483.200,302.055 482.660,302.200 482.000 C 302.345 481.340,302.609 480.800,302.787 480.800 C 302.965 480.800,303.229 480.170,303.374 479.400 C 303.518 478.630,303.787 478.000,303.971 478.000 C 304.156 478.000,304.401 477.640,304.516 477.200 C 304.806 476.091,304.704 476.150,302.627 478.300 C 301.618 479.345,300.610 480.380,300.387 480.600 C 296.899 484.049,295.946 484.880,295.727 484.661 C 295.584 484.517,295.662 484.400,295.902 484.400 C 296.141 484.400,296.455 483.860,296.600 483.200 C 296.745 482.540,297.021 482.000,297.214 482.000 C 297.406 482.000,297.682 481.370,297.826 480.600 C 297.971 479.830,298.235 479.200,298.413 479.200 C 298.591 479.200,298.855 478.660,299.000 478.000 C 299.145 477.340,299.429 476.800,299.632 476.800 C 299.834 476.800,300.000 476.530,300.000 476.200 C 300.000 475.870,300.164 475.600,300.364 475.600 C 300.564 475.600,300.856 474.070,301.011 472.200 C 301.167 470.330,301.429 468.800,301.593 468.800 C 301.756 468.800,301.988 467.591,302.106 466.113 C 302.225 464.635,302.520 463.360,302.762 463.279 C 303.003 463.199,303.314 462.428,303.452 461.566 C 303.590 460.705,303.836 460.000,304.000 460.000 C 304.163 460.000,304.419 459.078,304.569 457.951 C 304.896 455.482,305.338 454.982,307.523 454.613 C 308.445 454.457,309.200 454.186,309.200 454.009 C 309.200 453.833,309.830 453.571,310.600 453.426 C 311.370 453.282,312.000 452.992,312.000 452.782 C 312.000 452.572,312.230 452.400,312.511 452.400 C 312.792 452.400,313.330 452.040,313.707 451.600 C 314.084 451.160,314.664 450.800,314.996 450.800 C 315.328 450.800,315.600 450.620,315.600 450.400 C 315.600 450.180,315.870 450.000,316.200 450.000 C 316.530 450.000,316.800 449.834,316.800 449.632 C 316.800 449.429,317.340 449.145,318.000 449.000 C 318.660 448.855,319.200 448.591,319.200 448.413 C 319.200 448.235,319.830 447.971,320.600 447.826 C 321.370 447.682,322.000 447.411,322.000 447.225 C 322.000 447.039,322.493 446.763,323.096 446.612 C 323.699 446.460,324.319 446.131,324.474 445.880 C 324.629 445.629,324.901 445.578,325.078 445.766 C 325.255 445.955,325.174 446.190,324.897 446.289 C 324.621 446.388,323.607 447.285,322.645 448.282 C 320.490 450.517,320.408 450.598,318.196 452.732 C 316.156 454.699,316.097 454.804,317.200 454.516 C 317.640 454.401,318.000 454.156,318.000 453.971 C 318.000 453.787,318.630 453.518,319.400 453.374 C 320.170 453.229,320.800 452.965,320.800 452.787 C 320.800 452.609,321.340 452.345,322.000 452.200 C 322.660 452.055,323.200 451.785,323.200 451.600 C 323.200 451.415,323.740 451.145,324.400 451.000 C 325.060 450.855,325.600 450.571,325.600 450.368 C 325.600 450.166,326.050 450.000,326.600 450.000 C 327.150 450.000,327.600 449.836,327.600 449.635 C 327.600 449.434,328.320 449.149,329.200 449.000 C 330.080 448.851,330.800 448.585,330.800 448.408 C 330.800 448.231,331.255 447.973,331.810 447.833 C 332.727 447.603,334.400 446.290,334.400 445.800 C 334.400 445.690,332.420 445.600,330.000 445.600 C 325.327 445.600,324.121 445.042,327.800 444.583 C 329.010 444.432,330.000 444.172,330.000 444.005 C 330.000 443.839,330.720 443.587,331.600 443.446 C 332.480 443.306,333.200 443.036,333.200 442.846 C 333.200 442.657,333.920 442.387,334.800 442.246 C 335.680 442.106,336.400 441.827,336.400 441.627 C 336.400 441.427,336.940 441.145,337.600 441.000 C 338.260 440.855,338.800 440.571,338.800 440.368 C 338.800 440.166,339.070 440.000,339.400 440.000 C 339.730 440.000,340.000 439.832,340.000 439.627 C 340.000 439.422,340.377 439.134,340.838 438.988 C 341.300 438.841,342.384 437.993,343.248 437.103 C 344.111 436.213,344.949 435.625,345.109 435.797 C 345.269 435.969,345.174 436.190,344.897 436.289 C 344.621 436.388,343.607 437.285,342.645 438.282 C 340.490 440.517,340.408 440.598,338.196 442.732 C 336.064 444.787,336.092 444.707,337.600 444.485 C 338.260 444.388,338.800 444.164,338.800 443.986 C 338.800 443.809,339.340 443.545,340.000 443.400 C 340.660 443.255,341.200 442.990,341.200 442.812 C 341.200 442.633,341.672 442.368,342.248 442.224 C 342.825 442.079,343.558 441.699,343.877 441.380 C 344.328 440.929,345.694 440.800,350.029 440.800 C 353.476 440.800,355.600 440.648,355.600 440.400 C 355.600 440.180,356.050 440.000,356.600 440.000 C 357.150 440.000,357.600 439.836,357.600 439.635 C 357.600 439.434,358.320 439.149,359.200 439.000 C 360.080 438.851,360.800 438.585,360.800 438.408 C 360.800 438.231,361.255 437.973,361.810 437.833 C 362.727 437.603,364.400 436.290,364.400 435.800 C 364.400 435.690,362.420 435.600,360.000 435.600 C 355.554 435.600,354.086 435.052,357.200 434.554 C 358.080 434.413,358.800 434.155,358.800 433.981 C 358.800 433.806,359.340 433.545,360.000 433.400 C 360.660 433.255,361.200 432.985,361.200 432.800 C 361.200 432.615,361.740 432.345,362.400 432.200 C 363.060 432.055,363.600 431.774,363.600 431.576 C 363.600 431.378,364.050 431.102,364.600 430.964 C 365.150 430.826,365.600 430.553,365.600 430.357 C 365.600 430.160,365.870 430.000,366.200 430.000 C 366.530 430.000,366.800 429.834,366.800 429.632 C 366.800 429.429,367.340 429.145,368.000 429.000 C 368.660 428.855,369.200 428.591,369.200 428.413 C 369.200 428.235,369.830 427.971,370.600 427.826 C 371.370 427.682,372.000 427.411,372.000 427.225 C 372.000 427.039,372.493 426.763,373.096 426.612 C 373.699 426.460,374.319 426.131,374.474 425.880 C 374.629 425.629,374.901 425.578,375.078 425.766 C 375.255 425.955,375.174 426.190,374.897 426.289 C 374.621 426.388,373.584 427.308,372.593 428.334 C 370.389 430.617,370.509 430.497,368.248 432.679 C 366.153 434.702,366.094 434.805,367.200 434.516 C 367.640 434.401,368.000 434.156,368.000 433.971 C 368.000 433.787,368.630 433.518,369.400 433.374 C 370.170 433.229,370.800 432.965,370.800 432.787 C 370.800 432.609,371.340 432.345,372.000 432.200 C 372.660 432.055,373.200 431.785,373.200 431.600 C 373.200 431.415,373.740 431.145,374.400 431.000 C 375.060 430.855,375.600 430.571,375.600 430.368 C 375.600 430.166,376.050 430.000,376.600 430.000 C 377.150 430.000,377.600 429.836,377.600 429.635 C 377.600 429.434,378.320 429.149,379.200 429.000 C 380.080 428.851,380.800 428.585,380.800 428.408 C 380.800 428.231,381.255 427.973,381.810 427.833 C 382.727 427.603,384.400 426.290,384.400 425.800 C 384.400 425.690,382.420 425.600,380.000 425.600 C 375.554 425.600,374.086 425.052,377.200 424.554 C 378.080 424.413,378.800 424.155,378.800 423.981 C 378.800 423.806,379.340 423.545,380.000 423.400 C 380.660 423.255,381.200 422.990,381.200 422.812 C 381.200 422.633,381.672 422.368,382.248 422.224 C 382.825 422.079,383.558 421.699,383.877 421.380 C 384.887 420.370,386.800 421.159,386.800 422.586 C 386.800 422.877,387.070 423.218,387.400 423.345 C 387.730 423.471,388.000 423.851,388.000 424.187 C 388.000 424.524,388.165 424.800,388.366 424.800 C 388.567 424.800,388.858 426.150,389.013 427.800 C 389.167 429.450,389.453 430.800,389.647 430.800 C 389.841 430.800,390.000 431.340,390.000 432.000 C 390.000 433.745,389.345 433.470,389.046 431.600 C 388.906 430.720,388.632 430.000,388.439 430.000 C 388.245 430.000,387.973 429.547,387.834 428.994 C 387.567 427.929,386.434 426.400,385.911 426.400 C 385.443 426.400,385.537 427.512,386.019 427.673 C 386.250 427.750,386.545 428.845,386.675 430.106 C 386.805 431.368,387.038 432.400,387.192 432.400 C 387.346 432.400,387.595 437.027,387.744 442.681 C 387.893 448.336,388.170 453.061,388.358 453.181 C 388.547 453.302,388.779 457.619,388.875 462.775 C 389.001 469.522,389.183 472.194,389.525 472.308 C 389.866 472.422,390.000 474.320,390.000 479.033 C 390.000 482.645,390.160 485.600,390.355 485.600 C 390.550 485.600,390.831 486.410,390.979 487.400 C 391.128 488.390,391.398 489.200,391.580 489.200 C 391.762 489.200,392.029 489.830,392.174 490.600 C 392.318 491.370,392.608 492.000,392.818 492.000 C 393.028 492.000,393.200 492.230,393.200 492.511 C 393.200 492.982,394.555 494.400,395.005 494.400 C 395.112 494.400,395.200 492.420,395.200 490.000 L 395.200 485.600 397.600 485.600 L 400.000 485.600 400.000 247.800 L 400.000 10.000 396.233 10.000 C 394.162 10.000,392.407 9.828,392.333 9.617 C 392.260 9.407,390.220 9.110,387.800 8.958 C 385.380 8.806,383.281 8.497,383.135 8.273 C 382.868 7.863,349.655 7.543,341.500 7.872 M364.700 9.098 C 362.335 9.169,358.465 9.169,356.100 9.098 C 353.735 9.028,355.670 8.970,360.400 8.970 C 365.130 8.970,367.065 9.028,364.700 9.098 M351.200 9.600 C 351.200 9.820,350.480 10.000,349.600 10.000 C 348.720 10.000,348.000 9.820,348.000 9.600 C 348.000 9.380,348.720 9.200,349.600 9.200 C 350.480 9.200,351.200 9.380,351.200 9.600 M372.400 9.600 C 372.400 9.820,371.680 10.000,370.800 10.000 C 369.920 10.000,369.200 9.820,369.200 9.600 C 369.200 9.380,369.920 9.200,370.800 9.200 C 371.680 9.200,372.400 9.380,372.400 9.600 M345.200 10.343 C 345.200 10.531,343.540 10.811,341.511 10.964 C 339.481 11.117,337.726 11.389,337.611 11.568 C 337.495 11.747,336.185 12.022,334.700 12.179 C 333.215 12.335,332.000 12.612,332.000 12.794 C 332.000 12.976,331.100 13.249,330.000 13.400 C 328.900 13.551,328.000 13.817,328.000 13.991 C 328.000 14.165,327.653 14.397,327.230 14.508 C 326.688 14.650,326.523 14.544,326.674 14.151 C 326.792 13.844,327.318 13.485,327.844 13.353 C 328.370 13.221,328.800 12.967,328.800 12.788 C 328.800 12.610,329.340 12.345,330.000 12.200 C 330.660 12.055,331.200 11.788,331.200 11.606 C 331.200 11.424,332.100 11.151,333.200 11.000 C 334.300 10.849,335.200 10.562,335.200 10.362 C 335.200 10.163,337.450 10.000,340.200 10.000 C 342.950 10.000,345.200 10.154,345.200 10.343 M385.600 10.355 C 385.600 10.550,386.410 10.831,387.400 10.979 C 388.390 11.128,389.200 11.398,389.200 11.580 C 389.200 11.762,389.830 12.029,390.600 12.174 C 391.370 12.318,392.000 12.608,392.000 12.818 C 392.000 13.028,392.230 13.200,392.511 13.200 C 392.792 13.200,393.344 13.576,393.737 14.035 C 394.436 14.852,394.431 14.864,393.526 14.581 C 393.017 14.422,392.505 14.145,392.388 13.965 C 392.271 13.785,391.416 13.516,390.488 13.368 C 389.560 13.219,388.800 12.955,388.800 12.781 C 388.800 12.606,387.585 12.335,386.100 12.179 C 384.615 12.022,383.305 11.747,383.189 11.568 C 383.074 11.389,381.319 11.117,379.289 10.964 C 373.982 10.563,374.748 10.000,380.600 10.000 C 383.350 10.000,385.600 10.160,385.600 10.355 M372.467 15.975 C 372.540 16.182,374.445 16.401,376.700 16.463 C 379.708 16.545,380.800 16.712,380.800 17.088 C 380.800 17.369,381.025 17.603,381.300 17.607 C 382.240 17.620,383.600 19.482,383.600 20.756 C 383.600 21.468,383.814 22.014,384.100 22.032 C 384.500 22.057,384.500 22.104,384.100 22.265 C 383.508 22.504,383.419 24.400,384.000 24.400 C 384.574 24.400,384.494 25.489,383.900 25.767 C 383.500 25.953,383.500 26.047,383.900 26.233 C 384.496 26.512,384.565 27.478,384.002 27.667 C 383.783 27.740,383.486 29.735,383.341 32.100 C 383.177 34.790,382.914 36.402,382.639 36.406 C 382.398 36.409,382.470 36.589,382.800 36.806 C 383.270 37.115,383.291 37.271,382.894 37.527 C 382.575 37.734,382.335 39.080,382.243 41.173 C 382.146 43.394,381.916 44.620,381.549 44.877 C 381.124 45.174,381.113 45.307,381.500 45.464 C 382.089 45.703,382.169 46.675,381.616 46.867 C 381.404 46.940,381.133 48.710,381.014 50.800 C 380.894 52.890,380.617 54.660,380.398 54.733 C 380.179 54.807,380.000 56.007,380.000 57.400 C 380.000 59.036,379.823 60.016,379.500 60.167 C 379.100 60.353,379.100 60.447,379.500 60.633 C 380.104 60.915,380.162 61.879,379.586 62.071 C 379.333 62.156,379.078 65.149,378.926 69.805 C 378.791 73.982,378.523 77.503,378.331 77.629 C 378.133 77.759,377.984 138.230,377.988 217.143 C 377.993 347.794,377.951 356.444,377.314 356.688 C 376.354 357.057,375.200 358.101,375.200 358.601 C 375.200 358.833,374.840 359.283,374.400 359.600 C 373.960 359.917,373.600 360.409,373.600 360.692 C 373.600 360.976,373.240 361.516,372.800 361.893 C 372.360 362.270,372.000 362.808,372.000 363.089 C 372.000 363.370,371.730 363.600,371.400 363.600 C 371.070 363.600,370.800 363.768,370.800 363.973 C 370.800 364.178,370.404 364.472,369.920 364.625 C 369.436 364.779,368.390 365.601,367.597 366.452 C 366.769 367.340,365.779 368.000,365.277 368.000 C 364.795 368.000,364.400 368.166,364.400 368.368 C 364.400 368.571,363.860 368.855,363.200 369.000 C 362.540 369.145,362.000 369.429,362.000 369.632 C 362.000 369.834,361.550 370.000,361.000 370.000 C 360.450 370.000,360.000 370.153,360.000 370.341 C 360.000 370.528,358.528 370.795,356.728 370.934 C 354.928 371.073,353.353 371.350,353.228 371.551 C 353.103 371.751,351.605 372.046,349.900 372.205 C 348.195 372.364,346.800 372.642,346.800 372.822 C 346.800 373.003,345.990 373.272,345.000 373.421 C 344.010 373.569,343.200 373.836,343.200 374.014 C 343.200 374.191,342.660 374.455,342.000 374.600 C 341.193 374.777,340.800 375.106,340.800 375.605 C 340.800 376.018,340.409 376.470,339.919 376.626 C 339.434 376.780,338.791 377.152,338.490 377.453 C 338.189 377.754,337.686 378.000,337.371 378.000 C 337.057 378.000,336.800 378.164,336.800 378.365 C 336.800 378.566,336.080 378.851,335.200 379.000 C 334.320 379.149,333.600 379.434,333.600 379.635 C 333.600 379.836,333.240 380.000,332.800 380.000 C 332.360 380.000,332.000 380.168,332.000 380.373 C 332.000 380.577,330.560 380.871,328.800 381.024 C 327.040 381.178,325.600 381.447,325.600 381.623 C 325.600 381.799,324.610 382.066,323.400 382.217 C 322.190 382.368,321.200 382.628,321.200 382.795 C 321.200 382.961,320.480 383.213,319.600 383.354 C 318.720 383.494,318.000 383.773,318.000 383.973 C 318.000 384.173,317.468 384.453,316.818 384.596 C 316.155 384.742,315.529 385.195,315.391 385.628 C 315.256 386.053,314.838 386.400,314.462 386.400 C 314.086 386.400,313.470 386.760,313.093 387.200 C 312.716 387.640,312.136 388.000,311.804 388.000 C 311.472 388.000,311.200 388.166,311.200 388.368 C 311.200 388.571,310.660 388.855,310.000 389.000 C 309.340 389.145,308.800 389.429,308.800 389.632 C 308.800 389.834,308.260 390.000,307.600 390.000 C 306.940 390.000,306.400 390.159,306.400 390.353 C 306.400 390.548,305.230 390.832,303.800 390.985 C 302.246 391.152,301.198 391.452,301.194 391.732 C 301.190 392.003,301.022 391.948,300.794 391.600 C 300.512 391.170,300.315 391.130,300.100 391.459 C 299.935 391.712,298.765 392.048,297.500 392.205 C 296.235 392.363,295.200 392.628,295.200 392.795 C 295.200 392.961,294.480 393.213,293.600 393.354 C 292.720 393.494,292.000 393.787,292.000 394.005 C 292.000 394.222,291.738 394.400,291.418 394.400 C 291.098 394.400,290.386 394.850,289.836 395.400 C 289.286 395.950,288.688 396.400,288.507 396.400 C 288.326 396.400,287.870 396.760,287.493 397.200 C 287.116 397.640,286.536 398.000,286.204 398.000 C 285.872 398.000,285.600 398.180,285.600 398.400 C 285.600 398.620,285.144 398.800,284.587 398.800 C 284.031 398.800,283.471 399.070,283.345 399.400 C 283.216 399.736,282.621 400.000,281.991 400.000 C 281.372 400.000,280.796 400.211,280.710 400.469 C 280.433 401.300,265.200 401.480,265.200 400.652 C 265.200 400.269,264.874 400.000,264.408 400.000 C 263.902 400.000,263.527 399.648,263.372 399.029 C 263.237 398.495,262.874 397.961,262.564 397.841 C 262.254 397.722,262.000 397.169,262.000 396.613 C 262.000 396.056,261.823 395.600,261.606 395.600 C 261.351 395.600,261.175 382.322,261.106 357.933 C 261.022 328.231,260.894 320.231,260.500 320.100 C 260.225 320.008,260.000 319.759,260.000 319.547 C 260.000 318.996,257.410 316.400,256.860 316.400 C 256.607 316.400,256.400 316.220,256.400 316.000 C 256.400 315.780,256.130 315.600,255.800 315.600 C 255.470 315.600,255.200 315.870,255.200 316.200 C 255.200 316.530,255.020 316.800,254.800 316.800 C 254.580 316.800,254.400 317.070,254.400 317.400 C 254.400 317.730,254.228 318.000,254.018 318.000 C 253.808 318.000,253.518 318.630,253.374 319.400 C 253.229 320.170,252.965 320.800,252.787 320.800 C 252.609 320.800,252.345 321.340,252.200 322.000 C 252.055 322.660,251.771 323.200,251.568 323.200 C 251.366 323.200,251.200 323.476,251.200 323.813 C 251.200 324.149,250.930 324.529,250.600 324.655 C 250.270 324.782,250.000 325.207,250.000 325.600 C 250.000 325.993,249.730 326.418,249.400 326.545 C 249.070 326.671,248.800 326.958,248.800 327.183 C 248.800 327.679,247.538 329.200,247.126 329.200 C 246.652 329.200,243.200 332.685,243.200 333.164 C 243.200 333.404,243.028 333.600,242.818 333.600 C 242.608 333.600,242.318 334.230,242.174 335.000 C 242.029 335.770,241.751 336.400,241.555 336.400 C 241.360 336.400,241.200 336.747,241.200 337.171 C 241.200 337.596,240.930 338.213,240.600 338.543 C 240.270 338.873,240.000 339.260,240.000 339.402 C 240.000 339.824,237.859 341.824,237.100 342.111 C 236.715 342.256,236.400 342.561,236.400 342.787 C 236.400 343.014,236.158 343.200,235.861 343.200 C 234.861 343.200,233.563 344.718,233.328 346.164 C 233.200 346.954,232.955 347.600,232.783 347.600 C 232.611 347.600,232.349 348.320,232.200 349.200 C 232.051 350.080,231.766 350.800,231.565 350.800 C 231.364 350.800,231.200 351.019,231.200 351.287 C 231.200 351.555,230.783 352.140,230.272 352.587 C 229.762 353.034,229.228 353.715,229.085 354.100 C 228.942 354.485,228.549 354.800,228.213 354.800 C 227.876 354.800,227.600 355.070,227.600 355.400 C 227.600 356.075,226.213 357.600,225.600 357.600 C 225.380 357.600,225.200 357.870,225.200 358.200 C 225.200 358.530,225.020 358.800,224.800 358.800 C 224.580 358.800,224.400 359.070,224.400 359.400 C 224.400 359.730,224.223 360.000,224.008 360.000 C 223.792 360.000,223.502 360.450,223.364 361.000 C 223.226 361.550,222.967 362.000,222.788 362.000 C 222.610 362.000,222.348 362.525,222.207 363.167 C 222.066 363.808,221.692 364.433,221.376 364.554 C 221.059 364.676,220.800 365.191,220.800 365.699 C 220.800 366.207,220.440 366.883,220.000 367.200 C 219.560 367.517,219.200 367.967,219.200 368.199 C 219.200 368.704,217.757 370.000,217.195 370.000 C 216.978 370.000,216.800 370.186,216.800 370.413 C 216.800 370.639,216.485 370.944,216.100 371.090 C 215.228 371.420,214.400 372.219,214.400 372.729 C 214.400 372.941,214.130 373.218,213.800 373.345 C 213.470 373.471,213.200 373.851,213.200 374.187 C 213.200 374.524,213.036 374.800,212.835 374.800 C 212.634 374.800,212.349 375.520,212.200 376.400 C 212.051 377.280,211.785 378.000,211.608 378.000 C 211.431 378.000,211.174 378.450,211.036 379.000 C 210.898 379.550,210.608 380.000,210.392 380.000 C 210.177 380.000,210.000 380.194,210.000 380.431 C 210.000 381.141,207.777 383.140,206.680 383.416 C 206.118 383.557,205.561 383.926,205.441 384.236 C 205.322 384.546,204.859 384.800,204.413 384.800 C 203.924 384.800,203.600 385.063,203.600 385.460 C 203.600 386.269,201.262 388.600,200.071 388.978 C 199.592 389.130,199.200 389.422,199.200 389.627 C 199.200 389.832,198.945 390.000,198.633 390.000 C 198.322 390.000,197.996 390.211,197.910 390.469 C 197.605 391.385,193.757 391.102,192.887 390.100 C 192.458 389.605,191.942 389.200,191.742 389.200 C 191.302 389.200,190.000 387.733,190.000 387.238 C 190.000 387.044,189.730 386.782,189.400 386.655 C 189.070 386.529,188.800 386.149,188.800 385.813 C 188.800 385.041,187.542 383.762,186.439 383.413 C 185.978 383.266,185.600 383.002,185.600 382.826 C 185.600 382.650,184.839 382.403,183.909 382.278 C 182.978 382.154,182.155 381.866,182.079 381.638 C 182.004 381.411,181.325 381.110,180.571 380.968 C 179.817 380.827,179.200 380.565,179.200 380.386 C 179.200 380.208,178.660 379.522,178.000 378.862 C 177.340 378.202,176.800 377.462,176.800 377.218 C 176.800 376.974,176.530 376.671,176.200 376.545 C 175.870 376.418,175.600 375.988,175.600 375.589 C 175.600 375.108,175.195 374.775,174.400 374.600 C 173.740 374.455,173.200 374.194,173.200 374.019 C 173.200 373.845,172.480 373.587,171.600 373.446 C 170.720 373.306,170.000 373.032,170.000 372.839 C 170.000 372.645,169.550 372.374,169.000 372.236 C 168.450 372.098,168.000 371.822,168.000 371.624 C 168.000 371.426,167.468 371.147,166.818 371.004 C 166.168 370.861,165.533 370.418,165.406 370.020 C 165.280 369.621,164.636 369.187,163.976 369.055 C 162.804 368.821,160.800 367.075,160.800 366.289 C 160.800 365.759,159.203 364.400,158.582 364.400 C 158.309 364.400,157.982 364.130,157.855 363.800 C 157.729 363.470,157.349 363.200,157.013 363.200 C 156.676 363.200,156.400 363.020,156.400 362.800 C 156.400 362.580,156.158 362.400,155.861 362.400 C 155.565 362.400,154.907 362.040,154.400 361.600 C 153.893 361.160,153.247 360.800,152.966 360.800 C 152.684 360.800,152.340 360.440,152.200 360.000 C 151.664 358.310,150.800 359.945,150.800 362.650 C 150.800 363.173,150.620 363.600,150.400 363.600 C 150.136 363.600,150.000 377.533,150.000 404.600 C 150.000 431.667,150.136 445.600,150.400 445.600 C 150.620 445.600,150.800 445.848,150.800 446.152 C 150.800 446.906,153.855 450.000,154.600 450.000 C 154.930 450.000,155.200 450.180,155.200 450.400 C 155.200 450.620,155.470 450.800,155.800 450.800 C 156.130 450.800,156.400 450.620,156.400 450.400 C 156.400 450.180,157.030 450.000,157.800 450.000 C 158.570 450.000,159.200 449.845,159.200 449.656 C 159.200 449.466,160.144 449.200,161.298 449.063 C 162.451 448.926,163.456 448.631,163.531 448.407 C 163.606 448.183,164.090 448.000,164.608 448.000 C 165.140 448.000,166.039 447.475,166.675 446.794 C 169.924 443.312,170.763 442.591,172.031 442.195 C 172.564 442.028,173.118 441.708,173.263 441.482 C 173.408 441.257,175.433 440.987,177.763 440.884 C 180.093 440.780,182.000 440.539,182.000 440.348 C 182.000 440.156,182.990 440.000,184.200 440.000 C 185.410 440.000,186.400 439.834,186.400 439.632 C 186.400 439.429,186.940 439.145,187.600 439.000 C 188.260 438.855,188.800 438.571,188.800 438.368 C 188.800 438.166,189.059 438.000,189.375 438.000 C 189.691 438.000,190.456 437.457,191.075 436.794 C 194.858 432.739,195.279 432.429,197.390 432.139 C 198.385 432.003,199.200 431.753,199.200 431.584 C 199.200 431.415,201.090 431.148,203.400 430.991 C 205.710 430.833,207.600 430.546,207.600 430.352 C 207.600 430.158,208.320 430.000,209.200 430.000 C 210.080 430.000,210.800 429.841,210.800 429.646 C 210.800 429.451,211.823 429.164,213.073 429.008 C 215.250 428.736,215.475 428.593,218.418 425.607 C 220.107 423.892,221.919 422.355,222.445 422.191 C 222.970 422.026,223.528 421.691,223.685 421.446 C 223.863 421.168,225.934 420.947,229.185 420.860 C 232.053 420.783,234.400 420.558,234.400 420.360 C 234.400 420.162,234.940 420.000,235.600 420.000 C 236.260 420.000,236.800 419.834,236.800 419.632 C 236.800 419.429,237.340 419.145,238.000 419.000 C 238.660 418.855,239.200 418.571,239.200 418.368 C 239.200 418.166,239.566 418.000,240.013 418.000 C 240.459 418.000,240.922 417.746,241.041 417.436 C 241.161 417.126,241.695 416.763,242.229 416.628 C 242.797 416.486,243.200 416.092,243.200 415.681 C 243.200 414.816,244.446 413.704,245.794 413.366 C 246.347 413.227,246.800 412.973,246.800 412.802 C 246.800 412.631,247.655 412.363,248.700 412.206 C 249.745 412.050,250.723 411.723,250.873 411.481 C 251.246 410.879,259.529 410.844,259.915 411.442 C 260.072 411.686,260.901 412.014,261.757 412.171 C 262.614 412.329,263.572 412.715,263.886 413.029 C 264.200 413.343,264.894 413.600,265.429 413.600 C 265.963 413.600,266.400 413.757,266.400 413.948 C 266.400 414.140,267.480 414.419,268.800 414.568 L 271.200 414.840 271.200 416.387 C 271.200 417.249,271.421 418.023,271.700 418.136 C 272.076 418.289,272.052 418.444,271.600 418.763 C 271.193 419.051,271.161 419.190,271.500 419.194 C 271.814 419.198,272.000 419.783,272.000 420.767 C 272.000 421.645,271.780 422.422,271.500 422.536 C 271.119 422.691,271.137 422.834,271.575 423.139 C 272.016 423.446,272.182 424.832,272.288 429.070 C 272.365 432.142,272.598 434.659,272.813 434.733 C 273.326 434.910,273.314 436.800,272.800 436.800 C 272.217 436.800,272.309 439.891,272.900 440.167 C 273.300 440.353,273.300 440.447,272.900 440.633 C 272.625 440.762,272.400 441.122,272.400 441.433 C 272.400 441.745,272.625 442.003,272.900 442.006 C 273.260 442.011,273.244 442.111,272.845 442.364 C 272.468 442.602,272.296 443.497,272.306 445.157 C 272.317 446.993,272.182 447.600,271.761 447.600 C 271.236 447.600,271.056 448.179,271.141 449.600 C 271.165 450.003,271.104 450.036,270.955 449.700 C 270.610 448.921,270.000 449.112,270.000 450.000 C 270.000 450.440,269.820 450.800,269.600 450.800 C 269.380 450.800,269.200 450.607,269.200 450.371 C 269.200 450.136,268.917 450.226,268.571 450.571 C 268.226 450.917,267.686 451.200,267.371 451.200 C 267.057 451.200,266.800 451.380,266.800 451.600 C 266.800 451.820,266.440 452.000,266.000 452.000 C 265.560 452.000,265.200 452.250,265.200 452.555 C 265.200 452.874,264.602 453.223,263.800 453.374 C 263.030 453.518,262.400 453.808,262.400 454.018 C 262.400 454.228,261.095 454.402,259.500 454.403 C 253.562 454.411,252.400 454.716,252.400 456.268 C 252.400 457.105,252.170 457.713,251.800 457.855 C 251.470 457.982,251.200 458.516,251.200 459.043 C 251.200 459.627,250.966 460.000,250.600 460.000 C 250.270 460.000,250.000 460.180,250.000 460.400 C 250.000 460.620,249.743 460.800,249.429 460.800 C 249.114 460.800,248.613 461.044,248.316 461.342 C 248.018 461.639,246.880 462.017,245.787 462.181 C 244.694 462.344,243.706 462.630,243.591 462.815 C 243.477 463.000,241.092 463.278,238.291 463.434 C 235.491 463.590,233.200 463.871,233.200 464.058 C 233.200 464.589,232.095 464.461,231.833 463.900 C 231.647 463.500,231.553 463.500,231.367 463.900 C 231.216 464.222,230.241 464.400,228.625 464.400 C 223.348 464.400,221.200 464.813,221.200 465.828 C 221.200 466.738,220.264 468.000,219.590 468.000 C 219.395 468.000,219.119 468.625,218.976 469.390 C 218.748 470.603,218.530 470.814,217.257 471.048 C 216.456 471.195,215.695 471.476,215.568 471.672 C 215.440 471.868,214.630 472.140,213.768 472.276 C 212.905 472.412,212.102 472.672,211.981 472.854 C 211.861 473.035,208.981 473.303,205.581 473.449 C 202.182 473.596,199.340 473.869,199.267 474.058 C 199.059 474.591,198.001 474.460,197.994 473.900 C 197.990 473.554,197.897 473.536,197.694 473.840 C 197.532 474.082,196.052 474.390,194.405 474.524 C 192.758 474.659,191.347 474.959,191.269 475.192 C 191.192 475.424,190.875 475.868,190.564 476.179 C 190.254 476.489,190.000 476.949,190.000 477.200 C 190.000 477.451,189.738 477.919,189.417 478.240 C 189.096 478.561,188.887 479.043,188.951 479.312 C 189.016 479.580,188.993 479.665,188.901 479.500 C 188.593 478.948,188.057 479.192,187.800 480.000 C 187.660 480.440,187.301 480.800,187.002 480.800 C 186.702 480.800,186.215 481.042,185.919 481.339 C 185.622 481.635,184.665 482.011,183.791 482.175 C 182.917 482.339,182.088 482.658,181.948 482.884 C 181.801 483.121,179.055 483.384,175.447 483.505 C 172.011 483.620,169.200 483.843,169.200 483.999 C 169.200 484.156,167.404 484.383,165.210 484.504 C 161.019 484.734,160.000 485.170,160.000 486.729 C 160.000 487.161,159.711 487.625,159.358 487.761 C 158.992 487.901,158.815 488.263,158.946 488.603 C 159.101 489.008,158.921 489.200,158.387 489.200 C 157.867 489.200,157.600 489.471,157.600 490.000 C 157.600 490.440,157.420 490.800,157.200 490.800 C 156.980 490.800,156.800 490.607,156.800 490.371 C 156.800 490.136,156.517 490.226,156.171 490.571 C 155.826 490.917,155.363 491.200,155.143 491.200 C 154.923 491.200,154.473 491.470,154.143 491.800 C 153.813 492.130,153.031 492.400,152.405 492.400 C 151.779 492.400,151.205 492.584,151.131 492.808 C 151.056 493.033,149.106 493.324,146.797 493.455 C 144.362 493.593,142.477 493.883,142.306 494.146 C 142.095 494.471,142.011 494.458,142.006 494.100 C 142.002 493.796,141.450 493.600,140.600 493.600 C 139.750 493.600,139.198 493.796,139.194 494.100 C 139.190 494.439,139.051 494.407,138.763 494.000 C 138.444 493.548,138.289 493.524,138.136 493.900 C 138.024 494.176,137.257 494.400,136.425 494.400 C 132.084 494.400,130.000 494.873,130.000 495.857 C 130.000 496.376,129.820 496.800,129.600 496.800 C 129.380 496.800,129.200 497.070,129.200 497.400 C 129.200 497.730,128.930 498.000,128.600 498.000 C 127.879 498.000,127.785 498.786,128.500 498.832 C 128.807 498.851,128.769 498.952,128.400 499.094 C 128.070 499.221,127.530 499.631,127.200 500.005 C 126.870 500.379,126.150 500.826,125.600 500.997 C 125.050 501.168,124.495 501.470,124.368 501.668 C 124.240 501.866,123.430 502.140,122.568 502.276 C 121.705 502.412,120.898 502.678,120.774 502.866 C 120.649 503.054,117.949 503.324,114.774 503.465 C 111.312 503.618,108.880 503.897,108.700 504.161 C 108.494 504.463,108.277 504.413,108.006 504.000 C 107.789 503.670,107.609 503.598,107.606 503.841 C 107.602 504.111,106.198 504.372,103.968 504.517 C 100.236 504.759,98.800 505.474,98.800 507.090 C 98.800 507.885,97.882 508.714,96.663 509.020 C 96.094 509.163,95.508 509.658,95.362 510.121 C 94.958 511.393,94.348 511.839,92.629 512.118 C 91.769 512.257,90.944 512.568,90.795 512.807 C 90.637 513.064,88.401 513.341,85.363 513.481 C 82.350 513.620,80.062 513.903,79.870 514.160 C 79.634 514.473,79.481 514.456,79.336 514.100 C 79.108 513.536,78.000 513.411,78.000 513.948 C 78.000 514.140,76.200 514.425,74.000 514.581 C 70.289 514.844,69.266 515.191,70.500 515.767 C 70.898 515.952,70.896 516.048,70.493 516.236 C 69.549 516.675,68.833 517.620,69.039 518.157 C 69.172 518.504,68.826 518.775,68.054 518.929 C 67.366 519.067,66.760 519.495,66.618 519.944 C 66.482 520.371,65.928 520.832,65.386 520.968 C 64.844 521.104,64.400 521.392,64.400 521.608 C 64.400 521.823,64.143 522.000,63.829 522.000 C 63.514 522.000,62.985 522.272,62.653 522.604 C 62.244 523.014,60.853 523.284,58.325 523.445 C 56.276 523.576,54.499 523.845,54.375 524.044 C 54.049 524.567,40.248 524.543,40.073 524.019 C 39.996 523.789,39.543 523.597,39.067 523.593 C 37.349 523.579,36.400 521.960,36.400 519.044 C 36.400 517.548,36.226 516.400,36.000 516.400 C 35.734 516.400,35.600 462.533,35.600 355.600 C 35.600 248.667,35.734 194.800,36.000 194.800 C 36.579 194.800,36.493 193.304,35.900 193.064 C 35.553 192.923,35.531 192.760,35.829 192.530 C 36.591 191.944,36.828 190.800,36.187 190.800 C 35.864 190.800,35.600 190.620,35.600 190.400 C 35.600 190.180,36.050 190.000,36.600 190.000 C 37.833 190.000,37.841 189.630,36.631 188.631 C 35.705 187.867,35.704 187.855,36.477 187.031 C 37.212 186.247,37.285 186.240,37.772 186.900 C 38.405 187.759,38.800 187.797,38.800 187.000 C 38.800 186.670,38.620 186.400,38.400 186.400 C 38.180 186.400,38.000 186.220,38.000 186.000 C 38.000 185.780,38.270 185.600,38.600 185.600 C 38.930 185.600,39.200 185.870,39.200 186.200 C 39.200 187.029,40.662 186.956,41.203 186.100 C 41.521 185.599,41.706 185.542,41.857 185.900 C 42.105 186.491,44.400 186.582,44.400 186.000 C 44.400 185.426,45.489 185.506,45.767 186.100 C 45.953 186.500,46.047 186.500,46.233 186.100 C 46.410 185.720,48.771 185.600,56.033 185.600 C 62.144 185.600,65.600 185.456,65.600 185.200 C 65.600 184.980,65.828 184.800,66.107 184.800 C 66.481 184.800,66.605 183.896,66.577 181.381 C 66.546 178.664,66.668 177.885,67.169 177.588 C 67.726 177.258,67.730 177.168,67.200 176.813 C 66.778 176.531,66.752 176.410,67.113 176.406 C 67.394 176.403,67.729 176.670,67.855 177.000 C 68.234 177.986,69.200 177.698,69.200 176.600 C 69.200 176.050,69.380 175.600,69.600 175.600 C 69.820 175.600,70.000 175.887,70.000 176.238 C 70.000 176.941,74.061 176.675,74.333 175.953 C 74.532 175.427,75.499 175.526,75.767 176.100 C 75.953 176.500,76.047 176.500,76.233 176.100 C 76.411 175.719,78.878 175.600,86.567 175.600 L 96.667 175.600 96.667 173.365 C 96.667 171.875,96.856 171.008,97.233 170.765 C 97.718 170.453,97.713 170.341,97.200 169.993 C 96.676 169.637,96.689 169.533,97.300 169.173 C 97.685 168.946,97.997 168.544,97.994 168.280 C 97.990 167.957,97.875 167.978,97.641 168.347 C 97.361 168.789,97.131 168.731,96.447 168.047 C 95.448 167.048,95.427 166.952,96.150 166.674 C 96.487 166.545,96.681 166.716,96.650 167.114 C 96.617 167.549,96.964 167.795,97.700 167.858 C 98.554 167.931,98.800 167.779,98.800 167.176 C 98.800 166.749,98.620 166.400,98.400 166.400 C 98.180 166.400,98.000 166.220,98.000 166.000 C 98.000 165.780,98.270 165.600,98.600 165.600 C 98.930 165.600,99.200 165.793,99.200 166.029 C 99.200 166.452,100.170 167.600,100.528 167.600 C 100.630 167.600,100.826 167.150,100.964 166.600 C 101.232 165.534,102.400 165.200,102.400 166.190 C 102.400 166.856,104.878 166.587,105.148 165.891 C 105.230 165.681,105.469 165.755,105.679 166.055 C 105.975 166.478,106.106 166.488,106.264 166.100 C 106.419 165.718,108.875 165.600,116.633 165.600 C 123.144 165.600,126.800 165.456,126.800 165.200 C 126.800 164.980,127.091 164.800,127.447 164.800 C 127.888 164.800,128.029 164.556,127.892 164.030 C 127.751 163.490,127.856 163.323,128.245 163.473 C 128.817 163.692,129.053 162.608,128.500 162.299 C 128.335 162.207,128.447 162.194,128.748 162.272 C 129.118 162.366,129.230 162.159,129.093 161.636 C 128.951 161.090,129.055 160.923,129.445 161.073 C 129.769 161.197,130.000 161.031,130.000 160.676 C 130.000 160.341,130.225 159.975,130.500 159.864 C 130.874 159.712,130.883 159.577,130.536 159.329 C 130.267 159.137,131.103 158.972,132.523 158.938 C 133.898 158.905,135.038 158.686,135.120 158.440 C 135.201 158.198,135.522 158.000,135.833 158.000 C 136.145 158.000,136.414 157.685,136.432 157.300 C 136.450 156.882,136.544 156.801,136.665 157.100 C 136.900 157.683,137.872 157.771,138.067 157.226 C 138.140 157.021,139.820 156.796,141.800 156.726 L 145.400 156.600 145.525 157.900 C 145.594 158.615,145.794 159.200,145.970 159.200 C 146.145 159.200,146.399 160.131,146.534 161.270 C 146.669 162.408,146.952 163.447,147.163 163.577 C 147.375 163.708,147.673 164.757,147.825 165.908 C 147.978 167.058,148.242 168.000,148.411 168.000 C 148.580 168.000,148.845 169.260,149.000 170.800 C 149.155 172.340,149.443 173.600,149.641 173.600 C 149.852 173.600,150.000 199.202,150.000 235.600 C 150.000 270.044,149.847 297.600,149.655 297.600 C 149.466 297.600,149.190 298.780,149.042 300.223 L 148.773 302.845 150.539 304.562 C 151.510 305.506,152.597 306.390,152.953 306.526 C 153.309 306.663,153.600 306.945,153.600 307.152 C 153.600 307.360,154.320 307.651,155.200 307.800 C 156.080 307.949,156.800 308.234,156.800 308.435 C 156.800 308.636,157.256 308.800,157.813 308.800 C 158.369 308.800,158.929 309.070,159.055 309.400 C 159.182 309.730,159.545 310.000,159.862 310.000 C 160.550 310.000,162.400 311.907,162.400 312.616 C 162.400 312.890,162.670 313.218,163.000 313.345 C 163.330 313.471,163.600 314.031,163.600 314.587 C 163.600 315.314,163.814 315.600,164.357 315.600 C 164.774 315.600,165.218 315.870,165.345 316.200 C 165.471 316.530,166.031 316.800,166.587 316.800 C 167.144 316.800,167.600 316.964,167.600 317.165 C 167.600 317.366,168.320 317.651,169.200 317.800 C 170.080 317.949,170.800 318.234,170.800 318.435 C 170.800 318.636,171.076 318.800,171.413 318.800 C 171.749 318.800,172.129 319.070,172.255 319.400 C 172.382 319.730,172.654 320.000,172.860 320.000 C 173.213 320.000,173.682 320.331,174.985 321.500 C 175.292 321.775,175.673 322.000,175.831 322.000 C 176.274 322.000,178.800 324.705,178.800 325.180 C 178.800 325.411,179.070 325.600,179.400 325.600 C 179.730 325.600,180.000 325.777,180.000 325.992 C 180.000 326.208,180.437 326.494,180.971 326.628 C 181.505 326.763,182.039 327.126,182.159 327.436 C 182.278 327.746,182.636 328.000,182.954 328.000 C 183.273 328.000,183.597 328.191,183.675 328.424 C 183.862 328.986,186.402 329.044,186.742 328.494 C 186.888 328.257,187.501 327.940,188.104 327.788 C 188.707 327.637,189.200 327.353,189.200 327.157 C 189.200 326.960,189.566 326.800,190.013 326.800 C 190.459 326.800,190.929 326.530,191.055 326.200 C 191.182 325.870,191.459 325.600,191.671 325.600 C 192.181 325.600,192.980 324.772,193.310 323.900 C 193.456 323.515,193.937 323.200,194.380 323.200 C 194.898 323.200,195.271 322.855,195.428 322.229 C 195.563 321.695,195.926 321.161,196.236 321.041 C 196.546 320.922,196.800 320.459,196.800 320.013 C 196.800 319.566,196.980 319.200,197.200 319.200 C 197.420 319.200,197.600 318.924,197.600 318.587 C 197.600 318.251,197.865 317.873,198.189 317.749 C 198.513 317.624,198.893 316.910,199.034 316.161 C 199.174 315.413,199.449 314.800,199.645 314.800 C 199.840 314.800,200.000 314.530,200.000 314.200 C 200.000 313.870,200.180 313.600,200.400 313.600 C 200.620 313.600,200.800 313.393,200.800 313.140 C 200.800 312.888,201.430 312.069,202.200 311.321 C 202.970 310.573,203.600 309.790,203.600 309.581 C 203.600 309.371,203.897 309.200,204.260 309.200 C 205.333 309.200,207.629 306.531,207.879 304.993 C 208.003 304.227,208.247 303.600,208.421 303.600 C 208.594 303.600,208.855 303.060,209.000 302.400 C 209.145 301.740,209.429 301.200,209.632 301.200 C 209.834 301.200,210.000 301.006,210.000 300.768 C 210.000 300.027,213.442 296.855,214.548 296.577 C 215.220 296.409,215.600 296.040,215.600 295.557 C 215.600 295.140,215.772 294.800,215.982 294.800 C 216.192 294.800,216.482 294.170,216.626 293.400 C 216.771 292.630,217.041 292.000,217.226 292.000 C 217.412 292.000,217.682 291.370,217.826 290.600 C 217.971 289.830,218.249 289.200,218.445 289.200 C 218.640 289.200,218.800 288.924,218.800 288.587 C 218.800 288.251,219.070 287.871,219.400 287.745 C 219.730 287.618,220.000 287.264,220.000 286.957 C 220.000 286.651,220.168 286.400,220.373 286.400 C 220.578 286.400,220.873 286.001,221.027 285.514 C 221.349 284.502,224.518 281.200,225.168 281.200 C 225.406 281.200,225.600 280.930,225.600 280.600 C 225.600 280.270,225.777 280.000,225.992 280.000 C 226.208 280.000,226.494 279.563,226.628 279.029 C 226.763 278.495,227.126 277.961,227.436 277.841 C 227.746 277.722,228.000 277.349,228.000 277.013 C 228.000 276.676,228.160 276.400,228.355 276.400 C 228.551 276.400,228.829 275.770,228.974 275.000 C 229.118 274.230,229.408 273.600,229.618 273.600 C 229.828 273.600,230.000 273.330,230.000 273.000 C 230.000 272.670,230.180 272.400,230.400 272.400 C 230.620 272.400,230.800 272.124,230.800 271.787 C 230.800 271.451,231.063 271.074,231.385 270.950 C 231.706 270.827,232.078 270.383,232.211 269.964 C 232.344 269.545,232.891 269.092,233.427 268.958 C 233.962 268.823,234.400 268.572,234.400 268.400 C 234.400 268.228,234.847 267.974,235.394 267.837 C 236.007 267.683,236.483 267.207,236.637 266.594 C 236.774 266.047,237.045 265.600,237.239 265.600 C 237.432 265.600,237.706 264.880,237.846 264.000 C 237.987 263.120,238.259 262.400,238.451 262.400 C 238.643 262.400,238.800 262.053,238.800 261.629 C 238.800 261.204,239.070 260.587,239.400 260.257 C 239.730 259.927,240.000 259.540,240.000 259.397 C 240.000 259.078,243.448 255.600,243.764 255.600 C 244.239 255.600,245.600 254.200,245.600 253.711 C 245.600 253.430,245.766 253.200,245.968 253.200 C 246.171 253.200,246.455 252.660,246.600 252.000 C 246.745 251.340,247.009 250.800,247.187 250.800 C 247.365 250.800,247.629 250.170,247.774 249.400 C 247.918 248.630,248.208 248.000,248.418 248.000 C 248.628 248.000,248.800 247.724,248.800 247.387 C 248.800 247.051,249.070 246.671,249.400 246.545 C 249.730 246.418,250.000 245.974,250.000 245.557 C 250.000 245.141,250.180 244.800,250.400 244.800 C 250.620 244.800,250.800 244.596,250.800 244.347 C 250.800 243.881,254.555 240.000,255.006 240.000 C 255.397 240.000,256.217 239.073,256.510 238.300 C 256.656 237.915,256.958 237.600,257.183 237.600 C 257.407 237.600,257.706 236.880,257.846 236.000 C 257.987 235.120,258.233 234.400,258.393 234.400 C 258.553 234.400,258.798 233.186,258.936 231.702 C 259.075 230.218,259.371 228.943,259.594 228.869 C 259.817 228.794,260.000 228.223,260.000 227.600 C 260.000 226.977,260.197 226.401,260.439 226.320 C 260.689 226.237,260.971 224.674,261.095 222.687 C 261.215 220.769,261.467 219.200,261.656 219.200 C 261.845 219.200,262.000 218.570,262.000 217.800 C 262.000 217.030,261.820 216.400,261.600 216.400 C 261.336 216.400,261.200 202.472,261.200 175.416 C 261.200 138.655,261.135 134.378,260.572 133.916 C 260.226 133.632,259.646 133.085,259.283 132.700 C 258.920 132.315,258.392 132.000,258.111 132.000 C 257.830 132.000,257.600 131.832,257.600 131.627 C 257.600 131.422,257.195 131.128,256.700 130.973 C 256.205 130.819,255.668 130.491,255.506 130.246 C 255.292 129.922,255.211 129.925,255.206 130.258 C 255.202 130.540,253.967 130.826,252.000 131.000 C 250.240 131.156,248.800 131.432,248.800 131.613 C 248.800 131.794,247.810 132.066,246.600 132.217 C 245.390 132.368,244.400 132.649,244.400 132.841 C 244.400 133.033,243.680 133.306,242.800 133.446 C 241.920 133.587,241.200 133.840,241.200 134.008 C 241.200 134.176,240.750 134.426,240.200 134.564 C 239.650 134.702,239.200 134.992,239.200 135.208 C 239.200 135.423,238.930 135.600,238.600 135.600 C 238.270 135.600,238.000 135.766,238.000 135.968 C 238.000 136.171,237.460 136.455,236.800 136.600 C 236.140 136.745,235.600 137.021,235.600 137.214 C 235.600 137.406,234.925 137.688,234.100 137.840 C 233.275 137.991,232.496 138.274,232.370 138.468 C 232.243 138.662,231.208 138.931,230.070 139.066 C 228.931 139.201,228.000 139.466,228.000 139.656 C 228.000 139.845,227.370 140.000,226.600 140.000 C 225.830 140.000,225.200 140.161,225.200 140.358 C 225.200 140.555,223.760 140.844,222.000 141.000 C 220.240 141.156,218.800 141.424,218.800 141.596 C 218.800 141.767,217.810 142.032,216.600 142.183 C 215.390 142.334,214.400 142.602,214.400 142.778 C 214.400 142.954,213.680 143.213,212.800 143.354 C 211.920 143.494,211.200 143.773,211.200 143.973 C 211.200 144.173,210.660 144.455,210.000 144.600 C 209.340 144.745,208.800 145.029,208.800 145.232 C 208.800 145.434,208.530 145.600,208.200 145.600 C 207.870 145.600,207.600 145.777,207.600 145.992 C 207.600 146.208,207.150 146.498,206.600 146.636 C 206.050 146.774,205.600 147.027,205.600 147.198 C 205.600 147.369,204.790 147.631,203.800 147.779 C 202.810 147.928,202.000 148.205,202.000 148.396 C 202.000 148.586,201.010 148.866,199.800 149.017 C 198.590 149.168,197.600 149.451,197.600 149.646 C 197.600 149.841,196.880 150.000,196.000 150.000 C 195.120 150.000,194.400 150.161,194.400 150.358 C 194.400 150.555,192.960 150.844,191.200 151.000 C 189.440 151.156,188.000 151.424,188.000 151.596 C 188.000 151.767,187.010 152.032,185.800 152.183 C 184.590 152.334,183.600 152.605,183.600 152.784 C 183.600 152.964,182.970 153.229,182.200 153.374 C 181.430 153.518,180.800 153.808,180.800 154.018 C 180.800 154.228,180.434 154.400,179.987 154.400 C 179.541 154.400,179.071 154.670,178.945 155.000 C 178.818 155.330,178.464 155.600,178.157 155.600 C 177.851 155.600,177.600 155.766,177.600 155.968 C 177.600 156.171,177.060 156.455,176.400 156.600 C 175.740 156.745,175.200 157.013,175.200 157.197 C 175.200 157.380,174.480 157.651,173.600 157.800 C 172.720 157.949,172.000 158.214,172.000 158.389 C 172.000 158.564,170.830 158.832,169.400 158.985 C 167.970 159.138,166.800 159.429,166.800 159.632 C 166.800 159.834,166.080 160.000,165.200 160.000 C 164.320 160.000,163.600 160.159,163.600 160.353 C 163.600 160.547,162.070 160.833,160.200 160.989 C 158.330 161.144,156.800 161.436,156.800 161.636 C 156.800 162.168,155.633 162.081,154.985 161.500 C 153.843 160.475,153.228 160.000,153.047 160.000 C 152.944 160.000,151.750 158.917,150.393 157.593 L 147.926 155.187 147.707 142.693 C 147.587 135.822,147.331 130.098,147.138 129.973 C 146.466 129.536,146.533 106.019,147.207 105.550 C 147.655 105.240,147.677 105.089,147.300 104.936 C 146.706 104.695,146.624 103.600,147.200 103.600 C 147.661 103.600,147.751 101.351,147.300 101.099 C 147.135 101.007,147.245 100.994,147.544 101.070 C 147.929 101.168,148.023 100.943,147.863 100.305 C 147.600 99.248,149.275 97.352,150.049 97.830 C 150.316 97.995,150.776 97.792,151.107 97.361 C 151.556 96.777,151.739 96.727,151.894 97.145 C 152.040 97.538,152.177 97.562,152.382 97.230 C 152.569 96.927,155.027 96.684,159.533 96.522 C 163.310 96.386,166.400 96.123,166.400 95.938 C 166.400 95.752,167.210 95.600,168.200 95.600 C 169.213 95.600,170.000 95.413,170.000 95.171 C 170.000 94.936,170.272 94.471,170.604 94.139 C 170.936 93.807,171.104 93.368,170.978 93.164 C 170.610 92.568,171.201 91.200,171.827 91.200 C 172.142 91.200,172.400 90.930,172.400 90.600 C 172.400 90.270,172.580 90.000,172.800 90.000 C 173.020 90.000,173.221 89.685,173.246 89.300 C 173.291 88.633,173.302 88.633,173.476 89.300 C 173.746 90.335,174.400 90.150,174.400 89.038 C 174.400 88.179,174.628 88.044,176.500 87.789 C 177.655 87.632,178.728 87.300,178.885 87.052 C 179.077 86.748,181.861 86.554,187.385 86.459 C 191.903 86.381,195.600 86.156,195.600 85.959 C 195.600 85.762,195.793 85.600,196.029 85.600 C 196.839 85.600,197.470 84.585,197.693 82.922 C 197.900 81.380,198.119 80.955,199.500 79.415 C 199.775 79.108,200.000 78.676,200.000 78.456 C 200.000 77.894,201.425 77.503,202.500 77.769 C 202.995 77.892,203.175 77.889,202.900 77.763 C 201.504 77.122,203.058 76.867,210.000 76.600 C 214.180 76.439,217.600 76.148,217.600 75.954 C 217.600 75.759,218.301 75.600,219.157 75.600 C 220.172 75.600,220.795 75.391,220.945 75.000 C 221.085 74.635,220.945 74.400,220.587 74.400 C 220.264 74.400,220.000 74.220,220.000 74.000 C 220.000 73.780,220.463 73.600,221.029 73.600 C 221.977 73.600,222.007 73.550,221.409 72.951 C 221.052 72.595,220.814 72.025,220.880 71.685 C 221.043 70.846,222.000 70.574,222.000 71.367 C 222.000 71.715,221.790 72.000,221.533 72.000 C 221.277 72.000,221.189 72.122,221.338 72.271 C 221.690 72.624,223.024 71.185,223.378 70.069 C 223.542 69.554,223.984 69.200,224.464 69.200 C 224.915 69.200,225.360 68.873,225.467 68.464 C 225.606 67.935,226.066 67.712,227.101 67.673 C 227.893 67.643,228.660 67.426,228.806 67.191 C 228.972 66.921,232.103 66.677,237.235 66.533 C 241.726 66.407,245.460 66.146,245.533 65.952 C 245.607 65.758,246.102 65.600,246.633 65.600 C 247.165 65.600,247.623 65.375,247.651 65.100 C 247.679 64.825,247.746 64.158,247.800 63.617 C 247.855 63.076,248.102 62.566,248.349 62.484 C 248.597 62.401,248.800 62.001,248.800 61.595 C 248.800 61.189,249.099 60.558,249.465 60.192 C 250.029 59.628,250.044 59.468,249.565 59.137 C 249.146 58.848,249.220 58.809,249.850 58.985 C 250.483 59.162,250.755 59.015,250.913 58.411 C 251.067 57.823,251.456 57.600,252.329 57.600 C 252.991 57.600,253.595 57.416,253.670 57.191 C 253.751 56.946,256.603 56.689,260.803 56.548 C 264.651 56.420,267.860 56.154,267.933 55.957 C 268.007 55.761,268.950 55.600,270.029 55.600 C 272.516 55.600,273.650 54.749,273.325 53.124 C 273.138 52.188,273.213 52.030,273.749 52.236 C 274.184 52.403,274.400 52.272,274.400 51.843 C 274.400 51.186,274.998 50.959,275.301 51.500 C 275.393 51.665,275.416 51.580,275.351 51.312 C 275.287 51.043,275.496 50.561,275.817 50.240 C 276.138 49.919,276.400 49.284,276.400 48.829 C 276.400 48.049,276.964 47.796,278.305 47.971 C 278.583 48.008,278.918 47.759,279.048 47.419 C 279.332 46.679,281.048 46.590,281.336 47.300 C 281.491 47.681,281.635 47.663,281.940 47.224 C 282.253 46.774,283.772 46.614,288.871 46.492 C 292.462 46.406,295.460 46.170,295.533 45.968 C 295.607 45.766,296.192 45.600,296.833 45.600 C 297.863 45.600,298.000 45.459,298.000 44.400 C 298.000 43.740,298.180 43.200,298.400 43.200 C 298.862 43.200,298.950 41.350,298.500 41.099 C 298.335 41.007,298.410 40.980,298.668 41.041 C 299.308 41.191,301.005 39.667,300.609 39.297 C 300.434 39.134,300.210 39.225,300.112 39.500 C 300.014 39.775,299.663 40.000,299.333 40.000 C 298.420 40.000,298.941 39.018,299.931 38.872 C 300.409 38.802,300.800 38.593,300.800 38.407 C 300.800 38.222,301.565 37.942,302.500 37.786 C 303.435 37.630,304.295 37.352,304.412 37.170 C 304.529 36.987,307.769 36.721,311.612 36.579 C 315.455 36.436,318.660 36.158,318.733 35.960 C 318.807 35.762,319.596 35.600,320.487 35.600 C 321.684 35.600,322.341 35.349,322.998 34.640 C 323.487 34.112,324.228 33.616,324.644 33.537 C 325.219 33.428,325.429 32.986,325.523 31.697 C 325.607 30.542,325.830 30.000,326.223 30.000 C 326.571 30.000,326.800 29.605,326.800 29.005 C 326.800 28.153,327.031 27.973,328.400 27.754 C 329.280 27.613,330.000 27.296,330.001 27.049 C 330.001 26.741,332.045 26.557,336.500 26.463 C 340.338 26.382,343.102 26.159,343.251 25.918 C 343.407 25.665,343.586 25.717,343.721 26.055 C 343.900 26.502,344.016 26.492,344.370 26.000 C 344.752 25.467,344.844 25.467,345.194 26.000 C 345.457 26.401,345.590 26.434,345.594 26.100 C 345.597 25.825,346.050 25.600,346.600 25.600 C 347.503 25.600,347.604 25.435,347.645 23.900 C 347.753 19.794,347.844 19.594,350.683 17.206 C 351.304 16.684,352.400 16.680,352.400 17.200 C 352.400 17.420,352.580 17.600,352.800 17.600 C 353.020 17.600,353.200 17.346,353.200 17.036 C 353.200 16.606,353.884 16.466,356.097 16.445 C 357.691 16.431,359.055 16.234,359.130 16.009 C 359.306 15.483,372.280 15.450,372.467 15.975 M132.804 86.697 C 131.630 87.157,127.136 91.717,126.689 92.900 C 126.544 93.285,126.497 93.600,126.584 93.600 C 126.800 93.600,133.600 86.787,133.600 86.571 C 133.600 86.379,133.622 86.376,132.804 86.697 M122.804 96.697 C 121.630 97.157,117.136 101.717,116.689 102.900 C 116.544 103.285,116.497 103.600,116.584 103.600 C 116.800 103.600,123.600 96.787,123.600 96.571 C 123.600 96.379,123.622 96.376,122.804 96.697 M114.900 126.665 C 114.625 126.776,114.400 127.122,114.400 127.433 C 114.400 127.745,114.240 128.000,114.045 128.000 C 113.850 128.000,113.563 128.855,113.406 129.900 C 113.250 130.945,112.921 131.924,112.676 132.076 C 112.391 132.253,112.172 134.682,112.066 138.854 C 111.944 143.661,111.757 145.500,111.350 145.907 C 111.048 146.210,110.800 146.702,110.800 147.002 C 110.800 147.301,110.449 147.657,110.020 147.794 C 109.592 147.930,109.118 148.428,108.968 148.902 C 108.817 149.375,108.424 150.033,108.094 150.363 C 107.561 150.896,107.529 150.854,107.801 149.981 C 107.970 149.442,108.249 148.908,108.422 148.796 C 108.595 148.684,108.860 148.099,109.012 147.496 C 109.163 146.893,109.447 146.400,109.643 146.400 C 109.840 146.400,110.000 143.790,110.000 140.600 C 110.000 137.252,110.159 134.800,110.375 134.800 C 110.582 134.800,110.872 133.990,111.021 133.000 C 111.169 132.010,111.436 131.200,111.614 131.200 C 111.791 131.200,112.055 130.660,112.200 130.000 C 112.345 129.340,112.629 128.800,112.832 128.800 C 113.034 128.800,113.200 128.543,113.200 128.229 C 113.200 127.523,114.291 126.389,114.929 126.432 C 115.260 126.454,115.252 126.523,114.900 126.665 M36.680 187.336 C 36.348 188.201,37.106 189.146,37.563 188.436 C 37.951 187.834,37.721 186.800,37.200 186.800 C 37.027 186.800,36.793 187.041,36.680 187.336 M390.964 449.289 C 391.117 451.319,391.393 453.074,391.577 453.189 C 391.761 453.305,391.978 456.782,392.059 460.916 C 392.156 465.879,392.358 468.529,392.654 468.716 C 392.900 468.872,393.230 469.765,393.386 470.700 C 393.542 471.635,393.834 472.400,394.035 472.400 C 394.236 472.400,394.400 472.655,394.400 472.967 C 394.400 473.278,394.625 473.614,394.900 473.712 C 395.175 473.810,395.282 474.018,395.138 474.174 C 394.796 474.544,393.200 473.174,393.200 472.511 C 393.200 472.230,393.028 472.000,392.818 472.000 C 392.608 472.000,392.318 471.370,392.174 470.600 C 392.029 469.830,391.762 469.200,391.580 469.200 C 391.398 469.200,391.128 468.390,390.979 467.400 C 390.831 466.410,390.550 465.600,390.355 465.600 C 390.158 465.600,390.000 461.146,390.000 455.600 C 390.000 445.487,390.453 442.522,390.964 449.289 M305.600 460.200 C 305.600 465.495,305.505 465.390,308.045 462.900 C 310.775 460.223,310.706 460.292,312.679 458.248 C 313.661 457.232,314.629 456.400,314.832 456.400 C 315.034 456.400,315.200 456.220,315.200 456.000 C 315.200 455.756,313.333 455.600,310.400 455.600 L 305.600 455.600 305.600 460.200 M285.600 500.200 C 285.600 505.495,285.505 505.390,288.045 502.900 C 290.775 500.223,290.706 500.292,292.679 498.248 C 293.661 497.232,294.629 496.400,294.832 496.400 C 295.034 496.400,295.200 496.220,295.200 496.000 C 295.200 495.756,293.333 495.600,290.400 495.600 L 285.600 495.600 285.600 500.200 \\\"\\r\\n                stroke=\\\"none\\\"\\r\\n                fill=\\\"#94cc54\\\"\\r\\n                fill-rule=\\\"evenodd\\\"\\r\\n              ></path>\\r\\n              <path\\r\\n                id=\\\"path1\\\"\\r\\n                d=\\\"M140.300 156.710 C 139.035 156.782,138.000 157.011,138.000 157.220 C 138.000 157.781,136.900 157.682,136.665 157.100 C 136.544 156.801,136.450 156.882,136.432 157.300 C 136.414 157.685,136.145 158.000,135.833 158.000 C 135.522 158.000,135.201 158.198,135.120 158.440 C 135.038 158.686,133.898 158.905,132.523 158.938 C 131.103 158.972,130.267 159.137,130.536 159.329 C 130.883 159.577,130.874 159.712,130.500 159.864 C 130.225 159.975,130.000 160.341,130.000 160.676 C 130.000 161.031,129.769 161.197,129.445 161.073 C 129.055 160.923,128.951 161.090,129.093 161.636 C 129.230 162.159,129.118 162.366,128.748 162.272 C 128.447 162.194,128.335 162.207,128.500 162.299 C 129.053 162.608,128.817 163.692,128.245 163.473 C 127.856 163.323,127.751 163.490,127.892 164.030 C 128.029 164.556,127.888 164.800,127.447 164.800 C 127.091 164.800,126.800 164.980,126.800 165.200 C 126.800 165.456,123.144 165.600,116.633 165.600 C 108.875 165.600,106.419 165.718,106.264 166.100 C 106.106 166.488,105.975 166.478,105.679 166.055 C 105.469 165.755,105.230 165.681,105.148 165.891 C 104.878 166.587,102.400 166.856,102.400 166.190 C 102.400 165.200,101.232 165.534,100.964 166.600 C 100.826 167.150,100.630 167.600,100.528 167.600 C 100.170 167.600,99.200 166.452,99.200 166.029 C 99.200 165.793,98.930 165.600,98.600 165.600 C 98.270 165.600,98.000 165.780,98.000 166.000 C 98.000 166.220,98.180 166.400,98.400 166.400 C 98.620 166.400,98.800 166.749,98.800 167.176 C 98.800 167.779,98.554 167.931,97.700 167.858 C 96.964 167.795,96.617 167.549,96.650 167.114 C 96.681 166.716,96.487 166.545,96.150 166.674 C 95.427 166.952,95.448 167.048,96.447 168.047 C 97.131 168.731,97.361 168.789,97.641 168.347 C 97.875 167.978,97.990 167.957,97.994 168.280 C 97.997 168.544,97.685 168.946,97.300 169.173 C 96.689 169.533,96.676 169.637,97.200 169.993 C 97.713 170.341,97.718 170.453,97.233 170.765 C 96.856 171.008,96.667 171.875,96.667 173.365 L 96.667 175.600 86.567 175.600 C 78.878 175.600,76.411 175.719,76.233 176.100 C 76.047 176.500,75.953 176.500,75.767 176.100 C 75.499 175.526,74.532 175.427,74.333 175.953 C 74.061 176.675,70.000 176.941,70.000 176.238 C 70.000 175.887,69.820 175.600,69.600 175.600 C 69.380 175.600,69.200 176.050,69.200 176.600 C 69.200 177.698,68.234 177.986,67.855 177.000 C 67.729 176.670,67.394 176.403,67.113 176.406 C 66.752 176.410,66.778 176.531,67.200 176.813 C 67.730 177.168,67.726 177.258,67.169 177.588 C 66.668 177.885,66.546 178.664,66.577 181.381 C 66.605 183.896,66.481 184.800,66.107 184.800 C 65.828 184.800,65.600 184.980,65.600 185.200 C 65.600 185.456,62.144 185.600,56.033 185.600 C 48.771 185.600,46.410 185.720,46.233 186.100 C 46.047 186.500,45.953 186.500,45.767 186.100 C 45.489 185.506,44.400 185.426,44.400 186.000 C 44.400 186.582,42.105 186.491,41.857 185.900 C 41.706 185.542,41.521 185.599,41.203 186.100 C 40.662 186.956,39.200 187.029,39.200 186.200 C 39.200 185.870,38.930 185.600,38.600 185.600 C 38.270 185.600,38.000 185.780,38.000 186.000 C 38.000 186.220,38.180 186.400,38.400 186.400 C 38.620 186.400,38.800 186.670,38.800 187.000 C 38.800 187.797,38.405 187.759,37.772 186.900 C 37.285 186.240,37.212 186.247,36.477 187.031 C 35.704 187.855,35.705 187.867,36.631 188.631 C 37.841 189.630,37.833 190.000,36.600 190.000 C 36.050 190.000,35.600 190.180,35.600 190.400 C 35.600 190.620,35.864 190.800,36.187 190.800 C 36.828 190.800,36.591 191.944,35.829 192.530 C 35.531 192.760,35.553 192.923,35.900 193.064 C 36.493 193.304,36.579 194.800,36.000 194.800 C 35.734 194.800,35.600 248.667,35.600 355.600 C 35.600 462.533,35.734 516.400,36.000 516.400 C 36.226 516.400,36.403 517.571,36.407 519.100 C 36.414 522.028,37.363 523.600,39.123 523.600 C 39.569 523.600,39.996 523.789,40.073 524.019 C 40.248 524.543,54.049 524.567,54.375 524.044 C 54.499 523.845,56.276 523.576,58.325 523.445 C 60.853 523.284,62.244 523.014,62.653 522.604 C 62.985 522.272,63.514 522.000,63.829 522.000 C 64.143 522.000,64.400 521.823,64.400 521.608 C 64.400 521.392,64.844 521.104,65.386 520.968 C 65.928 520.832,66.482 520.371,66.618 519.944 C 66.760 519.495,67.366 519.067,68.054 518.929 C 68.826 518.775,69.172 518.504,69.039 518.157 C 68.833 517.620,69.549 516.675,70.493 516.236 C 70.896 516.048,70.898 515.952,70.500 515.767 C 69.266 515.191,70.289 514.844,74.000 514.581 C 76.200 514.425,78.000 514.140,78.000 513.948 C 78.000 513.411,79.108 513.536,79.336 514.100 C 79.481 514.456,79.634 514.473,79.870 514.160 C 80.062 513.903,82.350 513.620,85.363 513.481 C 88.401 513.341,90.637 513.064,90.795 512.807 C 90.944 512.568,91.769 512.257,92.629 512.118 C 94.348 511.839,94.958 511.393,95.362 510.121 C 95.508 509.658,96.094 509.163,96.663 509.020 C 97.882 508.714,98.800 507.885,98.800 507.090 C 98.800 505.474,100.236 504.759,103.968 504.517 C 106.198 504.372,107.602 504.111,107.606 503.841 C 107.609 503.598,107.789 503.670,108.006 504.000 C 108.277 504.413,108.494 504.463,108.700 504.161 C 108.880 503.897,111.312 503.618,114.774 503.465 C 117.949 503.324,120.649 503.054,120.774 502.866 C 120.898 502.678,121.705 502.412,122.568 502.276 C 123.430 502.140,124.240 501.866,124.368 501.668 C 124.495 501.470,125.050 501.168,125.600 500.997 C 126.150 500.826,126.870 500.379,127.200 500.005 C 127.530 499.631,128.070 499.221,128.400 499.094 C 128.769 498.952,128.807 498.851,128.500 498.832 C 127.785 498.786,127.879 498.000,128.600 498.000 C 128.930 498.000,129.200 497.730,129.200 497.400 C 129.200 497.070,129.380 496.800,129.600 496.800 C 129.820 496.800,130.000 496.376,130.000 495.857 C 130.000 494.873,132.084 494.400,136.425 494.400 C 137.257 494.400,138.024 494.176,138.136 493.900 C 138.289 493.524,138.444 493.548,138.763 494.000 C 139.051 494.407,139.190 494.439,139.194 494.100 C 139.198 493.796,139.750 493.600,140.600 493.600 C 141.450 493.600,142.002 493.796,142.006 494.100 C 142.011 494.458,142.095 494.471,142.306 494.146 C 142.477 493.883,144.362 493.593,146.797 493.455 C 149.106 493.324,151.056 493.033,151.131 492.808 C 151.205 492.584,151.779 492.400,152.405 492.400 C 153.031 492.400,153.813 492.130,154.143 491.800 C 154.473 491.470,154.923 491.200,155.143 491.200 C 155.363 491.200,155.826 490.917,156.171 490.571 C 156.517 490.226,156.800 490.136,156.800 490.371 C 156.800 490.607,156.980 490.800,157.200 490.800 C 157.420 490.800,157.600 490.440,157.600 490.000 C 157.600 489.471,157.867 489.200,158.387 489.200 C 158.921 489.200,159.101 489.008,158.946 488.603 C 158.815 488.263,158.992 487.901,159.358 487.761 C 159.711 487.625,160.000 487.161,160.000 486.729 C 160.000 485.170,161.019 484.734,165.210 484.504 C 167.404 484.383,169.200 484.156,169.200 483.999 C 169.200 483.843,172.011 483.620,175.447 483.505 C 179.055 483.384,181.801 483.121,181.948 482.884 C 182.088 482.658,182.917 482.339,183.791 482.175 C 184.665 482.011,185.622 481.635,185.919 481.339 C 186.215 481.042,186.702 480.800,187.002 480.800 C 187.301 480.800,187.660 480.440,187.800 480.000 C 188.057 479.192,188.593 478.948,188.901 479.500 C 188.993 479.665,189.016 479.580,188.951 479.312 C 188.887 479.043,189.096 478.561,189.417 478.240 C 189.738 477.919,190.000 477.451,190.000 477.200 C 190.000 476.949,190.254 476.489,190.564 476.179 C 190.875 475.868,191.192 475.424,191.269 475.192 C 191.347 474.959,192.758 474.659,194.405 474.524 C 196.052 474.390,197.532 474.082,197.694 473.840 C 197.897 473.536,197.990 473.554,197.994 473.900 C 198.001 474.460,199.059 474.591,199.267 474.058 C 199.340 473.869,202.182 473.596,205.581 473.449 C 208.981 473.303,211.861 473.035,211.981 472.854 C 212.102 472.672,212.905 472.412,213.768 472.276 C 214.630 472.140,215.440 471.868,215.568 471.672 C 215.695 471.476,216.456 471.195,217.257 471.048 C 218.530 470.814,218.748 470.603,218.976 469.390 C 219.119 468.625,219.395 468.000,219.590 468.000 C 220.264 468.000,221.200 466.738,221.200 465.828 C 221.200 464.813,223.348 464.400,228.625 464.400 C 230.241 464.400,231.216 464.222,231.367 463.900 C 231.553 463.500,231.647 463.500,231.833 463.900 C 232.095 464.461,233.200 464.589,233.200 464.058 C 233.200 463.871,235.491 463.590,238.291 463.434 C 241.092 463.278,243.477 463.000,243.591 462.815 C 243.706 462.630,244.694 462.344,245.787 462.181 C 246.880 462.017,248.018 461.639,248.316 461.342 C 248.613 461.044,249.114 460.800,249.429 460.800 C 249.743 460.800,250.000 460.620,250.000 460.400 C 250.000 460.180,250.270 460.000,250.600 460.000 C 250.966 460.000,251.200 459.627,251.200 459.043 C 251.200 458.516,251.470 457.982,251.800 457.855 C 252.170 457.713,252.400 457.105,252.400 456.268 C 252.400 454.716,253.562 454.411,259.500 454.403 C 261.095 454.402,262.400 454.228,262.400 454.018 C 262.400 453.808,263.030 453.518,263.800 453.374 C 264.602 453.223,265.200 452.874,265.200 452.555 C 265.200 452.250,265.560 452.000,266.000 452.000 C 266.440 452.000,266.800 451.820,266.800 451.600 C 266.800 451.380,267.057 451.200,267.371 451.200 C 267.686 451.200,268.226 450.917,268.571 450.571 C 268.917 450.226,269.200 450.136,269.200 450.371 C 269.200 450.607,269.380 450.800,269.600 450.800 C 269.820 450.800,270.000 450.440,270.000 450.000 C 270.000 449.112,270.610 448.921,270.955 449.700 C 271.104 450.036,271.165 450.003,271.141 449.600 C 271.056 448.179,271.236 447.600,271.761 447.600 C 272.182 447.600,272.317 446.993,272.306 445.157 C 272.296 443.497,272.468 442.602,272.845 442.364 C 273.244 442.111,273.260 442.011,272.900 442.006 C 272.251 441.998,272.251 440.936,272.900 440.633 C 273.300 440.447,273.300 440.353,272.900 440.167 C 272.309 439.891,272.217 436.800,272.800 436.800 C 273.314 436.800,273.326 434.910,272.813 434.733 C 272.598 434.659,272.365 432.142,272.288 429.070 C 272.182 424.832,272.016 423.446,271.575 423.139 C 271.137 422.834,271.119 422.691,271.500 422.536 C 271.780 422.422,272.000 421.645,272.000 420.767 C 272.000 419.783,271.814 419.198,271.500 419.194 C 271.161 419.190,271.193 419.051,271.600 418.763 C 272.052 418.444,272.076 418.289,271.700 418.136 C 271.421 418.023,271.200 417.249,271.200 416.387 L 271.200 414.840 268.800 414.568 C 267.480 414.419,266.400 414.140,266.400 413.948 C 266.400 413.757,265.963 413.600,265.429 413.600 C 264.894 413.600,264.200 413.343,263.886 413.029 C 263.572 412.715,262.614 412.329,261.757 412.171 C 260.901 412.014,260.072 411.686,259.915 411.442 C 259.529 410.844,251.246 410.879,250.873 411.481 C 250.723 411.723,249.745 412.050,248.700 412.206 C 247.655 412.363,246.800 412.631,246.800 412.802 C 246.800 412.973,246.347 413.227,245.794 413.366 C 244.446 413.704,243.200 414.816,243.200 415.681 C 243.200 416.092,242.797 416.486,242.229 416.628 C 241.695 416.763,241.161 417.126,241.041 417.436 C 240.922 417.746,240.459 418.000,240.013 418.000 C 239.566 418.000,239.200 418.166,239.200 418.368 C 239.200 418.571,238.660 418.855,238.000 419.000 C 237.340 419.145,236.800 419.429,236.800 419.632 C 236.800 419.834,236.260 420.000,235.600 420.000 C 234.940 420.000,234.400 420.162,234.400 420.360 C 234.400 420.558,232.053 420.783,229.185 420.860 C 225.934 420.947,223.863 421.168,223.685 421.446 C 223.528 421.691,222.970 422.026,222.445 422.191 C 221.919 422.355,220.107 423.892,218.418 425.607 C 215.475 428.593,215.250 428.736,213.073 429.008 C 211.823 429.164,210.800 429.451,210.800 429.646 C 210.800 429.841,210.080 430.000,209.200 430.000 C 208.320 430.000,207.600 430.158,207.600 430.352 C 207.600 430.546,205.710 430.833,203.400 430.991 C 201.090 431.148,199.200 431.415,199.200 431.584 C 199.200 431.753,198.385 432.003,197.390 432.139 C 195.279 432.429,194.858 432.739,191.075 436.794 C 190.456 437.457,189.691 438.000,189.375 438.000 C 189.059 438.000,188.800 438.166,188.800 438.368 C 188.800 438.571,188.260 438.855,187.600 439.000 C 186.940 439.145,186.400 439.429,186.400 439.632 C 186.400 439.834,185.410 440.000,184.200 440.000 C 182.990 440.000,182.000 440.156,182.000 440.348 C 182.000 440.539,180.093 440.780,177.763 440.884 C 175.433 440.987,173.408 441.257,173.263 441.482 C 173.118 441.708,172.564 442.028,172.031 442.195 C 170.763 442.591,169.924 443.312,166.675 446.794 C 166.039 447.475,165.140 448.000,164.608 448.000 C 164.090 448.000,163.606 448.183,163.531 448.407 C 163.456 448.631,162.451 448.926,161.298 449.063 C 160.144 449.200,159.200 449.466,159.200 449.656 C 159.200 449.845,158.570 450.000,157.800 450.000 C 157.030 450.000,156.400 450.180,156.400 450.400 C 156.400 450.620,156.130 450.800,155.800 450.800 C 155.470 450.800,155.200 450.620,155.200 450.400 C 155.200 450.180,154.930 450.000,154.600 450.000 C 153.855 450.000,150.800 446.906,150.800 446.152 C 150.800 445.848,150.620 445.600,150.400 445.600 C 149.823 445.600,149.849 363.717,150.426 363.525 C 151.062 363.313,151.132 357.115,150.500 356.902 C 150.225 356.809,150.000 356.388,150.000 355.966 C 150.000 355.097,146.995 352.000,146.152 352.000 C 145.848 352.000,145.600 351.834,145.600 351.632 C 145.600 351.429,145.060 351.145,144.400 351.000 C 143.740 350.855,143.200 350.571,143.200 350.368 C 143.200 350.166,142.930 350.000,142.600 350.000 C 142.270 350.000,142.000 349.832,142.000 349.627 C 142.000 349.422,141.595 349.128,141.100 348.973 C 140.605 348.819,139.011 347.457,137.557 345.946 C 136.104 344.436,134.619 343.200,134.257 343.200 C 133.896 343.200,133.600 343.034,133.600 342.832 C 133.600 342.629,133.075 342.348,132.433 342.207 C 131.792 342.066,131.167 341.692,131.046 341.376 C 130.924 341.059,130.459 340.800,130.013 340.800 C 129.566 340.800,129.200 340.620,129.200 340.400 C 129.200 340.180,128.930 340.000,128.600 340.000 C 128.270 340.000,128.000 339.820,128.000 339.600 C 128.000 339.380,127.724 339.200,127.387 339.200 C 127.051 339.200,126.671 338.930,126.545 338.600 C 126.418 338.270,126.060 338.000,125.749 338.000 C 125.438 338.000,123.968 336.765,122.482 335.256 C 120.997 333.746,119.380 332.384,118.891 332.229 C 118.401 332.073,118.000 331.793,118.000 331.605 C 118.000 331.417,117.460 331.145,116.800 331.000 C 116.140 330.855,115.600 330.571,115.600 330.368 C 115.600 330.166,115.330 330.000,115.000 330.000 C 114.670 330.000,114.400 329.840,114.400 329.643 C 114.400 329.447,113.950 329.174,113.400 329.036 C 112.850 328.898,112.400 328.608,112.400 328.392 C 112.400 328.177,112.170 328.000,111.889 328.000 C 111.402 328.000,110.000 326.639,110.000 326.167 C 110.000 326.044,109.730 325.673,109.400 325.343 C 109.070 325.013,108.800 324.396,108.800 323.971 C 108.800 323.547,108.634 323.200,108.432 323.200 C 108.229 323.200,107.945 322.660,107.800 322.000 C 107.655 321.340,107.391 320.800,107.213 320.800 C 107.035 320.800,106.771 320.170,106.626 319.400 C 106.482 318.630,106.186 318.000,105.969 318.000 C 105.752 318.000,105.458 317.685,105.315 317.300 C 105.172 316.915,104.683 316.261,104.228 315.846 C 103.650 315.320,103.552 315.038,103.903 314.912 C 104.759 314.605,108.000 311.169,108.000 310.568 C 108.000 310.256,108.177 310.000,108.392 310.000 C 108.608 310.000,108.898 309.550,109.036 309.000 C 109.174 308.450,109.447 308.000,109.643 308.000 C 109.840 308.000,110.000 307.730,110.000 307.400 C 110.000 307.070,110.166 306.800,110.368 306.800 C 110.571 306.800,110.855 306.260,111.000 305.600 C 111.145 304.940,111.429 304.400,111.632 304.400 C 111.834 304.400,112.000 304.144,112.000 303.831 C 112.000 303.172,115.148 300.000,115.802 300.000 C 116.230 300.000,118.000 297.894,118.000 297.384 C 118.000 297.110,118.270 296.782,118.600 296.655 C 118.930 296.529,119.200 296.072,119.200 295.640 C 119.200 295.207,119.542 294.745,119.960 294.613 C 120.378 294.480,120.827 293.948,120.957 293.430 C 121.099 292.865,121.594 292.388,122.197 292.237 C 122.748 292.098,123.200 291.808,123.200 291.592 C 123.200 291.377,123.457 291.200,123.771 291.200 C 124.086 291.200,124.626 290.917,124.971 290.571 C 125.317 290.226,125.600 290.134,125.600 290.367 C 125.600 290.600,126.320 290.906,127.200 291.046 C 128.080 291.187,128.800 291.440,128.800 291.608 C 128.800 291.776,129.250 292.026,129.800 292.164 C 130.350 292.302,130.800 292.592,130.800 292.808 C 130.800 293.023,131.005 293.200,131.256 293.200 C 131.507 293.200,132.500 294.010,133.462 295.000 C 134.424 295.990,135.460 296.800,135.763 296.800 C 136.066 296.800,136.418 297.070,136.545 297.400 C 136.671 297.730,137.051 298.000,137.387 298.000 C 137.724 298.000,138.000 298.172,138.000 298.382 C 138.000 298.592,138.624 298.881,139.386 299.024 C 140.211 299.179,140.865 299.575,141.001 300.002 C 141.126 300.397,141.715 300.843,142.310 300.992 C 142.905 301.141,143.504 301.444,143.640 301.665 C 143.776 301.885,144.966 302.163,146.284 302.283 L 148.680 302.500 148.940 301.200 C 149.083 300.485,149.200 299.382,149.200 298.750 C 149.200 298.118,149.380 297.600,149.600 297.600 C 149.865 297.600,150.000 276.667,150.000 235.600 C 150.000 199.202,149.852 173.600,149.641 173.600 C 149.443 173.600,149.155 172.340,149.000 170.800 C 148.845 169.260,148.580 168.000,148.411 168.000 C 148.242 168.000,147.978 167.058,147.825 165.908 C 147.673 164.757,147.375 163.708,147.163 163.577 C 146.952 163.447,146.669 162.408,146.534 161.270 C 146.399 160.131,146.145 159.200,145.970 159.200 C 145.794 159.200,145.594 158.622,145.525 157.916 C 145.386 156.489,145.158 156.436,140.300 156.710 M37.720 187.336 C 38.052 188.201,37.294 189.146,36.837 188.436 C 36.449 187.834,36.679 186.800,37.200 186.800 C 37.373 186.800,37.607 187.041,37.720 187.336 \\\"\\r\\n                stroke=\\\"none\\\"\\r\\n                fill=\\\"#4cbbeb\\\"\\r\\n                fill-rule=\\\"evenodd\\\"\\r\\n              ></path>\\r\\n              <path\\r\\n                id=\\\"path2\\\"\\r\\n                d=\\\"M356.100 9.098 C 358.465 9.169,362.335 9.169,364.700 9.098 C 367.065 9.028,365.130 8.970,360.400 8.970 C 355.670 8.970,353.735 9.028,356.100 9.098 M348.000 9.600 C 348.000 9.820,348.720 10.000,349.600 10.000 C 350.480 10.000,351.200 9.820,351.200 9.600 C 351.200 9.380,350.480 9.200,349.600 9.200 C 348.720 9.200,348.000 9.380,348.000 9.600 M369.200 9.600 C 369.200 9.820,369.920 10.000,370.800 10.000 C 371.680 10.000,372.400 9.820,372.400 9.600 C 372.400 9.380,371.680 9.200,370.800 9.200 C 369.920 9.200,369.200 9.380,369.200 9.600 M335.200 10.362 C 335.200 10.562,334.300 10.849,333.200 11.000 C 332.100 11.151,331.200 11.424,331.200 11.606 C 331.200 11.788,330.660 12.055,330.000 12.200 C 329.340 12.345,328.800 12.610,328.800 12.788 C 328.800 12.967,328.370 13.221,327.844 13.353 C 327.318 13.485,326.792 13.844,326.674 14.151 C 326.523 14.544,326.688 14.650,327.230 14.508 C 327.653 14.397,328.000 14.165,328.000 13.991 C 328.000 13.817,328.900 13.551,330.000 13.400 C 331.100 13.249,332.000 12.976,332.000 12.794 C 332.000 12.612,333.215 12.335,334.700 12.179 C 336.185 12.022,337.495 11.747,337.611 11.568 C 337.726 11.389,339.481 11.117,341.511 10.964 C 346.818 10.563,346.052 10.000,340.200 10.000 C 337.450 10.000,335.200 10.163,335.200 10.362 M375.600 10.343 C 375.600 10.531,377.260 10.811,379.289 10.964 C 381.319 11.117,383.074 11.389,383.189 11.568 C 383.305 11.747,384.615 12.022,386.100 12.179 C 387.585 12.335,388.800 12.606,388.800 12.781 C 388.800 12.955,389.560 13.219,390.488 13.368 C 391.416 13.516,392.271 13.785,392.388 13.965 C 392.505 14.145,393.017 14.422,393.526 14.581 C 394.431 14.864,394.436 14.852,393.737 14.035 C 393.344 13.576,392.792 13.200,392.511 13.200 C 392.230 13.200,392.000 13.028,392.000 12.818 C 392.000 12.608,391.370 12.318,390.600 12.174 C 389.830 12.029,389.200 11.762,389.200 11.580 C 389.200 11.398,388.390 11.128,387.400 10.979 C 386.410 10.831,385.600 10.550,385.600 10.355 C 385.600 10.160,383.350 10.000,380.600 10.000 C 377.850 10.000,375.600 10.154,375.600 10.343 M314.125 16.205 C 313.424 16.957,312.389 17.688,311.825 17.829 C 311.261 17.971,310.800 18.231,310.800 18.408 C 310.800 18.585,310.080 18.851,309.200 19.000 C 308.320 19.149,307.600 19.434,307.600 19.635 C 307.600 19.836,306.970 20.000,306.200 20.000 C 305.430 20.000,304.800 20.169,304.800 20.375 C 304.800 20.582,303.990 20.872,303.000 21.021 C 302.010 21.169,301.200 21.436,301.200 21.614 C 301.200 21.791,300.660 22.055,300.000 22.200 C 299.340 22.345,298.800 22.610,298.800 22.788 C 298.800 22.967,298.370 23.221,297.844 23.353 C 297.318 23.485,296.792 23.844,296.674 24.151 C 296.523 24.544,296.688 24.650,297.230 24.508 C 297.653 24.397,298.000 24.165,298.000 23.991 C 298.000 23.817,298.900 23.551,300.000 23.400 C 301.100 23.249,302.000 22.983,302.000 22.809 C 302.000 22.635,302.990 22.368,304.200 22.217 C 305.410 22.066,306.400 21.786,306.400 21.596 C 306.400 21.405,307.210 21.128,308.200 20.979 C 309.190 20.831,310.000 20.550,310.000 20.355 C 310.000 20.160,310.450 20.000,311.000 20.000 C 311.550 20.000,312.000 19.831,312.000 19.625 C 312.000 19.418,312.810 19.128,313.800 18.979 C 314.790 18.831,315.600 18.558,315.600 18.373 C 315.600 18.188,316.275 17.912,317.100 17.760 C 317.925 17.609,318.709 17.317,318.842 17.112 C 318.976 16.907,319.831 16.639,320.742 16.517 C 321.654 16.395,322.400 16.138,322.400 15.947 C 322.400 15.756,323.030 15.600,323.800 15.600 C 324.570 15.600,325.200 15.420,325.200 15.200 C 325.200 14.954,323.313 14.807,320.300 14.819 L 315.400 14.838 314.125 16.205 M280.468 29.825 C 277.755 32.561,275.667 34.800,275.828 34.800 C 275.988 34.800,276.731 34.170,277.479 33.400 C 278.227 32.630,279.100 32.000,279.419 32.000 C 279.739 32.000,280.000 31.823,280.000 31.608 C 280.000 31.392,280.450 31.102,281.000 30.964 C 281.550 30.826,282.000 30.553,282.000 30.357 C 282.000 30.160,282.270 30.000,282.600 30.000 C 282.930 30.000,283.200 29.834,283.200 29.632 C 283.200 29.429,283.740 29.145,284.400 29.000 C 285.060 28.855,285.600 28.591,285.600 28.414 C 285.600 28.236,286.410 27.969,287.400 27.821 C 288.390 27.672,289.200 27.399,289.200 27.213 C 289.200 27.027,290.100 26.751,291.200 26.600 C 292.300 26.449,293.200 26.162,293.200 25.962 C 293.200 25.763,293.650 25.600,294.200 25.600 C 294.750 25.600,295.200 25.420,295.200 25.200 C 295.200 24.954,293.317 24.810,290.300 24.825 L 285.400 24.851 280.468 29.825 M250.413 39.880 C 247.152 43.169,245.768 44.802,246.413 44.601 C 246.956 44.431,247.492 44.151,247.604 43.978 C 247.716 43.805,248.301 43.540,248.904 43.388 C 249.507 43.237,250.000 42.967,250.000 42.788 C 250.000 42.610,250.540 42.345,251.200 42.200 C 251.860 42.055,252.400 41.779,252.400 41.586 C 252.400 41.394,253.030 41.118,253.800 40.974 C 254.570 40.829,255.200 40.551,255.200 40.355 C 255.200 40.160,255.830 40.000,256.600 40.000 C 257.370 40.000,258.000 39.841,258.000 39.648 C 258.000 39.454,259.710 39.167,261.800 39.010 C 263.890 38.854,265.600 38.570,265.600 38.381 C 265.600 38.191,266.275 37.912,267.100 37.760 C 267.925 37.609,268.709 37.317,268.842 37.112 C 268.976 36.907,269.831 36.639,270.742 36.517 C 271.654 36.395,272.400 36.138,272.400 35.947 C 272.400 35.756,273.030 35.600,273.800 35.600 C 274.570 35.600,275.200 35.420,275.200 35.200 C 275.200 34.943,271.650 34.809,265.300 34.825 L 255.400 34.851 250.413 39.880 M230.468 49.825 C 227.755 52.561,225.667 54.800,225.828 54.800 C 225.988 54.800,226.731 54.170,227.479 53.400 C 228.227 52.630,229.100 52.000,229.419 52.000 C 229.739 52.000,230.000 51.823,230.000 51.608 C 230.000 51.392,230.450 51.102,231.000 50.964 C 231.550 50.826,232.000 50.553,232.000 50.357 C 232.000 50.160,232.270 50.000,232.600 50.000 C 232.930 50.000,233.200 49.834,233.200 49.632 C 233.200 49.429,233.740 49.145,234.400 49.000 C 235.060 48.855,235.600 48.594,235.600 48.419 C 235.600 48.245,236.320 47.987,237.200 47.846 C 238.080 47.706,238.800 47.426,238.800 47.224 C 238.800 47.022,239.790 46.734,241.000 46.583 C 242.210 46.432,243.200 46.149,243.200 45.954 C 243.200 45.759,243.650 45.600,244.200 45.600 C 244.750 45.600,245.200 45.420,245.200 45.200 C 245.200 44.954,243.317 44.810,240.300 44.825 L 235.400 44.851 230.468 49.825 M200.413 59.880 C 197.152 63.169,195.768 64.802,196.413 64.601 C 196.956 64.431,197.492 64.151,197.604 63.978 C 197.716 63.805,198.301 63.540,198.904 63.388 C 199.507 63.237,200.000 62.967,200.000 62.788 C 200.000 62.610,200.540 62.345,201.200 62.200 C 201.860 62.055,202.400 61.779,202.400 61.586 C 202.400 61.394,203.030 61.118,203.800 60.974 C 204.570 60.829,205.200 60.551,205.200 60.355 C 205.200 60.160,205.560 60.000,206.000 60.000 C 206.440 60.000,206.800 59.833,206.800 59.629 C 206.800 59.425,207.790 59.134,209.000 58.983 C 210.210 58.832,211.200 58.575,211.200 58.413 C 211.200 58.250,212.585 58.000,214.277 57.857 C 215.970 57.714,217.455 57.436,217.577 57.239 C 217.700 57.042,218.835 56.752,220.100 56.595 C 221.365 56.437,222.400 56.149,222.400 55.954 C 222.400 55.759,223.030 55.600,223.800 55.600 C 224.570 55.600,225.200 55.420,225.200 55.200 C 225.200 54.943,221.650 54.809,215.300 54.825 L 205.400 54.851 200.413 59.880 M180.468 69.825 C 177.755 72.561,175.667 74.800,175.828 74.800 C 175.988 74.800,176.731 74.170,177.479 73.400 C 178.227 72.630,179.100 72.000,179.419 72.000 C 179.739 72.000,180.000 71.823,180.000 71.608 C 180.000 71.392,180.450 71.102,181.000 70.964 C 181.550 70.826,182.000 70.553,182.000 70.357 C 182.000 70.160,182.270 70.000,182.600 70.000 C 182.930 70.000,183.200 69.834,183.200 69.632 C 183.200 69.429,183.740 69.145,184.400 69.000 C 185.060 68.855,185.600 68.594,185.600 68.419 C 185.600 68.245,186.320 67.987,187.200 67.846 C 188.080 67.706,188.800 67.426,188.800 67.224 C 188.800 67.022,189.790 66.734,191.000 66.583 C 192.210 66.432,193.200 66.149,193.200 65.954 C 193.200 65.759,193.650 65.600,194.200 65.600 C 194.750 65.600,195.200 65.420,195.200 65.200 C 195.200 64.954,193.317 64.810,190.300 64.825 L 185.400 64.851 180.468 69.825 M150.413 79.880 C 147.152 83.169,145.768 84.802,146.413 84.601 C 146.956 84.431,147.492 84.151,147.604 83.978 C 147.716 83.805,148.301 83.540,148.904 83.388 C 149.507 83.237,150.000 82.967,150.000 82.788 C 150.000 82.610,150.540 82.345,151.200 82.200 C 151.860 82.055,152.400 81.779,152.400 81.586 C 152.400 81.394,153.030 81.118,153.800 80.974 C 154.570 80.829,155.200 80.551,155.200 80.355 C 155.200 80.160,155.451 80.000,155.757 80.000 C 156.064 80.000,156.418 79.730,156.545 79.400 C 156.671 79.070,157.051 78.800,157.387 78.800 C 157.724 78.800,158.000 78.628,158.000 78.418 C 158.000 78.208,158.630 77.918,159.400 77.774 C 160.170 77.629,160.800 77.359,160.800 77.174 C 160.800 76.988,161.430 76.718,162.200 76.574 C 162.970 76.429,163.600 76.151,163.600 75.955 C 163.600 75.760,163.960 75.600,164.400 75.600 C 164.840 75.600,165.200 75.420,165.200 75.200 C 165.200 74.954,163.317 74.810,160.300 74.825 L 155.400 74.851 150.413 79.880 M125.300 94.990 L 115.200 105.129 115.246 110.065 C 115.272 112.779,115.375 114.685,115.476 114.300 C 115.576 113.915,115.811 113.600,115.998 113.600 C 116.184 113.600,116.455 113.060,116.600 112.400 C 116.745 111.740,117.015 111.200,117.200 111.200 C 117.385 111.200,117.655 110.660,117.800 110.000 C 117.945 109.340,118.215 108.800,118.400 108.800 C 118.585 108.800,118.855 108.260,119.000 107.600 C 119.145 106.940,119.429 106.400,119.632 106.400 C 119.834 106.400,120.000 106.134,120.000 105.808 C 120.000 105.483,121.035 104.224,122.300 103.010 C 123.565 101.797,124.756 100.644,124.947 100.449 C 132.246 93.001,135.404 90.000,135.940 90.000 C 136.146 90.000,136.418 89.730,136.545 89.400 C 136.671 89.070,137.051 88.800,137.387 88.800 C 137.724 88.800,138.000 88.628,138.000 88.418 C 138.000 88.208,138.630 87.918,139.400 87.774 C 140.170 87.629,140.800 87.359,140.800 87.174 C 140.800 86.988,141.430 86.718,142.200 86.574 C 142.970 86.429,143.600 86.151,143.600 85.955 C 143.600 85.760,143.960 85.600,144.400 85.600 C 144.840 85.600,145.200 85.420,145.200 85.200 C 145.200 84.954,143.317 84.810,140.300 84.826 L 135.400 84.851 125.300 94.990 M113.829 127.029 C 113.483 127.374,113.200 127.914,113.200 128.229 C 113.200 128.543,113.034 128.800,112.832 128.800 C 112.629 128.800,112.345 129.340,112.200 130.000 C 112.055 130.660,111.791 131.200,111.614 131.200 C 111.436 131.200,111.169 132.010,111.021 133.000 C 110.872 133.990,110.582 134.800,110.375 134.800 C 110.159 134.800,110.000 137.252,110.000 140.600 C 110.000 143.790,109.840 146.400,109.643 146.400 C 109.447 146.400,109.163 146.893,109.012 147.496 C 108.860 148.099,108.595 148.684,108.422 148.796 C 108.249 148.908,107.970 149.442,107.801 149.981 C 107.529 150.854,107.561 150.896,108.094 150.363 C 108.424 150.033,108.817 149.375,108.968 148.902 C 109.118 148.428,109.592 147.930,110.020 147.794 C 110.449 147.657,110.800 147.301,110.800 147.002 C 110.800 146.702,111.048 146.210,111.350 145.907 C 111.757 145.500,111.944 143.661,112.066 138.854 C 112.172 134.682,112.391 132.253,112.676 132.076 C 112.921 131.924,113.250 130.945,113.406 129.900 C 113.563 128.855,113.850 128.000,114.045 128.000 C 114.240 128.000,114.400 127.745,114.400 127.433 C 114.400 127.122,114.625 126.776,114.900 126.665 C 115.252 126.523,115.260 126.454,114.929 126.432 C 114.669 126.414,114.174 126.683,113.829 127.029 M94.125 156.205 C 93.424 156.957,92.389 157.688,91.825 157.829 C 91.261 157.971,90.800 158.231,90.800 158.408 C 90.800 158.585,90.080 158.851,89.200 159.000 C 88.320 159.149,87.600 159.434,87.600 159.635 C 87.600 159.836,87.060 160.000,86.400 160.000 C 85.740 160.000,85.200 160.163,85.200 160.362 C 85.200 160.562,84.300 160.849,83.200 161.000 C 82.100 161.151,81.200 161.424,81.200 161.606 C 81.200 161.788,80.660 162.055,80.000 162.200 C 79.340 162.345,78.800 162.610,78.800 162.788 C 78.800 162.967,78.370 163.221,77.844 163.353 C 77.318 163.485,76.792 163.844,76.674 164.151 C 76.523 164.544,76.688 164.650,77.230 164.508 C 77.653 164.397,78.000 164.165,78.000 163.991 C 78.000 163.817,78.900 163.551,80.000 163.400 C 81.100 163.249,82.000 162.983,82.000 162.809 C 82.000 162.635,82.990 162.368,84.200 162.217 C 85.410 162.066,86.400 161.786,86.400 161.596 C 86.400 161.405,87.210 161.128,88.200 160.979 C 89.190 160.831,90.000 160.550,90.000 160.355 C 90.000 160.160,90.450 160.000,91.000 160.000 C 91.550 160.000,92.000 159.831,92.000 159.625 C 92.000 159.418,92.810 159.128,93.800 158.979 C 94.790 158.831,95.600 158.573,95.600 158.406 C 95.600 158.239,96.320 157.987,97.200 157.846 C 98.080 157.706,98.800 157.426,98.800 157.224 C 98.800 157.022,99.790 156.734,101.000 156.583 C 102.210 156.432,103.200 156.149,103.200 155.954 C 103.200 155.759,103.650 155.600,104.200 155.600 C 104.750 155.600,105.200 155.420,105.200 155.200 C 105.200 154.954,103.313 154.807,100.300 154.819 L 95.400 154.838 94.125 156.205 M65.200 165.200 C 65.200 165.420,64.840 165.600,64.400 165.600 C 63.960 165.600,63.600 165.766,63.600 165.968 C 63.600 166.171,63.060 166.455,62.400 166.600 C 61.740 166.745,61.200 167.015,61.200 167.200 C 61.200 167.385,60.660 167.655,60.000 167.800 C 59.340 167.945,58.800 168.215,58.800 168.400 C 58.800 168.585,58.260 168.855,57.600 169.000 C 56.940 169.145,56.400 169.429,56.400 169.632 C 56.400 169.834,56.130 170.000,55.800 170.000 C 55.470 170.000,55.200 170.163,55.200 170.362 C 55.200 170.562,54.300 170.849,53.200 171.000 C 52.100 171.151,51.200 171.424,51.200 171.606 C 51.200 171.788,50.660 172.055,50.000 172.200 C 49.340 172.345,48.800 172.610,48.800 172.788 C 48.800 172.967,48.370 173.221,47.844 173.353 C 47.318 173.485,46.792 173.844,46.674 174.151 C 46.523 174.544,46.688 174.650,47.230 174.508 C 47.653 174.397,48.000 174.165,48.000 173.991 C 48.000 173.817,48.900 173.551,50.000 173.400 C 51.100 173.249,52.000 172.983,52.000 172.809 C 52.000 172.635,52.990 172.368,54.200 172.217 C 55.410 172.066,56.400 171.790,56.400 171.603 C 56.400 171.416,56.940 171.145,57.600 171.000 C 58.260 170.855,58.800 170.571,58.800 170.368 C 58.800 170.166,59.070 170.000,59.400 170.000 C 59.730 170.000,60.000 169.843,60.000 169.651 C 60.000 169.459,60.720 169.187,61.600 169.046 C 62.480 168.906,63.200 168.626,63.200 168.424 C 63.200 168.222,64.190 167.934,65.400 167.783 C 66.610 167.632,67.600 167.366,67.600 167.193 C 67.600 167.020,68.680 166.753,70.000 166.600 C 71.320 166.447,72.400 166.159,72.400 165.961 C 72.400 165.762,73.030 165.600,73.800 165.600 C 74.570 165.600,75.200 165.420,75.200 165.200 C 75.200 164.955,73.267 164.800,70.200 164.800 C 67.133 164.800,65.200 164.955,65.200 165.200 M30.468 179.825 C 27.755 182.561,25.667 184.800,25.828 184.800 C 25.988 184.800,26.731 184.170,27.479 183.400 C 28.227 182.630,29.100 182.000,29.419 182.000 C 29.739 182.000,30.000 181.823,30.000 181.608 C 30.000 181.392,30.450 181.102,31.000 180.964 C 31.550 180.826,32.000 180.553,32.000 180.357 C 32.000 180.160,32.270 180.000,32.600 180.000 C 32.930 180.000,33.200 179.834,33.200 179.632 C 33.200 179.429,33.740 179.145,34.400 179.000 C 35.060 178.855,35.600 178.594,35.600 178.419 C 35.600 178.245,36.320 177.987,37.200 177.846 C 38.080 177.706,38.800 177.426,38.800 177.224 C 38.800 177.022,39.790 176.734,41.000 176.583 C 42.210 176.432,43.200 176.149,43.200 175.954 C 43.200 175.759,43.650 175.600,44.200 175.600 C 44.750 175.600,45.200 175.420,45.200 175.200 C 45.200 174.954,43.317 174.810,40.300 174.825 L 35.400 174.851 30.468 179.825 M284.900 207.898 C 284.625 207.991,284.400 208.322,284.400 208.633 C 284.400 208.945,284.223 209.200,284.008 209.200 C 283.792 209.200,283.502 209.650,283.364 210.200 C 283.226 210.750,282.965 211.200,282.784 211.200 C 282.602 211.200,282.331 211.588,282.180 212.062 C 282.030 212.537,281.477 213.322,280.953 213.808 C 280.429 214.294,280.000 214.896,280.000 215.146 C 280.000 215.396,279.820 215.600,279.600 215.600 C 279.380 215.600,279.200 215.856,279.200 216.169 C 279.200 216.894,276.914 219.200,276.196 219.200 C 275.898 219.200,275.543 219.551,275.406 219.980 C 275.270 220.408,274.826 220.865,274.419 220.994 C 274.012 221.123,273.568 221.672,273.432 222.214 C 273.296 222.756,273.008 223.200,272.792 223.200 C 272.577 223.200,272.400 223.476,272.400 223.813 C 272.400 224.149,272.151 224.521,271.847 224.637 C 271.543 224.754,271.181 225.558,271.042 226.425 C 270.904 227.291,270.613 228.000,270.395 228.000 C 270.178 228.000,270.000 228.188,270.000 228.417 C 270.000 228.646,269.817 229.051,269.594 229.317 C 267.945 231.278,267.206 231.944,266.393 232.202 C 265.881 232.365,265.268 232.659,265.031 232.855 C 263.078 234.475,262.453 235.247,262.213 236.339 C 262.061 237.033,261.785 237.600,261.600 237.600 C 261.415 237.600,261.153 238.105,261.017 238.722 C 260.881 239.340,260.417 240.099,259.985 240.411 C 259.553 240.722,259.200 241.138,259.200 241.335 C 259.200 241.853,256.178 244.800,255.647 244.800 C 255.401 244.800,255.200 245.148,255.200 245.573 C 255.200 245.998,254.853 246.456,254.428 246.591 C 253.995 246.729,253.542 247.355,253.396 248.018 C 253.253 248.668,252.974 249.200,252.776 249.200 C 252.578 249.200,252.302 249.650,252.164 250.200 C 252.026 250.750,251.772 251.200,251.600 251.200 C 251.428 251.200,251.174 251.650,251.036 252.200 C 250.898 252.750,250.608 253.200,250.392 253.200 C 250.177 253.200,250.000 253.470,250.000 253.800 C 250.000 254.130,249.840 254.400,249.643 254.400 C 249.447 254.400,249.168 254.874,249.023 255.452 C 248.745 256.558,245.573 260.000,244.832 260.000 C 244.594 260.000,244.400 260.194,244.400 260.431 C 244.400 260.668,243.860 261.402,243.200 262.062 C 242.540 262.722,242.000 263.518,242.000 263.831 C 242.000 264.144,241.822 264.400,241.605 264.400 C 241.387 264.400,241.095 265.115,240.955 265.989 C 240.786 267.047,240.451 267.657,239.951 267.816 C 239.538 267.947,239.200 268.297,239.200 268.593 C 239.200 269.279,236.312 272.400,235.677 272.400 C 235.415 272.400,235.200 272.568,235.200 272.773 C 235.200 272.978,234.840 273.260,234.400 273.400 C 233.960 273.540,233.600 273.899,233.600 274.198 C 233.600 274.498,233.358 274.985,233.061 275.281 C 232.765 275.578,232.397 276.491,232.243 277.310 C 232.090 278.130,231.811 278.800,231.625 278.800 C 231.439 278.800,231.174 279.250,231.036 279.800 C 230.898 280.350,230.608 280.800,230.392 280.800 C 230.177 280.800,230.000 281.070,230.000 281.400 C 230.000 281.730,229.820 282.000,229.600 282.000 C 229.380 282.000,229.200 282.207,229.200 282.460 C 229.200 282.712,228.566 283.567,227.791 284.360 C 225.458 286.746,225.200 287.052,225.200 287.439 C 225.200 287.643,224.750 288.148,224.200 288.561 C 223.650 288.974,223.200 289.628,223.200 290.013 C 223.200 290.399,222.930 290.818,222.600 290.945 C 222.270 291.071,222.000 291.451,222.000 291.787 C 222.000 292.124,221.834 292.400,221.632 292.400 C 221.429 292.400,221.145 292.940,221.000 293.600 C 220.855 294.260,220.571 294.800,220.368 294.800 C 220.166 294.800,220.000 295.141,220.000 295.557 C 220.000 295.974,219.730 296.418,219.400 296.545 C 219.070 296.671,218.800 296.974,218.800 297.218 C 218.800 297.462,218.260 298.202,217.600 298.862 C 216.940 299.522,216.400 300.228,216.400 300.431 C 216.400 300.634,216.158 300.800,215.862 300.800 C 215.150 300.800,213.200 302.494,213.200 303.113 C 213.200 303.381,213.023 303.600,212.808 303.600 C 212.592 303.600,212.302 304.050,212.164 304.600 C 212.026 305.150,211.776 305.600,211.608 305.600 C 211.440 305.600,211.189 306.308,211.051 307.173 C 210.877 308.260,210.552 308.825,210.000 309.000 C 209.560 309.140,209.200 309.539,209.200 309.887 C 209.200 310.594,206.981 312.895,205.900 313.308 C 205.515 313.455,205.200 313.748,205.200 313.960 C 205.200 314.173,204.859 314.454,204.442 314.587 C 203.972 314.736,203.585 315.355,203.424 316.214 C 203.281 316.976,203.006 317.600,202.814 317.600 C 202.621 317.600,202.345 318.140,202.200 318.800 C 202.055 319.460,201.785 320.000,201.600 320.000 C 201.415 320.000,201.153 320.505,201.017 321.122 C 200.881 321.740,200.417 322.499,199.985 322.811 C 199.553 323.122,199.200 323.613,199.200 323.901 C 199.200 324.189,198.930 324.529,198.600 324.655 C 198.270 324.782,198.000 325.163,198.000 325.502 C 198.000 326.277,195.632 328.609,194.471 328.978 C 193.992 329.130,193.600 329.422,193.600 329.627 C 193.600 329.832,193.330 330.000,193.000 330.000 C 192.670 330.000,192.400 330.178,192.400 330.395 C 192.400 330.613,191.680 330.906,190.800 331.046 C 189.920 331.187,189.200 331.451,189.200 331.633 C 189.200 331.815,188.570 332.082,187.800 332.226 C 187.030 332.371,186.400 332.649,186.400 332.845 C 186.400 333.040,185.950 333.200,185.400 333.200 C 184.850 333.200,184.400 333.043,184.400 332.851 C 184.400 332.659,183.680 332.387,182.800 332.246 C 181.920 332.106,181.200 331.832,181.200 331.639 C 181.200 331.445,180.750 331.174,180.200 331.036 C 179.650 330.898,179.200 330.608,179.200 330.392 C 179.200 330.177,178.930 330.000,178.600 330.000 C 178.270 330.000,178.000 329.820,178.000 329.600 C 178.000 329.380,177.724 329.200,177.387 329.200 C 177.051 329.200,176.671 328.930,176.545 328.600 C 176.418 328.270,176.056 328.000,175.740 328.000 C 175.424 328.000,174.115 326.920,172.832 325.600 C 171.548 324.280,170.225 323.200,169.892 323.200 C 169.558 323.200,169.182 322.930,169.055 322.600 C 168.929 322.270,168.549 322.000,168.213 322.000 C 167.876 322.000,167.600 321.834,167.600 321.632 C 167.600 321.429,167.060 321.145,166.400 321.000 C 165.740 320.855,165.200 320.571,165.200 320.368 C 165.200 320.166,164.859 320.000,164.443 320.000 C 164.026 320.000,163.582 319.730,163.455 319.400 C 163.329 319.070,163.026 318.800,162.782 318.800 C 162.317 318.800,160.000 316.644,160.000 316.211 C 160.000 315.759,157.331 313.200,156.860 313.200 C 156.607 313.200,156.400 313.023,156.400 312.808 C 156.400 312.592,155.950 312.302,155.400 312.164 C 154.850 312.026,154.400 311.772,154.400 311.600 C 154.400 311.428,153.950 311.174,153.400 311.036 C 152.850 310.898,152.400 310.622,152.400 310.423 C 152.400 310.224,151.860 309.522,151.200 308.862 C 150.540 308.202,150.000 307.483,150.000 307.264 C 150.000 307.046,149.816 306.805,149.591 306.730 C 149.365 306.655,149.065 305.877,148.923 305.000 C 148.587 302.934,148.197 302.591,145.818 302.264 C 144.732 302.116,143.742 301.829,143.618 301.629 C 143.494 301.428,142.905 301.141,142.310 300.992 C 141.715 300.843,141.126 300.397,141.001 300.002 C 140.865 299.575,140.211 299.179,139.386 299.024 C 138.624 298.881,138.000 298.592,138.000 298.382 C 138.000 298.172,137.724 298.000,137.387 298.000 C 137.051 298.000,136.671 297.730,136.545 297.400 C 136.418 297.070,136.066 296.800,135.763 296.800 C 135.460 296.800,134.424 295.990,133.462 295.000 C 132.500 294.010,131.507 293.200,131.256 293.200 C 131.005 293.200,130.800 293.023,130.800 292.808 C 130.800 292.592,130.350 292.302,129.800 292.164 C 129.250 292.026,128.800 291.776,128.800 291.608 C 128.800 291.440,128.080 291.187,127.200 291.046 C 126.320 290.906,125.600 290.600,125.600 290.367 C 125.600 290.134,125.317 290.226,124.971 290.571 C 124.626 290.917,124.086 291.200,123.771 291.200 C 123.457 291.200,123.200 291.377,123.200 291.592 C 123.200 291.808,122.748 292.098,122.197 292.237 C 121.594 292.388,121.099 292.865,120.957 293.430 C 120.827 293.948,120.378 294.480,119.960 294.613 C 119.542 294.745,119.200 295.207,119.200 295.640 C 119.200 296.072,118.930 296.529,118.600 296.655 C 118.270 296.782,118.000 297.110,118.000 297.384 C 118.000 297.894,116.230 300.000,115.802 300.000 C 115.148 300.000,112.000 303.172,112.000 303.831 C 112.000 304.144,111.834 304.400,111.632 304.400 C 111.429 304.400,111.145 304.940,111.000 305.600 C 110.855 306.260,110.571 306.800,110.368 306.800 C 110.166 306.800,110.000 307.070,110.000 307.400 C 110.000 307.730,109.840 308.000,109.643 308.000 C 109.447 308.000,109.174 308.450,109.036 309.000 C 108.898 309.550,108.608 310.000,108.392 310.000 C 108.177 310.000,108.000 310.256,108.000 310.568 C 108.000 311.169,104.759 314.605,103.903 314.912 C 103.560 315.035,103.686 315.347,104.300 315.893 C 104.795 316.333,105.200 316.903,105.200 317.159 C 105.200 317.416,105.465 317.727,105.789 317.851 C 106.113 317.976,106.493 318.690,106.634 319.439 C 106.774 320.187,107.035 320.800,107.213 320.800 C 107.391 320.800,107.655 321.340,107.800 322.000 C 107.945 322.660,108.229 323.200,108.432 323.200 C 108.634 323.200,108.800 323.547,108.800 323.971 C 108.800 324.396,109.070 325.013,109.400 325.343 C 109.730 325.673,110.000 326.044,110.000 326.167 C 110.000 326.639,111.402 328.000,111.889 328.000 C 112.170 328.000,112.400 328.177,112.400 328.392 C 112.400 328.608,112.850 328.898,113.400 329.036 C 113.950 329.174,114.400 329.447,114.400 329.643 C 114.400 329.840,114.670 330.000,115.000 330.000 C 115.330 330.000,115.600 330.166,115.600 330.368 C 115.600 330.571,116.140 330.855,116.800 331.000 C 117.460 331.145,118.000 331.417,118.000 331.605 C 118.000 331.793,118.401 332.073,118.891 332.229 C 119.380 332.384,120.997 333.746,122.482 335.256 C 123.968 336.765,125.438 338.000,125.749 338.000 C 126.060 338.000,126.418 338.270,126.545 338.600 C 126.671 338.930,127.051 339.200,127.387 339.200 C 127.724 339.200,128.000 339.380,128.000 339.600 C 128.000 339.820,128.270 340.000,128.600 340.000 C 128.930 340.000,129.200 340.180,129.200 340.400 C 129.200 340.620,129.566 340.800,130.013 340.800 C 130.459 340.800,130.924 341.059,131.046 341.376 C 131.167 341.692,131.792 342.066,132.433 342.207 C 133.075 342.348,133.600 342.629,133.600 342.832 C 133.600 343.034,133.896 343.200,134.257 343.200 C 134.619 343.200,136.104 344.436,137.557 345.946 C 139.011 347.457,140.605 348.819,141.100 348.973 C 141.595 349.128,142.000 349.422,142.000 349.627 C 142.000 349.832,142.270 350.000,142.600 350.000 C 142.930 350.000,143.200 350.166,143.200 350.368 C 143.200 350.571,143.740 350.855,144.400 351.000 C 145.060 351.145,145.600 351.429,145.600 351.632 C 145.600 351.834,145.848 352.000,146.152 352.000 C 147.012 352.000,150.000 355.106,150.000 356.000 C 150.000 356.440,150.160 356.800,150.357 356.800 C 150.553 356.800,150.826 357.250,150.964 357.800 C 151.210 358.781,152.204 359.182,152.467 358.406 C 152.652 357.860,156.410 357.768,156.739 358.302 C 156.887 358.541,157.501 358.860,158.104 359.012 C 158.707 359.163,159.200 359.447,159.200 359.643 C 159.200 359.840,159.560 360.000,160.000 360.000 C 160.440 360.000,160.800 360.180,160.800 360.400 C 160.800 360.620,161.033 360.800,161.319 360.800 C 161.604 360.800,162.279 361.332,162.819 361.983 C 163.358 362.634,164.115 363.174,164.500 363.183 C 164.885 363.192,165.200 363.470,165.200 363.800 C 165.200 364.130,165.470 364.400,165.800 364.400 C 166.130 364.400,166.400 364.670,166.400 365.000 C 166.400 365.330,166.589 365.600,166.819 365.600 C 167.050 365.600,167.635 366.025,168.119 366.544 C 168.604 367.064,169.405 367.616,169.900 367.771 C 170.395 367.927,170.800 368.207,170.800 368.395 C 170.800 368.583,171.340 368.855,172.000 369.000 C 172.660 369.145,173.200 369.429,173.200 369.632 C 173.200 369.834,173.470 370.000,173.800 370.000 C 174.130 370.000,174.400 370.160,174.400 370.357 C 174.400 370.553,174.874 370.832,175.452 370.977 C 176.031 371.123,177.336 372.044,178.352 373.025 C 180.613 375.207,180.618 375.212,182.078 376.752 C 182.729 377.439,183.441 378.000,183.659 378.000 C 183.878 378.000,184.327 378.270,184.657 378.600 C 184.987 378.930,185.604 379.200,186.029 379.200 C 186.453 379.200,186.800 379.380,186.800 379.600 C 186.800 379.820,187.070 380.000,187.400 380.000 C 187.730 380.000,188.000 380.180,188.000 380.400 C 188.000 380.620,188.242 380.800,188.539 380.800 C 188.835 380.800,189.493 381.160,190.000 381.600 C 190.507 382.040,191.153 382.400,191.434 382.400 C 191.716 382.400,192.067 382.782,192.215 383.248 C 192.636 384.573,195.128 386.802,195.871 386.518 C 196.223 386.382,197.472 385.311,198.647 384.136 C 199.821 382.961,201.037 382.000,201.349 382.000 C 201.660 382.000,202.018 381.730,202.145 381.400 C 202.271 381.070,202.651 380.800,202.987 380.800 C 203.324 380.800,203.600 380.620,203.600 380.400 C 203.600 380.180,203.870 380.000,204.200 380.000 C 204.945 380.000,208.000 376.906,208.000 376.152 C 208.000 375.848,208.166 375.600,208.368 375.600 C 208.571 375.600,208.855 375.060,209.000 374.400 C 209.145 373.740,209.429 373.200,209.632 373.200 C 209.834 373.200,210.000 372.930,210.000 372.600 C 210.000 372.270,210.180 372.000,210.400 372.000 C 210.620 372.000,210.800 371.758,210.800 371.461 C 210.800 371.165,211.160 370.507,211.600 370.000 C 212.040 369.493,212.400 368.847,212.400 368.566 C 212.400 368.284,212.805 367.927,213.300 367.771 C 214.400 367.426,216.800 364.958,216.800 364.172 C 216.800 363.857,216.966 363.600,217.168 363.600 C 217.371 363.600,217.655 363.060,217.800 362.400 C 217.945 361.740,218.210 361.200,218.388 361.200 C 218.567 361.200,218.826 360.750,218.964 360.200 C 219.102 359.650,219.392 359.200,219.608 359.200 C 219.823 359.200,220.000 358.930,220.000 358.600 C 220.000 358.270,220.166 358.000,220.368 358.000 C 220.571 358.000,220.855 357.460,221.000 356.800 C 221.145 356.140,221.417 355.600,221.605 355.600 C 221.793 355.600,222.069 355.212,222.220 354.738 C 222.506 353.836,224.272 352.000,224.854 352.000 C 225.490 352.000,226.800 350.622,226.800 349.954 C 226.800 349.586,227.070 349.182,227.400 349.055 C 227.730 348.929,228.000 348.549,228.000 348.213 C 228.000 347.876,228.177 347.600,228.392 347.600 C 228.608 347.600,228.898 347.150,229.036 346.600 C 229.174 346.050,229.447 345.600,229.643 345.600 C 229.840 345.600,230.000 345.330,230.000 345.000 C 230.000 344.670,230.160 344.400,230.357 344.400 C 230.553 344.400,230.832 343.927,230.977 343.349 C 231.122 342.771,231.772 341.767,232.420 341.118 C 233.069 340.469,233.600 339.784,233.600 339.596 C 233.600 339.408,233.998 339.128,234.485 338.973 C 235.728 338.578,237.510 336.699,237.823 335.451 C 237.968 334.873,238.233 334.400,238.412 334.400 C 238.590 334.400,238.855 333.860,239.000 333.200 C 239.145 332.540,239.429 332.000,239.632 332.000 C 239.834 332.000,240.000 331.730,240.000 331.400 C 240.000 331.070,240.180 330.800,240.400 330.800 C 240.620 330.800,240.800 330.434,240.800 329.987 C 240.800 329.541,241.070 329.071,241.400 328.945 C 241.730 328.818,242.000 328.471,242.000 328.174 C 242.000 327.877,243.080 326.567,244.400 325.264 C 245.720 323.960,246.800 322.692,246.800 322.447 C 246.800 322.201,246.977 322.000,247.192 322.000 C 247.408 322.000,247.698 321.550,247.836 321.000 C 247.974 320.450,248.228 320.000,248.400 320.000 C 248.572 320.000,248.826 319.550,248.964 319.000 C 249.102 318.450,249.392 318.000,249.608 318.000 C 249.823 318.000,250.000 317.730,250.000 317.400 C 250.000 317.070,250.166 316.800,250.368 316.800 C 250.571 316.800,250.855 316.260,251.000 315.600 C 251.145 314.940,251.429 314.400,251.632 314.400 C 251.834 314.400,252.000 314.144,252.000 313.831 C 252.000 313.186,254.251 310.800,254.859 310.800 C 255.442 310.800,256.254 309.891,256.574 308.881 C 256.728 308.397,257.007 308.000,257.195 308.000 C 257.383 308.000,257.655 307.460,257.800 306.800 C 257.945 306.140,258.206 305.600,258.381 305.600 C 258.555 305.600,258.813 304.880,258.954 304.000 C 259.094 303.120,259.387 302.400,259.605 302.400 C 259.822 302.400,260.000 302.130,260.000 301.800 C 260.000 301.470,260.180 301.200,260.400 301.200 C 260.620 301.200,260.800 300.952,260.800 300.648 C 260.800 299.944,263.832 296.800,264.511 296.800 C 265.326 296.800,266.445 295.235,266.684 293.758 C 266.805 293.011,267.047 292.400,267.221 292.400 C 267.394 292.400,267.655 291.860,267.800 291.200 C 267.945 290.540,268.210 290.000,268.388 290.000 C 268.567 290.000,268.826 289.550,268.964 289.000 C 269.102 288.450,269.392 288.000,269.608 288.000 C 269.823 288.000,270.000 287.730,270.000 287.400 C 270.000 287.070,270.160 286.800,270.357 286.800 C 270.553 286.800,270.826 286.350,270.964 285.800 C 271.102 285.250,271.392 284.800,271.608 284.800 C 271.823 284.800,272.003 284.575,272.007 284.300 C 272.015 283.690,273.742 282.000,274.356 282.000 C 274.964 282.000,276.400 280.517,276.400 279.889 C 276.400 279.608,276.760 279.070,277.200 278.693 C 277.640 278.316,278.000 277.736,278.000 277.404 C 278.000 277.072,278.166 276.800,278.368 276.800 C 278.571 276.800,278.855 276.260,279.000 275.600 C 279.145 274.940,279.429 274.400,279.632 274.400 C 279.834 274.400,280.000 274.130,280.000 273.800 C 280.000 273.470,280.180 273.200,280.400 273.200 C 280.620 273.200,280.800 272.960,280.800 272.667 C 280.800 272.000,283.717 268.800,284.325 268.800 C 285.235 268.800,287.499 266.061,287.766 264.638 C 287.915 263.847,288.185 263.200,288.367 263.200 C 288.549 263.200,288.806 262.523,288.938 261.696 C 289.072 260.858,289.538 259.933,289.989 259.608 C 290.435 259.286,290.800 258.863,290.800 258.668 C 290.800 258.229,292.487 256.416,292.904 256.407 C 293.400 256.396,295.600 254.152,295.600 253.657 C 295.600 253.406,295.760 253.200,295.957 253.200 C 296.153 253.200,296.426 252.750,296.564 252.200 C 296.702 251.650,296.978 251.200,297.176 251.200 C 297.374 251.200,297.655 250.660,297.800 250.000 C 297.945 249.340,298.210 248.800,298.388 248.800 C 298.567 248.800,298.835 248.316,298.983 247.724 C 299.132 247.132,299.576 246.367,299.970 246.024 C 300.363 245.681,300.824 244.963,300.992 244.429 C 301.291 243.482,303.620 240.800,304.144 240.800 C 304.604 240.800,306.800 238.532,306.800 238.057 C 306.800 237.806,306.977 237.600,307.192 237.600 C 307.408 237.600,307.698 237.150,307.836 236.600 C 307.974 236.050,308.234 235.600,308.415 235.600 C 308.595 235.600,308.866 234.610,309.017 233.400 C 309.168 232.190,309.451 231.200,309.646 231.200 C 309.841 231.200,310.000 230.930,310.000 230.600 C 310.000 230.270,310.157 230.000,310.349 230.000 C 310.541 230.000,310.810 229.300,310.947 228.444 C 311.083 227.588,311.467 226.783,311.798 226.656 C 313.042 226.179,311.530 223.200,310.043 223.200 C 309.799 223.200,308.900 222.480,308.046 221.600 C 307.192 220.720,306.369 220.000,306.216 220.000 C 306.063 220.000,305.398 219.460,304.738 218.800 C 304.078 218.140,303.282 217.600,302.969 217.600 C 302.656 217.600,302.400 217.343,302.400 217.028 C 302.400 216.242,300.000 213.774,298.900 213.429 C 298.405 213.273,298.000 212.993,298.000 212.805 C 298.000 212.617,297.460 212.345,296.800 212.200 C 296.140 212.055,295.600 211.784,295.600 211.597 C 295.600 211.410,294.610 211.134,293.400 210.983 C 292.190 210.832,291.200 210.549,291.200 210.354 C 291.200 210.159,290.750 210.000,290.200 210.000 C 289.650 210.000,289.200 209.834,289.200 209.632 C 289.200 209.429,288.660 209.145,288.000 209.000 C 287.340 208.855,286.800 208.592,286.800 208.415 C 286.800 208.011,285.565 207.675,284.900 207.898 M383.877 421.380 C 383.558 421.699,382.825 422.079,382.248 422.224 C 381.672 422.368,381.200 422.633,381.200 422.812 C 381.200 422.990,380.660 423.255,380.000 423.400 C 379.340 423.545,378.800 423.806,378.800 423.981 C 378.800 424.155,378.080 424.413,377.200 424.554 C 373.969 425.070,375.605 425.600,380.431 425.600 C 385.739 425.600,387.142 426.235,387.823 428.949 C 387.968 429.527,388.245 430.000,388.439 430.000 C 388.632 430.000,388.906 430.720,389.046 431.600 C 389.345 433.470,390.000 433.745,390.000 432.000 C 390.000 431.340,389.841 430.800,389.647 430.800 C 389.453 430.800,389.167 429.450,389.013 427.800 C 388.858 426.150,388.567 424.800,388.366 424.800 C 388.165 424.800,388.000 424.524,388.000 424.187 C 388.000 423.851,387.730 423.471,387.400 423.345 C 387.070 423.218,386.800 422.877,386.800 422.586 C 386.800 421.159,384.887 420.370,383.877 421.380 M374.400 425.968 C 374.400 426.171,373.860 426.455,373.200 426.600 C 372.540 426.745,372.000 427.021,372.000 427.214 C 372.000 427.406,371.370 427.682,370.600 427.826 C 369.830 427.971,369.200 428.235,369.200 428.413 C 369.200 428.591,368.660 428.855,368.000 429.000 C 367.340 429.145,366.800 429.429,366.800 429.632 C 366.800 429.834,366.530 430.000,366.200 430.000 C 365.870 430.000,365.600 430.160,365.600 430.357 C 365.600 430.553,365.150 430.826,364.600 430.964 C 364.050 431.102,363.600 431.378,363.600 431.576 C 363.600 431.774,363.060 432.055,362.400 432.200 C 361.740 432.345,361.200 432.615,361.200 432.800 C 361.200 432.985,360.660 433.255,360.000 433.400 C 359.340 433.545,358.800 433.806,358.800 433.981 C 358.800 434.155,358.080 434.413,357.200 434.554 C 353.969 435.070,355.605 435.600,360.432 435.600 L 365.264 435.600 367.680 433.248 C 370.629 430.377,370.491 430.515,372.679 428.248 C 373.661 427.232,374.629 426.400,374.832 426.400 C 375.034 426.400,375.200 426.220,375.200 426.000 C 375.200 425.780,375.020 425.600,374.800 425.600 C 374.580 425.600,374.400 425.766,374.400 425.968 M343.146 437.172 C 342.347 438.022,341.312 438.838,340.846 438.985 C 340.381 439.133,340.000 439.422,340.000 439.627 C 340.000 439.832,339.730 440.000,339.400 440.000 C 339.070 440.000,338.800 440.166,338.800 440.368 C 338.800 440.571,338.260 440.855,337.600 441.000 C 336.940 441.145,336.400 441.427,336.400 441.627 C 336.400 441.827,335.680 442.106,334.800 442.246 C 333.920 442.387,333.200 442.657,333.200 442.846 C 333.200 443.036,332.480 443.306,331.600 443.446 C 330.720 443.587,330.000 443.839,330.000 444.005 C 330.000 444.172,329.010 444.432,327.800 444.583 C 323.986 445.059,325.385 445.600,330.432 445.600 L 335.264 445.600 337.680 443.248 C 340.629 440.377,340.491 440.515,342.679 438.248 C 343.661 437.232,344.629 436.400,344.832 436.400 C 345.034 436.400,345.200 436.220,345.200 436.000 C 345.200 435.275,344.620 435.606,343.146 437.172 M324.400 445.968 C 324.400 446.171,323.860 446.455,323.200 446.600 C 322.540 446.745,322.000 447.021,322.000 447.214 C 322.000 447.406,321.370 447.682,320.600 447.826 C 319.830 447.971,319.200 448.235,319.200 448.413 C 319.200 448.591,318.660 448.855,318.000 449.000 C 317.340 449.145,316.800 449.429,316.800 449.632 C 316.800 449.834,316.530 450.000,316.200 450.000 C 315.870 450.000,315.600 450.180,315.600 450.400 C 315.600 450.620,315.328 450.800,314.996 450.800 C 314.664 450.800,314.084 451.160,313.707 451.600 C 313.330 452.040,312.792 452.400,312.511 452.400 C 312.230 452.400,312.000 452.572,312.000 452.782 C 312.000 452.992,311.370 453.282,310.600 453.426 C 309.830 453.571,309.200 453.833,309.200 454.009 C 309.200 454.186,308.445 454.457,307.523 454.613 C 305.338 454.982,304.896 455.482,304.569 457.951 C 304.419 459.078,304.163 460.000,304.000 460.000 C 303.836 460.000,303.590 460.705,303.452 461.566 C 303.314 462.428,303.003 463.199,302.762 463.279 C 302.520 463.360,302.225 464.635,302.106 466.113 C 301.988 467.591,301.756 468.800,301.593 468.800 C 301.429 468.800,301.167 470.330,301.011 472.200 C 300.856 474.070,300.564 475.600,300.364 475.600 C 300.164 475.600,300.000 475.870,300.000 476.200 C 300.000 476.530,299.834 476.800,299.632 476.800 C 299.429 476.800,299.145 477.340,299.000 478.000 C 298.855 478.660,298.591 479.200,298.413 479.200 C 298.235 479.200,297.971 479.830,297.826 480.600 C 297.682 481.370,297.406 482.000,297.214 482.000 C 297.021 482.000,296.745 482.540,296.600 483.200 C 296.455 483.860,296.141 484.400,295.902 484.400 C 295.662 484.400,295.584 484.517,295.727 484.661 C 295.947 484.880,296.919 484.032,300.439 480.548 C 300.690 480.299,301.954 479.009,303.248 477.680 L 305.600 475.264 305.600 465.432 L 305.600 455.600 310.432 455.600 L 315.264 455.600 317.680 453.248 C 320.629 450.377,320.491 450.515,322.679 448.248 C 323.661 447.232,324.629 446.400,324.832 446.400 C 325.034 446.400,325.200 446.220,325.200 446.000 C 325.200 445.780,325.020 445.600,324.800 445.600 C 324.580 445.600,324.400 445.766,324.400 445.968 M390.000 455.600 C 390.000 461.146,390.158 465.600,390.355 465.600 C 390.550 465.600,390.831 466.410,390.979 467.400 C 391.128 468.390,391.398 469.200,391.580 469.200 C 391.762 469.200,392.029 469.830,392.174 470.600 C 392.318 471.370,392.608 472.000,392.818 472.000 C 393.028 472.000,393.200 472.230,393.200 472.511 C 393.200 473.174,394.796 474.544,395.138 474.174 C 395.282 474.018,395.175 473.810,394.900 473.712 C 394.625 473.614,394.400 473.278,394.400 472.967 C 394.400 472.655,394.236 472.400,394.035 472.400 C 393.834 472.400,393.542 471.635,393.386 470.700 C 393.230 469.765,392.900 468.872,392.654 468.716 C 392.358 468.529,392.156 465.879,392.059 460.916 C 391.978 456.782,391.761 453.305,391.577 453.189 C 391.393 453.074,391.117 451.319,390.964 449.289 C 390.453 442.522,390.000 445.487,390.000 455.600 M294.900 486.198 C 294.625 486.511,294.400 486.954,294.400 487.183 C 294.400 487.412,294.220 487.600,294.000 487.600 C 293.780 487.600,293.600 487.810,293.600 488.066 C 293.600 488.547,293.329 488.877,291.103 491.103 C 288.877 493.329,288.547 493.600,288.066 493.600 C 287.810 493.600,287.600 493.760,287.600 493.957 C 287.600 494.153,287.162 494.423,286.627 494.558 C 286.091 494.692,285.539 495.161,285.400 495.601 C 285.260 496.040,284.978 496.400,284.773 496.400 C 284.568 496.400,284.400 496.670,284.400 497.000 C 284.400 497.330,284.220 497.600,284.000 497.600 C 283.780 497.600,283.600 497.810,283.600 498.066 C 283.600 498.547,283.329 498.877,281.103 501.103 C 278.877 503.329,278.547 503.600,278.066 503.600 C 277.810 503.600,277.600 503.760,277.600 503.957 C 277.600 504.153,277.150 504.426,276.600 504.564 C 274.192 505.169,275.858 505.600,280.600 505.600 L 285.600 505.600 285.600 500.600 L 285.600 495.600 290.600 495.600 L 295.600 495.600 295.600 490.600 C 295.600 487.850,295.555 485.607,295.500 485.615 C 295.445 485.624,295.175 485.886,294.900 486.198 M395.200 490.600 L 395.200 495.600 397.600 495.600 L 400.000 495.600 400.000 490.600 L 400.000 485.600 397.600 485.600 L 395.200 485.600 395.200 490.600 M274.400 505.968 C 274.400 506.171,273.860 506.455,273.200 506.600 C 272.540 506.745,272.000 507.021,272.000 507.214 C 272.000 507.406,271.370 507.682,270.600 507.826 C 269.830 507.971,269.200 508.235,269.200 508.413 C 269.200 508.591,268.660 508.855,268.000 509.000 C 267.340 509.145,266.800 509.429,266.800 509.632 C 266.800 509.834,266.530 510.000,266.200 510.000 C 265.870 510.000,265.600 510.160,265.600 510.357 C 265.600 510.553,265.150 510.826,264.600 510.964 C 264.050 511.102,263.600 511.378,263.600 511.576 C 263.600 511.774,263.060 512.055,262.400 512.200 C 261.740 512.345,261.200 512.615,261.200 512.800 C 261.200 512.985,260.660 513.255,260.000 513.400 C 259.340 513.545,258.800 513.806,258.800 513.981 C 258.800 514.155,258.080 514.413,257.200 514.554 C 253.969 515.070,255.605 515.600,260.432 515.600 L 265.264 515.600 267.680 513.248 C 270.629 510.377,270.491 510.515,272.679 508.248 C 273.661 507.232,274.629 506.400,274.832 506.400 C 275.034 506.400,275.200 506.220,275.200 506.000 C 275.200 505.780,275.020 505.600,274.800 505.600 C 274.580 505.600,274.400 505.766,274.400 505.968 M244.400 515.968 C 244.400 516.171,243.860 516.455,243.200 516.600 C 242.540 516.745,242.000 517.021,242.000 517.214 C 242.000 517.406,241.370 517.682,240.600 517.826 C 239.830 517.971,239.200 518.235,239.200 518.413 C 239.200 518.591,238.660 518.855,238.000 519.000 C 237.340 519.145,236.800 519.429,236.800 519.632 C 236.800 519.834,236.530 520.000,236.200 520.000 C 235.870 520.000,235.600 520.160,235.600 520.357 C 235.600 520.553,235.150 520.826,234.600 520.964 C 234.050 521.102,233.600 521.378,233.600 521.576 C 233.600 521.774,233.060 522.055,232.400 522.200 C 231.740 522.345,231.200 522.615,231.200 522.800 C 231.200 522.985,230.660 523.255,230.000 523.400 C 229.340 523.545,228.800 523.806,228.800 523.981 C 228.800 524.155,228.080 524.413,227.200 524.554 L 225.600 524.809 225.600 527.405 L 225.600 530.000 230.600 530.000 L 235.600 530.000 235.600 527.608 C 235.600 525.219,235.602 525.215,237.900 523.010 C 240.480 520.535,240.256 520.758,242.679 518.248 C 243.661 517.232,244.629 516.400,244.832 516.400 C 245.034 516.400,245.200 516.220,245.200 516.000 C 245.200 515.780,245.020 515.600,244.800 515.600 C 244.580 515.600,244.400 515.766,244.400 515.968 \\\"\\r\\n                stroke=\\\"none\\\"\\r\\n                fill=\\\"#f0f7f4\\\"\\r\\n                fill-rule=\\\"evenodd\\\"\\r\\n              ></path>\\r\\n              <path\\r\\n                id=\\\"path3\\\"\\r\\n                d=\\\"M361.133 15.957 C 361.060 16.153,359.322 16.388,357.272 16.479 C 354.621 16.596,353.427 16.811,353.141 17.222 C 352.835 17.662,352.691 17.681,352.536 17.300 C 352.295 16.706,351.200 16.624,351.200 17.200 C 351.200 17.420,350.956 17.600,350.658 17.600 C 349.894 17.600,348.000 19.439,348.000 20.181 C 348.000 20.521,348.225 20.803,348.500 20.806 C 348.840 20.810,348.813 20.931,348.414 21.183 C 347.877 21.523,347.722 22.219,347.632 24.700 C 347.608 25.385,347.361 25.600,346.600 25.600 C 346.050 25.600,345.597 25.825,345.594 26.100 C 345.590 26.434,345.457 26.401,345.194 26.000 C 344.844 25.467,344.756 25.467,344.400 26.000 C 344.067 26.499,343.941 26.508,343.648 26.055 C 343.455 25.755,343.230 25.684,343.148 25.897 C 343.067 26.111,340.147 26.391,336.637 26.521 C 333.138 26.650,330.168 26.920,330.037 27.120 C 329.907 27.321,329.125 27.609,328.300 27.760 C 327.049 27.990,326.800 28.199,326.800 29.018 C 326.800 29.607,326.569 30.000,326.223 30.000 C 325.830 30.000,325.607 30.542,325.523 31.697 C 325.429 32.986,325.219 33.428,324.644 33.537 C 324.228 33.616,323.487 34.112,322.998 34.640 C 322.341 35.349,321.684 35.600,320.487 35.600 C 319.596 35.600,318.807 35.762,318.733 35.960 C 318.660 36.158,315.455 36.436,311.612 36.579 C 307.769 36.721,304.529 36.987,304.412 37.170 C 304.295 37.352,303.435 37.630,302.500 37.786 C 301.565 37.942,300.800 38.222,300.800 38.407 C 300.800 38.593,300.409 38.802,299.931 38.872 C 299.454 38.942,298.989 39.225,298.898 39.500 C 298.683 40.154,299.878 40.154,300.112 39.500 C 300.210 39.225,300.434 39.134,300.609 39.297 C 301.005 39.667,299.308 41.191,298.668 41.041 C 298.410 40.980,298.335 41.007,298.500 41.099 C 298.950 41.350,298.862 43.200,298.400 43.200 C 298.180 43.200,298.000 43.740,298.000 44.400 C 298.000 45.459,297.863 45.600,296.833 45.600 C 296.192 45.600,295.607 45.766,295.533 45.968 C 295.460 46.170,292.462 46.406,288.871 46.492 C 283.772 46.614,282.253 46.774,281.940 47.224 C 281.635 47.663,281.491 47.681,281.336 47.300 C 281.048 46.590,279.332 46.679,279.048 47.419 C 278.918 47.759,278.583 48.008,278.305 47.971 C 276.964 47.796,276.400 48.049,276.400 48.829 C 276.400 49.284,276.138 49.919,275.817 50.240 C 275.496 50.561,275.287 51.043,275.351 51.312 C 275.416 51.580,275.393 51.665,275.301 51.500 C 274.998 50.959,274.400 51.186,274.400 51.843 C 274.400 52.272,274.184 52.403,273.749 52.236 C 273.213 52.030,273.138 52.188,273.325 53.124 C 273.650 54.749,272.516 55.600,270.029 55.600 C 268.950 55.600,268.007 55.761,267.933 55.957 C 267.860 56.154,264.651 56.420,260.803 56.548 C 256.603 56.689,253.751 56.946,253.670 57.191 C 253.595 57.416,252.991 57.600,252.329 57.600 C 251.456 57.600,251.067 57.823,250.913 58.411 C 250.755 59.015,250.483 59.162,249.850 58.985 C 249.220 58.809,249.146 58.848,249.565 59.137 C 250.044 59.468,250.029 59.628,249.465 60.192 C 249.099 60.558,248.800 61.189,248.800 61.595 C 248.800 62.001,248.597 62.401,248.349 62.484 C 248.102 62.566,247.855 63.076,247.800 63.617 C 247.746 64.158,247.679 64.825,247.651 65.100 C 247.623 65.375,247.165 65.600,246.633 65.600 C 246.102 65.600,245.607 65.758,245.533 65.952 C 245.460 66.146,241.726 66.407,237.235 66.533 C 232.745 66.659,228.965 66.925,228.835 67.123 C 228.706 67.322,227.925 67.609,227.100 67.760 C 226.181 67.930,225.600 68.261,225.600 68.618 C 225.600 68.965,225.214 69.200,224.643 69.200 C 223.667 69.200,223.200 69.858,223.200 71.233 C 223.200 71.655,222.975 72.003,222.700 72.006 C 221.628 72.019,220.941 72.761,221.600 73.194 C 222.112 73.530,222.097 73.589,221.492 73.594 C 220.938 73.599,220.839 73.817,221.036 74.600 C 221.276 75.558,221.210 75.600,219.443 75.600 C 218.430 75.600,217.600 75.759,217.600 75.954 C 217.600 76.148,214.180 76.439,210.000 76.600 C 203.058 76.867,201.504 77.122,202.900 77.763 C 203.175 77.889,202.995 77.892,202.500 77.769 C 201.434 77.505,200.000 77.892,200.000 78.444 C 200.000 78.816,199.660 79.297,198.460 80.625 C 198.164 80.953,197.819 81.979,197.695 82.905 C 197.470 84.583,196.841 85.600,196.029 85.600 C 195.793 85.600,195.600 85.762,195.600 85.959 C 195.600 86.156,191.903 86.381,187.385 86.459 C 181.861 86.554,179.077 86.748,178.885 87.052 C 178.728 87.300,177.655 87.632,176.500 87.789 C 174.628 88.044,174.400 88.179,174.400 89.038 C 174.400 90.150,173.746 90.335,173.476 89.300 C 173.302 88.633,173.291 88.633,173.246 89.300 C 173.221 89.685,173.020 90.000,172.800 90.000 C 172.580 90.000,172.400 90.270,172.400 90.600 C 172.400 90.930,172.142 91.200,171.827 91.200 C 171.201 91.200,170.610 92.568,170.978 93.164 C 171.104 93.368,170.936 93.807,170.604 94.139 C 170.272 94.471,170.000 94.936,170.000 95.171 C 170.000 95.413,169.213 95.600,168.200 95.600 C 167.210 95.600,166.400 95.752,166.400 95.938 C 166.400 96.123,163.310 96.386,159.533 96.522 C 155.027 96.684,152.569 96.927,152.382 97.230 C 152.177 97.562,152.040 97.538,151.894 97.145 C 151.739 96.727,151.556 96.777,151.107 97.361 C 150.760 97.812,150.321 97.998,150.030 97.819 C 149.741 97.640,149.227 97.850,148.781 98.328 C 148.244 98.905,148.165 99.199,148.512 99.340 C 148.885 99.492,148.875 99.627,148.470 99.912 C 148.178 100.117,147.839 101.031,147.717 101.942 C 147.595 102.854,147.338 103.600,147.147 103.600 C 146.611 103.600,146.737 104.708,147.300 104.936 C 147.677 105.089,147.655 105.240,147.207 105.550 C 146.533 106.019,146.466 129.536,147.138 129.973 C 147.331 130.098,147.587 135.822,147.707 142.693 L 147.926 155.187 150.393 157.593 C 151.750 158.917,152.944 160.000,153.047 160.000 C 153.228 160.000,153.843 160.475,154.985 161.500 C 155.633 162.081,156.800 162.168,156.800 161.636 C 156.800 161.436,158.330 161.144,160.200 160.989 C 162.070 160.833,163.600 160.547,163.600 160.353 C 163.600 160.159,164.320 160.000,165.200 160.000 C 166.080 160.000,166.800 159.834,166.800 159.632 C 166.800 159.429,167.970 159.138,169.400 158.985 C 170.830 158.832,172.000 158.564,172.000 158.389 C 172.000 158.214,172.720 157.949,173.600 157.800 C 174.480 157.651,175.200 157.380,175.200 157.197 C 175.200 157.013,175.740 156.745,176.400 156.600 C 177.060 156.455,177.600 156.171,177.600 155.968 C 177.600 155.766,177.851 155.600,178.157 155.600 C 178.464 155.600,178.818 155.330,178.945 155.000 C 179.071 154.670,179.541 154.400,179.987 154.400 C 180.434 154.400,180.800 154.228,180.800 154.018 C 180.800 153.808,181.430 153.518,182.200 153.374 C 182.970 153.229,183.600 152.964,183.600 152.784 C 183.600 152.605,184.590 152.334,185.800 152.183 C 187.010 152.032,188.000 151.767,188.000 151.596 C 188.000 151.424,189.440 151.156,191.200 151.000 C 192.960 150.844,194.400 150.555,194.400 150.358 C 194.400 150.161,195.120 150.000,196.000 150.000 C 196.880 150.000,197.600 149.841,197.600 149.646 C 197.600 149.451,198.590 149.168,199.800 149.017 C 201.010 148.866,202.000 148.586,202.000 148.396 C 202.000 148.205,202.810 147.928,203.800 147.779 C 204.790 147.631,205.600 147.369,205.600 147.198 C 205.600 147.027,206.050 146.774,206.600 146.636 C 207.150 146.498,207.600 146.208,207.600 145.992 C 207.600 145.777,207.870 145.600,208.200 145.600 C 208.530 145.600,208.800 145.434,208.800 145.232 C 208.800 145.029,209.340 144.745,210.000 144.600 C 210.660 144.455,211.200 144.173,211.200 143.973 C 211.200 143.773,211.920 143.494,212.800 143.354 C 213.680 143.213,214.400 142.954,214.400 142.778 C 214.400 142.602,215.390 142.334,216.600 142.183 C 217.810 142.032,218.800 141.767,218.800 141.596 C 218.800 141.424,220.240 141.156,222.000 141.000 C 223.760 140.844,225.200 140.555,225.200 140.358 C 225.200 140.161,225.830 140.000,226.600 140.000 C 227.370 140.000,228.000 139.845,228.000 139.656 C 228.000 139.466,228.931 139.201,230.070 139.066 C 231.208 138.931,232.243 138.662,232.370 138.468 C 232.496 138.274,233.275 137.991,234.100 137.840 C 234.925 137.688,235.600 137.406,235.600 137.214 C 235.600 137.021,236.140 136.745,236.800 136.600 C 237.460 136.455,238.000 136.171,238.000 135.968 C 238.000 135.766,238.270 135.600,238.600 135.600 C 238.930 135.600,239.200 135.423,239.200 135.208 C 239.200 134.992,239.650 134.702,240.200 134.564 C 240.750 134.426,241.200 134.176,241.200 134.008 C 241.200 133.840,241.920 133.587,242.800 133.446 C 243.680 133.306,244.400 133.033,244.400 132.841 C 244.400 132.649,245.390 132.368,246.600 132.217 C 247.810 132.066,248.800 131.794,248.800 131.613 C 248.800 131.432,250.240 131.156,252.000 131.000 C 253.967 130.826,255.202 130.540,255.206 130.258 C 255.211 129.925,255.292 129.922,255.506 130.246 C 255.668 130.491,256.205 130.819,256.700 130.973 C 257.195 131.128,257.600 131.422,257.600 131.627 C 257.600 131.832,257.830 132.000,258.111 132.000 C 258.392 132.000,258.920 132.315,259.283 132.700 C 259.646 133.085,260.226 133.632,260.572 133.916 C 261.135 134.378,261.200 138.655,261.200 175.416 C 261.200 198.050,261.354 216.400,261.544 216.400 C 261.734 216.400,261.999 217.331,262.134 218.470 C 262.269 219.608,262.549 220.645,262.758 220.774 C 262.966 220.903,263.260 221.501,263.412 222.104 C 263.563 222.707,263.847 223.200,264.043 223.200 C 264.240 223.200,264.400 223.451,264.400 223.757 C 264.400 224.064,264.670 224.418,265.000 224.545 C 265.450 224.717,265.600 224.479,265.600 223.587 C 265.600 222.934,265.764 222.400,265.965 222.400 C 266.166 222.400,266.451 221.680,266.600 220.800 C 266.749 219.920,267.015 219.200,267.192 219.200 C 267.369 219.200,267.628 218.741,267.769 218.181 C 267.910 217.620,268.615 216.585,269.336 215.881 C 270.057 215.176,270.765 214.285,270.911 213.900 C 271.056 213.515,271.451 213.200,271.787 213.200 C 272.124 213.200,272.400 213.023,272.400 212.808 C 272.400 212.592,272.850 212.302,273.400 212.164 C 273.950 212.026,274.400 211.772,274.400 211.600 C 274.400 211.428,274.850 211.174,275.400 211.036 C 276.052 210.872,276.400 210.505,276.400 209.980 C 276.400 209.537,276.670 209.071,277.000 208.945 C 277.330 208.818,277.600 208.462,277.600 208.153 C 277.600 207.845,277.960 207.284,278.400 206.907 C 278.840 206.530,279.200 205.902,279.200 205.511 C 279.200 205.120,279.380 204.800,279.600 204.800 C 279.820 204.800,280.000 204.530,280.000 204.200 C 280.000 203.870,280.186 203.600,280.413 203.600 C 280.639 203.600,280.944 203.285,281.090 202.900 C 281.433 201.994,282.224 201.200,282.784 201.200 C 283.027 201.200,283.329 200.930,283.455 200.600 C 283.582 200.270,284.011 200.000,284.409 200.000 C 284.808 200.000,285.224 199.775,285.335 199.500 C 285.496 199.100,285.543 199.100,285.568 199.500 C 285.586 199.782,286.124 200.000,286.800 200.000 C 287.460 200.000,288.000 200.172,288.000 200.382 C 288.000 200.592,288.630 200.882,289.400 201.026 C 290.170 201.171,290.800 201.449,290.800 201.645 C 290.800 201.840,291.007 202.000,291.260 202.000 C 291.512 202.000,292.314 202.585,293.041 203.300 C 294.900 205.127,295.505 205.600,295.983 205.600 C 296.212 205.600,296.400 205.769,296.400 205.975 C 296.400 206.182,297.210 206.472,298.200 206.621 C 299.190 206.769,300.000 207.031,300.000 207.202 C 300.000 207.373,300.450 207.626,301.000 207.764 C 301.550 207.902,302.000 208.178,302.000 208.376 C 302.000 208.574,302.532 208.853,303.182 208.996 C 303.845 209.142,304.471 209.595,304.609 210.028 C 304.744 210.453,305.136 210.800,305.480 210.800 C 306.068 210.800,310.000 214.459,310.000 215.006 C 310.000 215.351,311.077 216.400,311.431 216.400 C 311.590 216.400,312.331 217.030,313.079 217.800 C 313.827 218.570,314.700 219.200,315.019 219.200 C 315.339 219.200,315.600 219.380,315.600 219.600 C 315.600 219.820,315.794 220.000,316.032 220.000 C 316.594 220.000,320.000 223.406,320.000 223.968 C 320.000 224.206,320.180 224.400,320.400 224.400 C 320.620 224.400,320.800 224.940,320.800 225.600 C 320.800 226.260,320.620 226.800,320.400 226.800 C 320.180 226.800,320.000 227.070,320.000 227.400 C 320.000 227.730,319.820 228.000,319.600 228.000 C 319.380 228.000,319.200 228.272,319.200 228.605 C 319.200 228.938,318.120 230.300,316.800 231.632 C 315.480 232.965,314.400 234.222,314.400 234.427 C 314.400 234.632,314.245 234.800,314.056 234.800 C 313.866 234.800,313.601 235.731,313.466 236.870 C 313.331 238.008,313.059 239.043,312.861 239.170 C 312.663 239.296,312.374 239.985,312.218 240.700 C 312.063 241.415,311.765 242.000,311.556 242.000 C 311.346 242.000,311.057 242.306,310.914 242.680 C 310.770 243.054,309.353 244.660,307.763 246.250 C 306.173 247.839,304.754 249.513,304.610 249.970 C 304.465 250.426,304.193 250.800,304.005 250.800 C 303.817 250.800,303.548 251.325,303.407 251.967 C 303.266 252.608,302.892 253.233,302.576 253.354 C 302.259 253.476,302.000 253.851,302.000 254.187 C 302.000 254.524,301.844 254.800,301.652 254.800 C 301.461 254.800,301.206 255.408,301.086 256.151 C 300.866 257.501,297.753 261.200,296.836 261.200 C 296.596 261.200,296.400 261.360,296.400 261.557 C 296.400 261.753,295.950 262.026,295.400 262.164 C 294.850 262.302,294.400 262.682,294.400 263.008 C 294.400 263.333,294.223 263.600,294.008 263.600 C 293.792 263.600,293.502 264.050,293.364 264.600 C 293.226 265.150,292.973 265.600,292.802 265.600 C 292.631 265.600,292.369 266.410,292.221 267.400 C 292.072 268.390,291.782 269.200,291.575 269.200 C 291.369 269.200,291.200 269.498,291.200 269.861 C 291.200 270.627,288.125 273.600,287.333 273.600 C 287.040 273.600,286.800 273.780,286.800 274.000 C 286.800 274.220,286.570 274.400,286.289 274.400 C 285.555 274.400,284.400 275.870,284.400 276.805 C 284.400 277.242,284.236 277.600,284.035 277.600 C 283.834 277.600,283.549 278.320,283.400 279.200 C 283.251 280.080,282.980 280.800,282.797 280.800 C 282.613 280.800,282.348 281.325,282.207 281.967 C 282.066 282.608,281.692 283.233,281.376 283.354 C 281.059 283.476,280.800 283.811,280.800 284.099 C 280.800 284.387,280.440 284.883,280.000 285.200 C 279.560 285.517,279.200 285.985,279.200 286.240 C 279.200 286.707,276.198 290.000,275.772 290.000 C 275.379 290.000,274.400 291.121,274.400 291.571 C 274.400 291.807,274.220 292.000,274.000 292.000 C 273.780 292.000,273.600 292.276,273.600 292.613 C 273.600 292.949,273.329 293.329,272.998 293.456 C 272.667 293.583,272.283 294.388,272.147 295.244 C 272.010 296.100,271.764 296.800,271.601 296.800 C 271.438 296.800,271.200 297.446,271.072 298.236 C 270.943 299.026,270.502 299.971,270.091 300.336 C 269.681 300.701,269.228 301.315,269.085 301.700 C 268.942 302.085,268.549 302.400,268.213 302.400 C 267.876 302.400,267.600 302.568,267.600 302.773 C 267.600 302.978,267.222 303.266,266.761 303.413 C 265.317 303.871,264.400 305.109,264.400 306.600 C 264.400 307.370,264.243 308.000,264.052 308.000 C 263.860 308.000,263.580 309.248,263.430 310.774 C 263.280 312.300,262.988 313.605,262.781 313.674 C 262.574 313.743,262.287 315.465,262.143 317.500 C 261.998 319.535,261.727 321.200,261.540 321.200 C 261.353 321.200,261.200 337.940,261.200 358.400 C 261.200 382.933,261.336 395.600,261.600 395.600 C 261.820 395.600,262.000 396.056,262.000 396.613 C 262.000 397.169,262.254 397.722,262.564 397.841 C 262.874 397.961,263.237 398.495,263.372 399.029 C 263.522 399.630,263.904 400.000,264.374 400.000 C 264.792 400.000,265.209 400.225,265.301 400.500 C 265.542 401.214,280.464 401.207,280.703 400.492 C 280.793 400.222,281.372 400.000,281.991 400.000 C 282.621 400.000,283.216 399.736,283.345 399.400 C 283.471 399.070,284.031 398.800,284.587 398.800 C 285.144 398.800,285.600 398.620,285.600 398.400 C 285.600 398.180,285.872 398.000,286.204 398.000 C 286.536 398.000,287.116 397.640,287.493 397.200 C 287.870 396.760,288.326 396.400,288.507 396.400 C 288.688 396.400,289.286 395.950,289.836 395.400 C 290.386 394.850,291.098 394.400,291.418 394.400 C 291.738 394.400,292.000 394.222,292.000 394.005 C 292.000 393.787,292.720 393.494,293.600 393.354 C 294.480 393.213,295.200 392.961,295.200 392.795 C 295.200 392.628,296.235 392.363,297.500 392.205 C 298.765 392.048,299.935 391.712,300.100 391.459 C 300.315 391.130,300.512 391.170,300.794 391.600 C 301.022 391.948,301.190 392.003,301.194 391.732 C 301.198 391.452,302.246 391.152,303.800 390.985 C 305.230 390.832,306.400 390.548,306.400 390.353 C 306.400 390.159,306.940 390.000,307.600 390.000 C 308.260 390.000,308.800 389.834,308.800 389.632 C 308.800 389.429,309.340 389.145,310.000 389.000 C 310.660 388.855,311.200 388.571,311.200 388.368 C 311.200 388.166,311.472 388.000,311.804 388.000 C 312.136 388.000,312.716 387.640,313.093 387.200 C 313.470 386.760,314.086 386.400,314.462 386.400 C 314.838 386.400,315.256 386.053,315.391 385.628 C 315.529 385.195,316.155 384.742,316.818 384.596 C 317.468 384.453,318.000 384.173,318.000 383.973 C 318.000 383.773,318.720 383.494,319.600 383.354 C 320.480 383.213,321.200 382.961,321.200 382.795 C 321.200 382.628,322.190 382.368,323.400 382.217 C 324.610 382.066,325.600 381.799,325.600 381.623 C 325.600 381.447,327.040 381.178,328.800 381.024 C 330.560 380.871,332.000 380.577,332.000 380.373 C 332.000 380.168,332.360 380.000,332.800 380.000 C 333.240 380.000,333.600 379.836,333.600 379.635 C 333.600 379.434,334.320 379.149,335.200 379.000 C 336.080 378.851,336.800 378.566,336.800 378.365 C 336.800 378.164,337.057 378.000,337.371 378.000 C 337.686 378.000,338.189 377.754,338.490 377.453 C 338.791 377.152,339.434 376.780,339.919 376.626 C 340.409 376.470,340.800 376.018,340.800 375.605 C 340.800 375.106,341.193 374.777,342.000 374.600 C 342.660 374.455,343.200 374.191,343.200 374.014 C 343.200 373.836,344.010 373.569,345.000 373.421 C 345.990 373.272,346.800 373.003,346.800 372.822 C 346.800 372.642,348.195 372.364,349.900 372.205 C 351.605 372.046,353.103 371.751,353.228 371.551 C 353.353 371.350,354.928 371.073,356.728 370.934 C 358.528 370.795,360.000 370.528,360.000 370.341 C 360.000 370.153,360.450 370.000,361.000 370.000 C 361.550 370.000,362.000 369.834,362.000 369.632 C 362.000 369.429,362.540 369.145,363.200 369.000 C 363.860 368.855,364.400 368.571,364.400 368.368 C 364.400 368.166,364.795 368.000,365.277 368.000 C 365.779 368.000,366.769 367.340,367.597 366.452 C 368.390 365.601,369.436 364.779,369.920 364.625 C 370.404 364.472,370.800 364.178,370.800 363.973 C 370.800 363.768,371.070 363.600,371.400 363.600 C 371.730 363.600,372.000 363.370,372.000 363.089 C 372.000 362.808,372.360 362.270,372.800 361.893 C 373.240 361.516,373.600 360.976,373.600 360.692 C 373.600 360.409,373.960 359.917,374.400 359.600 C 374.840 359.283,375.200 358.833,375.200 358.601 C 375.200 358.101,376.354 357.057,377.314 356.688 C 377.951 356.444,377.993 347.794,377.988 217.143 C 377.984 138.230,378.133 77.759,378.331 77.629 C 378.523 77.503,378.791 73.982,378.926 69.805 C 379.078 65.149,379.333 62.156,379.586 62.071 C 380.162 61.879,380.104 60.915,379.500 60.633 C 379.100 60.447,379.100 60.353,379.500 60.167 C 379.823 60.016,380.000 59.036,380.000 57.400 C 380.000 56.007,380.179 54.807,380.398 54.733 C 380.617 54.660,380.894 52.890,381.014 50.800 C 381.133 48.710,381.404 46.940,381.616 46.867 C 382.169 46.675,382.089 45.703,381.500 45.464 C 381.113 45.307,381.124 45.174,381.549 44.877 C 381.916 44.620,382.146 43.394,382.243 41.173 C 382.335 39.080,382.575 37.734,382.894 37.527 C 383.291 37.271,383.270 37.115,382.800 36.806 C 382.470 36.589,382.403 36.409,382.652 36.406 C 382.950 36.402,383.202 34.569,383.393 31.000 C 383.552 28.030,383.844 25.600,384.041 25.600 C 384.238 25.600,384.400 25.330,384.400 25.000 C 384.400 24.670,384.220 24.400,384.000 24.400 C 383.777 24.400,383.600 23.319,383.600 21.956 C 383.600 19.475,382.622 17.625,381.300 17.607 C 381.025 17.603,380.800 17.369,380.800 17.088 C 380.800 16.712,379.708 16.545,376.700 16.463 C 374.445 16.401,372.540 16.182,372.467 15.975 C 372.296 15.496,361.312 15.478,361.133 15.957 M221.067 71.067 C 220.606 71.527,220.775 72.000,221.400 72.000 C 221.730 72.000,222.000 71.730,222.000 71.400 C 222.000 70.775,221.527 70.606,221.067 71.067 \\\"\\r\\n                stroke=\\\"none\\\"\\r\\n                fill=\\\"#fcdc04\\\"\\r\\n                fill-rule=\\\"evenodd\\\"\\r\\n              ></path>\\r\\n              <path\\r\\n                id=\\\"path4\\\"\\r\\n                d=\\\"M359.200 16.000 C 359.200 16.220,359.650 16.400,360.200 16.400 C 360.750 16.400,361.200 16.220,361.200 16.000 C 361.200 15.780,360.750 15.600,360.200 15.600 C 359.650 15.600,359.200 15.780,359.200 16.000 M383.600 27.000 C 383.600 27.330,383.780 27.600,384.000 27.600 C 384.220 27.600,384.400 27.330,384.400 27.000 C 384.400 26.670,384.220 26.400,384.000 26.400 C 383.780 26.400,383.600 26.670,383.600 27.000 M285.232 199.500 C 285.214 199.775,284.840 200.000,284.400 200.000 C 283.960 200.000,283.600 200.186,283.600 200.413 C 283.600 200.639,283.285 200.944,282.900 201.090 C 282.011 201.427,281.427 202.011,281.090 202.900 C 280.944 203.285,280.639 203.600,280.413 203.600 C 280.186 203.600,280.000 203.870,280.000 204.200 C 280.000 204.530,279.820 204.800,279.600 204.800 C 279.380 204.800,279.200 205.120,279.200 205.511 C 279.200 205.902,278.840 206.530,278.400 206.907 C 277.960 207.284,277.600 207.845,277.600 208.153 C 277.600 208.462,277.330 208.818,277.000 208.945 C 276.670 209.071,276.400 209.537,276.400 209.980 C 276.400 210.505,276.052 210.872,275.400 211.036 C 274.850 211.174,274.400 211.428,274.400 211.600 C 274.400 211.772,273.950 212.026,273.400 212.164 C 272.850 212.302,272.400 212.592,272.400 212.808 C 272.400 213.023,272.124 213.200,271.787 213.200 C 271.451 213.200,271.056 213.515,270.911 213.900 C 270.765 214.285,270.057 215.176,269.336 215.881 C 268.615 216.585,267.910 217.620,267.769 218.181 C 267.628 218.741,267.369 219.200,267.192 219.200 C 267.015 219.200,266.749 219.920,266.600 220.800 C 266.451 221.680,266.166 222.400,265.965 222.400 C 265.764 222.400,265.600 222.934,265.600 223.587 C 265.600 224.479,265.450 224.717,265.000 224.545 C 264.670 224.418,264.400 224.064,264.400 223.757 C 264.400 223.451,264.234 223.200,264.032 223.200 C 263.829 223.200,263.545 222.660,263.400 222.000 C 263.255 221.340,262.971 220.800,262.768 220.800 C 262.566 220.800,262.400 220.440,262.400 220.000 C 262.400 219.560,262.155 219.200,261.856 219.200 C 261.456 219.200,261.255 220.122,261.095 222.687 C 260.971 224.674,260.689 226.237,260.439 226.320 C 260.197 226.401,260.000 226.977,260.000 227.600 C 260.000 228.223,259.817 228.794,259.594 228.869 C 259.371 228.943,259.075 230.218,258.936 231.702 C 258.798 233.186,258.553 234.400,258.393 234.400 C 258.233 234.400,257.987 235.120,257.846 236.000 C 257.706 236.880,257.407 237.600,257.183 237.600 C 256.958 237.600,256.656 237.915,256.510 238.300 C 256.217 239.073,255.397 240.000,255.006 240.000 C 254.555 240.000,250.800 243.881,250.800 244.347 C 250.800 244.596,250.620 244.800,250.400 244.800 C 250.180 244.800,250.000 245.141,250.000 245.557 C 250.000 245.974,249.730 246.418,249.400 246.545 C 249.070 246.671,248.800 247.051,248.800 247.387 C 248.800 247.724,248.628 248.000,248.418 248.000 C 248.208 248.000,247.918 248.630,247.774 249.400 C 247.629 250.170,247.365 250.800,247.187 250.800 C 247.009 250.800,246.745 251.340,246.600 252.000 C 246.455 252.660,246.171 253.200,245.968 253.200 C 245.766 253.200,245.600 253.430,245.600 253.711 C 245.600 254.200,244.239 255.600,243.764 255.600 C 243.448 255.600,240.000 259.078,240.000 259.397 C 240.000 259.540,239.730 259.927,239.400 260.257 C 239.070 260.587,238.800 261.204,238.800 261.629 C 238.800 262.053,238.643 262.400,238.451 262.400 C 238.259 262.400,237.987 263.120,237.846 264.000 C 237.706 264.880,237.432 265.600,237.239 265.600 C 237.045 265.600,236.774 266.047,236.637 266.594 C 236.483 267.207,236.007 267.683,235.394 267.837 C 234.847 267.974,234.400 268.228,234.400 268.400 C 234.400 268.572,233.962 268.823,233.427 268.958 C 232.891 269.092,232.344 269.545,232.211 269.964 C 232.078 270.383,231.706 270.827,231.385 270.950 C 231.063 271.074,230.800 271.451,230.800 271.787 C 230.800 272.124,230.620 272.400,230.400 272.400 C 230.180 272.400,230.000 272.670,230.000 273.000 C 230.000 273.330,229.828 273.600,229.618 273.600 C 229.408 273.600,229.118 274.230,228.974 275.000 C 228.829 275.770,228.551 276.400,228.355 276.400 C 228.160 276.400,228.000 276.676,228.000 277.013 C 228.000 277.349,227.746 277.722,227.436 277.841 C 227.126 277.961,226.763 278.495,226.628 279.029 C 226.494 279.563,226.208 280.000,225.992 280.000 C 225.777 280.000,225.600 280.270,225.600 280.600 C 225.600 280.930,225.406 281.200,225.168 281.200 C 224.518 281.200,221.349 284.502,221.027 285.514 C 220.873 286.001,220.578 286.400,220.373 286.400 C 220.168 286.400,220.000 286.651,220.000 286.957 C 220.000 287.264,219.730 287.618,219.400 287.745 C 219.070 287.871,218.800 288.251,218.800 288.587 C 218.800 288.924,218.640 289.200,218.445 289.200 C 218.249 289.200,217.971 289.830,217.826 290.600 C 217.682 291.370,217.412 292.000,217.226 292.000 C 217.041 292.000,216.771 292.630,216.626 293.400 C 216.482 294.170,216.192 294.800,215.982 294.800 C 215.772 294.800,215.600 295.140,215.600 295.557 C 215.600 296.040,215.220 296.409,214.548 296.577 C 213.442 296.855,210.000 300.027,210.000 300.768 C 210.000 301.006,209.834 301.200,209.632 301.200 C 209.429 301.200,209.145 301.740,209.000 302.400 C 208.855 303.060,208.594 303.600,208.421 303.600 C 208.247 303.600,208.003 304.227,207.879 304.993 C 207.629 306.531,205.333 309.200,204.260 309.200 C 203.897 309.200,203.600 309.371,203.600 309.581 C 203.600 309.790,202.970 310.573,202.200 311.321 C 201.430 312.069,200.800 312.888,200.800 313.140 C 200.800 313.393,200.620 313.600,200.400 313.600 C 200.180 313.600,200.000 313.870,200.000 314.200 C 200.000 314.530,199.840 314.800,199.645 314.800 C 199.449 314.800,199.174 315.413,199.034 316.161 C 198.893 316.910,198.513 317.624,198.189 317.749 C 197.865 317.873,197.600 318.251,197.600 318.587 C 197.600 318.924,197.420 319.200,197.200 319.200 C 196.980 319.200,196.800 319.566,196.800 320.013 C 196.800 320.459,196.546 320.922,196.236 321.041 C 195.926 321.161,195.563 321.695,195.428 322.229 C 195.271 322.855,194.898 323.200,194.380 323.200 C 193.937 323.200,193.456 323.515,193.310 323.900 C 192.980 324.772,192.181 325.600,191.671 325.600 C 191.459 325.600,191.182 325.870,191.055 326.200 C 190.929 326.530,190.459 326.800,190.013 326.800 C 189.566 326.800,189.200 326.960,189.200 327.157 C 189.200 327.353,188.707 327.637,188.104 327.788 C 187.501 327.940,186.888 328.257,186.742 328.494 C 186.402 329.044,183.862 328.986,183.675 328.424 C 183.597 328.191,183.273 328.000,182.954 328.000 C 182.636 328.000,182.278 327.746,182.159 327.436 C 182.039 327.126,181.505 326.763,180.971 326.628 C 180.437 326.494,180.000 326.208,180.000 325.992 C 180.000 325.777,179.730 325.600,179.400 325.600 C 179.070 325.600,178.800 325.411,178.800 325.180 C 178.800 324.705,176.274 322.000,175.831 322.000 C 175.673 322.000,175.292 321.775,174.985 321.500 C 173.682 320.331,173.213 320.000,172.860 320.000 C 172.654 320.000,172.382 319.730,172.255 319.400 C 172.129 319.070,171.749 318.800,171.413 318.800 C 171.076 318.800,170.800 318.636,170.800 318.435 C 170.800 318.234,170.080 317.949,169.200 317.800 C 168.320 317.651,167.600 317.366,167.600 317.165 C 167.600 316.964,167.144 316.800,166.587 316.800 C 166.031 316.800,165.471 316.530,165.345 316.200 C 165.218 315.870,164.774 315.600,164.357 315.600 C 163.814 315.600,163.600 315.314,163.600 314.587 C 163.600 314.031,163.330 313.471,163.000 313.345 C 162.670 313.218,162.400 312.890,162.400 312.616 C 162.400 311.907,160.550 310.000,159.862 310.000 C 159.545 310.000,159.182 309.730,159.055 309.400 C 158.929 309.070,158.369 308.800,157.813 308.800 C 157.256 308.800,156.800 308.636,156.800 308.435 C 156.800 308.234,156.094 307.951,155.231 307.805 C 154.369 307.660,153.564 307.284,153.444 306.970 C 153.324 306.657,153.037 306.400,152.807 306.400 C 152.578 306.400,151.478 305.484,150.364 304.364 C 149.250 303.244,148.223 302.444,148.081 302.586 C 147.939 302.727,148.015 302.969,148.250 303.122 C 148.484 303.275,148.790 304.119,148.929 304.997 C 149.068 305.875,149.365 306.655,149.591 306.730 C 149.816 306.805,150.000 307.046,150.000 307.264 C 150.000 307.483,150.540 308.202,151.200 308.862 C 151.860 309.522,152.400 310.224,152.400 310.423 C 152.400 310.622,152.850 310.898,153.400 311.036 C 153.950 311.174,154.400 311.428,154.400 311.600 C 154.400 311.772,154.850 312.026,155.400 312.164 C 155.950 312.302,156.400 312.592,156.400 312.808 C 156.400 313.023,156.607 313.200,156.860 313.200 C 157.331 313.200,160.000 315.759,160.000 316.211 C 160.000 316.626,162.150 318.627,162.900 318.911 C 163.285 319.056,163.600 319.361,163.600 319.587 C 163.600 319.814,163.960 320.000,164.400 320.000 C 164.840 320.000,165.200 320.166,165.200 320.368 C 165.200 320.571,165.740 320.855,166.400 321.000 C 167.060 321.145,167.600 321.429,167.600 321.632 C 167.600 321.834,167.876 322.000,168.213 322.000 C 168.549 322.000,168.929 322.270,169.055 322.600 C 169.182 322.930,169.558 323.200,169.892 323.200 C 170.225 323.200,171.548 324.280,172.832 325.600 C 174.115 326.920,175.424 328.000,175.740 328.000 C 176.056 328.000,176.418 328.270,176.545 328.600 C 176.671 328.930,177.051 329.200,177.387 329.200 C 177.724 329.200,178.000 329.380,178.000 329.600 C 178.000 329.820,178.270 330.000,178.600 330.000 C 178.930 330.000,179.200 330.177,179.200 330.392 C 179.200 330.608,179.650 330.898,180.200 331.036 C 180.750 331.174,181.200 331.445,181.200 331.639 C 181.200 331.832,181.920 332.106,182.800 332.246 C 183.680 332.387,184.400 332.659,184.400 332.851 C 184.400 333.043,184.850 333.200,185.400 333.200 C 185.950 333.200,186.400 333.040,186.400 332.845 C 186.400 332.649,187.030 332.371,187.800 332.226 C 188.570 332.082,189.200 331.815,189.200 331.633 C 189.200 331.451,189.920 331.187,190.800 331.046 C 191.680 330.906,192.400 330.613,192.400 330.395 C 192.400 330.178,192.670 330.000,193.000 330.000 C 193.330 330.000,193.600 329.832,193.600 329.627 C 193.600 329.422,193.992 329.130,194.471 328.978 C 195.632 328.609,198.000 326.277,198.000 325.502 C 198.000 325.163,198.270 324.782,198.600 324.655 C 198.930 324.529,199.200 324.189,199.200 323.901 C 199.200 323.613,199.553 323.122,199.985 322.811 C 200.417 322.499,200.881 321.740,201.017 321.122 C 201.153 320.505,201.415 320.000,201.600 320.000 C 201.785 320.000,202.055 319.460,202.200 318.800 C 202.345 318.140,202.621 317.600,202.814 317.600 C 203.006 317.600,203.281 316.976,203.424 316.214 C 203.579 315.386,203.975 314.735,204.405 314.598 C 204.802 314.473,205.227 314.106,205.350 313.785 C 205.474 313.463,205.769 313.200,206.007 313.200 C 206.685 313.200,209.200 310.590,209.200 309.887 C 209.200 309.539,209.560 309.140,210.000 309.000 C 210.552 308.825,210.877 308.260,211.051 307.173 C 211.189 306.308,211.440 305.600,211.608 305.600 C 211.776 305.600,212.026 305.150,212.164 304.600 C 212.302 304.050,212.592 303.600,212.808 303.600 C 213.023 303.600,213.200 303.381,213.200 303.113 C 213.200 302.494,215.150 300.800,215.862 300.800 C 216.158 300.800,216.400 300.634,216.400 300.431 C 216.400 300.228,216.940 299.522,217.600 298.862 C 218.260 298.202,218.800 297.462,218.800 297.218 C 218.800 296.974,219.070 296.671,219.400 296.545 C 219.730 296.418,220.000 295.974,220.000 295.557 C 220.000 295.141,220.166 294.800,220.368 294.800 C 220.571 294.800,220.855 294.260,221.000 293.600 C 221.145 292.940,221.429 292.400,221.632 292.400 C 221.834 292.400,222.000 292.124,222.000 291.787 C 222.000 291.451,222.270 291.071,222.600 290.945 C 222.930 290.818,223.200 290.399,223.200 290.013 C 223.200 289.628,223.650 288.974,224.200 288.561 C 224.750 288.148,225.200 287.643,225.200 287.439 C 225.200 287.052,225.458 286.746,227.791 284.360 C 228.566 283.567,229.200 282.712,229.200 282.460 C 229.200 282.207,229.380 282.000,229.600 282.000 C 229.820 282.000,230.000 281.730,230.000 281.400 C 230.000 281.070,230.177 280.800,230.392 280.800 C 230.608 280.800,230.898 280.350,231.036 279.800 C 231.174 279.250,231.439 278.800,231.625 278.800 C 231.811 278.800,232.090 278.130,232.243 277.310 C 232.397 276.491,232.765 275.578,233.061 275.281 C 233.358 274.985,233.600 274.498,233.600 274.198 C 233.600 273.899,233.960 273.540,234.400 273.400 C 234.840 273.260,235.200 272.978,235.200 272.773 C 235.200 272.568,235.415 272.400,235.677 272.400 C 236.312 272.400,239.200 269.279,239.200 268.593 C 239.200 268.297,239.538 267.947,239.951 267.816 C 240.451 267.657,240.786 267.047,240.955 265.989 C 241.095 265.115,241.387 264.400,241.605 264.400 C 241.822 264.400,242.000 264.144,242.000 263.831 C 242.000 263.518,242.540 262.722,243.200 262.062 C 243.860 261.402,244.400 260.668,244.400 260.431 C 244.400 260.194,244.594 260.000,244.832 260.000 C 245.573 260.000,248.745 256.558,249.023 255.452 C 249.168 254.874,249.447 254.400,249.643 254.400 C 249.840 254.400,250.000 254.130,250.000 253.800 C 250.000 253.470,250.177 253.200,250.392 253.200 C 250.608 253.200,250.898 252.750,251.036 252.200 C 251.174 251.650,251.428 251.200,251.600 251.200 C 251.772 251.200,252.026 250.750,252.164 250.200 C 252.302 249.650,252.578 249.200,252.776 249.200 C 252.974 249.200,253.253 248.668,253.396 248.018 C 253.542 247.355,253.995 246.729,254.428 246.591 C 254.853 246.456,255.200 245.998,255.200 245.573 C 255.200 245.148,255.401 244.800,255.647 244.800 C 256.178 244.800,259.200 241.853,259.200 241.335 C 259.200 241.138,259.553 240.722,259.985 240.411 C 260.417 240.099,260.881 239.340,261.017 238.722 C 261.153 238.105,261.415 237.600,261.600 237.600 C 261.785 237.600,262.061 237.033,262.213 236.339 C 262.453 235.247,263.078 234.475,265.031 232.855 C 265.268 232.659,265.881 232.365,266.393 232.202 C 267.206 231.944,267.945 231.278,269.594 229.317 C 269.817 229.051,270.000 228.646,270.000 228.417 C 270.000 228.188,270.178 228.000,270.395 228.000 C 270.613 228.000,270.904 227.291,271.042 226.425 C 271.181 225.558,271.543 224.754,271.847 224.637 C 272.151 224.521,272.400 224.149,272.400 223.813 C 272.400 223.476,272.577 223.200,272.792 223.200 C 273.008 223.200,273.296 222.756,273.432 222.214 C 273.568 221.672,274.012 221.123,274.419 220.994 C 274.826 220.865,275.270 220.408,275.406 219.980 C 275.543 219.551,275.898 219.200,276.196 219.200 C 276.914 219.200,279.200 216.894,279.200 216.169 C 279.200 215.856,279.380 215.600,279.600 215.600 C 279.820 215.600,280.000 215.396,280.000 215.146 C 280.000 214.896,280.429 214.294,280.953 213.808 C 281.477 213.322,282.030 212.537,282.180 212.062 C 282.331 211.588,282.602 211.200,282.784 211.200 C 282.965 211.200,283.226 210.750,283.364 210.200 C 283.502 209.650,283.792 209.200,284.008 209.200 C 284.223 209.200,284.400 208.945,284.400 208.633 C 284.400 208.322,284.625 207.991,284.900 207.898 C 285.565 207.675,286.800 208.011,286.800 208.415 C 286.800 208.592,287.340 208.855,288.000 209.000 C 288.660 209.145,289.200 209.429,289.200 209.632 C 289.200 209.834,289.650 210.000,290.200 210.000 C 290.750 210.000,291.200 210.159,291.200 210.354 C 291.200 210.549,292.190 210.832,293.400 210.983 C 294.610 211.134,295.600 211.410,295.600 211.597 C 295.600 211.784,296.140 212.055,296.800 212.200 C 297.460 212.345,298.000 212.617,298.000 212.805 C 298.000 212.993,298.405 213.273,298.900 213.429 C 300.000 213.774,302.400 216.242,302.400 217.028 C 302.400 217.343,302.656 217.600,302.969 217.600 C 303.282 217.600,304.078 218.140,304.738 218.800 C 305.398 219.460,306.063 220.000,306.216 220.000 C 306.369 220.000,307.192 220.720,308.046 221.600 C 308.900 222.480,309.799 223.200,310.043 223.200 C 311.530 223.200,313.042 226.179,311.798 226.656 C 311.467 226.783,311.083 227.588,310.947 228.444 C 310.810 229.300,310.541 230.000,310.349 230.000 C 310.157 230.000,310.000 230.270,310.000 230.600 C 310.000 230.930,309.841 231.200,309.646 231.200 C 309.451 231.200,309.168 232.190,309.017 233.400 C 308.866 234.610,308.595 235.600,308.415 235.600 C 308.234 235.600,307.974 236.050,307.836 236.600 C 307.698 237.150,307.408 237.600,307.192 237.600 C 306.977 237.600,306.800 237.806,306.800 238.057 C 306.800 238.532,304.604 240.800,304.144 240.800 C 303.620 240.800,301.291 243.482,300.992 244.429 C 300.824 244.963,300.363 245.681,299.970 246.024 C 299.576 246.367,299.132 247.132,298.983 247.724 C 298.835 248.316,298.567 248.800,298.388 248.800 C 298.210 248.800,297.945 249.340,297.800 250.000 C 297.655 250.660,297.374 251.200,297.176 251.200 C 296.978 251.200,296.702 251.650,296.564 252.200 C 296.426 252.750,296.153 253.200,295.957 253.200 C 295.760 253.200,295.600 253.406,295.600 253.657 C 295.600 254.123,293.409 256.400,292.960 256.400 C 292.542 256.400,290.814 258.175,290.807 258.612 C 290.803 258.838,290.435 259.286,289.989 259.608 C 289.538 259.933,289.072 260.858,288.938 261.696 C 288.806 262.523,288.549 263.200,288.367 263.200 C 288.185 263.200,287.915 263.847,287.766 264.638 C 287.499 266.061,285.235 268.800,284.325 268.800 C 283.717 268.800,280.800 272.000,280.800 272.667 C 280.800 272.960,280.620 273.200,280.400 273.200 C 280.180 273.200,280.000 273.470,280.000 273.800 C 280.000 274.130,279.834 274.400,279.632 274.400 C 279.429 274.400,279.145 274.940,279.000 275.600 C 278.855 276.260,278.571 276.800,278.368 276.800 C 278.166 276.800,278.000 277.072,278.000 277.404 C 278.000 277.736,277.640 278.316,277.200 278.693 C 276.760 279.070,276.400 279.608,276.400 279.889 C 276.400 280.517,274.964 282.000,274.356 282.000 C 273.742 282.000,272.015 283.690,272.007 284.300 C 272.003 284.575,271.823 284.800,271.608 284.800 C 271.392 284.800,271.102 285.250,270.964 285.800 C 270.826 286.350,270.553 286.800,270.357 286.800 C 270.160 286.800,270.000 287.070,270.000 287.400 C 270.000 287.730,269.823 288.000,269.608 288.000 C 269.392 288.000,269.102 288.450,268.964 289.000 C 268.826 289.550,268.567 290.000,268.388 290.000 C 268.210 290.000,267.945 290.540,267.800 291.200 C 267.655 291.860,267.394 292.400,267.221 292.400 C 267.047 292.400,266.805 293.011,266.684 293.758 C 266.445 295.235,265.326 296.800,264.511 296.800 C 263.832 296.800,260.800 299.944,260.800 300.648 C 260.800 300.952,260.620 301.200,260.400 301.200 C 260.180 301.200,260.000 301.470,260.000 301.800 C 260.000 302.130,259.822 302.400,259.605 302.400 C 259.387 302.400,259.094 303.120,258.954 304.000 C 258.813 304.880,258.555 305.600,258.381 305.600 C 258.206 305.600,257.945 306.140,257.800 306.800 C 257.655 307.460,257.383 308.000,257.195 308.000 C 257.007 308.000,256.728 308.397,256.574 308.881 C 256.254 309.891,255.442 310.800,254.859 310.800 C 254.251 310.800,252.000 313.186,252.000 313.831 C 252.000 314.144,251.834 314.400,251.632 314.400 C 251.429 314.400,251.145 314.940,251.000 315.600 C 250.855 316.260,250.571 316.800,250.368 316.800 C 250.166 316.800,250.000 317.070,250.000 317.400 C 250.000 317.730,249.823 318.000,249.608 318.000 C 249.392 318.000,249.102 318.450,248.964 319.000 C 248.826 319.550,248.572 320.000,248.400 320.000 C 248.228 320.000,247.974 320.450,247.836 321.000 C 247.698 321.550,247.408 322.000,247.192 322.000 C 246.977 322.000,246.800 322.201,246.800 322.447 C 246.800 322.692,245.720 323.960,244.400 325.264 C 243.080 326.567,242.000 327.877,242.000 328.174 C 242.000 328.471,241.730 328.818,241.400 328.945 C 241.070 329.071,240.800 329.541,240.800 329.987 C 240.800 330.434,240.620 330.800,240.400 330.800 C 240.180 330.800,240.000 331.070,240.000 331.400 C 240.000 331.730,239.834 332.000,239.632 332.000 C 239.429 332.000,239.145 332.540,239.000 333.200 C 238.855 333.860,238.590 334.400,238.412 334.400 C 238.233 334.400,237.968 334.873,237.823 335.451 C 237.510 336.699,235.728 338.578,234.485 338.973 C 233.998 339.128,233.600 339.408,233.600 339.596 C 233.600 339.784,233.069 340.469,232.420 341.118 C 231.772 341.767,231.122 342.771,230.977 343.349 C 230.832 343.927,230.553 344.400,230.357 344.400 C 230.160 344.400,230.000 344.670,230.000 345.000 C 230.000 345.330,229.840 345.600,229.643 345.600 C 229.447 345.600,229.174 346.050,229.036 346.600 C 228.898 347.150,228.608 347.600,228.392 347.600 C 228.177 347.600,228.000 347.876,228.000 348.213 C 228.000 348.549,227.730 348.929,227.400 349.055 C 227.070 349.182,226.800 349.586,226.800 349.954 C 226.800 350.622,225.490 352.000,224.854 352.000 C 224.272 352.000,222.506 353.836,222.220 354.738 C 222.069 355.212,221.793 355.600,221.605 355.600 C 221.417 355.600,221.145 356.140,221.000 356.800 C 220.855 357.460,220.571 358.000,220.368 358.000 C 220.166 358.000,220.000 358.270,220.000 358.600 C 220.000 358.930,219.823 359.200,219.608 359.200 C 219.392 359.200,219.102 359.650,218.964 360.200 C 218.826 360.750,218.567 361.200,218.388 361.200 C 218.210 361.200,217.945 361.740,217.800 362.400 C 217.655 363.060,217.371 363.600,217.168 363.600 C 216.966 363.600,216.800 363.857,216.800 364.172 C 216.800 364.958,214.400 367.426,213.300 367.771 C 212.805 367.927,212.400 368.284,212.400 368.566 C 212.400 368.847,212.040 369.493,211.600 370.000 C 211.160 370.507,210.800 371.165,210.800 371.461 C 210.800 371.758,210.620 372.000,210.400 372.000 C 210.180 372.000,210.000 372.270,210.000 372.600 C 210.000 372.930,209.834 373.200,209.632 373.200 C 209.429 373.200,209.145 373.740,209.000 374.400 C 208.855 375.060,208.571 375.600,208.368 375.600 C 208.166 375.600,208.000 375.848,208.000 376.152 C 208.000 376.906,204.945 380.000,204.200 380.000 C 203.870 380.000,203.600 380.180,203.600 380.400 C 203.600 380.620,203.324 380.800,202.987 380.800 C 202.651 380.800,202.271 381.070,202.145 381.400 C 202.018 381.730,201.660 382.000,201.349 382.000 C 201.037 382.000,199.821 382.961,198.647 384.136 C 197.472 385.311,196.223 386.382,195.871 386.518 C 195.128 386.802,192.636 384.573,192.215 383.248 C 192.067 382.782,191.716 382.400,191.434 382.400 C 191.153 382.400,190.507 382.040,190.000 381.600 C 189.493 381.160,188.835 380.800,188.539 380.800 C 188.242 380.800,188.000 380.620,188.000 380.400 C 188.000 380.180,187.730 380.000,187.400 380.000 C 187.070 380.000,186.800 379.820,186.800 379.600 C 186.800 379.380,186.453 379.200,186.029 379.200 C 185.604 379.200,184.987 378.930,184.657 378.600 C 184.327 378.270,183.878 378.000,183.659 378.000 C 183.441 378.000,182.729 377.439,182.078 376.752 C 178.506 372.985,176.506 371.242,175.452 370.977 C 174.874 370.832,174.400 370.553,174.400 370.357 C 174.400 370.160,174.130 370.000,173.800 370.000 C 173.470 370.000,173.200 369.834,173.200 369.632 C 173.200 369.429,172.660 369.145,172.000 369.000 C 171.340 368.855,170.800 368.583,170.800 368.395 C 170.800 368.207,170.395 367.927,169.900 367.771 C 169.405 367.616,168.604 367.064,168.119 366.544 C 167.635 366.025,167.050 365.600,166.819 365.600 C 166.589 365.600,166.400 365.330,166.400 365.000 C 166.400 364.670,166.130 364.400,165.800 364.400 C 165.470 364.400,165.200 364.130,165.200 363.800 C 165.200 363.470,164.885 363.192,164.500 363.183 C 164.115 363.174,163.358 362.634,162.819 361.983 C 162.279 361.332,161.604 360.800,161.319 360.800 C 161.033 360.800,160.800 360.620,160.800 360.400 C 160.800 360.180,160.440 360.000,160.000 360.000 C 159.560 360.000,159.200 359.840,159.200 359.643 C 159.200 359.447,158.707 359.163,158.104 359.012 C 157.501 358.860,156.887 358.541,156.739 358.302 C 156.410 357.768,152.652 357.860,152.467 358.406 C 152.393 358.623,152.065 358.800,151.738 358.800 C 151.225 358.800,151.230 358.887,151.771 359.429 C 152.117 359.774,152.400 360.224,152.400 360.429 C 152.400 360.633,152.642 360.800,152.939 360.800 C 153.235 360.800,153.893 361.160,154.400 361.600 C 154.907 362.040,155.565 362.400,155.861 362.400 C 156.158 362.400,156.400 362.580,156.400 362.800 C 156.400 363.020,156.676 363.200,157.013 363.200 C 157.349 363.200,157.729 363.470,157.855 363.800 C 157.982 364.130,158.309 364.400,158.582 364.400 C 159.203 364.400,160.800 365.759,160.800 366.289 C 160.800 367.075,162.804 368.821,163.976 369.055 C 164.636 369.187,165.280 369.621,165.406 370.020 C 165.533 370.418,166.168 370.861,166.818 371.004 C 167.468 371.147,168.000 371.426,168.000 371.624 C 168.000 371.822,168.450 372.098,169.000 372.236 C 169.550 372.374,170.000 372.645,170.000 372.839 C 170.000 373.032,170.720 373.306,171.600 373.446 C 172.480 373.587,173.200 373.845,173.200 374.019 C 173.200 374.194,173.740 374.455,174.400 374.600 C 175.225 374.781,175.600 375.103,175.600 375.632 C 175.600 376.054,175.786 376.400,176.013 376.400 C 176.239 376.400,176.544 376.715,176.689 377.100 C 176.835 377.485,177.459 378.309,178.077 378.931 C 178.695 379.553,179.200 380.208,179.200 380.386 C 179.200 380.565,179.817 380.827,180.571 380.968 C 181.325 381.110,182.004 381.411,182.079 381.638 C 182.155 381.866,182.978 382.154,183.909 382.278 C 184.839 382.403,185.600 382.650,185.600 382.826 C 185.600 383.002,185.978 383.266,186.439 383.413 C 187.542 383.762,188.800 385.041,188.800 385.813 C 188.800 386.149,189.070 386.529,189.400 386.655 C 189.730 386.782,190.000 387.044,190.000 387.238 C 190.000 387.733,191.302 389.200,191.742 389.200 C 191.942 389.200,192.458 389.605,192.887 390.100 C 193.757 391.102,197.605 391.385,197.910 390.469 C 197.996 390.211,198.322 390.000,198.633 390.000 C 198.945 390.000,199.200 389.832,199.200 389.627 C 199.200 389.422,199.592 389.130,200.071 388.978 C 201.262 388.600,203.600 386.269,203.600 385.460 C 203.600 385.063,203.924 384.800,204.413 384.800 C 204.859 384.800,205.322 384.546,205.441 384.236 C 205.561 383.926,206.118 383.557,206.680 383.416 C 207.777 383.140,210.000 381.141,210.000 380.431 C 210.000 380.194,210.177 380.000,210.392 380.000 C 210.608 380.000,210.898 379.550,211.036 379.000 C 211.174 378.450,211.431 378.000,211.608 378.000 C 211.785 378.000,212.051 377.280,212.200 376.400 C 212.349 375.520,212.634 374.800,212.835 374.800 C 213.036 374.800,213.200 374.524,213.200 374.187 C 213.200 373.851,213.470 373.471,213.800 373.345 C 214.130 373.218,214.400 372.941,214.400 372.729 C 214.400 372.204,215.440 371.200,215.984 371.200 C 216.227 371.200,216.529 370.930,216.655 370.600 C 216.782 370.270,217.044 370.000,217.238 370.000 C 217.766 370.000,219.200 368.684,219.200 368.199 C 219.200 367.967,219.560 367.517,220.000 367.200 C 220.440 366.883,220.800 366.207,220.800 365.699 C 220.800 365.191,221.059 364.676,221.376 364.554 C 221.692 364.433,222.066 363.808,222.207 363.167 C 222.348 362.525,222.610 362.000,222.788 362.000 C 222.967 362.000,223.226 361.550,223.364 361.000 C 223.502 360.450,223.792 360.000,224.008 360.000 C 224.223 360.000,224.400 359.730,224.400 359.400 C 224.400 359.070,224.580 358.800,224.800 358.800 C 225.020 358.800,225.200 358.530,225.200 358.200 C 225.200 357.870,225.380 357.600,225.600 357.600 C 226.213 357.600,227.600 356.075,227.600 355.400 C 227.600 355.070,227.876 354.800,228.213 354.800 C 228.549 354.800,228.942 354.485,229.085 354.100 C 229.228 353.715,229.762 353.034,230.272 352.587 C 230.783 352.140,231.200 351.555,231.200 351.287 C 231.200 351.019,231.364 350.800,231.565 350.800 C 231.766 350.800,232.051 350.080,232.200 349.200 C 232.349 348.320,232.611 347.600,232.783 347.600 C 232.955 347.600,233.200 346.954,233.328 346.164 C 233.563 344.718,234.861 343.200,235.861 343.200 C 236.158 343.200,236.400 343.014,236.400 342.787 C 236.400 342.561,236.715 342.256,237.100 342.111 C 237.859 341.824,240.000 339.824,240.000 339.402 C 240.000 339.260,240.270 338.873,240.600 338.543 C 240.930 338.213,241.200 337.596,241.200 337.171 C 241.200 336.747,241.360 336.400,241.555 336.400 C 241.751 336.400,242.029 335.770,242.174 335.000 C 242.318 334.230,242.608 333.600,242.818 333.600 C 243.028 333.600,243.200 333.404,243.200 333.164 C 243.200 332.685,246.652 329.200,247.126 329.200 C 247.538 329.200,248.800 327.679,248.800 327.183 C 248.800 326.958,249.070 326.671,249.400 326.545 C 249.730 326.418,250.000 325.993,250.000 325.600 C 250.000 325.207,250.270 324.782,250.600 324.655 C 250.930 324.529,251.200 324.149,251.200 323.813 C 251.200 323.476,251.366 323.200,251.568 323.200 C 251.771 323.200,252.055 322.660,252.200 322.000 C 252.345 321.340,252.609 320.800,252.787 320.800 C 252.965 320.800,253.229 320.170,253.374 319.400 C 253.518 318.630,253.808 318.000,254.018 318.000 C 254.228 318.000,254.400 317.730,254.400 317.400 C 254.400 317.070,254.580 316.800,254.800 316.800 C 255.020 316.800,255.200 316.530,255.200 316.200 C 255.200 315.870,255.470 315.600,255.800 315.600 C 256.130 315.600,256.400 315.780,256.400 316.000 C 256.400 316.220,256.607 316.400,256.860 316.400 C 257.428 316.400,260.000 319.004,260.000 319.580 C 260.000 319.811,260.180 320.000,260.400 320.000 C 260.620 320.000,260.800 320.270,260.800 320.600 C 260.800 320.930,261.043 321.200,261.340 321.200 C 261.736 321.200,261.950 320.210,262.143 317.500 C 262.287 315.465,262.574 313.743,262.781 313.674 C 262.988 313.605,263.280 312.300,263.430 310.774 C 263.580 309.248,263.860 308.000,264.052 308.000 C 264.243 308.000,264.400 307.370,264.400 306.600 C 264.400 305.109,265.317 303.871,266.761 303.413 C 267.222 303.266,267.600 302.978,267.600 302.773 C 267.600 302.568,267.876 302.400,268.213 302.400 C 268.549 302.400,268.942 302.085,269.085 301.700 C 269.228 301.315,269.681 300.701,270.091 300.336 C 270.502 299.971,270.943 299.026,271.072 298.236 C 271.200 297.446,271.438 296.800,271.601 296.800 C 271.764 296.800,272.010 296.100,272.147 295.244 C 272.283 294.388,272.667 293.583,272.998 293.456 C 273.329 293.329,273.600 292.949,273.600 292.613 C 273.600 292.276,273.780 292.000,274.000 292.000 C 274.220 292.000,274.400 291.807,274.400 291.571 C 274.400 291.121,275.379 290.000,275.772 290.000 C 276.198 290.000,279.200 286.707,279.200 286.240 C 279.200 285.985,279.560 285.517,280.000 285.200 C 280.440 284.883,280.800 284.387,280.800 284.099 C 280.800 283.811,281.059 283.476,281.376 283.354 C 281.692 283.233,282.066 282.608,282.207 281.967 C 282.348 281.325,282.613 280.800,282.797 280.800 C 282.980 280.800,283.251 280.080,283.400 279.200 C 283.549 278.320,283.834 277.600,284.035 277.600 C 284.236 277.600,284.400 277.242,284.400 276.805 C 284.400 275.870,285.555 274.400,286.289 274.400 C 286.570 274.400,286.800 274.220,286.800 274.000 C 286.800 273.780,287.040 273.600,287.333 273.600 C 288.125 273.600,291.200 270.627,291.200 269.861 C 291.200 269.498,291.369 269.200,291.575 269.200 C 291.782 269.200,292.072 268.390,292.221 267.400 C 292.369 266.410,292.631 265.600,292.802 265.600 C 292.973 265.600,293.226 265.150,293.364 264.600 C 293.502 264.050,293.792 263.600,294.008 263.600 C 294.223 263.600,294.400 263.333,294.400 263.008 C 294.400 262.682,294.850 262.302,295.400 262.164 C 295.950 262.026,296.400 261.753,296.400 261.557 C 296.400 261.360,296.596 261.200,296.836 261.200 C 297.753 261.200,300.866 257.501,301.086 256.151 C 301.206 255.408,301.461 254.800,301.652 254.800 C 301.844 254.800,302.000 254.524,302.000 254.187 C 302.000 253.851,302.259 253.476,302.576 253.354 C 302.892 253.233,303.266 252.608,303.407 251.967 C 303.548 251.325,303.817 250.800,304.005 250.800 C 304.193 250.800,304.465 250.426,304.610 249.970 C 304.754 249.513,306.173 247.839,307.763 246.250 C 309.353 244.660,310.770 243.054,310.914 242.680 C 311.057 242.306,311.346 242.000,311.556 242.000 C 311.765 242.000,312.063 241.415,312.218 240.700 C 312.374 239.985,312.663 239.296,312.861 239.170 C 313.059 239.043,313.331 238.008,313.466 236.870 C 313.601 235.731,313.866 234.800,314.056 234.800 C 314.245 234.800,314.400 234.632,314.400 234.427 C 314.400 234.222,315.480 232.965,316.800 231.632 C 318.120 230.300,319.200 228.938,319.200 228.605 C 319.200 228.272,319.380 228.000,319.600 228.000 C 319.820 228.000,320.000 227.730,320.000 227.400 C 320.000 227.070,320.180 226.800,320.400 226.800 C 320.620 226.800,320.800 226.260,320.800 225.600 C 320.800 224.940,320.620 224.400,320.400 224.400 C 320.180 224.400,320.000 224.206,320.000 223.968 C 320.000 223.406,316.594 220.000,316.032 220.000 C 315.794 220.000,315.600 219.820,315.600 219.600 C 315.600 219.380,315.339 219.200,315.019 219.200 C 314.700 219.200,313.827 218.570,313.079 217.800 C 312.331 217.030,311.590 216.400,311.431 216.400 C 311.077 216.400,310.000 215.351,310.000 215.006 C 310.000 214.459,306.068 210.800,305.480 210.800 C 305.136 210.800,304.744 210.453,304.609 210.028 C 304.471 209.595,303.845 209.142,303.182 208.996 C 302.532 208.853,302.000 208.574,302.000 208.376 C 302.000 208.178,301.550 207.902,301.000 207.764 C 300.450 207.626,300.000 207.373,300.000 207.202 C 300.000 207.031,299.190 206.769,298.200 206.621 C 297.210 206.472,296.400 206.182,296.400 205.975 C 296.400 205.769,296.212 205.600,295.983 205.600 C 295.505 205.600,294.900 205.127,293.041 203.300 C 292.314 202.585,291.512 202.000,291.260 202.000 C 291.007 202.000,290.800 201.840,290.800 201.645 C 290.800 201.449,290.170 201.171,289.400 201.026 C 288.630 200.882,288.000 200.592,288.000 200.382 C 288.000 200.172,287.475 200.000,286.833 200.000 C 286.192 200.000,285.576 199.775,285.465 199.500 C 285.304 199.100,285.257 199.100,285.232 199.500 \\\"\\r\\n                stroke=\\\"none\\\"\\r\\n                fill=\\\"#e1e471\\\"\\r\\n                fill-rule=\\\"evenodd\\\"\\r\\n              ></path>\\r\\n            </g>\\r\\n          </svg>\\r\\n          Right Invoices</span\\r\\n        >\\r\\n      </div>\\r\\n    </div>\\r\\n    <div style=\\\"margin-bottom:5px\\\"></div>\\r\\n    <hr />\\r\\n    <div style=\\\"margin-bottom:5px\\\"></div>\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n      <div\\r\\n        fxFlex=\\\"100\\\"\\r\\n        fxFlex.md=\\\"100\\\"\\r\\n        fxFlex.lg=\\\"100\\\"\\r\\n        fxFlex.xs=\\\"100\\\"\\r\\n        fxFlex.sm=\\\"100\\\"\\r\\n      >\\r\\n        <p\\r\\n          style=\\\"font-family: arial,sans-serif;font-size: 12px;text-align: center;\\\"\\r\\n        >\\r\\n          <span>{{ dataSource.company.name }},</span>\\r\\n          <span>{{ dataSource.company.address.city }},</span>\\r\\n          <span>Street No : {{ dataSource.company.address.street }},</span>\\r\\n          <span>{{ dataSource.company.address.city }},</span>\\r\\n          <span>\\r\\n            {{ dataSource.company.address.state }} -\\r\\n            {{ dataSource.company.address.zipCode }}</span\\r\\n          >\\r\\n        </p>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/payment/pm.payment-dialog-content.component.html\n// module id = ../../../../../src/app/components/admin/payment/pm.payment-dialog-content.component.html\n// module chunks = 1","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"table {\\n  font-family: arial, sans-serif;\\n  border-collapse: collapse;\\n  width: 100%; }\\n\\ntd,\\nth {\\n  border: 1px solid #dddddd;\\n  text-align: left;\\n  padding: 8px; }\\n\\ntable th {\\n  color: black;\\n  font-weight: 600; }\\n\\n#ul_top_hypers li {\\n  display: inline; }\\n\\n#div_top_hypers {\\n  display: inline; }\\n\\n#ul_top_hypers li {\\n  display: inline;\\n  list-style-type: none; }\\n\\n.customerDetails {\\n  padding: 3px; }\\n\\n.head3 {\\n  text-align: right;\\n  font-size: 11px;\\n  padding: 10px; }\\n\\n.input1 {\\n  border: none;\\n  border-bottom: 1px solid #8b8686;\\n  background-color: transparent;\\n  height: 16px;\\n  width: 100%;\\n  text-align: right;\\n  padding: 10px; }\\n\\n.head2 {\\n  font-size: 18px;\\n  padding-bottom: 25px; }\\n\\n.input {\\n  height: 25px;\\n  background-color: transparent;\\n  margin-top: 60px;\\n  font-size: 20px;\\n  margin-bottom: 10px;\\n  box-shadow: none; }\\n\\n.head4 {\\n  text-align: right;\\n  font-size: 18px;\\n  padding: 10px;\\n  font-weight: bold; }\\n\\n.input2 {\\n  border: 0;\\n  border-bottom: 1px solid #8b8686;\\n  height: 16px;\\n  width: 100%;\\n  font-size: 18px;\\n  font-weight: bold;\\n  text-align: right;\\n  padding: 10px; }\\n\\n.head5 {\\n  font-size: 14px;\\n  padding: 10px;\\n  text-align: center; }\\n\\n.head6 {\\n  text-align: center;\\n  font-size: 14px;\\n  padding: 10px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/payment/pm.payment-dialog-content.component.scss\n// module id = ../../../../../src/app/components/admin/payment/pm.payment-dialog-content.component.scss\n// module chunks = 1","import { Component, Inject } from \"@angular/core\";\r\nimport { MdDialogRef, MD_DIALOG_DATA } from \"@angular/material\";\r\nimport { RestService } from \"../../../common/rest.service\";\r\nimport { AppService } from \"../../../shared/service/app.service\";\r\nimport { Storage } from \"../../../shared/utils/storage\";\r\n\r\n@Component({\r\n  selector: \"app-pm.payment-dialog-content.component.html\",\r\n  templateUrl: \"./pm.payment-dialog-content.component.html\",\r\n  styleUrls: [\"./pm.payment-dialog-content.component.scss\"]\r\n})\r\nexport class PmPaymentDialogContentComponent {\r\n  id: any;\r\n  sales: any;\r\n  dataSource: any;\r\n  companyInfo: any;\r\n  stockItemDataSource: any[] = [];\r\n  servicesDataSource: any;\r\n  selectedItem: any;\r\n  constructor(\r\n    private restService: RestService,\r\n    private appService: AppService,\r\n    public dialogRef: MdDialogRef<PmPaymentDialogContentComponent>,\r\n    @Inject(MD_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.companyInfo = Storage.getSessionUser();\r\n    this.getPayments();\r\n    this.stockItemDataSource = this.dataSource.stockItemId;\r\n    console.log(\" this.stockItemDataSource \", this.stockItemDataSource);\r\n  }\r\n  ngOnInit() {}\r\n  getPayments() {\r\n    this.dataSource = Storage.getLocalItem(\"selectedItem\");\r\n    console.log(\"Payments data\", this.dataSource);\r\n  }\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  ok() {\r\n    this.restService.invoiceDelete(this.id).subscribe(result => {\r\n      this.dialogRef.close();\r\n      this.appService.showMessage(\"Invoice Deleted Successfully \");\r\n    });\r\n  }\r\n\r\n  print(cmpName) {\r\n    const printContent = document.getElementById(\"component1\");\r\n    const WindowPrt = window.open(\r\n      \"\",\r\n      \"\",\r\n      \"left=0,top=0,width=900,height=900,toolbar=0,scrollbars=0,status=0\"\r\n    );\r\n    WindowPrt.document.write(printContent.innerHTML);\r\n    WindowPrt.document.close();\r\n    WindowPrt.focus();\r\n    WindowPrt.print();\r\n    WindowPrt.close();\r\n  }\r\n\r\n  cancel() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/payment/pm.payment-dialog-content.component.ts","module.exports = \"<div id=\\\"page-header\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n\\t<h2>{{ isEdit ? \\\"New Payment Received\\r\\n\\t\\t\\t\\\" : \\\"Edit Payment Received\\r\\n\\t\\t\\t\\\" }}</h2>\\r\\n</div>\\r\\n<aside>\\r\\n\\t<div id=\\\"page-content\\\" style=\\\"margin: 20px 0;\\\"> \\r\\n\\t\\t<div class=\\\"row \\\">\\r\\n\\t\\t\\t<div style=\\\"width:1000px; background-color: white; margin:0px auto;\\\">\\r\\n\\r\\n\\t\\t\\t\\t<md-card>\\r\\n\\t\\t\\t\\t\\t<form [formGroup]=\\\"myForm\\\" novalidate autocomplete='off'>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"row \\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<md-input-container class=\\\"col-xs-12 padding-side \\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input mdInput required\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t placeholder=\\\"Choose Customer's Business Name\\\" \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t [ngModel]=\\\"payment.customer.displayName\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t [readOnly]=\\\"!isEdit\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t (focus)=\\\"filterCustomer(null)\\\" \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t (keyup)=\\\"filterCustomer($event.target.value)\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  [mdAutocomplete]=\\\"autoMobile\\\" \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<md-autocomplete #autoMobile=\\\"mdAutocomplete\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<md-option *ngFor=\\\"let option of filteredCustomers \\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t [value]=\\\"option.displayName\\\" (click)=\\\"selectedCustomer(option)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ option.displayName }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</md-option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</md-autocomplete>\\r\\n\\t\\t\\t\\t\\t\\t\\t</md-input-container>\\r\\n\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t <div class=\\\"md-select col-xs-6 padding-side\\\" *ngIf=\\\"isEdit\\\">\\r\\n\\t\\t\\t<md-select required placeholder=\\\"Choose Invoice Number\\\"   readonly=\\\"isEdit\\\"\\r\\n\\t\\t\\t[hidden]=\\\"!isEdit\\\"(change)=\\\"selectedSales(payment)\\\"\\r\\n\\t\\t\\t[formControl]=\\\"myForm.controls.invoice_no\\\"\\t[(ngModel)]=\\\"payment.invoiceNumber\\\" >\\r\\n\\t\\t\\t\\t <md-option  *ngFor=\\\"let item of salesLi\\\" [value]=\\\"item.invoiceNumber\\\" (click)=\\\"selectedSales(item)\\\">{{item.invoiceNumber}} </md-option> \\r\\n\\t\\t\\t\\t</md-select>\\r\\n\\t\\t\\t<md-hint> <form-messages\\r\\n\\t\\t\\t\\t[control]=\\\"myForm.controls.invoice_no\\\">\\r\\n\\t\\t\\t</form-messages> </md-hint>\\r\\n\\t\\t</div>\\r\\n\\r\\n\\t\\t<md-input-container class=\\\"col-xs-12 padding-side \\\" *ngIf=\\\"!isEdit\\\">\\r\\n\\t\\t\\t<input\\r\\n\\t\\t\\t  mdInput\\r\\n\\t\\t\\t  readonly=\\\"!isEdit\\\"\\r\\n\\t\\t\\t  [hidden]=\\\"isEdit\\\"\\r\\n\\t\\t\\t  \\r\\n\\t\\t\\t  placeholder=\\\"Choose Invoice Number\\\"\\r\\n\\t\\t\\t  [ngModel]=\\\"payment.invoiceNumber\\\"\\r\\n\\t\\t\\t  [ngModelOptions]=\\\"{ standalone: true }\\\"\\r\\n\\t\\t\\t/>\\r\\n\\t\\t  </md-input-container>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<!-- <div class=\\\"md-select col-xs-6 padding-side\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<md-select required placeholder=\\\"Choose Invoice Number\\\" [formControl]=\\\"myForm.controls.invoice_no\\\" [(ngModel)]=\\\"payment.invoiceNumber\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<md-option *ngFor=\\\"let item of salesLi\\\" [value]=\\\"payment.invoiceNumber\\\" (click)=\\\"selectedSales(item)\\\">{{item.invoiceNumber}} </md-option>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t</md-select>\\r\\n\\t\\t\\t\\t\\t\\t\\t<md-hint>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<form-messages [control]=\\\"myForm.controls.invoice_no\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</form-messages>\\r\\n\\t\\t\\t\\t\\t\\t\\t</md-hint>\\r\\n\\t\\t\\t\\t\\t\\t</div> -->\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"row \\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<md-input-container class=\\\"col-xs-6 padding-side\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input mdInput placeholder=\\\"Payment Date\\\" required [formControl]=\\\"myForm.controls.payment_date\\\" [(ngModel)]=\\\"payment.paymentDate\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t [mdDatepicker]=\\\"paymentDateToggle\\\" readonly>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button mdSuffix [mdDatepickerToggle]=\\\"paymentDateToggle\\\"></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<md-hint>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<form-messages [control]=\\\"myForm.controls.payment_date\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</form-messages>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</md-hint>\\r\\n\\t\\t\\t\\t\\t\\t\\t</md-input-container>\\r\\n\\t\\t\\t\\t\\t\\t\\t<md-datepicker #paymentDateToggle></md-datepicker>\\r\\n\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<md-input-container class=\\\"col-xs-6 padding-side\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input mdInput placeholder=\\\"Amount\\\" type=\\\"number\\\" pInputText [formControl]=\\\"myForm.controls.amount\\\" [(ngModel)]=\\\"payment.amount\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<!-- (keypress)=\\\"onlyNumberKey($event)\\\" -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<md-hint>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<form-messages  *ngIf=\\\"false\\\"[control]=\\\"myForm.controls.amount\\\">ammount is bigger\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<!-- (ngModelChange)=\\\"payment.amount= $event\\\"  -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<!-- <p>{{amount}}</p> -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<!-- <p[(paymentamount)]=\\\"payment.amount\\\"></p> -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<!-- <input mdInput placeholder=\\\"Amount\\\"[(message)]=\\\"payment\\\"> -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</form-messages>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</md-hint>\\r\\n\\t\\t\\t\\t\\t\\t\\t</md-input-container>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"row \\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"md-select col-xs-6 padding-side\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<md-select required placeholder=\\\"Payment Mode\\\" [formControl]=\\\"myForm.controls.payment_mode\\\" (change)=\\\"onPayModeChange(payment.paymentMode)\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t [(ngModel)]=\\\"payment.paymentMode\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<md-option *ngFor=\\\"let item of payModeList\\\" [value]=\\\"item.key\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{item.value}} </md-option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</md-select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<md-hint>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<form-messages [control]=\\\"myForm.controls.payment_mode\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</form-messages>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</md-hint>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"md-select col-xs-6  padding-side\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<aside class=\\\"row\\\" *ngIf=\\\"showElectric\\\" style=\\\"margin-top:-15px;\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<md-input-container class=\\\"col-xs-12\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input mdInput placeholder=\\\"Reference Number\\\" required [formControl]=\\\"myForm.controls.reference_no\\\" [(ngModel)]=\\\"payment.referenceNo\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<md-hint>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<form-messages [control]=\\\"myForm.controls.reference_no\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</form-messages>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</md-hint>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</md-input-container>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</aside>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<aside class=\\\"row\\\" *ngIf=\\\"showCheque\\\" style=\\\"margin-top:-15px;\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<md-input-container class=\\\"col-xs-12 \\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t   <input mdInput placeholder=\\\"Bank Name\\\" required [formControl]=\\\"myForm.controls.bank_name\\\" [(ngModel)]=\\\"payment.bankName\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t   \\r\\n\\t\\t\\t\\t\\t\\t\\t   [mdAutocomplete]=\\\"bankList\\\" (focus)=\\\"filterbanks(null)\\\" \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t(keyup)=\\\"filterbanks($event.target.value)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<md-autocomplete #bankList=\\\"mdAutocomplete\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<md-option\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  *ngFor=\\\"let option of filteredbanks\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [value]=\\\"option.value\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  {{ option.value }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</md-option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  </md-autocomplete>\\r\\n\\t\\t\\t\\t\\t\\t\\t   <md-hint>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<form-messages [control]=\\\"myForm.controls.bank_name\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</form-messages>\\r\\n\\t\\t\\t\\t\\t\\t\\t   </md-hint>\\r\\n\\t\\t\\t\\t\\t\\t\\t  </md-input-container>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- <div class=\\\"md-select col-xs-12 padding-side\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<md-select required placeholder=\\\"Bank\\\" [formControl]=\\\"myForm.controls.bank_name\\\" [a(ngModel)]=\\\"payment.bankName\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<md-option *ngFor=\\\"let keyValues of bankList\\\" [value]=\\\"keyValues.key\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{keyValues.value}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</md-option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</md-select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<md-hint>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<form-messages [control]=\\\"myForm.controls.bank_name\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</form-messages>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</md-hint>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div> -->\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input mdInput placeholder=\\\"Cheque Number\\\" required [formControl]=\\\"myForm.controls.cheque_number\\\" [(ngModel)]=\\\"payment.chequeNumber\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<md-hint>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<form-messages [control]=\\\"myForm.controls.cheque_number\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</form-messages>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</md-hint>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</md-input-container>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input mdInput placeholder=\\\"MICR\\\" required [formControl]=\\\"myForm.controls.micr\\\" [(ngModel)]=\\\"payment.micr\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<md-hint>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<form-messages [control]=\\\"myForm.controls.micr\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</form-messages>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</md-hint>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</md-input-container>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input mdInput placeholder=\\\"Cheque Date\\\" required [formControl]=\\\"myForm.controls.cheque_date\\\" [(ngModel)]=\\\"payment.chequeDate\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t [mdDatepicker]=\\\"chequeDateToggle\\\" readonly>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button mdSuffix [mdDatepickerToggle]=\\\"chequeDateToggle\\\"></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<md-hint>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<form-messages [control]=\\\"myForm.controls.cheque_date\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</form-messages>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</md-hint>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</md-input-container>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<md-datepicker #chequeDateToggle></md-datepicker>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</aside>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"row \\\">\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<md-input-container class=\\\"col-xs-6 padding-side\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input mdInput placeholder=\\\"Remark\\\" [formControl]=\\\"myForm.controls.remark\\\" [(ngModel)]=\\\"payment.remark\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<md-hint>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<form-messages [control]=\\\"myForm.controls.remark\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</form-messages>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</md-hint>\\r\\n\\t\\t\\t\\t\\t\\t\\t</md-input-container>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"row end-xs\\\">\\r\\n\\t\\t\\t\\t\\t\\t<button md-raised-button color=\\\"accent\\\" [disabled]=\\\"!myForm.valid\\\" (click)=\\\"save()\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t{{ isEdit ? \\\"Save\\\" : \\\"update payment received\\\" }}\\r\\n\\t\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</md-card>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</aside>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/payment/pm.payment.component.html\n// module id = ../../../../../src/app/components/admin/payment/pm.payment.component.html\n// module chunks = 1","import { Component, OnInit, Input, Output, EventEmitter } from \"@angular/core\";\r\nimport { AppService } from \"../../../shared/service/app.service\";\r\nimport { AnimationService } from \"../../../shared/service/animation.service\";\r\nimport { RestService } from \"./../../../common/rest.service\";\r\nimport { Prop } from \"./../../../common/props\";\r\nimport { PaymentFormGroup } from \"../../../forms/payment.form\";\r\nimport { Payment } from \"../../../entities/payment\";\r\nimport { Item } from \"./../../../entities/item.entity\";\r\nimport { Customer } from \"../../../entities/customer.entity\";\r\nimport { Sales } from \"./../../../entities/sales.entity\";\r\n\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport \"rxjs/add/operator/startWith\";\r\nimport \"rxjs/add/operator/map\";\r\nimport { FormControl } from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: \"app-payment\",\r\n  templateUrl: \"./pm.payment.component.html\"\r\n})\r\nexport class PmPaymentComponent implements OnInit {\r\n  myForm: any = PaymentFormGroup.init();\r\n  payment: Payment;\r\n  showElectric = false;\r\n  showCheque = false;\r\n  isRecordFound = false;\r\n  customer: Customer;\r\n  customers: Customer[] = [];\r\n  sales: Sales;\r\n  salesLi: any[] = [];\r\n  sel = false;\r\n  aaaaaamount = [];\r\n  showControls: boolean = false;\r\n  controls: any;\r\n  isEdit: boolean = false;\r\n  //     paymentamount:number;\r\n\r\n  //     @Output()\r\n  //     messageChange = new EventEmitter<number>();\r\n\r\n  //     @Input()\r\n  //   get message(){\r\n  //     return this.paymentamount;\r\n  //   }\r\n\r\n  //   set message(val) {\r\n  //     this.paymentamount > val;\r\n  //     this.messageChange.emit(this.paymentamount);\r\n  //   }\r\n\r\n  //     isPrintEnable = fals;\r\n\r\n  constructor(\r\n    private appService: AppService,\r\n    private restService: RestService\r\n  ) {\r\n    this.customer = new Customer();\r\n    this.sales = new Sales();\r\n    this.payment = new Payment();\r\n\r\n    PaymentFormGroup.edit(this.myForm);\r\n\r\n    let id = this.appService.getParam(\"id\");\r\n    if (id !== undefined) {\r\n      this.paymentDetails(id);\r\n    } else {\r\n      this.isEdit = true;\r\n    }\r\n  }\r\n  ngOnInit() {\r\n    this.retriveCustomer();\r\n    this.payModeLoad();\r\n    this.bankLoad();\r\n  }\r\n\r\n  paymentDetails(id) {\r\n    this.restService.paymentEdit(id).subscribe(result => {\r\n      if (result) {\r\n        this.payment = result;\r\n        if (this.payment.customer.businessName != null) {\r\n          if (this.payment.customer.businessName.length == 0) {\r\n            this.payment.customer.displayName =\r\n              this.payment.customer.firstName +\r\n              \" \" +\r\n              this.payment.customer.lastName +\r\n              \" \" +\r\n              this.payment.customer.mobile;\r\n          } else {\r\n            this.payment.customer.displayName =\r\n              this.payment.customer.businessName +\r\n              \" \" +\r\n              this.payment.customer.mobile;\r\n          }\r\n        } else {\r\n          this.payment.customer.displayName =\r\n            this.payment.customer.businessName +\r\n            \" \" +\r\n            this.payment.customer.mobile;\r\n          this.payment.customer.displayName =\r\n            this.payment.customer.firstName +\r\n            \" \" +\r\n            this.payment.customer.lastName +\r\n            \" \" +\r\n            this.payment.customer.mobile;\r\n        }\r\n        this.retriveInvoices(this.payment.id);\r\n\r\n        this.isRecordFound = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  onPayModeChange(val: string) {\r\n    if (val == \"Cheque\") {\r\n      PaymentFormGroup.cheque(this.myForm);\r\n      this.showCheque = true;\r\n      this.showElectric = false;\r\n      this.payment.referenceNo = null;\r\n    } else if (val == \"Electronic\") {\r\n      PaymentFormGroup.electric(this.myForm);\r\n      this.showElectric = true;\r\n      this.showCheque = false;\r\n      this.payment.bankName = null;\r\n      this.payment.chequeNumber = null;\r\n      this.payment.chequeDate = null;\r\n    } else {\r\n      PaymentFormGroup.cash(this.myForm);\r\n      this.showCheque = false;\r\n      this.showElectric = false;\r\n      this.payment.bankName = null;\r\n      this.payment.chequeNumber = null;\r\n      this.payment.chequeDate = null;\r\n      this.payment.referenceNo = null;\r\n    }\r\n  }\r\n\r\n  save() {\r\n    this.payment.companyId = this.appService.getBranch().id;\r\n    this.restService.paymentSave(this.payment).subscribe(result => {\r\n      //   this.payment = result;\r\n      let message = \"-----------------\";\r\n      if (this.isRecordFound) {\r\n        message = \"Payment receipt updated successfully.\";\r\n        this.appService.navigate(\"./admin/payment-search\", [\r\n          { id: this.payment.id }\r\n        ]);\r\n      } else {\r\n        this.appService.showMessage(result.error);\r\n        message = \"Payment receipt saved successfully.\";\r\n      }\r\n      this.appService.showMessage(message);\r\n      if (this.isRecordFound) {\r\n        this.myForm.reset();\r\n        // this.appService.navigate('./admin/payment-search', []);\r\n      } else {\r\n        this.appService.navigate(\"./admin/payment-search\", [\r\n          { id: this.payment.id }\r\n        ]);\r\n      }\r\n    });\r\n  }\r\n\r\n  retriveCustomer() {\r\n    this.restService\r\n      .searchUnpaidCutomerFrmInvoiceForPayment()\r\n      .subscribe(result => {\r\n        if (result) {\r\n          this.customers = result;\r\n          this.customers.forEach(item => {\r\n            item.gstRegNumber =\r\n              item.gstRegNumber == \"\" ? \"Not Registered\" : item.gstRegNumber;\r\n            if (item.businessName != null) {\r\n              if (item.businessName.length == 0) {\r\n                item.displayName =\r\n                  item.firstName + \" \" + item.lastName + \" \" + item.mobile;\r\n              } else {\r\n                item.displayName = item.businessName + \" \" + item.mobile;\r\n              }\r\n            } else {\r\n              item.displayName =\r\n                item.firstName + \" \" + item.lastName + \" \" + item.mobile;\r\n            }\r\n\r\n            // item.inlineAddress =\r\n            //   item.address.lane +\r\n            //   \" \" +\r\n            //   item.address.area +\r\n            //   \" \" +\r\n            //   item.address.city +\r\n            //   \" \" +\r\n            //   item.address.state;\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  //    filteredSales: any[] = [];\r\n  //\r\n  //    filterSales(val: string) {\r\n  //        this.filteredSales = (val && val != '') ? this.salesLi.filter(s => s.invoiceNumber.toLowerCase().indexOf(val.toLowerCase()) >= 0)\r\n  //            : this.salesLi;\r\n  //    }\r\n\r\n  selectedSales(item: Sales) {\r\n    this.sales = item;\r\n    this.payment.amount = item.total - item.paidAmount;\r\n  }\r\n\r\n  CalculateAmount() {\r\n    let oldAmount = this.payment.amount;\r\n    let newAmount = this.controls.amount;\r\n    if (oldAmount < newAmount) {\r\n      this.showControls = true;\r\n    } else {\r\n      this.showControls = false;\r\n    }\r\n  }\r\n\r\n  filteredCustomers: any[] = [];\r\n\r\n  filterCustomer(val: string) {\r\n    this.filteredCustomers =\r\n      val && val != \"\"\r\n        ? this.customers.filter(\r\n            s =>\r\n              s.mobile.toLowerCase().indexOf(val.toLowerCase()) >= 0 ||\r\n              s.businessName.toLowerCase().indexOf(val.toLowerCase()) >= 0\r\n          )\r\n        : this.customers;\r\n  }\r\n\r\n  // filterCustomer(val: string) {\r\n  //     //alert(this.customers);\r\n  //     this.filteredCustomers = (val && val != '') ? this.customers.filter(s => s.businessName.toLowerCase().indexOf(val.toLowerCase()) >= 0)\r\n  //         : this.customers;\r\n  // }\r\n\r\n  selectedCustomer(item: Customer) {\r\n    this.customer = item;\r\n    this.payment.customer = this.customer;\r\n    if (this.payment.customer.businessName != null) {\r\n      if (this.payment.customer.businessName.length == 0) {\r\n        this.payment.customer.displayName =\r\n          this.payment.customer.firstName +\r\n          \" \" +\r\n          this.payment.customer.lastName +\r\n          \" \" +\r\n          this.payment.customer.mobile;\r\n      } else {\r\n        this.payment.customer.displayName =\r\n          this.payment.customer.businessName +\r\n          \" \" +\r\n          this.payment.customer.mobile;\r\n      }\r\n    } else {\r\n      this.payment.customer.displayName =\r\n        this.payment.customer.businessName + \" \" + this.payment.customer.mobile;\r\n      this.payment.customer.displayName =\r\n        this.payment.customer.firstName +\r\n        \" \" +\r\n        this.payment.customer.lastName +\r\n        \" \" +\r\n        this.payment.customer.mobile;\r\n    }\r\n\r\n    this.retriveInvoices(item.id);\r\n    console.log(item);\r\n  }\r\n  customerId: number = 0;\r\n  retriveInvoices(customerId) {\r\n    this.salesLi = null;\r\n    this.restService\r\n      .searchInvoiceByCutomerIdForPayment(customerId)\r\n      .subscribe(result => {\r\n        if (result) {\r\n          this.salesLi = result;\r\n          this.payment.invoiceNumber = result.invoiceNumber;\r\n        }\r\n      });\r\n  }\r\n\r\n  bankList: any[] = [];\r\n  bankListTemp: any[] = [];\r\n  bankLoad() {\r\n    this.restService\r\n      .dataloadFromFile(\"./assets/json/common.json\")\r\n      .subscribe(results => {\r\n        this.bankList = results[\"Bank\"];\r\n        this.bankListTemp = results;\r\n      });\r\n  }\r\n\r\n  filteredbanks: any[] = [];\r\n\r\n  filterbanks(val: string) {\r\n    console.log(val);\r\n    this.filteredbanks =\r\n      val && val != \"\"\r\n        ? this.bankList.filter(\r\n            s => s.value.toLowerCase().indexOf(val.toLowerCase()) >= 0\r\n          )\r\n        : this.bankList;\r\n  }\r\n\r\n  //   search(): void {\r\n  //     let term = this.bankList;\r\n  //     this.bankList = this.bankListCopy.filter(function(tag) {\r\n  //         return tag.name.indexOf(term) >= 0;\r\n  //     });\r\n  // }\r\n\r\n  payModeList: any[] = [];\r\n  payModeLoad() {\r\n    this.restService\r\n      .dataloadFromFile(\"./assets/json/common.json\")\r\n      .subscribe(results => {\r\n        if (results) {\r\n          this.payModeList = results.PayMode;\r\n        }\r\n      });\r\n  }\r\n  printPriview() {\r\n    //    this.restService.invoiceOpen(this.sales.id);\r\n  }\r\n  onlyNumberKey(event) {\r\n    return event.charCode == 8 || event.charCode == 0\r\n      ? null\r\n      : event.charCode >= 48 && event.charCode <= 57;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/payment/pm.payment.component.ts","module.exports = \"<div id=\\\"page-header\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n  <h2>View Payment Received</h2>\\r\\n</div>\\r\\n<aside>\\r\\n  <div id=\\\"page-content\\\">\\r\\n    <div class=\\\"row \\\">\\r\\n      <div style=\\\"width:800px; background-color: white; margin:0px auto;\\\">\\r\\n        <md-card>\\r\\n          <form [formGroup]=\\\"myForm\\\" novalidate autocomplete=\\\"off\\\">\\r\\n            <div class=\\\"row \\\">\\r\\n              <md-input-container class=\\\"col-xs-12 padding-side \\\">\\r\\n                <input\\r\\n                  mdInput\\r\\n                  readonly\\r\\n                  placeholder=\\\"Customer's Business Name\\\"\\r\\n                  [ngModel]=\\\"payment.customer.businessName\\\"\\r\\n                  [ngModelOptions]=\\\"{ standalone: true }\\\"\\r\\n                />\\r\\n              </md-input-container>\\r\\n            </div>\\r\\n\\r\\n            <md-input-container class=\\\"col-xs-12 padding-side \\\">\\r\\n              <input\\r\\n                mdInput\\r\\n                readonly\\r\\n                placeholder=\\\"Choose Invoice Number\\\"\\r\\n                [ngModel]=\\\"payment.invoiceNumber\\\"\\r\\n                [ngModelOptions]=\\\"{ standalone: true }\\\"\\r\\n              />\\r\\n            </md-input-container>\\r\\n\\r\\n            <div class=\\\"row \\\">\\r\\n              <md-input-container class=\\\"col-xs-6 padding-side\\\">\\r\\n                <input\\r\\n                  mdInput\\r\\n                  placeholder=\\\"Payment Date\\\"\\r\\n                  [formControl]=\\\"myForm.controls.payment_date\\\"\\r\\n                  [(ngModel)]=\\\"payment.paymentDate\\\"\\r\\n                  [mdDatepicker]=\\\"paymentDateToggle\\\"\\r\\n                  [readOnly]=\\\"isDisabled\\\"\\r\\n                />\\r\\n                <button\\r\\n                  [disabled]=\\\"isDisabled\\\"\\r\\n                  mdSuffix\\r\\n                  [mdDatepickerToggle]=\\\"paymentDateToggle\\\"\\r\\n                ></button>\\r\\n                <md-hint>\\r\\n                  <form-messages [control]=\\\"myForm.controls.payment_date\\\">\\r\\n                  </form-messages>\\r\\n                </md-hint>\\r\\n              </md-input-container>\\r\\n              <md-datepicker #paymentDateToggle disabled></md-datepicker>\\r\\n\\r\\n              <md-input-container class=\\\"col-xs-6 padding-side\\\">\\r\\n                <input\\r\\n                  mdInput\\r\\n                  placeholder=\\\"Amount\\\"\\r\\n                  readonly\\r\\n                  readonly\\r\\n                  [formControl]=\\\"myForm.controls.amount\\\"\\r\\n                  [(ngModel)]=\\\"payment.amount\\\"\\r\\n                  [readOnly]=\\\"isDisabled\\\"\\r\\n                />\\r\\n                <md-hint>\\r\\n                  <form-messages [control]=\\\"myForm.controls.amount\\\">\\r\\n                  </form-messages>\\r\\n                </md-hint>\\r\\n              </md-input-container>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row \\\">\\r\\n              <md-input-container class=\\\"col-xs-6 padding-side\\\">\\r\\n                <input\\r\\n                  mdInput\\r\\n                  placeholder=\\\"Payment Mode\\\"\\r\\n                  readonly\\r\\n                  [formControl]=\\\"myForm.controls.payment_mode\\\"\\r\\n                  [(ngModel)]=\\\"payment.paymentMode\\\"\\r\\n                  [readOnly]=\\\"isDisabled\\\"\\r\\n                  [mdAutocomplete]=\\\"paymentMode\\\"\\r\\n                  (change)=\\\"selectedPayment($event.target.value)\\\"\\r\\n                />\\r\\n                <md-autocomplete #paymentMode=\\\"mdAutocomplete\\\">\\r\\n                  <md-option\\r\\n                    *ngFor=\\\"let item of payModeList\\\"\\r\\n                    [value]=\\\"item.key\\\"\\r\\n                    (click)=\\\"selectedPayment()\\\"\\r\\n                  >\\r\\n                    {{ item.value }}\\r\\n                  </md-option>\\r\\n                </md-autocomplete>\\r\\n              </md-input-container>\\r\\n\\r\\n              <div class=\\\"md-select col-xs-6  padding-side\\\">\\r\\n                <aside\\r\\n                  class=\\\"row\\\"\\r\\n                  *ngIf=\\\"showElectric\\\"\\r\\n                  style=\\\"margin-top:-15px;\\\"\\r\\n                >\\r\\n                  <md-input-container class=\\\"col-xs-12\\\">\\r\\n                    <input\\r\\n                      mdInput\\r\\n                      placeholder=\\\"Reference Number\\\"\\r\\n                      readonly\\r\\n                      [formControl]=\\\"myForm.controls.reference_no\\\"\\r\\n                      [(ngModel)]=\\\"payment.referenceNo\\\"\\r\\n                    />\\r\\n                    <md-hint>\\r\\n                      <form-messages [control]=\\\"myForm.controls.reference_no\\\">\\r\\n                      </form-messages>\\r\\n                    </md-hint>\\r\\n                  </md-input-container>\\r\\n                </aside>\\r\\n\\r\\n                <aside class=\\\"row\\\" *ngIf=\\\"showCheque\\\" style=\\\"margin-top:-15px;\\\">\\r\\n                  <md-input-container class=\\\"col-xs-4 \\\">\\r\\n                    <input\\r\\n                      mdInput\\r\\n                      placeholder=\\\"Bank Name\\\"\\r\\n                      readonly\\r\\n                      [formControl]=\\\"myForm.controls.bank_name\\\"\\r\\n                      [(ngModel)]=\\\"payment.bankName\\\"\\r\\n                    />\\r\\n                    <md-hint>\\r\\n                      <form-messages [control]=\\\"myForm.controls.bank_name\\\">\\r\\n                      </form-messages>\\r\\n                    </md-hint>\\r\\n                  </md-input-container>\\r\\n\\r\\n                  <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n                    <input\\r\\n                      mdInput\\r\\n                      placeholder=\\\"Cheque Number\\\"\\r\\n                      readonly\\r\\n                      [formControl]=\\\"myForm.controls.cheque_number\\\"\\r\\n                      [(ngModel)]=\\\"payment.chequeNumber\\\"\\r\\n                    />\\r\\n                    <md-hint>\\r\\n                      <form-messages [control]=\\\"myForm.controls.cheque_number\\\">\\r\\n                      </form-messages>\\r\\n                    </md-hint>\\r\\n                  </md-input-container>\\r\\n\\r\\n                  <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n                    <input\\r\\n                      mdInput\\r\\n                      placeholder=\\\"Cheque Date\\\"\\r\\n                      readonly\\r\\n                      [formControl]=\\\"myForm.controls.cheque_date\\\"\\r\\n                      [(ngModel)]=\\\"payment.chequeDate\\\"\\r\\n                      [mdDatepicker]=\\\"chequeDateToggle\\\"\\r\\n                      readonly\\r\\n                    />\\r\\n                    <button\\r\\n                      [disabled]=\\\"isDisabled\\\"\\r\\n                      mdSuffix\\r\\n                      [mdDatepickerToggle]=\\\"chequeDateToggle\\\"\\r\\n                    ></button>\\r\\n                    <md-hint>\\r\\n                      <form-messages [control]=\\\"myForm.controls.cheque_date\\\">\\r\\n                      </form-messages>\\r\\n                    </md-hint>\\r\\n                  </md-input-container>\\r\\n                  <md-datepicker #chequeDateToggle></md-datepicker>\\r\\n                </aside>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row \\\">\\r\\n              <md-input-container class=\\\"col-xs-6 padding-side\\\">\\r\\n                <input\\r\\n                  mdInput\\r\\n                  placeholder=\\\"Remark\\\"\\r\\n                  readonly\\r\\n                  [formControl]=\\\"myForm.controls.remark\\\"\\r\\n                  [(ngModel)]=\\\"payment.remark\\\"\\r\\n                />\\r\\n                <md-hint>\\r\\n                  <form-messages [control]=\\\"myForm.controls.remark\\\">\\r\\n                  </form-messages>\\r\\n                </md-hint>\\r\\n              </md-input-container>\\r\\n            </div>\\r\\n          </form>\\r\\n          <div class=\\\"row end-xs\\\">\\r\\n            <button md-raised-button color=\\\"accent\\\" (click)=\\\"finish()\\\">\\r\\n              Done\\r\\n            </button>\\r\\n          </div>\\r\\n        </md-card>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</aside>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/payment/pm.payment.view.component.html\n// module id = ../../../../../src/app/components/admin/payment/pm.payment.view.component.html\n// module chunks = 1","import { Component, OnInit, Input, Output, EventEmitter } from \"@angular/core\";\r\nimport { AppService } from \"../../../shared/service/app.service\";\r\nimport { AnimationService } from \"../../../shared/service/animation.service\";\r\nimport { RestService } from \"./../../../common/rest.service\";\r\nimport { Prop } from \"./../../../common/props\";\r\nimport { PaymentFormGroup } from \"../../../forms/payment.form\";\r\nimport { Payment } from \"../../../entities/payment\";\r\nimport { Item } from \"./../../../entities/item.entity\";\r\nimport { Customer } from \"../../../entities/customer.entity\";\r\nimport { Sales } from \"./../../../entities/sales.entity\";\r\n\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport \"rxjs/add/operator/startWith\";\r\nimport \"rxjs/add/operator/map\";\r\nimport { FormControl } from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: \"app-payment\",\r\n  templateUrl: \"./pm.payment.view.component.html\"\r\n})\r\nexport class PmPaymentViewComponent implements OnInit {\r\n  myForm: any = PaymentFormGroup.init();\r\n  payment: Payment;\r\n  showElectric = false;\r\n  showCheque = false;\r\n  isRecordFound = false;\r\n  customer: Customer;\r\n  customers: Customer[] = [];\r\n  sales: Sales;\r\n  salesLi: any[] = [];\r\n  sel = false;\r\n  isDisabled: boolean = true;\r\n  //     isPrintEnable = fals;\r\n  @Input()\r\n  inputData: any;\r\n\r\n  constructor(\r\n    private appService: AppService,\r\n    private restService: RestService\r\n  ) {\r\n    this.customer = new Customer();\r\n    this.sales = new Sales();\r\n\r\n    PaymentFormGroup.edit(this.myForm);\r\n\r\n    this.payment = new Payment();\r\n    let id = this.appService.getParam(\"id\");\r\n    if (this.appService.getParam(\"isEdit\") == \"true\") {\r\n      this.isDisabled = false;\r\n    }\r\n\r\n    if (id !== undefined) {\r\n      this.paymentDetails(id);\r\n    }\r\n  }\r\n  ngOnInit() {\r\n    this.retriveCustomer();\r\n    // this.payModeLoad();\r\n  }\r\n  paymentDetails(id) {\r\n    this.restService.paymentEdit(id).subscribe(result => {\r\n      if (result) {\r\n        this.payment = result;\r\n\r\n        this.retriveInvoices(this.payment.customer.id);\r\n        this.onPayModeChange(this.payment.paymentMode);\r\n\r\n        console.log(\" idsdsd: \" + id);\r\n        this.isRecordFound = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  onPayModeChange(val: string) {\r\n    if (val == \"Cheque\") {\r\n      PaymentFormGroup.cheque(this.myForm);\r\n      this.showCheque = true;\r\n      this.showElectric = false;\r\n      this.payment.referenceNo = null;\r\n    } else if (val == \"Electronic\") {\r\n      PaymentFormGroup.electric(this.myForm);\r\n      this.showElectric = true;\r\n      this.showCheque = false;\r\n      this.payment.bankName = null;\r\n      this.payment.chequeNumber = null;\r\n      this.payment.chequeDate = null;\r\n    } else {\r\n      PaymentFormGroup.cash(this.myForm);\r\n      this.showCheque = false;\r\n      this.showElectric = false;\r\n      this.payment.bankName = null;\r\n      this.payment.chequeNumber = null;\r\n      this.payment.chequeDate = null;\r\n      this.payment.referenceNo = null;\r\n    }\r\n  }\r\n\r\n  finish() {\r\n    this.appService.navigate(\"./admin/payment-search\", []);\r\n  }\r\n\r\n  retriveCustomer() {\r\n    this.restService\r\n      .searchUnpaidCutomerFrmInvoiceForPayment()\r\n      .subscribe(result => {\r\n        if (result) {\r\n          this.customers = result;\r\n          this.customers.forEach(item => {\r\n            item.gstRegNumber =\r\n              item.gstRegNumber == \"\" ? \"Not Registered\" : item.gstRegNumber;\r\n            item.displayName = item.firstName + \" \" + item.lastName;\r\n            // item.inlineAddress = item.address.lane + ' ' + item.address.area + ' ' + item.address.city + ' ' + item.address.state;\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  filteredSales: any[] = [];\r\n\r\n  filterSales(val: string) {\r\n    this.filteredSales =\r\n      val && val != \"\"\r\n        ? this.salesLi.filter(\r\n            s => s.invoiceNumber.toLowerCase().indexOf(val.toLowerCase()) >= 0\r\n          )\r\n        : this.salesLi;\r\n  }\r\n\r\n  selectedSales(item: Sales) {\r\n    this.sales = item;\r\n    this.payment.invoiceNumber = item.invoiceNumber;\r\n    this.payment.amount = item.total;\r\n  }\r\n\r\n  filteredCustomers: any[] = [];\r\n\r\n  filterCustomer(val: string) {\r\n    this.filteredCustomers =\r\n      val && val != \"\"\r\n        ? this.customers.filter(\r\n            s => s.firstName.toLowerCase().indexOf(val.toLowerCase()) >= 0\r\n          )\r\n        : this.customers;\r\n  }\r\n\r\n  selectedCustomer(item: Customer) {\r\n    this.customer = item;\r\n    this.payment.customer.id = item.id;\r\n    this.retriveInvoices(item.id);\r\n  }\r\n\r\n  customerId: number = 0;\r\n  retriveInvoices(customerId) {\r\n    this.salesLi = null;\r\n    this.restService\r\n      .searchInvoiceByCutomerIdForPayment(customerId)\r\n      .subscribe(result => {\r\n        if (result) {\r\n          this.salesLi = result;\r\n        }\r\n      });\r\n  }\r\n\r\n  payModeList: any[] = [];\r\n  payModeLoad() {\r\n    this.restService.dataload(\"PayMode\").subscribe(results => {\r\n      if (results) {\r\n        this.payModeList = results;\r\n      }\r\n    });\r\n  }\r\n  printPriview() {\r\n    //    this.restService.invoiceOpen(this.sales.id);\r\n  }\r\n  selectedPayment(item: Payment) {\r\n    console.log(item);\r\n    if (item && typeof item == \"object\") {\r\n      console.log(item);\r\n      this.inputData.payment = item;\r\n\r\n      this.payment.paymentMode = item.paymentMode;\r\n    } else {\r\n      this.inputData.payment = new Payment();\r\n      this.inputData.payment.paymentMode = item;\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/payment/pm.payment.view.component.ts","import { Component, Inject, OnInit, Input, Output, EventEmitter, ViewChild, ElementRef } from '@angular/core';\r\nimport { MdDialog, MdDialogRef, MD_DIALOG_DATA } from '@angular/material';\r\nimport { RestService } from '.././../../common/rest.service';\r\nimport { AppService } from '../../../shared/service/app.service';\r\n\r\nimport { TdDataTableService, TdDataTableSortingOrder, ITdDataTableSortChangeEvent, ITdDataTableColumn } from '@covalent/core';\r\n@Component({\r\n    selector: 'dialog-content-example-dialog',\r\n    template: '<h2 style=\"color:#000;\">Delete Confirmation</h2><hr style=\"background:#fff;\" /><br/><p style=\"font-size:16px;\">Are you sure you want to delete product details?</p><br/><br/><button  md-button color=\"primary\" (click)=\"ok()\" style=\"background:#ffc107; color:#fff;\">Yes</button><button md-button color=\"primary\" (click)=\"cancel()\" style=\"float:right; background:#ffc107; color:#fff;\">No</button>'\r\n})\r\nexport class DialogContentExampleDialogInventory {\r\n    myData: any;\r\n    constructor(\r\n        private restService: RestService,\r\n        private appService: AppService,\r\n        public dialogRef: MdDialogRef<DialogContentExampleDialogInventory>,\r\n        @Inject(MD_DIALOG_DATA) public data: any) {\r\n        this.myData = data;\r\n\r\n    }\r\n    onNoClick(): void {\r\n        this.dialogRef.close();\r\n    }\r\n    ok() {\r\n        this.restService.inventoryDelete(this.myData)\r\n            .subscribe(result => {\r\n                this.dialogRef.close();\r\n            });\r\n\r\n    }\r\n    cancel() {\r\n        this.dialogRef.close();\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/product/DialogContentExampleDialogInventory.ts","module.exports = \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" >\\r\\n    <h2>\\r\\n        New Inventory\\r\\n    </h2>\\r\\n</div>\\r\\n\\r\\n<aside id=\\\"page-content\\\" fxLayout=\\\"column\\\" >\\r\\n    <md-card style=\\\"margin: 1rem\\\">\\r\\n        <form [formGroup]=\\\"myForm\\\" novalidate autocomplete='off'>\\r\\n            <!-- ==============Editable Section Start====================== -->\\r\\n            <section fxLayout=\\\"row wrap\\\"  fxLayoutAlign=\\\"start start\\\" *ngIf=\\\"isEditable == 'true' \\\">\\r\\n                <div fxFlex=\\\"100\\\" class=\\\"padding-side\\\">\\r\\n                    <md-input-container>\\r\\n                        <input required mdInput type=\\\"text\\\" placeholder=\\\"Product Name\\\" [formControl]=\\\"myForm.controls.inventory_productName\\\" [(ngModel)]=\\\"inventory.productName\\\">\\r\\n                        <md-hint>\\r\\n                            <form-messages [control]=\\\"myForm.controls.inventory_productName\\\">\\r\\n                            </form-messages>\\r\\n                        </md-hint>\\r\\n                    </md-input-container>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"33\\\" class=\\\"padding-side\\\">\\r\\n                    <md-input-container>\\r\\n                        <input mdInput type=\\\"text\\\" placeholder=\\\"SKU\\\" [formControl]=\\\"myForm.controls.inventory_productCode\\\" [(ngModel)]=\\\"inventory.productCode\\\">\\r\\n                        <md-hint>\\r\\n                            <form-messages [control]=\\\"myForm.controls.inventory_productCode\\\">\\r\\n                            </form-messages>\\r\\n                        </md-hint>\\r\\n                    </md-input-container>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"33\\\" class=\\\"padding-side\\\">\\r\\n                    <md-input-container>\\r\\n                        <input mdInput required type=\\\"text\\\" placeholder=\\\"HSN Code\\\" [formControl]=\\\"myForm.controls.inventory_hsnCode\\\" [(ngModel)]=\\\"inventory.hsnCode\\\">\\r\\n                        <md-hint>\\r\\n                            <form-messages [control]=\\\"myForm.controls.inventory_hsnCode\\\">\\r\\n                            </form-messages>\\r\\n                        </md-hint>\\r\\n                    </md-input-container>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"33\\\" class=\\\"padding-side\\\">\\r\\n                    <md-input-container>\\r\\n                        <input required mdInput readonly type=\\\"text\\\" placeholder=\\\"Category\\\" [formControl]=\\\"myForm.controls.inventory_productType\\\"\\r\\n                            [(ngModel)]=\\\"inventory.productType\\\">\\r\\n                        <md-hint>\\r\\n                            <form-messages [control]=\\\"myForm.controls.inventory_productType\\\">\\r\\n                            </form-messages>\\r\\n                        </md-hint>\\r\\n                    </md-input-container>\\r\\n                </div>\\r\\n\\r\\n                <div fxFlex=\\\"33\\\" class=\\\"padding-side\\\">\\r\\n                    <md-input-container>\\r\\n                        <input  mdInput type=\\\"text\\\" placeholder=\\\"Initial quantity on hand\\\" [formControl]=\\\"myForm.controls.inventory_productPriceListItems_initialStockAtHand\\\"\\r\\n                            [(ngModel)]=\\\"inventory.productPriceListItems.initialStockAtHand\\\">\\r\\n                        <md-hint>\\r\\n                            <form-messages [control]=\\\"myForm.controls.inventory_productPriceListItems_initialStockAtHand\\\">\\r\\n                            </form-messages>\\r\\n                        </md-hint>\\r\\n                    </md-input-container>\\r\\n                </div>\\r\\n                <!-- <toaster-container toaster-options=\\\"{'position-class': 'toast-top-center', 'close-button': true, 'body-output-type': 'trustedHtml', 'showDuration': '400', 'hideDuration': '200',}\\\"></toaster-container> -->\\r\\n\\r\\n                <div fxFlex=\\\"33\\\" class=\\\"padding-side\\\">\\r\\n                    <md-input-container>\\r\\n                        <input required mdInput type=\\\"text\\\" placeholder=\\\"Low stock alert\\\" [formControl]=\\\"myForm.controls.inventory_productPriceListItems_stockAlertQty\\\"\\r\\n                            [(ngModel)]=\\\"inventory.productPriceListItems.stockAlertQty\\\">\\r\\n                        <md-hint>\\r\\n                            <form-messages [control]=\\\"myForm.controls.inventory_productPriceListItems_stockAlertQty\\\">\\r\\n                            </form-messages>\\r\\n                        </md-hint>\\r\\n                    </md-input-container>\\r\\n                </div>\\r\\n\\r\\n                <div fxFlex=\\\"33\\\" class=\\\"padding-side\\\">\\r\\n                    <md-input-container>\\r\\n                        <input mdInput readonly placeholder=\\\"As of date\\\" [formControl]=\\\"myForm.controls.inventory_productPriceListItems_stockAsOfDate\\\"\\r\\n                            [(ngModel)]=\\\"inventory.productPriceListItems.stockAsOfDate\\\" [mdDatepicker]=\\\"stockAsOfDateToggle\\\"\\r\\n                            readonly>\\r\\n                        <button mdSuffix [mdDatepickerToggle]=\\\"stockAsOfDateToggle\\\">  </button>\\r\\n                       \\r\\n                        <md-hint>\\r\\n                            <form-messages [control]=\\\"myForm.controls.inventory_productPriceListItems_stockAsOfDate\\\">\\r\\n                            </form-messages>\\r\\n                        </md-hint>\\r\\n                    </md-input-container>\\r\\n                    <md-datepicker #stockAsOfDateToggle>\\r\\n                    </md-datepicker>\\r\\n                </div>\\r\\n\\r\\n                <!-- <div fxFlex=\\\"100\\\" class=\\\"padding-side\\\">\\r\\n                    <div class=\\\"md-select\\\">\\r\\n                        <md-select required placeholder=\\\"Inventory asset account\\\" [formControl]=\\\"myForm.controls.inventory_productPriceListItems_invAssetAccount\\\"\\r\\n                            [(ngModel)]=\\\"inventory.productPriceListItems.invAssetAccount\\\">\\r\\n                            <md-option *ngFor=\\\"let keyValues of invAssetAccountList\\\" [value]=\\\"keyValues[0]\\\">\\r\\n                                {{keyValues[1]}}\\r\\n                            </md-option>\\r\\n                        </md-select>\\r\\n                        <md-hint>\\r\\n                            <form-messages [control]=\\\"myForm.controls.inventory_productPriceListItems_invAssetAccount\\\">\\r\\n                            </form-messages>\\r\\n                        </md-hint>\\r\\n                    </div>\\r\\n                </div> -->\\r\\n\\r\\n                <!-- <div fxFlex=\\\"100\\\" class=\\\"padding-side\\\">\\r\\n                    <md-input-container>\\r\\n                        <input required mdInput type=\\\"text\\\" placeholder=\\\"Sales Information\\\" [formControl]=\\\"myForm.controls.inventory_productPriceListItems_salesInformation\\\"\\r\\n                            [(ngModel)]=\\\"inventory.productPriceListItems.salesInformation\\\">\\r\\n                        <md-hint>\\r\\n                            <form-messages [control]=\\\"myForm.controls.inventory_productPriceListItems_salesInformation\\\">\\r\\n                            </form-messages>\\r\\n                        </md-hint>\\r\\n                    </md-input-container>\\r\\n                </div> -->\\r\\n                <div fxFlex=\\\"33\\\" class=\\\"padding-side\\\">\\r\\n                    <md-input-container >\\r\\n                            <input required mdInput placeholder=\\\"Units\\\" [formControl]=\\\"myForm.controls.inventory_product_unitquantitycode\\\"\\r\\n                            [(ngModel)]=\\\"inventory.uqc\\\" (focus)=\\\"filterUQCList($event.target.values)\\\"\\r\\n                                (keyup)=\\\"filterUQCList($event.target.value)\\\" [mdAutocomplete]=\\\"autoUQC\\\">\\r\\n                            <md-hint>\\r\\n                                <form-messages [control]=\\\"myForm.controls.inventory_product_unitquantitycode\\\">\\r\\n                                </form-messages>\\r\\n                            </md-hint>\\r\\n                            <md-autocomplete #autoUQC=\\\"mdAutocomplete\\\">\\r\\n                                <md-option *ngFor=\\\"let item of filteredUqcList\\\" [value]=\\\"item.code\\\">\\r\\n                                    <b> {{ item.description }} </b> - {{item.code}}\\r\\n                                </md-option>\\r\\n                            </md-autocomplete>\\r\\n                        </md-input-container>               \\r\\n                </div>\\r\\n                <div fxFlex=\\\"33\\\" class=\\\"padding-side\\\">\\r\\n                    <md-input-container>\\r\\n                        <input required mdInput type=\\\"number\\\" placeholder=\\\"Sales price per unit\\\" [formControl]=\\\"myForm.controls.inventory_productPriceListItems_unitSellPrice\\\"\\r\\n                            [(ngModel)]=\\\"inventory.productPriceListItems.unitSellPrice\\\">\\r\\n                        <md-hint>\\r\\n                            <form-messages [control]=\\\"myForm.controls.inventory_productPriceListItems_unitSellPrice\\\">\\r\\n                            </form-messages>\\r\\n                        </md-hint>\\r\\n                    </md-input-container>\\r\\n                </div>\\r\\n                <!-- <div fxFlex=\\\"25\\\" class=\\\"padding-side\\\">\\r\\n                    <div class=\\\"md-select\\\">\\r\\n                        <md-select required placeholder=\\\"Revenue Account\\\" [formControl]=\\\"myForm.controls.inventory_productPriceListItems_revenueAccount\\\"\\r\\n                            [(ngModel)]=\\\"inventory.productPriceListItems.revenueAccount\\\">\\r\\n                            <md-option *ngFor=\\\"let keyValues of revenueAccountList\\\" [value]=\\\"keyValues[0]\\\">\\r\\n                                {{keyValues[1]}}\\r\\n                            </md-option>\\r\\n                        </md-select>\\r\\n                        <md-hint>\\r\\n                            <form-messages [control]=\\\"myForm.controls.inventory_productPriceListItems_revenueAccount\\\">\\r\\n                            </form-messages>\\r\\n                        </md-hint>\\r\\n                    </div>\\r\\n                </div> -->\\r\\n\\r\\n\\r\\n                <div fxFlex=\\\"33\\\" class=\\\"padding-side\\\">\\r\\n                    <div class=\\\"md-select\\\">\\r\\n                        <md-select required placeholder=\\\"Tax\\\" [formControl]=\\\"myForm.controls.inventory_productPriceListItems_tax\\\" [(ngModel)]=\\\"inventory.productPriceListItems.tax\\\">\\r\\n                            <md-option *ngFor=\\\"let keyValues of taxList\\\" [value]=\\\"keyValues[0]\\\">\\r\\n                                {{keyValues[1]}}\\r\\n                            </md-option>\\r\\n                        </md-select>\\r\\n                        <md-hint>\\r\\n                            <form-messages [control]=\\\"myForm.controls.inventory_productPriceListItems_tax\\\">\\r\\n                            </form-messages>\\r\\n                        </md-hint>\\r\\n                    </div>\\r\\n                </div>\\r\\n               <!-- <div fxFlex=\\\"25\\\" class=\\\"padding-side\\\">\\r\\n                    <div class=\\\"md-checkbox\\\">\\r\\n                        <md-checkbox [(ngModel)]=\\\"inventory.productPriceListItems.taxInclusive\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                            Inclusive of Tax\\r\\n                        </md-checkbox>\\r\\n                    </div>\\r\\n                </div>-->\\r\\n\\r\\n                <!-- <div fxFlex=\\\"100\\\" class=\\\"padding-side\\\">\\r\\n                    <md-input-container>\\r\\n                        <input required mdInput type=\\\"text\\\" placeholder=\\\"purchasing Information\\\" [formControl]=\\\"myForm.controls.inventory_productPurchasing_purchasingInfo\\\"\\r\\n                            [(ngModel)]=\\\"inventory.productPurchasing.purchasingInfo\\\">\\r\\n                        <md-hint>\\r\\n                            <form-messages [control]=\\\"myForm.controls.inventory_productPurchasing_purchasingInfo\\\">\\r\\n                            </form-messages>\\r\\n                        </md-hint>\\r\\n                    </md-input-container>\\r\\n                </div> -->\\r\\n\\r\\n\\r\\n\\r\\n                <div fxFlex=\\\"50\\\" class=\\\"padding-side\\\">\\r\\n                    <md-input-container>\\r\\n                        <input required mdInput type=\\\"number\\\" placeholder=\\\"cost\\\" [formControl]=\\\"myForm.controls.inventory_productPriceListItems_unitPrice\\\"\\r\\n                            [(ngModel)]=\\\"inventory.productPriceListItems.unitPrice\\\" (change)=\\\"comparePrize();\\\">\\r\\n                        <md-hint>\\r\\n                            <form-messages [control]=\\\"myForm.controls.inventory_productPriceListItems_unitPrice\\\">\\r\\n                            </form-messages>\\r\\n                        </md-hint>\\r\\n                    </md-input-container>\\r\\n                </div>\\r\\n                <!-- <div fxFlex=\\\"25\\\" class=\\\"padding-side\\\">\\r\\n                    <div class=\\\"md-select\\\">\\r\\n                        <md-select required placeholder=\\\"Expense Account\\\" [formControl]=\\\"myForm.controls.inventory_productPriceListItems_expenseAccount\\\"\\r\\n                            [(ngModel)]=\\\"inventory.productPriceListItems.expenseAccount\\\">\\r\\n                            <md-option *ngFor=\\\"let keyValues of expenseAccountList\\\" [value]=\\\"keyValues[0]\\\">\\r\\n                                {{keyValues[1]}}\\r\\n                            </md-option>\\r\\n                        </md-select>\\r\\n                        <md-hint>\\r\\n                            <form-messages [control]=\\\"myForm.controls.inventory_productPriceListItems_expenseAccount\\\">\\r\\n                            </form-messages>\\r\\n                        </md-hint>\\r\\n                    </div>\\r\\n                </div> -->\\r\\n\\r\\n\\r\\n                <div fxFlex=\\\"50\\\" class=\\\"padding-side\\\">\\r\\n                    <div class=\\\"md-select\\\">\\r\\n                        <md-select required placeholder=\\\"Purchase Tax\\\" [formControl]=\\\"myForm.controls.inventory_productPriceListItems_purchaseTax\\\"\\r\\n                            [(ngModel)]=\\\"inventory.productPriceListItems.purchaseTax\\\">\\r\\n                            <md-option *ngFor=\\\"let keyValues of purchaseTaxList\\\" [value]=\\\"keyValues[0]\\\">\\r\\n                                {{keyValues[1]}}\\r\\n                            </md-option>\\r\\n                        </md-select>\\r\\n                        <md-hint>\\r\\n                            <form-messages [control]=\\\"myForm.controls.inventory_productPriceListItems_purchaseTax\\\">\\r\\n                            </form-messages>\\r\\n                        </md-hint>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n             <!--   <div fxFlex=\\\"25\\\" class=\\\"padding-side\\\">\\r\\n                    <div class=\\\"md-checkbox\\\">\\r\\n                        <md-checkbox [(ngModel)]=\\\"inventory.productPriceListItems.purchaseTaxInclusive\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                            Inclusive of Purchase Tax\\r\\n                        </md-checkbox>\\r\\n                    </div>\\r\\n                </div>-->\\r\\n              \\r\\n               <div fxFlex=\\\"50\\\" class=\\\"padding-side\\\">\\r\\n                    <md-input-container>\\r\\n                        <input mdInput type=\\\"text\\\" placeholder=\\\"Cess Tax\\\" [formControl]=\\\"myForm.controls.inventory_productPurchasing_purchasingInfo\\\"\\r\\n                            [(ngModel)]=\\\"inventory.productPurchasing.purchasingInfo\\\">\\r\\n                        <md-hint>\\r\\n                            <form-messages [control]=\\\"myForm.controls.inventory_productPurchasing_purchasingInfo\\\">\\r\\n                            </form-messages>\\r\\n                        </md-hint>\\r\\n                    </md-input-container>\\r\\n                </div>\\r\\n\\r\\n                <div fxFlex=\\\"50\\\" class=\\\"padding-side\\\">\\r\\n                    <div class=\\\"md-select\\\">\\r\\n                        <md-select placeholder=\\\"Status\\\" [(ngModel)]=\\\"inventory.active\\\" [formControl]=\\\"myForm.controls.inventory_productPriceListItems_status\\\" >\\r\\n                            <md-option value=\\\"true\\\">Active</md-option>\\r\\n                            <md-option value=\\\"false\\\">Inactive</md-option>\\r\\n                        </md-select>\\r\\n                       \\r\\n                        <md-hint>\\r\\n                            <form-messages [control]=\\\"myForm.controls.inventory_productPriceListItems_status\\\">\\r\\n                            </form-messages>\\r\\n                        </md-hint>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </section>\\r\\n            <!-- ==============Editable Section End====================== -->\\r\\n\\r\\n            <!-- ==============Non Editable Section Start====================== -->\\r\\n            <section fxLayout=\\\"row wrap\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"start start\\\" *ngIf=\\\"isEditable== 'false' \\\">\\r\\n                <div fxFlex=\\\"100%\\\" class=\\\"padding-side\\\">\\r\\n                    <md-input-container>\\r\\n                        <input readonly mdInput type=\\\"text\\\" placeholder=\\\"Product name\\\" [formControl]=\\\"myForm.controls.inventory_productName\\\" [(ngModel)]=\\\"inventory.productName\\\">\\r\\n                        <md-hint>\\r\\n                            <form-messages [control]=\\\"myForm.controls.inventory_productName\\\">\\r\\n                            </form-messages>\\r\\n                        </md-hint>\\r\\n                    </md-input-container>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"25\\\" class=\\\"padding-side\\\">\\r\\n                    <md-input-container>\\r\\n                        <input readonly mdInput type=\\\"text\\\" placeholder=\\\"SKU\\\" [formControl]=\\\"myForm.controls.inventory_productCode\\\" [(ngModel)]=\\\"inventory.productCode\\\">\\r\\n                        <md-hint>\\r\\n                            <form-messages [control]=\\\"myForm.controls.inventory_productCode\\\">\\r\\n                            </form-messages>\\r\\n                        </md-hint>\\r\\n                    </md-input-container>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"25\\\" class=\\\"padding-side\\\">\\r\\n                    <md-input-container>\\r\\n                        <input mdInput readonly type=\\\"text\\\" placeholder=\\\"HSN Code\\\" [formControl]=\\\"myForm.controls.inventory_hsnCode\\\" [(ngModel)]=\\\"inventory.hsnCode\\\">\\r\\n                        <md-hint>\\r\\n                            <form-messages [control]=\\\"myForm.controls.inventory_hsnCode\\\">\\r\\n                            </form-messages>\\r\\n                        </md-hint>\\r\\n                    </md-input-container>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"25\\\" class=\\\"padding-side\\\">\\r\\n                    <md-input-container>\\r\\n                        <input readonly mdInput readonly type=\\\"text\\\" placeholder=\\\"Category\\\" [formControl]=\\\"myForm.controls.inventory_productType\\\"\\r\\n                            [(ngModel)]=\\\"inventory.productType\\\">\\r\\n                        <md-hint>\\r\\n                            <form-messages [control]=\\\"myForm.controls.inventory_productType\\\">\\r\\n                            </form-messages>\\r\\n                        </md-hint>\\r\\n                    </md-input-container>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"25\\\" class=\\\"padding-side\\\">\\r\\n                    <md-input-container>\\r\\n                        <input mdInput readonly type=\\\"text\\\" placeholder=\\\"Cess Tax\\\" [formControl]=\\\"myForm.controls.inventory_productPurchasing_purchasingInfo\\\"\\r\\n                            [(ngModel)]=\\\"inventory.productPurchasing.purchasingInfo\\\">\\r\\n                        <md-hint>\\r\\n                            <form-messages [control]=\\\"myForm.controls.inventory_productPurchasing_purchasingInfo\\\">\\r\\n                            </form-messages>\\r\\n                        </md-hint>\\r\\n                    </md-input-container>\\r\\n                </div>\\r\\n\\r\\n                <div fxFlex=\\\"25\\\" class=\\\"padding-side\\\">\\r\\n                    <md-input-container>\\r\\n                        <input readonly mdInput type=\\\"text\\\" placeholder=\\\"Initial quantity on hand\\\" [formControl]=\\\"myForm.controls.inventory_productPriceListItems_initialStockAtHand\\\"\\r\\n                            [(ngModel)]=\\\"inventory.productPriceListItems.initialStockAtHand\\\">\\r\\n                        <md-hint>\\r\\n                            <form-messages [control]=\\\"myForm.controls.inventory_productPriceListItems_initialStockAtHand\\\">\\r\\n                            </form-messages>\\r\\n                        </md-hint>\\r\\n                    </md-input-container>\\r\\n                </div>\\r\\n                <!-- <toaster-container toaster-options=\\\"{'position-class': 'toast-top-center', 'close-button': true, 'body-output-type': 'trustedHtml', 'showDuration': '400', 'hideDuration': '200',}\\\"></toaster-container> -->\\r\\n                <div fxFlex=\\\"25\\\" class=\\\"padding-side\\\">\\r\\n                    <md-input-container>\\r\\n                        <input mdInput readonly placeholder=\\\"As of date\\\" [formControl]=\\\"myForm.controls.inventory_productPriceListItems_stockAsOfDate\\\"\\r\\n                            [(ngModel)]=\\\"inventory.productPriceListItems.stockAsOfDate\\\" [mdDatepicker]=\\\"stockAsOfDateToggle\\\">\\r\\n                        <!-- <button mdSuffix [mdDatepickerToggle]=\\\"stockAsOfDateToggle\\\">\\r\\n                        </button> -->\\r\\n                        <md-hint>\\r\\n                            <form-messages [control]=\\\"myForm.controls.inventory_productPriceListItems_stockAsOfDate\\\">\\r\\n                            </form-messages>\\r\\n                        </md-hint>\\r\\n                    </md-input-container>\\r\\n                    <md-datepicker #stockAsOfDateToggle>\\r\\n                    </md-datepicker>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"25\\\" class=\\\"padding-side\\\">\\r\\n                    <md-input-container >\\r\\n                        <input required readonly mdInput placeholder=\\\"Units\\\" [formControl]=\\\"myForm.controls.inventory_product_unitquantitycode\\\"\\r\\n                        [(ngModel)]=\\\"inventory.uqc\\\">\\r\\n                        <md-hint>\\r\\n                            <form-messages [control]=\\\"myForm.controls.inventory_product_unitquantitycode\\\">\\r\\n                            </form-messages>\\r\\n                        </md-hint>                        \\r\\n                    </md-input-container>   \\r\\n                </div>\\r\\n                <div fxFlex=\\\"25\\\" class=\\\"padding-side\\\">\\r\\n                    <md-input-container>\\r\\n                        <input readonly mdInput type=\\\"text\\\" placeholder=\\\"Low stock alert\\\" [formControl]=\\\"myForm.controls.inventory_productPriceListItems_stockAlertQty\\\"\\r\\n                            [(ngModel)]=\\\"inventory.productPriceListItems.stockAlertQty\\\">\\r\\n                        <md-hint>\\r\\n                            <form-messages [control]=\\\"myForm.controls.inventory_productPriceListItems_stockAlertQty\\\">\\r\\n                            </form-messages>\\r\\n                        </md-hint>\\r\\n                    </md-input-container>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"25\\\" class=\\\"padding-side\\\">\\r\\n                    <md-input-container>\\r\\n                        <input readonly mdInput type=\\\"number\\\" placeholder=\\\"Sales price per unit\\\" [formControl]=\\\"myForm.controls.inventory_productPriceListItems_unitSellPrice\\\"\\r\\n                            [(ngModel)]=\\\"inventory.productPriceListItems.unitSellPrice\\\">\\r\\n                        <md-hint>\\r\\n                            <form-messages [control]=\\\"myForm.controls.inventory_productPriceListItems_unitSellPrice\\\">\\r\\n                            </form-messages>\\r\\n                        </md-hint>\\r\\n                    </md-input-container>\\r\\n                </div>\\r\\n\\r\\n                <div fxFlex=\\\"25\\\" class=\\\"padding-side\\\">\\r\\n                    <md-input-container>\\r\\n                        <input readonly mdInput placeholder=\\\"Purchase Tax\\\" [formControl]=\\\"myForm.controls.inventory_productPriceListItems_tax\\\" [(ngModel)]=\\\"inventory.productPriceListItems.tax\\\">\\r\\n                        <md-hint>\\r\\n                            <form-messages [control]=\\\"myForm.controls.inventory_productPriceListItems_tax\\\">\\r\\n                            </form-messages>\\r\\n                        </md-hint>\\r\\n                    </md-input-container>\\r\\n                </div>\\r\\n             <!--   <div fxFlex=\\\"25\\\" class=\\\"padding-side\\\">\\r\\n                    <div class=\\\"md-checkbox\\\">\\r\\n                        <md-checkbox *ngIf=\\\"isEditable=='false'\\\" onclick=\\\"return false;\\\" [(ngModel)]=\\\"inventory.productPriceListItems.taxInclusive\\\"\\r\\n                            [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                            Inclusive of Tax\\r\\n                        </md-checkbox>\\r\\n                    </div>\\r\\n                </div>-->\\r\\n\\r\\n                <div fxFlex=\\\"25\\\" class=\\\"padding-side\\\">\\r\\n                    <md-input-container>\\r\\n                        <input readonly mdInput type=\\\"number\\\" placeholder=\\\"cost\\\" [formControl]=\\\"myForm.controls.inventory_productPriceListItems_unitPrice\\\"\\r\\n                            [(ngModel)]=\\\"inventory.productPriceListItems.unitPrice\\\" (change)=\\\"comparePrize();\\\">\\r\\n                        <md-hint>\\r\\n                            <form-messages [control]=\\\"myForm.controls.inventory_productPriceListItems_unitPrice\\\">\\r\\n                            </form-messages>\\r\\n                        </md-hint>\\r\\n                    </md-input-container>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"25\\\" class=\\\"padding-side\\\">\\r\\n                    <md-input-container>\\r\\n                        <input readonly mdInput placeholder=\\\"Purchase Tax\\\" [formControl]=\\\"myForm.controls.inventory_productPriceListItems_purchaseTax\\\"\\r\\n                            [(ngModel)]=\\\"inventory.productPriceListItems.purchaseTax\\\">\\r\\n                        <md-hint>\\r\\n                            <form-messages [control]=\\\"myForm.controls.inventory_productPriceListItems_purchaseTax\\\">\\r\\n                            </form-messages>\\r\\n                        </md-hint>\\r\\n                    </md-input-container>\\r\\n\\r\\n                </div>\\r\\n\\r\\n              <!--  <div fxFlex=\\\"25\\\" class=\\\"padding-side\\\">\\r\\n                    <div class=\\\"md-checkbox\\\">\\r\\n                        <md-checkbox *ngIf=\\\"isEditable=='false'\\\" onclick=\\\"return false;\\\" [(ngModel)]=\\\"inventory.productPriceListItems.purchaseTaxInclusive\\\"\\r\\n                            [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                            Inclusive of Purchase Tax\\r\\n                        </md-checkbox>\\r\\n                    </div>\\r\\n                </div>-->\\r\\n                <div fxFlex=\\\"25\\\" class=\\\"padding-side\\\">\\r\\n                    <div class=\\\"md-select\\\">\\r\\n                        <md-select placeholder=\\\"Status\\\" [(ngModel)]=\\\"inventory.active\\\" [formControl]=\\\"myForm.controls.inventory_productPriceListItems_status\\\" >\\r\\n                            <md-option value=\\\"true\\\">Active</md-option>\\r\\n                            <md-option value=\\\"false\\\">Inactive</md-option>\\r\\n                        </md-select>\\r\\n                        <md-hint>\\r\\n                            <form-messages [control]=\\\"myForm.controls.inventory_productPriceListItems_status\\\">\\r\\n                            </form-messages>\\r\\n                        </md-hint>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </section>\\r\\n            <!-- ==============Non Editable Section End====================== -->\\r\\n        </form>\\r\\n        <div *ngIf=\\\"isEditable=='true'\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end end\\\" class=\\\"padding-side\\\">\\r\\n            <button md-raised-button color=\\\"accent\\\" [disabled]=\\\"!myForm.valid\\\" (click)=\\\"save()\\\">\\r\\n                Save\\r\\n            </button>\\r\\n        </div>\\r\\n    </md-card>\\r\\n</aside>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/product/inventory.edit.component.html\n// module id = ../../../../../src/app/components/admin/product/inventory.edit.component.html\n// module chunks = 1","import { Component, OnInit, Input, ViewContainerRef } from \"@angular/core\";\r\nimport { AppService } from \"../../../shared/service/app.service\";\r\nimport { AnimationService } from \"../../../shared/service/animation.service\";\r\nimport { RestService } from \"../../../common/rest.service\";\r\nimport { Prop } from \"../../../common/props\";\r\nimport { Util } from \"../../../shared/utils/util\";\r\n\r\nimport { InventoryFormGroup } from \"../../../forms/Product.form\";\r\n\r\nimport { Inventory } from \"../../../entities/Product.entity\";\r\nimport { ProductPurchasing } from \"../../../entities/ProductPurchasing.entity\";\r\nimport { ProductPriceListItems } from \"../../../entities/ProductPriceListItems.entity\";\r\n\r\n@Component({\r\n  selector: \"app-inventory\",\r\n  templateUrl: \"./inventory.edit.component.html\"\r\n})\r\nexport class InventoryEditComponent {\r\n  myForm: any = InventoryFormGroup.init();\r\n  inventory: Inventory = new Inventory();\r\n  @Input() id;\r\n  purchaseTaxList: any[] = [];\r\n  taxList: any[] = [];\r\n  expenseAccountList: any[] = [];\r\n  revenueAccountList: any[] = [];\r\n  invAssetAccountList: any[] = [];\r\n  uqcList: any[] = [];\r\n  filteredUqcList: any[] = [];\r\n  public isEditable: boolean = true;\r\n\r\n  constructor(\r\n    private appService: AppService,\r\n    private restService: RestService,\r\n    vcr: ViewContainerRef\r\n  ) {\r\n    InventoryFormGroup.edit(this.myForm);\r\n    let id = this.appService.getParam(\"id\");\r\n    this.isEditable = this.appService.getParam(\"isEditable\");\r\n    if (id !== undefined) {\r\n      this.retrieve(id);\r\n    }\r\n    // this.toastr.setRootViewContainerRef(vcr);\r\n  }\r\n  ngOnInit() {\r\n    this.init();\r\n  }\r\n  showWarning() {\r\n    // this.toastr.warning('Cost prize should be less than Selling prize.', 'Alert!',{positionClass: \"toast-bottom-center\"});\r\n  }\r\n\r\n  comparePrize() {\r\n    let costPrize = parseInt(this.inventory.productPriceListItems.unitPrice);\r\n    let sellingPrize = this.inventory.productPriceListItems.unitSellPrice;\r\n    if (costPrize > sellingPrize) {\r\n      this.showWarning();\r\n    }\r\n  }\r\n\r\n  private init() {\r\n    this.inventory.productType = \"Inventory\";\r\n    // let id = this.id;\r\n    // console.log(id);\r\n    // if (this.id) {\r\n    //     this.retrieve(id);\r\n    // }\r\n    this.purchaseTaxLoad();\r\n    this.taxLoad();\r\n    this.uqcLoad();\r\n    this.expenseAccountLoad();\r\n    this.revenueAccountLoad();\r\n    this.invAssetAccountLoad();\r\n  }\r\n\r\n  private purchaseTaxLoad() {\r\n    this.restService.dataload(\"NewPurchaseTax\").subscribe(results => {\r\n      if (results) {\r\n        this.purchaseTaxList = results;\r\n      }\r\n    });\r\n  }\r\n\r\n  private taxLoad() {\r\n    this.restService.dataload(\"NewTax\").subscribe(results => {\r\n      if (results) {\r\n        this.taxList = results;\r\n      }\r\n    });\r\n  }\r\n\r\n  private uqcLoad() {\r\n    //this.uqcList = [{code:'BAG',desc:'BAG'},{code:'BGS',desc:'BAGS'}];\r\n    this.restService\r\n      .dataloadFromFile(\"./assets/json/unit_quantity_codes.json\")\r\n      .subscribe(results => {\r\n        if (results) {\r\n          this.uqcList = results[\"unitQuantityCodes\"];\r\n        }\r\n      });\r\n  }\r\n\r\n  filterUQCList(val: string) {\r\n    if (val) {\r\n      this.inventory.uqc = val;\r\n    }\r\n    this.filteredUqcList =\r\n      val && val != \"\"\r\n        ? this.uqcList.filter(\r\n            s => s.description.toLowerCase().indexOf(val.toLowerCase()) >= 0\r\n          )\r\n        : this.uqcList;\r\n  }\r\n\r\n  private expenseAccountLoad() {\r\n    this.restService.dataload(\"/expenseAccount\").subscribe(results => {\r\n      if (results) {\r\n        this.expenseAccountList = results;\r\n      }\r\n    });\r\n  }\r\n\r\n  private revenueAccountLoad() {\r\n    this.restService.dataload(\"/revenueAccount\").subscribe(results => {\r\n      if (results) {\r\n        this.revenueAccountList = results;\r\n      }\r\n    });\r\n  }\r\n\r\n  private invAssetAccountLoad() {\r\n    this.restService.dataload(\"/AssetAccount\").subscribe(results => {\r\n      if (results) {\r\n        this.invAssetAccountList = results;\r\n      }\r\n    });\r\n  }\r\n\r\n  retrieve(id: string) {\r\n    this.restService.inventoryEntity(id).subscribe(result => {\r\n      if (result) {\r\n        this.inventory = result;\r\n      }\r\n    });\r\n  }\r\n\r\n  valid() {\r\n    return true;\r\n  }\r\n\r\n  save() {\r\n    if (!this.valid()) return;\r\n    this.inventory.productType = \"Inventory\";\r\n    this.inventory.companyId = this.appService.getBranch().id;\r\n    this.inventory.active = true;\r\n    this.restService.inventorySave(this.inventory).subscribe(result => {\r\n      if (result) {\r\n        this.inventory = result;\r\n        this.appService.showMessage(\"Saved successfully.\");\r\n        this.myForm.reset();\r\n        //this.appService.navigate('admin/product-search', []);\r\n      }\r\n    });\r\n  }\r\n\r\n  add() {\r\n    this.inventory = new Inventory();\r\n    this.myForm = InventoryFormGroup.init();\r\n  }\r\n\r\n  back() {\r\n    this.appService.navigate(\"\", []);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/product/inventory.edit.component.ts","module.exports = \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" >\\r\\n    <h2>\\r\\n        Non Inventory\\r\\n    </h2>\\r\\n</div>\\r\\n<main id=\\\"page-content\\\" fxLayout=\\\"column\\\">\\r\\n    <md-card style=\\\"margin: 1rem\\\">\\r\\n        <form [formGroup]=\\\"myForm\\\" novalidate autocomplete='off'>\\r\\n            <!-- ==============Editable Section Start====================== -->\\r\\n            <section fxLayout=\\\"row wrap\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"start start\\\" *ngIf=\\\"isEditable== 'true' \\\">\\r\\n                <div fxFlex=\\\"100%\\\" class=\\\"padding-side\\\">\\r\\n                    <md-input-container>\\r\\n                        <input required mdInput type=\\\"text\\\" placeholder=\\\"Product name\\\" [formControl]=\\\"myForm.controls.inventory_productName\\\" [(ngModel)]=\\\"inventory.productName\\\">\\r\\n                        <md-hint>\\r\\n                            <form-messages [control]=\\\"myForm.controls.inventory_productName\\\">\\r\\n                            </form-messages>\\r\\n                        </md-hint>\\r\\n                    </md-input-container>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"25\\\" class=\\\"padding-side\\\">\\r\\n                    <md-input-container>\\r\\n                        <input mdInput type=\\\"text\\\" placeholder=\\\"SKU\\\" [formControl]=\\\"myForm.controls.inventory_productCode\\\" [(ngModel)]=\\\"inventory.productCode\\\">\\r\\n                        <md-hint>\\r\\n                            <form-messages [control]=\\\"myForm.controls.inventory_productCode\\\">\\r\\n                            </form-messages>\\r\\n                        </md-hint>\\r\\n                    </md-input-container>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"25\\\" class=\\\"padding-side\\\">\\r\\n                    <md-input-container>\\r\\n                        <input mdInput required type=\\\"text\\\" placeholder=\\\"HSN Code\\\" [formControl]=\\\"myForm.controls.inventory_hsnCode\\\" [(ngModel)]=\\\"inventory.hsnCode\\\">\\r\\n                        <md-hint>\\r\\n                            <form-messages [control]=\\\"myForm.controls.inventory_hsnCode\\\">\\r\\n                            </form-messages>\\r\\n                        </md-hint>\\r\\n                    </md-input-container>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"25\\\" class=\\\"padding-side\\\">\\r\\n                    <md-input-container>\\r\\n                        <input required mdInput readonly type=\\\"text\\\" placeholder=\\\"Category\\\" [formControl]=\\\"myForm.controls.inventory_productType\\\"\\r\\n                            [(ngModel)]=\\\"inventory.productType\\\">\\r\\n                        <md-hint>\\r\\n                            <form-messages [control]=\\\"myForm.controls.inventory_productType\\\">\\r\\n                            </form-messages>\\r\\n                        </md-hint>\\r\\n                    </md-input-container>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"25\\\" class=\\\"padding-side\\\">\\r\\n                    <md-input-container>\\r\\n                        <input mdInput type=\\\"text\\\" placeholder=\\\"Cess Tax\\\" [formControl]=\\\"myForm.controls.inventory_productPurchasing_purchasingInfo\\\"\\r\\n                            [(ngModel)]=\\\"inventory.productPurchasing.purchasingInfo\\\">\\r\\n                        <md-hint>\\r\\n                            <form-messages [control]=\\\"myForm.controls.inventory_productPurchasing_purchasingInfo\\\">\\r\\n                            </form-messages>\\r\\n                        </md-hint>\\r\\n                    </md-input-container>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"100\\\" class=\\\"padding-side\\\">\\r\\n                    <div class=\\\"md-checkbox\\\">\\r\\n                        <md-checkbox [(ngModel)]=\\\"inventory.productPriceListItems.isProdServc\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                            I sell this product/service to my customers\\r\\n                        </md-checkbox>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <!-- <div fxFlex=\\\"100\\\" class=\\\"padding-side\\\">\\r\\n                    <md-input-container>\\r\\n                        <input required mdInput type=\\\"text\\\" placeholder=\\\"Sales Information\\\" [formControl]=\\\"myForm.controls.inventory_productPriceListItems_salesInformation\\\"\\r\\n                            [(ngModel)]=\\\"inventory.productPriceListItems.salesInformation\\\">\\r\\n                        <md-hint>\\r\\n                            <form-messages [control]=\\\"myForm.controls.inventory_productPriceListItems_salesInformation\\\">\\r\\n                            </form-messages>\\r\\n                        </md-hint>\\r\\n                    </md-input-container>\\r\\n                </div> -->\\r\\n                <div fxFlex=\\\"30\\\" class=\\\"padding-side\\\">\\r\\n                    <md-input-container>\\r\\n                        <input required mdInput type=\\\"number\\\" placeholder=\\\"Sales price per unit\\\" [formControl]=\\\"myForm.controls.inventory_productPriceListItems_unitSellPrice\\\"\\r\\n                            [(ngModel)]=\\\"inventory.productPriceListItems.unitSellPrice\\\">\\r\\n                        <md-hint>\\r\\n                            <form-messages [control]=\\\"myForm.controls.inventory_productPriceListItems_unitSellPrice\\\">\\r\\n                            </form-messages>\\r\\n                        </md-hint>\\r\\n                    </md-input-container>\\r\\n                </div>\\r\\n                <!-- <div fxFlex=\\\"25\\\" class=\\\"padding-side\\\">\\r\\n                    <div class=\\\"md-select\\\">\\r\\n                        <md-select required placeholder=\\\"Revenue Account\\\" [formControl]=\\\"myForm.controls.inventory_productPriceListItems_revenueAccount\\\"\\r\\n                            [(ngModel)]=\\\"inventory.productPriceListItems.revenueAccount\\\">\\r\\n                            <md-option *ngFor=\\\"let keyValues of revenueAccountList\\\" [value]=\\\"keyValues[0]\\\">\\r\\n                                {{keyValues[1]}}\\r\\n                            </md-option>\\r\\n                        </md-select>\\r\\n                        <md-hint>\\r\\n                            <form-messages [control]=\\\"myForm.controls.inventory_productPriceListItems_revenueAccount\\\">\\r\\n                            </form-messages>\\r\\n                        </md-hint>\\r\\n                    </div>\\r\\n                </div> -->\\r\\n\\r\\n\\r\\n                <div fxFlex=\\\"30\\\" class=\\\"padding-side\\\">\\r\\n                    <div class=\\\"md-select\\\">\\r\\n                        <md-select required placeholder=\\\"Tax\\\" [formControl]=\\\"myForm.controls.inventory_productPriceListItems_tax\\\" [(ngModel)]=\\\"inventory.productPriceListItems.tax\\\">\\r\\n                            <md-option *ngFor=\\\"let keyValues of taxList\\\" [value]=\\\"keyValues[0]\\\">\\r\\n                                {{keyValues[1]}}\\r\\n                            </md-option>\\r\\n                        </md-select>\\r\\n                        <md-hint>\\r\\n                            <form-messages [control]=\\\"myForm.controls.inventory_productPriceListItems_tax\\\">\\r\\n                            </form-messages>\\r\\n                        </md-hint>\\r\\n                    </div>\\r\\n                </div>\\r\\n              <!--  <div fxFlex=\\\"40\\\" class=\\\"padding-side\\\">\\r\\n                    <div class=\\\"md-checkbox\\\">\\r\\n                        <md-checkbox [(ngModel)]=\\\"inventory.productPriceListItems.taxInclusive\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                            Inclusive of Tax\\r\\n                        </md-checkbox>\\r\\n                    </div>\\r\\n                </div>-->\\r\\n\\r\\n                <!-- <div fxFlex=\\\"100\\\" class=\\\"padding-side\\\">\\r\\n                    <md-input-container>\\r\\n                        <input required mdInput type=\\\"text\\\" placeholder=\\\"purchasing Information\\\" [formControl]=\\\"myForm.controls.inventory_productPurchasing_purchasingInfo\\\"\\r\\n                            [(ngModel)]=\\\"inventory.productPurchasing.purchasingInfo\\\">\\r\\n                        <md-hint>\\r\\n                            <form-messages [control]=\\\"myForm.controls.inventory_productPurchasing_purchasingInfo\\\">\\r\\n                            </form-messages>\\r\\n                        </md-hint>\\r\\n                    </md-input-container>\\r\\n                </div> -->\\r\\n\\r\\n\\r\\n\\r\\n                <div fxFlex=\\\"30\\\" class=\\\"padding-side\\\">\\r\\n                    <md-input-container>\\r\\n                        <input required mdInput type=\\\"number\\\" placeholder=\\\"cost\\\" [formControl]=\\\"myForm.controls.inventory_productPriceListItems_unitPrice\\\"\\r\\n                            [(ngModel)]=\\\"inventory.productPriceListItems.unitPrice\\\">\\r\\n                        <md-hint>\\r\\n                            <form-messages [control]=\\\"myForm.controls.inventory_productPriceListItems_unitPrice\\\">\\r\\n                            </form-messages>\\r\\n                        </md-hint>\\r\\n                    </md-input-container>\\r\\n                </div>\\r\\n                <!-- <div fxFlex=\\\"25\\\" class=\\\"padding-side\\\">\\r\\n                    <div class=\\\"md-select\\\">\\r\\n                        <md-select required placeholder=\\\"Expense Account\\\" [formControl]=\\\"myForm.controls.inventory_productPriceListItems_expenseAccount\\\"\\r\\n                            [(ngModel)]=\\\"inventory.productPriceListItems.expenseAccount\\\">\\r\\n                            <md-option *ngFor=\\\"let keyValues of expenseAccountList\\\" [value]=\\\"keyValues[0]\\\">\\r\\n                                {{keyValues[1]}}\\r\\n                            </md-option>\\r\\n                        </md-select>\\r\\n                        <md-hint>\\r\\n                            <form-messages [control]=\\\"myForm.controls.inventory_productPriceListItems_expenseAccount\\\">\\r\\n                            </form-messages>\\r\\n                        </md-hint>\\r\\n                    </div>\\r\\n                </div> -->\\r\\n\\r\\n\\r\\n                <div fxFlex=\\\"30\\\" class=\\\"padding-side\\\">\\r\\n                    <div class=\\\"md-select\\\">\\r\\n                        <md-select required placeholder=\\\"Purchase Tax\\\" [formControl]=\\\"myForm.controls.inventory_productPriceListItems_purchaseTax\\\"\\r\\n                            [(ngModel)]=\\\"inventory.productPriceListItems.purchaseTax\\\">\\r\\n                            <md-option *ngFor=\\\"let keyValues of purchaseTaxList\\\" [value]=\\\"keyValues[0]\\\">\\r\\n                                {{keyValues[1]}}\\r\\n                            </md-option>\\r\\n                        </md-select>\\r\\n                        <md-hint>\\r\\n                            <form-messages [control]=\\\"myForm.controls.inventory_productPriceListItems_purchaseTax\\\">\\r\\n                            </form-messages>\\r\\n                        </md-hint>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n              <!--  <div fxFlex=\\\"40\\\" class=\\\"padding-side\\\">\\r\\n                    <div class=\\\"md-checkbox\\\">\\r\\n                        <md-checkbox [(ngModel)]=\\\"inventory.productPriceListItems.purchaseTaxInclusive\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                            Inclusive of Purchase Tax\\r\\n                        </md-checkbox>\\r\\n                    </div>\\r\\n                </div>-->\\r\\n                <div fxFlex=\\\"25\\\" class=\\\"padding-side\\\">\\r\\n                    <div class=\\\"md-select\\\">\\r\\n                        <md-select placeholder=\\\"Status\\\" [(ngModel)]=\\\"inventory.active\\\" [formControl]=\\\"myForm.controls.inventory_productPriceListItems_status\\\" >\\r\\n                            <md-option value=\\\"true\\\">Active</md-option>\\r\\n                            <md-option value=\\\"false\\\">Inactive</md-option>\\r\\n                        </md-select>\\r\\n                       \\r\\n                        <md-hint>\\r\\n                            <form-messages [control]=\\\"myForm.controls.inventory_productPriceListItems_status\\\">\\r\\n                            </form-messages>\\r\\n                        </md-hint>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </section>\\r\\n            <!-- ==============Editable Section End====================== -->\\r\\n            <!-- ==============Non Editable Section Start====================== -->\\r\\n            <section fxLayout=\\\"row wrap\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"start start\\\" *ngIf=\\\"isEditable=='false'\\\">\\r\\n                <div fxFlex=\\\"100%\\\" class=\\\"padding-side\\\">\\r\\n                    <md-input-container>\\r\\n                        <input readonly mdInput type=\\\"text\\\" placeholder=\\\"Product name\\\" [formControl]=\\\"myForm.controls.inventory_productName\\\" [(ngModel)]=\\\"inventory.productName\\\">\\r\\n                        <md-hint>\\r\\n                            <form-messages [control]=\\\"myForm.controls.inventory_productName\\\">\\r\\n                            </form-messages>\\r\\n                        </md-hint>\\r\\n                    </md-input-container>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"25\\\" class=\\\"padding-side\\\">\\r\\n                    <md-input-container>\\r\\n                        <input mdInput readonly type=\\\"text\\\" placeholder=\\\"SKU\\\" [formControl]=\\\"myForm.controls.inventory_productCode\\\" [(ngModel)]=\\\"inventory.productCode\\\">\\r\\n                        <md-hint>\\r\\n                            <form-messages [control]=\\\"myForm.controls.inventory_productCode\\\">\\r\\n                            </form-messages>\\r\\n                        </md-hint>\\r\\n                    </md-input-container>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"25\\\" class=\\\"padding-side\\\">\\r\\n                    <md-input-container>\\r\\n                        <input mdInput readonly type=\\\"text\\\" placeholder=\\\"HSN Code\\\" [formControl]=\\\"myForm.controls.inventory_hsnCode\\\" [(ngModel)]=\\\"inventory.hsnCode\\\">\\r\\n                        <md-hint>\\r\\n                            <form-messages [control]=\\\"myForm.controls.inventory_hsnCode\\\">\\r\\n                            </form-messages>\\r\\n                        </md-hint>\\r\\n                    </md-input-container>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"25\\\" class=\\\"padding-side\\\">\\r\\n                    <md-input-container>\\r\\n                        <input readonly mdInput readonly type=\\\"text\\\" placeholder=\\\"Category\\\" [formControl]=\\\"myForm.controls.inventory_productType\\\"\\r\\n                            [(ngModel)]=\\\"inventory.productType\\\">\\r\\n                        <md-hint>\\r\\n                            <form-messages [control]=\\\"myForm.controls.inventory_productType\\\">\\r\\n                            </form-messages>\\r\\n                        </md-hint>\\r\\n                    </md-input-container>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"25\\\" class=\\\"padding-side\\\">\\r\\n                    <md-input-container>\\r\\n                        <input mdInput readonly type=\\\"text\\\" placeholder=\\\"Cess Tax\\\" [formControl]=\\\"myForm.controls.inventory_productPurchasing_purchasingInfo\\\"\\r\\n                            [(ngModel)]=\\\"inventory.productPurchasing.purchasingInfo\\\">\\r\\n                        <md-hint>\\r\\n                            <form-messages [control]=\\\"myForm.controls.inventory_productPurchasing_purchasingInfo\\\">\\r\\n                            </form-messages>\\r\\n                        </md-hint>\\r\\n                    </md-input-container>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"100\\\" class=\\\"padding-side\\\">\\r\\n                    <div class=\\\"md-checkbox\\\">\\r\\n                        <md-checkbox *ngIf=\\\"isEditable== 'false' \\\" onclick=\\\"return false;\\\" [(ngModel)]=\\\"inventory.productPriceListItems.isProdServc\\\"\\r\\n                            [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                            I sell this product/service to my customers\\r\\n                        </md-checkbox>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"30\\\" class=\\\"padding-side\\\">\\r\\n                    <md-input-container>\\r\\n                        <input readonly mdInput type=\\\"number\\\" placeholder=\\\"Sales price per unit\\\" [formControl]=\\\"myForm.controls.inventory_productPriceListItems_unitSellPrice\\\"\\r\\n                            [(ngModel)]=\\\"inventory.productPriceListItems.unitSellPrice\\\">\\r\\n                        <md-hint>\\r\\n                            <form-messages [control]=\\\"myForm.controls.inventory_productPriceListItems_unitSellPrice\\\">\\r\\n                            </form-messages>\\r\\n                        </md-hint>\\r\\n                    </md-input-container>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"30\\\" class=\\\"padding-side\\\">\\r\\n\\r\\n                    <md-input-container>\\r\\n                        <input readonly mdInput  placeholder=\\\"Tax\\\" [formControl]=\\\"myForm.controls.inventory_productPriceListItems_tax\\\"\\r\\n                            [(ngModel)]=\\\"inventory.productPriceListItems.tax\\\">\\r\\n                        <md-hint>\\r\\n                            <form-messages [control]=\\\"myForm.controls.inventory_productPriceListItems_tax\\\">\\r\\n                            </form-messages>\\r\\n                        </md-hint>\\r\\n                    </md-input-container>\\r\\n\\r\\n\\r\\n                </div>\\r\\n               <!-- <div fxFlex=\\\"40\\\" class=\\\"padding-side\\\">\\r\\n                    <div class=\\\"md-checkbox\\\">\\r\\n                        <md-checkbox *ngIf=\\\"isEditable=='false'\\\" onclick=\\\"return false;\\\" [(ngModel)]=\\\"inventory.productPriceListItems.taxInclusive\\\"\\r\\n                            [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                            Inclusive of Tax\\r\\n                        </md-checkbox>\\r\\n                    </div>\\r\\n                </div>-->\\r\\n\\r\\n                <div fxFlex=\\\"30\\\" class=\\\"padding-side\\\">\\r\\n                    <md-input-container>\\r\\n                        <input readonly mdInput type=\\\"number\\\" placeholder=\\\"cost\\\" [formControl]=\\\"myForm.controls.inventory_productPriceListItems_unitPrice\\\"\\r\\n                            [(ngModel)]=\\\"inventory.productPriceListItems.unitPrice\\\">\\r\\n                        <md-hint>\\r\\n                            <form-messages [control]=\\\"myForm.controls.inventory_productPriceListItems_unitPrice\\\">\\r\\n                            </form-messages>\\r\\n                        </md-hint>\\r\\n                    </md-input-container>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"30\\\" class=\\\"padding-side\\\">\\r\\n\\r\\n                    <md-input-container>\\r\\n                        <input readonly mdInput  placeholder=\\\"Purchase Tax\\\" [formControl]=\\\"myForm.controls.inventory_productPriceListItems_purchaseTax\\\"\\r\\n                            [(ngModel)]=\\\"inventory.productPriceListItems.purchaseTax\\\">\\r\\n                        <md-hint>\\r\\n                            <form-messages [control]=\\\"myForm.controls.inventory_productPriceListItems_purchaseTax\\\">\\r\\n                            </form-messages>\\r\\n                        </md-hint>\\r\\n                    </md-input-container>\\r\\n                </div>\\r\\n\\r\\n              <!--  <div fxFlex=\\\"40\\\" class=\\\"padding-side\\\">\\r\\n                    <div class=\\\"md-checkbox\\\">\\r\\n                        <md-checkbox *ngIf=\\\"isEditable=='false'\\\" onclick=\\\"return false;\\\" [(ngModel)]=\\\"inventory.productPriceListItems.purchaseTaxInclusive\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                            Inclusive of Purchase Tax\\r\\n                        </md-checkbox>\\r\\n                    </div>\\r\\n                </div>-->\\r\\n                <div fxFlex=\\\"25\\\" class=\\\"padding-side\\\">\\r\\n                    <div class=\\\"md-select\\\">\\r\\n                        <md-select placeholder=\\\"Status\\\" [(ngModel)]=\\\"inventory.active\\\" [formControl]=\\\"myForm.controls.inventory_productPriceListItems_status\\\" >\\r\\n                            <md-option value=\\\"true\\\">Active</md-option>\\r\\n                            <md-option value=\\\"false\\\">Inactive</md-option>\\r\\n                        </md-select>\\r\\n                       \\r\\n                        <md-hint>\\r\\n                            <form-messages [control]=\\\"myForm.controls.inventory_productPriceListItems_status\\\">\\r\\n                            </form-messages>\\r\\n                        </md-hint>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </section>\\r\\n        </form>\\r\\n        <div *ngIf=\\\"isEditable== 'true' \\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end end\\\" class=\\\"padding-side\\\">\\r\\n            <button md-raised-button color=\\\"accent\\\" [disabled]=\\\"!myForm.valid\\\" (click)=\\\"save(); false\\\">\\r\\n                Save\\r\\n            </button>\\r\\n        </div>\\r\\n    </md-card>\\r\\n</main>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/product/noninventory.edit.component.html\n// module id = ../../../../../src/app/components/admin/product/noninventory.edit.component.html\n// module chunks = 1","import { Component, OnInit, Input } from '@angular/core';\r\nimport { AppService } from '../../../shared/service/app.service';\r\nimport { AnimationService } from '../../../shared/service/animation.service';\r\nimport { RestService } from '../../../common/rest.service';\r\nimport { Prop } from '../../../common/props';\r\nimport { Util } from '../../../shared/utils/util';\r\n\r\nimport { InventoryFormGroup } from '../../../forms/Product.form';\r\n\r\nimport { Inventory } from '../../../entities/Product.entity'; \r\nimport { ProductPurchasing } from '../../../entities/ProductPurchasing.entity'; \r\nimport { ProductPriceListItems } from '../../../entities/ProductPriceListItems.entity'; \r\n\r\n@Component({\r\n    selector: 'app-noninventory',\r\n    templateUrl: './noninventory.edit.component.html'\r\n})\r\nexport class NonInventoryEditComponent {\r\n    myForm: any = InventoryFormGroup.init();\r\n    inventory: Inventory = new Inventory();\r\n    @Input() id; \r\n    purchaseTaxList: any[] = []; \r\n    taxList: any[] = []; \r\n    expenseAccountList: any[] = []; \r\n    revenueAccountList: any[] = []; \r\n    invAssetAccountList: any[] = []; \r\n    public isEditable = false;\r\n\r\n    constructor(private appService: AppService, private restService: RestService) {\r\n        InventoryFormGroup.edit( this.myForm );\r\n        let id = this.appService.getParam(\"id\");\r\n        this.isEditable = this.appService.getParam(\"isEditable\");\r\n        if (id !== undefined) { \r\n            this.retrieve(id);\r\n        }\r\n    }\r\n    ngOnInit() {\r\n        this.init();\r\n    }\r\n    private init() {\r\n         this.inventory.productType = 'NonInventory' ;\r\n        // let id = this.id;\r\n        // if( id ) {\r\n        //     this.retrieve(id);\r\n        // } \r\n        this.purchaseTaxLoad(); \r\n        this.taxLoad(); \r\n        this.expenseAccountLoad(); \r\n        this.revenueAccountLoad(); \r\n        this.invAssetAccountLoad(); \r\n    }\r\n    \r\n    private purchaseTaxLoad() {\r\n        this.restService.dataload('NewPurchaseTax')\r\n            .subscribe(results => {\r\n                if (results) {\r\n                    this.purchaseTaxList = results;\r\n                }\r\n            });\r\n    }\r\n    \r\n    private taxLoad() {\r\n        this.restService.dataload('NewTax')\r\n            .subscribe(results => {\r\n                if (results) {\r\n                    this.taxList = results;\r\n                }\r\n            });\r\n    }\r\n    \r\n    private expenseAccountLoad() {\r\n        this.restService.dataload( '/expenseAccount' )\r\n            .subscribe(results => {\r\n                if (results) {\r\n                    this.expenseAccountList = results;\r\n                }\r\n            });\r\n    }\r\n    \r\n    private revenueAccountLoad() {\r\n        this.restService.dataload( '/revenueAccount' )\r\n            .subscribe(results => {\r\n                if (results) {\r\n                    this.revenueAccountList = results;\r\n                }\r\n            });\r\n    }\r\n    \r\n    private invAssetAccountLoad() {\r\n        this.restService.dataload( '/AssetAccount' )\r\n            .subscribe(results => {\r\n                if (results) {\r\n                    this.invAssetAccountList = results;\r\n                }\r\n            });\r\n    }\r\n    \r\n\r\n    retrieve(id: string) {\r\n        this.restService.inventoryEntity(id)\r\n            .subscribe(result => {\r\n                if (result) {\r\n                    this.inventory= result;\r\n                    \r\n                }\r\n            });\r\n    }\r\n\r\n    valid() {\r\n        return true;\r\n    }\r\n\r\n    save() {\r\n        if (!this.valid()) return;\r\n        this.inventory.productType = 'NonInventory' ;\r\n        this.inventory.companyId = this.appService.getBranch().id;\r\n        this.inventory.active = true;\r\n        this.restService.inventorySave(this.inventory)\r\n            .subscribe(result => {\r\n                if (result) {\r\n                    //console.log(\"result ======\"+result);\r\n                    this.inventory.id= result.id;\r\n                    this.appService.showMessage('Saved successfully...!');\r\n                    this.myForm.reset();\r\n                    //event.preventDefault();\r\n                    //this.appService.navigate('admin/product-search',[]);\r\n                    //location.reload();\r\n                    \r\n                    \r\n                }\r\n            });\r\n    }\r\n\r\n    add() {\r\n        this.inventory = new Inventory();\r\n        this.myForm = InventoryFormGroup.init();\r\n    }\r\n\r\n    back() {\r\n        this.appService.navigate('', []);\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/product/noninventory.edit.component.ts","module.exports = \"<div id=\\\"page-header\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n    <h2>Inventory Management</h2>\\r\\n</div>\\r\\n\\r\\n\\r\\n<aside id=\\\"page-content\\\" style=\\\"overflow:auto;\\\">\\r\\n    <div class=\\\"padding-side\\\" style=\\\"margin: 20px 0;\\\">\\r\\n        <md-toolbar color=\\\"primary\\\">\\r\\n            <md-input-container class=\\\"padding-side\\\">\\r\\n                <input mdInput placeholder=\\\"Product\\\" [(ngModel)]=\\\"searchObj.name\\\" (keyup)=\\\"callDataSource()\\\">\\r\\n            </md-input-container>\\r\\n            <div class=\\\"padding-side\\\">\\r\\n                <md-select placeholder=\\\"Type of Product/Service\\\" [(ngModel)]=\\\"searchObj.type\\\" (change)=\\\"callDataSource()\\\">\\r\\n                    <md-option value=\\\"Inventory\\\">Inventory</md-option>\\r\\n                    <md-option value=\\\"Service\\\">Service</md-option>\\r\\n                    <md-option value=\\\"all\\\">All</md-option>\\r\\n                </md-select>\\r\\n            </div>\\r\\n            <div class=\\\"padding-side\\\">\\r\\n                <md-select placeholder=\\\"Status\\\" [(ngModel)]=\\\"searchObj.status\\\" (change)=\\\"callDataSource()\\\" (click)=\\\"clear()\\\">\\r\\n                    <md-option value=\\\"true\\\">Active</md-option>\\r\\n                    <md-option value=\\\"false\\\">Inactive</md-option>\\r\\n                </md-select>\\r\\n            </div>\\r\\n        </md-toolbar>\\r\\n    </div>\\r\\n    <div class=\\\"row center-xs padding\\\">\\r\\n        <md-card class=\\\"col-xs-12 \\\">\\r\\n            <md-card-content class=\\\"start-xs \\\">\\r\\n\\r\\n                <md-table #table [dataSource]=\\\"dataSource\\\" mdSort style=\\\"height: 500px; overflow-y: auto\\\">\\r\\n                    <ng-container cdkColumnDef=\\\"product\\\">\\r\\n                        <md-header-cell *cdkHeaderCellDef md-sort-header style=\\\"position: sticky; top: 0\\\"> Product/Service </md-header-cell>\\r\\n                        <md-cell *cdkCellDef=\\\"let row\\\" (click)=\\\"myFun(row)\\\">\\r\\n                            <div *ngIf=\\\"searchObj.type != 'Product'\\\"> {{row.serviceName}} </div>\\r\\n                            <div *ngIf=\\\"searchObj.type != 'Service'\\\"> {{row.productName}} </div>\\r\\n                        </md-cell>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <ng-container cdkColumnDef=\\\"typeofproduct\\\">\\r\\n                        <md-header-cell *cdkHeaderCellDef md-sort-header style=\\\"position: sticky; top: 0\\\">Type of Product/Service </md-header-cell>\\r\\n                        <md-cell *cdkCellDef=\\\"let row\\\" (click)=\\\"myFun(row)\\\"> {{row.productType}} </md-cell>\\r\\n                    </ng-container>\\r\\n                    <ng-container cdkColumnDef=\\\"qty\\\">\\r\\n                        <md-header-cell *cdkHeaderCellDef md-sort-header style=\\\"position: sticky; top: 0\\\">Qty</md-header-cell>\\r\\n                        <md-cell *cdkCellDef=\\\"let row\\\" (click)=\\\"myFun(row)\\\">\\r\\n                            <div *ngIf=\\\"row.productType == 'Service'\\\">-</div>\\r\\n                            <div *ngIf=\\\"row.productType != 'Service'\\\"><span *ngIf=\\\"row.productPriceListItems\\\">{{row.productPriceListItems.initialStockAtHand}}</span></div>\\r\\n                        </md-cell>\\r\\n\\r\\n                    </ng-container>\\r\\n                    <ng-container cdkColumnDef=\\\"lowstockalert\\\" (click)=\\\"myFun(row)\\\">\\r\\n                        <md-header-cell *cdkHeaderCellDef md-sort-header style=\\\"position: sticky; top: 0\\\">Low stock alert</md-header-cell>\\r\\n                        <md-cell *cdkCellDef=\\\"let row\\\">\\r\\n                            <div *ngIf=\\\"row.productType == 'Service'\\\">-</div>\\r\\n                            <div *ngIf=\\\"row.productType != 'Service'\\\"><span *ngIf=\\\"row.productPriceListItems\\\">{{row.productPriceListItems.stockAlertQty}}</span> </div>\\r\\n                        </md-cell>\\r\\n\\r\\n                    </ng-container>\\r\\n                    <ng-container cdkColumnDef=\\\"action\\\">\\r\\n                        <md-header-cell *cdkHeaderCellDef fxLayoutAlign=\\\"end center\\\" style=\\\"position: sticky; top: 0\\\">Action</md-header-cell>\\r\\n                        <md-cell *cdkCellDef=\\\"let row\\\" (click)=\\\"selectItem(row)\\\" fxLayoutAlign=\\\"end center\\\">\\r\\n                            <md-icon color=\\\"accent\\\" [mdMenuTriggerFor]=\\\"sendMenu\\\">more_vert</md-icon>\\r\\n                        </md-cell>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <md-header-row *cdkHeaderRowDef=\\\"displayedColumns\\\"></md-header-row>\\r\\n                    <md-row *cdkRowDef=\\\"let row; columns: displayedColumns;\\\"></md-row>\\r\\n                </md-table>\\r\\n\\r\\n            </md-card-content>\\r\\n        </md-card>\\r\\n        <md-paginator #paginator style=\\\"width: 100%\\\" [length]=\\\"dataSource.data.length\\\" [pageIndex]=\\\"0\\\" [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\">\\r\\n        </md-paginator>\\r\\n\\r\\n    </div>\\r\\n    <md-menu #sendMenu=\\\"mdMenu\\\"  style=\\\"padding: 1rem;\\\">\\r\\n        <button md-menu-item (click)=\\\"view(row)\\\"> View </button>\\r\\n        <button md-menu-item (click)=\\\"edit(row)\\\"> Edit </button>\\r\\n        <button md-menu-item (click)=\\\"delete(row)\\\"> Delete </button>\\r\\n    </md-menu>\\r\\n</aside>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/product/product.search.component.html\n// module id = ../../../../../src/app/components/admin/product/product.search.component.html\n// module chunks = 1","import { CustomManagement } from \"../../../entities/custommanagement\";\r\nimport {\r\n  Component,\r\n  OnInit,\r\n  ViewChild,\r\n  Output,\r\n  EventEmitter\r\n} from \"@angular/core\";\r\nimport { AppService } from \"../../../shared/service/app.service\";\r\nimport { AnimationService } from \"../../../shared/service/animation.service\";\r\nimport { RestService } from \"../../../common/rest.service\";\r\nimport { Prop } from \"../../../common/props\";\r\nimport { ProductDataSource } from \"./product.search.datasource\";\r\n\r\nimport { MdSort } from \"@angular/material\";\r\nimport { DataSource } from \"@angular/cdk\";\r\n//import { DialogContentExampleDialogService } from \"./DialogContentExampleDialogService\";\r\nimport { DialogContentExampleDialogInventory } from \"./DialogContentExampleDialogInventory\";\r\nimport {\r\n  MdDialog,\r\n  MdDialogRef,\r\n  MD_DIALOG_DATA,\r\n  MdPaginator\r\n} from \"@angular/material\";\r\n\r\n@Component({\r\n  selector: \"app-product-search\",\r\n  templateUrl: \"./product.search.component.html\"\r\n})\r\nexport class ProductSearchComponent {\r\n  // activeTab: string =\"search\";\r\n  // inventoryId: string;\r\n  // nonInventoryId: string;\r\n  // serviceId: string;\r\n\r\n  @ViewChild(MdSort) sort: MdSort;\r\n  @ViewChild(MdPaginator) paginator: MdPaginator;\r\n  //@Output() updateProduct = new EventEmitter();\r\n  dataSource: ProductDataSource = null;\r\n  displayedColumns: any[] = [\r\n    \"product\",\r\n    \"typeofproduct\",\r\n    \"qty\",\r\n    \"lowstockalert\",\r\n    \"action\"\r\n  ];\r\n  selectedItem: any;\r\n  serviceTypeList: string;\r\n  searchObj: any = {};\r\n  selectedItemForView: any = null;\r\n\r\n  constructor(\r\n    private appService: AppService,\r\n    private restService: RestService,\r\n    public dialog: MdDialog\r\n  ) {\r\n    this.searchObj.type = \"All\";\r\n    let id = this.appService.getBranch();\r\n    this.searchProduct();\r\n  }\r\n  //For delete Popup\r\n  openDialog(id, type) {\r\n    let myData = { id: id, type: type };\r\n    const dialogRef = this.dialog.open(DialogContentExampleDialogInventory, {\r\n      width: \"500px\",\r\n      height: \"250px\",\r\n      data: myData\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.clearAll();\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.typeList();\r\n    this.callDataSource();\r\n  }\r\n  callDataSource() {\r\n    this.dataSource = new ProductDataSource(\r\n      this.restService,\r\n      this.searchObj,\r\n      this.sort,\r\n      this.paginator\r\n    );\r\n  }\r\n\r\n  clearAll() {\r\n    this.searchObj = {};\r\n    this.searchObj.type = \"All\";\r\n    this.callDataSource();\r\n  }\r\n\r\n  clear() {\r\n    // this.searchObj = {};\r\n    // this.searchObj.type = \"Inventory\";\r\n    // this.callDataSource();\r\n  }\r\n\r\n  searchProduct() {}\r\n  selectItem(item: any) {\r\n    this.selectedItem = item;\r\n  }\r\n  private typeList() {\r\n    this.restService.dataload(\"/ServiceType\").subscribe(results => {\r\n      if (results) {\r\n        this.serviceTypeList = results;\r\n      }\r\n    });\r\n  }\r\n  // edit() {\r\n  //     let emitObj: any = {}\r\n  //     emitObj.id = this.selectedItem.id;\r\n  //     emitObj.type = this.searchObj.type;\r\n  //     this.updateProduct.emit(emitObj);\r\n\r\n  // }\r\n\r\n  edit() {\r\n    // console.log(this.selectedItem)\r\n    this.searchObj = this.selectedItem;\r\n    if (this.searchObj.productType == \"Inventory\") {\r\n      this.appService.navigate(\"./admin/inventory-edit\", [\r\n        { id: this.selectedItem.id, isEditable: true }\r\n      ]);\r\n    } else if (this.searchObj.productType == \"NonInventory\") {\r\n      this.appService.navigate(\"./admin/noninventory-edit\", [\r\n        { id: this.selectedItem.id, isEditable: true }\r\n      ]);\r\n    } else {\r\n      this.appService.navigate(\"./admin/service-edit\", [\r\n        { id: this.selectedItem.id, isEditable: true }\r\n      ]);\r\n    }\r\n  }\r\n\r\n  view() {\r\n    // console.log(this.selectedItem)\r\n    this.searchObj = this.selectedItem;\r\n    if (this.searchObj.productType == \"Inventory\") {\r\n      this.appService.navigate(\"./admin/inventory-edit\", [\r\n        { id: this.selectedItem.id, isEditable: false }\r\n      ]);\r\n    } else if (this.searchObj.productType == \"NonInventory\") {\r\n      this.appService.navigate(\"./admin/noninventory-edit\", [\r\n        { id: this.selectedItem.id, isEditable: false }\r\n      ]);\r\n    } else {\r\n      this.appService.navigate(\"./admin/service-edit\", [\r\n        { id: this.selectedItem.id, isEditable: false }\r\n      ]);\r\n    }\r\n  }\r\n\r\n  delete() {\r\n    // console.log(this.selectedItem)\r\n    this.searchObj = this.selectedItem;\r\n    this.openDialog(this.selectedItem.id, this.searchObj.type);\r\n  }\r\n\r\n  // openDialog(id) {\r\n  //     if(this.searchObj.type ==\"Service\") {\r\n  //         const dialogRef = this.dialog.open(DialogContentExampleDialogService, {\r\n  //             width: '500px',\r\n  //             height: '250px',\r\n  //             data: id  });\r\n\r\n  //               dialogRef.afterClosed().subscribe(result => {\r\n  //               this.clearAll();\r\n  //               });\r\n  //     }else{\r\n  //         const dialogRef = this.dialog.open(DialogContentExampleDialogInventory, {\r\n  //             width: '500px',\r\n  //             height: '250px',\r\n  //             data: id  });\r\n\r\n  //               dialogRef.afterClosed().subscribe(result => {\r\n  //               this.clearAll();\r\n  //               });\r\n  //     }\r\n\r\n  myFun(row) {\r\n    this.selectedItemForView = row;\r\n    console.log(row);\r\n    console.log(this.searchObj);\r\n    if (this.selectedItemForView.productType == \"Inventory\") {\r\n      this.appService.navigate(\"./admin/inventory-edit\", [\r\n        { id: this.selectedItemForView.id, isEditable: false }\r\n      ]);\r\n    } else if (this.selectedItemForView.productType == \"NonInventory\") {\r\n      this.appService.navigate(\"./admin/noninventory-edit\", [\r\n        { id: this.selectedItemForView.id, isEditable: false }\r\n      ]);\r\n    } else {\r\n      this.appService.navigate(\"./admin/service-edit\", [\r\n        { id: this.selectedItemForView.id, isEditable: false }\r\n      ]);\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/product/product.search.component.ts","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { DataSource} from '@angular/cdk';\r\nimport { AppService } from '../../../shared/service/app.service';\r\nimport { AnimationService } from '../../../shared/service/animation.service';\r\nimport { RestService } from '../../../common/rest.service';\r\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/startWith';\r\nimport 'rxjs/add/observable/merge';\r\nimport 'rxjs/add/operator/map';\r\nimport { MdSort, MdPaginator } from '@angular/material';\r\n\r\nexport class ProductDataSource  extends DataSource<any> {\r\n  private data: any[] = [];\r\n\r\n  constructor(private restService: RestService, private searchObj: any, private sort: MdSort, private paginator: MdPaginator) {\r\n    super();\r\n    this.getDataList();\r\n  }\r\n\r\n  getDataList() {\r\n    console.log(this.searchObj);\r\n    this.restService.showLoader(true);\r\n    this.restService.searchProducts(this.searchObj).subscribe(results => {\r\n      if (results) {\r\n        this.data = results;\r\n        this.restService.showLoader(false);\r\n        console.log(this.data)\r\n      }\r\n    })\r\n  }\r\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\r\n  connect(): any {\r\n    const displayDataChanges = [\r\n      this.restService.searchProducts(this.searchObj),\r\n      this.sort.mdSortChange,\r\n      this.paginator.page,\r\n    ];\r\n\r\n    return Observable.merge(...displayDataChanges).map(() => {\r\n      //return this.getSortedData();\r\n      //const myData = this.data.slice();\r\n      const myData = this.getSortedData();;\r\n      \r\n            // Grab the page's slice of data.\r\n            const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n            return myData.splice(startIndex, this.paginator.pageSize);\r\n    });\r\n    // return Promise.resolve([])\r\n  }\r\n\r\n  disconnect() { }\r\n\r\n  getSortedData(): any[] {\r\n    const data = this.data.slice();\r\n    if (!this.sort.active || this.sort.direction == '') { return data; }\r\n\r\n    return data.sort((a, b) => {\r\n      let propertyA: number | string | Date = '';\r\n      let propertyB: number | string | Date = '';\r\n      switch (this.sort.active) {\r\n        case 'lowstockalert': [propertyA, propertyB] = [a.productPriceListItems.stockAlertQty, b.productPriceListItems.stockAlertQty]; break;\r\n        case 'product': [propertyA, propertyB] = [a.productName, b.productName]; break;\r\n        case 'qty': [propertyA, propertyB] = [a.productPriceListItems.initialStockAtHand, b.productPriceListItems.initialStockAtHand]; break;\r\n        //case 'lowstockalert': [propertyA, propertyB] = [a.productPriceListItems.stockAlertQty, b.productPriceListItems.stockAlertQty]; break;\r\n      }\r\n      let valueA = isNaN(+propertyA) ? propertyA : +propertyA;\r\n      let valueB = isNaN(+propertyB) ? propertyB : +propertyB;\r\n\r\n      return (valueA < valueB ? -1 : 1) * (this.sort.direction == 'asc' ? 1 : -1);\r\n    });\r\n  }\r\n\r\n  \r\n}\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/product/product.search.datasource.ts","import { Component, Inject, OnInit, Input, Output, EventEmitter, ViewChild, ElementRef } from '@angular/core';\r\nimport { MdDialog, MdDialogRef, MD_DIALOG_DATA } from '@angular/material';\r\nimport { RestService } from './../../../common/rest.service';\r\nimport { AppService } from '../../../shared/service/app.service';\r\n\r\nimport { TdDataTableService, TdDataTableSortingOrder, ITdDataTableSortChangeEvent, ITdDataTableColumn } from '@covalent/core';\r\n@Component({\r\n    selector: 'dialog-content-example-dialog',\r\n    template: '<h2 style=\"color:#000;\">Delete Confirmation</h2><hr style=\"background:#fff;\" /><br/><p style=\"font-size:16px;\">Are you sure you want to delete quotation ?</p><br/><br/><button  md-button color=\"primary\" (click)=\"ok()\" style=\"background:#ffc107; color:#fff;\">Yes</button><button md-button color=\"primary\" (click)=\"cancel()\" style=\"float:right; background:#ffc107; color:#fff;\">No</button>'\r\n})\r\nexport class DialogContentExampleDialogQuotations {\r\n    id: any=null; \r\n    constructor(\r\n        private restService: RestService,\r\n        private appService: AppService,\r\n        public dialogRef: MdDialogRef<DialogContentExampleDialogQuotations>,\r\n        @Inject(MD_DIALOG_DATA) public data: any) {\r\n    this.id=data;\r\n        }\r\n    onNoClick(): void {\r\n        this.dialogRef.close();\r\n    }\r\n    ok() {\r\n        this.restService.quotationsDelete(this.id)\r\n          .subscribe(result => {\r\n           this.dialogRef.close();\r\n          });\r\n       \r\n    }\r\n    cancel() {\r\n        this.dialogRef.close();\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/quotations/DialogContentExampleDialogQuotations.ts","module.exports = \"<div id=\\\"page-header\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n    <h2>New Quotation</h2>\\r\\n</div>\\r\\n\\r\\n<aside id=\\\"page-content\\\" style=\\\"margin: 20px 0;\\\">\\r\\n    <!-- Editable div -->\\r\\n    <div class=\\\"row center-xs parent-container\\\" *ngIf=\\\"isEditable == 'true'\\\">\\r\\n        <md-card class=\\\"col-xs-12 child-container padding\\\" style=\\\"max-width:950px;\\\">\\r\\n            <md-card-content class=\\\"start-xs \\\">\\r\\n                <form [formGroup]=\\\"myForm\\\" novalidate autocomplete='off'>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <!--                         <md-input-container class=\\\"col-xs-8 padding-side\\\"> -->\\r\\n                        <!--                             <input mdInput placeholder=\\\"Search by Product or Service\\\" [(ngModel)]=\\\"product.productName\\\" (focus)=\\\"filterProducts(null)\\\" (keyup)=\\\"filterProducts($event.target.value)\\\" [mdAutocomplete]=\\\"autoProducts\\\" [ngModelOptions]=\\\"{standalone: true}\\\"> -->\\r\\n                        <!--                             <md-autocomplete #autoProducts=\\\"mdAutocomplete\\\"> -->\\r\\n                        <!--                                 <md-option *ngFor=\\\"let option of filteredProducts\\\" [value]=\\\"option.productName\\\" (click)=\\\"selectedProduct(option)\\\"> -->\\r\\n                        <!--                                     <b> {{ option.productName }} </b> - {{option.productCode}} -->\\r\\n                        <!--                                 </md-option> -->\\r\\n                        <!--                             </md-autocomplete> -->\\r\\n                        <!--                         </md-input-container> -->\\r\\n\\r\\n\\r\\n                        <md-input-container class=\\\"col-xs-12 padding-side \\\">\\r\\n                            <input mdInput required placeholder=\\\"Choose Customer Name\\\" [ngModel]=\\\"customer.displayName\\\" (focus)=\\\"filterCustomer(null)\\\"\\r\\n                                (keyup)=\\\"filterCustomer($event.target.value)\\\" [mdAutocomplete]=\\\"autoMobile\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                            <md-autocomplete #autoMobile=\\\"mdAutocomplete\\\">\\r\\n                                <md-option *ngFor=\\\"let option of filteredCustomer \\\" (click)=\\\"selectedCustomer(option)\\\">\\r\\n                                    {{ option.firstName }} {{ option.lastName }}\\r\\n                                </md-option>\\r\\n                            </md-autocomplete>\\r\\n                        </md-input-container>\\r\\n\\r\\n\\r\\n                        <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n                            <input mdInput placeholder=\\\"Customer Name\\\" [(ngModel)]=\\\"customer.displayName\\\" readonly [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                        </md-input-container>\\r\\n                        <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n                            <input mdInput placeholder=\\\"GST Registration Number\\\" [(ngModel)]=\\\"customer.gstRegNumber\\\" readonly [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n\\r\\n                        </md-input-container>\\r\\n                        <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n                            <input mdInput placeholder=\\\"Business Name\\\" readonly [(ngModel)]=\\\"customer.businessName\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                        </md-input-container>\\r\\n                        <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n                            <input mdInput placeholder=\\\"Customer Email\\\" [(ngModel)]=\\\"customer.email\\\" readonly [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                        </md-input-container>\\r\\n                        <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n                            <input mdInput placeholder=\\\"Address\\\" [(ngModel)]=\\\"customer.inlineAddress\\\" readonly [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                        </md-input-container>\\r\\n                        <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n                            <input mdInput placeholder=\\\"Website\\\" [(ngModel)]=\\\"customer.webSite\\\" [ngModelOptions]=\\\"{standalone: true}\\\" readonly>\\r\\n                        </md-input-container>\\r\\n                        <div class=\\\"md-select col-xs-4 padding-side\\\">\\r\\n                            <md-select placeholder=\\\"Terms of Payment\\\" [formControl]=\\\"myForm.controls.quotations_termsOfPayment \\\" [(ngModel)]=\\\"quotations.paymentTerms\\\">\\r\\n                                <md-option *ngFor=\\\"let item of termsList\\\" [value]=\\\"item[0]\\\">\\r\\n                                    {{item[1]}}\\r\\n                                </md-option>\\r\\n                            </md-select>\\r\\n                            <md-hint>\\r\\n                                <form-messages [control]=\\\"myForm.controls.quotations_termsOfPayment \\\"> </form-messages>\\r\\n                            </md-hint>\\r\\n                        </div>\\r\\n                        <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n                            <input mdInput required placeholder=\\\"Quotations estimation date\\\" [formControl]=\\\"myForm.controls.estimation_date \\\" [(ngModel)]=\\\"quotations.estimationDate\\\"\\r\\n                                [mdDatepicker]=\\\"estimationDateToggle\\\" readonly>\\r\\n                            <button mdSuffix [mdDatepickerToggle]=\\\"estimationDateToggle\\\"></button>\\r\\n                            <md-hint>\\r\\n                                <form-messages [control]=\\\"myForm.controls.estimation_date \\\"> </form-messages>\\r\\n                            </md-hint>\\r\\n                        </md-input-container>\\r\\n                        <md-datepicker #estimationDateToggle></md-datepicker>\\r\\n                        <!--                         <md-input-container class=\\\"col-xs-4 padding-side\\\"> -->\\r\\n                        <!--                             <input mdInput placeholder=\\\"Quotations due date\\\" [formControl]=\\\"myForm.controls.dueDate \\\" [(ngModel)]=\\\"quotations.dueDate\\\" [mdDatepicker]=\\\"dueDateToggle\\\" readonly> -->\\r\\n                        <!--                             <button mdSuffix [mdDatepickerToggle]=\\\"dueDateToggle\\\"></button> -->\\r\\n                        <!--                             <md-hint> -->\\r\\n                        <!--                                 <form-messages [control]=\\\"myForm.controls.dueDate \\\"> </form-messages> -->\\r\\n                        <!--                             </md-hint> -->\\r\\n                        <!--                         </md-input-container> -->\\r\\n                        <!--                         <md-datepicker #dueDateToggle></md-datepicker>  -->\\r\\n\\r\\n\\r\\n                        <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n                            <input mdInput placeholder=\\\"Quotations expiration date\\\" [formControl]=\\\"myForm.controls.expiration_date \\\" [(ngModel)]=\\\"quotations.expirationDate\\\"\\r\\n                                [mdDatepicker]=\\\"expirationDateToggle\\\" readonly>\\r\\n                            <button mdSuffix [mdDatepickerToggle]=\\\"expirationDateToggle\\\"></button>\\r\\n                            <md-hint>\\r\\n                                <form-messages [control]=\\\"myForm.controls.expiration_date \\\"> </form-messages>\\r\\n                            </md-hint>\\r\\n                        </md-input-container>\\r\\n                        <md-datepicker #expirationDateToggle></md-datepicker>\\r\\n\\r\\n                        <!-- <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n                            <input mdInput placeholder=\\\"Quotations time\\\" [formControl]=\\\"myForm.controls.time \\\" [(ngModel)]=\\\"quotations.time\\\" [mdDatepicker]=\\\"timeToggle\\\"\\r\\n                                readonly>\\r\\n                            <button mdSuffix [mdDatepickerToggle]=\\\"timeToggle\\\"></button>\\r\\n                            <md-hint>\\r\\n                                <form-messages [control]=\\\"myForm.controls.time \\\"> </form-messages>\\r\\n                            </md-hint>\\r\\n                        </md-input-container>\\r\\n                        <md-datepicker #timeToggle></md-datepicker> -->\\r\\n\\r\\n\\r\\n                    </div>\\r\\n                </form>\\r\\n                <span class=\\\"padding\\\">Billing Address is same as Shipping address:</span>\\r\\n                <md-slide-toggle color=\\\"primary\\\" [(ngModel)]=\\\"quotations.isBillingAddress\\\" (change)=\\\"onAddressChange($event)\\\">\\r\\n                </md-slide-toggle>\\r\\n                <aside class=\\\"row\\\" *ngIf=\\\"showAddress\\\">\\r\\n\\r\\n                    <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n                        <input mdInput required placeholder=\\\"H.no\\\" [formControl]=\\\"myForm.controls.quotations_address_lane \\\" [(ngModel)]=\\\"quotations.address.lane\\\">\\r\\n                        <md-hint>\\r\\n                            <form-messages [control]=\\\"myForm.controls.quotations_address_lane \\\"> </form-messages>\\r\\n                        </md-hint>\\r\\n                    </md-input-container>\\r\\n\\r\\n                    <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n                        <input mdInput required placeholder=\\\"Street\\\" [formControl]=\\\"myForm.controls.quotations_address_street \\\" [(ngModel)]=\\\"quotations.address.street\\\">\\r\\n                        <md-hint>\\r\\n                            <form-messages [control]=\\\"myForm.controls.quotations_address_street \\\"> </form-messages>\\r\\n                        </md-hint>\\r\\n                    </md-input-container>\\r\\n\\r\\n                    <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n                        <input mdInput required placeholder=\\\"Area\\\" [formControl]=\\\"myForm.controls.quotations_address_area \\\" [(ngModel)]=\\\"quotations.address.area\\\">\\r\\n                        <md-hint>\\r\\n                            <form-messages [control]=\\\"myForm.controls.quotations_address_area \\\"> </form-messages>\\r\\n                        </md-hint>\\r\\n                    </md-input-container>\\r\\n\\r\\n                    <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n                        <input mdInput required placeholder=\\\"City\\\" [formControl]=\\\"myForm.controls.quotations_address_city \\\" [(ngModel)]=\\\"quotations.address.city\\\">\\r\\n                        <md-hint>\\r\\n                            <form-messages [control]=\\\"myForm.controls.quotations_address_city \\\"> </form-messages>\\r\\n                        </md-hint>\\r\\n                    </md-input-container>\\r\\n\\r\\n                    <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n                        <input mdInput required placeholder=\\\"State\\\" [formControl]=\\\"myForm.controls.quotations_address_state \\\" [(ngModel)]=\\\"quotations.address.state\\\">\\r\\n                        <md-hint>\\r\\n                            <form-messages [control]=\\\"myForm.controls.quotations_address_state \\\"> </form-messages>\\r\\n                        </md-hint>\\r\\n                    </md-input-container>\\r\\n\\r\\n                    <!--<md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n                        <input mdInput placeholder=\\\"Country\\\" [(ngModel)]=\\\"quotations.address.country\\\">\\r\\n                    </md-input-container>-->\\r\\n\\r\\n                    <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n                        <input mdInput required placeholder=\\\"Zipcode\\\" [formControl]=\\\"myForm.controls.quotations_address_zipCode \\\" [(ngModel)]=\\\"quotations.address.zipCode\\\">\\r\\n                        <md-hint>\\r\\n                            <form-messages [control]=\\\"myForm.controls.quotations_address_zipCode \\\"> </form-messages>\\r\\n                        </md-hint>\\r\\n                    </md-input-container>\\r\\n\\r\\n                </aside>\\r\\n            </md-card-content>\\r\\n        </md-card>\\r\\n    </div>\\r\\n    <!-- <aside style=\\\"max-width: 98%;\\\">\\r\\n        <div layout=\\\"row\\\" layout-align=\\\"end center\\\" *ngIf=\\\"isEditable=='true'\\\">\\r\\n            <div flex=\\\"10\\\">\\r\\n                <span>GST</span>\\r\\n                <md-slide-toggle color=\\\"primary\\\" [(ngModel)]=\\\"quotations.isCgst\\\" (change)=\\\"changeGst(true)\\\"></md-slide-toggle>\\r\\n            </div>\\r\\n            <div flex=\\\"10\\\">\\r\\n                <span>IGST</span>\\r\\n                <md-slide-toggle color=\\\"primary\\\" [(ngModel)]=\\\"quotations.isIgst\\\" (change)=\\\"changeGst(false)\\\"></md-slide-toggle>\\r\\n            </div>\\r\\n            <div flex=\\\"20\\\">\\r\\n                <md-input-container style=\\\"width:12rem\\\">\\r\\n                    <input mdInput placeholder=\\\"Amounts are (Excluding all tax)\\\" [(ngModel)]=\\\"this.unitSellPrice\\\" [ngModelOptions]=\\\"{standalone: true}\\\" type=\\\"number\\\">\\r\\n                </md-input-container>\\r\\n            </div>\\r\\n            <button md-raised-button color=\\\"accent\\\" (click)=\\\"addItem()\\\" flex=\\\"10\\\">Add item</button>\\r\\n        </div>\\r\\n    </aside> -->\\r\\n    <aside style=\\\"max-width: 98%;\\\">\\r\\n        <div layout=\\\"row\\\" layout-align=\\\"end center\\\">\\r\\n            <div flex=\\\"10\\\">\\r\\n                <span>Product</span>\\r\\n                <md-slide-toggle color=\\\"primary\\\" [(ngModel)]=\\\"quotations.isProduct\\\" (change)=\\\"changeProduct(true)\\\"></md-slide-toggle>\\r\\n            </div>\\r\\n            <div flex=\\\"10\\\">\\r\\n                <span>Service</span>\\r\\n                <md-slide-toggle color=\\\"primary\\\" [(ngModel)]=\\\"quotations.isService\\\" (change)=\\\"changeProduct(false)\\\"></md-slide-toggle>\\r\\n            </div>\\r\\n\\r\\n            <div flex=\\\"10\\\">\\r\\n                <span>GST</span>\\r\\n                <md-slide-toggle color=\\\"primary\\\" [(ngModel)]=\\\"quotations.isCgst\\\" (change)=\\\"changeGst(true)\\\"></md-slide-toggle>\\r\\n            </div>\\r\\n            <div flex=\\\"10\\\">\\r\\n                <span>IGST</span>\\r\\n                <md-slide-toggle color=\\\"primary\\\" [(ngModel)]=\\\"quotations.isIgst\\\" (change)=\\\"changeGst(false)\\\"></md-slide-toggle>\\r\\n            </div>\\r\\n            <div flex=\\\"20\\\" style=\\\"margin-bottom: 50px;\\\">\\r\\n                <!-- <md-input-container style=\\\"width:12rem\\\">\\r\\n                    <input mdInput placeholder=\\\"Amounts are (Excluding all tax)\\\" [(ngModel)]=\\\"this.unitSellPrice\\\" [ngModelOptions]=\\\"{standalone: true}\\\" type=\\\"number\\\">\\r\\n                </md-input-container> -->\\r\\n            </div>\\r\\n            <button md-raised-button color=\\\"accent\\\" (click)=\\\"addItem()\\\" flex=\\\"10\\\">Add item</button>\\r\\n        </div>\\r\\n    </aside>\\r\\n\\r\\n    <div class=\\\"padding-side\\\">\\r\\n        <md-card style=\\\"\\\">\\r\\n            <aside style=\\\"min-height:7rem;\\\">\\r\\n                <md-list>\\r\\n                    <md-list-item layout=\\\"row\\\" layout-wrap>\\r\\n                        <span flex=\\\"0.5\\\"> S.no</span>\\r\\n                        <span flex=\\\"40\\\" *ngIf=\\\"quotations.isProduct\\\">Product</span>\\r\\n                        <span flex=\\\"40\\\" *ngIf=\\\"quotations.isService\\\">Service</span>\\r\\n                        <span flex=\\\"6\\\" *ngIf=\\\"quotations.isProduct\\\">HSN Code</span>\\r\\n                        <span flex=\\\"6\\\" *ngIf=\\\"quotations.isService\\\">SAC Code</span>\\r\\n                        <span flex=\\\"1\\\" *ngIf=\\\"quotations.isProduct\\\">Qty</span>\\r\\n                        <span flex=\\\"0.6\\\">Rate</span>\\r\\n                        <span flex=\\\"0.6\\\">Discount</span>\\r\\n                        <span flex=\\\"0.6\\\">Total</span>\\r\\n                       <!-- <span flex=\\\"0.9\\\">GST Rate</span>-->\\r\\n                        <span flex=\\\"0.6\\\" *ngIf=\\\"quotations.isCgst\\\">CGST</span>\\r\\n                        <span flex=\\\"0.6\\\" *ngIf=\\\"quotations.isCgst\\\">SGST</span>\\r\\n                        <span flex=\\\"0.6\\\" *ngIf=\\\"quotations.isIgst\\\">IGST</span>\\r\\n                        <span flex=\\\"0.9\\\">Amount</span>\\r\\n                        <span flex=\\\"0\\\">&nbsp;</span>\\r\\n                    </md-list-item>\\r\\n\\r\\n\\r\\n                    <ng-template let-index=\\\"index\\\" let-item let-last=\\\"last\\\" ngFor [ngForOf]=\\\"quotations.items\\\">\\r\\n\\r\\n                        <md-list-item layout=\\\"row\\\">\\r\\n                            <span flex=\\\"0.5\\\"> {{index+1}}</span>\\r\\n\\r\\n                            <span flex=\\\"40\\\" *ngIf=\\\"quotations.isProduct\\\" style=\\\"margin-top:-20px;\\\">\\r\\n\\r\\n                                <md-input-container>\\r\\n                                    <input style=\\\"margin-right:20px;\\\" mdInput placeholder=\\\"Search by Product\\\" [(ngModel)]=\\\"item.productName\\\" (focus)=\\\"filterProducts(null)\\\"\\r\\n                                        (keyup)=\\\"filterProducts($event.target.value)\\\" [mdAutocomplete]=\\\"autoProducts\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                                    <md-autocomplete #autoProducts=\\\"mdAutocomplete\\\">\\r\\n                                        <md-option *ngFor=\\\"let option of filteredProducts\\\" [value]=\\\"option.productName\\\" (click)=\\\"selectedProduct(option)\\\">\\r\\n                                            <b> {{ option.productName }} </b> - {{option.productType}}\\r\\n                                        </md-option>\\r\\n                                    </md-autocomplete>\\r\\n                                </md-input-container>\\r\\n\\r\\n                            </span>\\r\\n\\r\\n                            <span flex=\\\"40\\\" *ngIf=\\\"quotations.isService\\\" style=\\\"margin-top:-20px;\\\">\\r\\n\\r\\n                                <md-input-container>\\r\\n                                    <input style=\\\"margin-right:20px;\\\" mdInput placeholder=\\\"Search by \\\" [(ngModel)]=\\\"item.serviceName\\\" (focus)=\\\"filterServices(null)\\\"\\r\\n                                        (keyup)=\\\"filterServices($event.target.value)\\\" [mdAutocomplete]=\\\"autoServices\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                                    <md-autocomplete #autoServices=\\\"mdAutocomplete\\\">\\r\\n                                        <md-option *ngFor=\\\"let option of filteredServices\\\" [value]=\\\"option.serviceName\\\" (click)=\\\"selectedService(option)\\\">\\r\\n                                            <b> {{ option.serviceName }} </b> - {{option.serviceCode}}\\r\\n                                        </md-option>\\r\\n                                    </md-autocomplete>\\r\\n                                </md-input-container>\\r\\n\\r\\n                            </span>\\r\\n\\r\\n                            <!--                             <span flex=\\\"40\\\" *ngIf=\\\"!item.product.id\\\"> -->\\r\\n                            <!--                                  <md-input-container > -->\\r\\n                            <!--                                     <input mdInput type=\\\"text\\\" [(ngModel)]=\\\"item.product.productName\\\" > -->\\r\\n                            <!--                                 </md-input-container>     -->\\r\\n                            <!--                             </span> -->\\r\\n                            <span flex=\\\"6\\\" *ngIf=\\\"quotations.isProduct\\\">{{item.productCode}}</span>\\r\\n                            <span flex=\\\"6\\\" *ngIf=\\\"quotations.isService\\\">{{item.serviceCode}}</span>\\r\\n                            <span flex=\\\"1\\\" *ngIf=\\\"quotations.isProduct\\\">\\r\\n                                <md-input-container style=\\\"width:3rem\\\">\\r\\n                                    <input mdInput type=\\\"number\\\" [(ngModel)]=\\\"item.quantity\\\" (change)=\\\"itemCalculate(item)\\\">\\r\\n                                </md-input-container>\\r\\n                            </span>\\r\\n                            <span flex=\\\"0.6\\\">\\r\\n                                <md-input-container style=\\\"width:4rem\\\">\\r\\n                                    <input readonly mdInput type=\\\"text\\\" [(ngModel)]=\\\"item.unit\\\">\\r\\n                                </md-input-container>\\r\\n                            </span>\\r\\n                            <span flex=\\\"0.6\\\">\\r\\n                                <md-input-container style=\\\"width:3rem\\\">\\r\\n                                    <input mdInput type=\\\"text\\\"z [(ngModel)]=\\\"item.discount\\\" (change)=\\\"itemCalculate(item)\\\">\\r\\n                                    <span mdSuffix>%</span>\\r\\n                                </md-input-container>\\r\\n                            </span>\\r\\n                            <span flex=\\\"0.6\\\">\\r\\n                                <md-input-container style=\\\"width:3rem\\\">\\r\\n                                    <input readonly mdInput type=\\\"number\\\" [(ngModel)]=\\\"item.total\\\" (change)=\\\"itemCalculate(item)\\\">\\r\\n                                </md-input-container>\\r\\n                            </span>\\r\\n                          <!--  <span flex=\\\"0.9\\\">{{item.taxrate}}</span>-->\\r\\n                            <span flex=\\\"0.6\\\" *ngIf=\\\"quotations.isCgst\\\">{{item.cgst | amount}}</span>\\r\\n                            <span flex=\\\"0.6\\\" *ngIf=\\\"quotations.isCgst\\\">{{item.sgst | amount}}</span>\\r\\n                            <span flex=\\\"0.6\\\" *ngIf=\\\"quotations.isIgst\\\">{{item.igst | amount}}</span>\\r\\n                            <!-- <span flex=\\\"0.6\\\" *ngIf=\\\"sales.isCgst\\\">\\r\\n                                <md-input-container style=\\\"width:3rem\\\">\\r\\n                                    <input readonly mdInput type=\\\"number\\\" [(ngModel)]=\\\"item.cgst\\\">\\r\\n                                </md-input-container>\\r\\n                            </span>\\r\\n                            <span flex=\\\"0.6\\\" *ngIf=\\\"sales.isCgst\\\">\\r\\n                                <md-input-container style=\\\"width:3rem\\\">\\r\\n                                    <input readonly mdInput type=\\\"number\\\" [(ngModel)]=\\\"item.sgst\\\" >\\r\\n                                </md-input-container>\\r\\n                            </span>\\r\\n                            <span flex=\\\"0.6\\\" *ngIf=\\\"sales.isIgst\\\">\\r\\n                                <md-input-container style=\\\"width:3rem\\\">\\r\\n                                    <input readonly mdInput type=\\\"number\\\" [(ngModel)]=\\\"item.igst\\\">\\r\\n                                </md-input-container>\\r\\n                            </span>                             -->\\r\\n                            <span flex=\\\"0.9\\\">{{item.amount | amount}}</span>\\r\\n                            <span flex=\\\"0\\\" style=\\\"cursor: pointer\\\">\\r\\n                                <md-icon color=\\\"accent\\\" (click)=\\\"removeItem(index)\\\">delete</md-icon>\\r\\n                            </span>\\r\\n                        </md-list-item>\\r\\n                    </ng-template>\\r\\n\\r\\n                </md-list>\\r\\n\\r\\n            </aside>\\r\\n            <br/>\\r\\n            <md-divider></md-divider>\\r\\n            <!--<div class=\\\"row padding\\\">\\r\\n                <span class=\\\"col-xs-9\\\">In Words:</span>\\r\\n                <span class=\\\"col-xs-3\\\">\\r\\n                    <div layout=\\\"row\\\"  layout-align=\\\"space-between center\\\">\\r\\n                        <span flex=\\\"70\\\">Subtotal</span>\\r\\n                        <b flex=\\\"30\\\"> :{{sales.subtotal | amount}}</b>\\r\\n                    </div>\\r\\n                </span>\\r\\n\\r\\n            </div>-->\\r\\n            <br/>\\r\\n            <aside>\\r\\n                <div layout=\\\"row\\\" layout-align=\\\"space-between start\\\">\\r\\n                    <div flex=\\\"50\\\">\\r\\n                        <div layout=\\\"column\\\">\\r\\n                            <!-- <div>\\r\\n                                <span>Words</span>\\r\\n                                <b> :</b>\\r\\n                            </div> -->\\r\\n                            <div>\\r\\n                                <md-input-container>\\r\\n                                    <input mdInput placeholder=\\\"Message diplayed on Quotation\\\" [formControl]=\\\"myForm.controls.quotation_message\\\" [(ngModel)]=\\\"quotations.quotationMessage\\\">\\r\\n                                    <!--                                     <md-hint> -->\\r\\n                                    <!--                                         <form-messages [control]=\\\"myForm.controls.sales_invoiceMessage\\\"> </form-messages> -->\\r\\n                                    <!--                                     </md-hint> -->\\r\\n                                </md-input-container>\\r\\n                            </div>\\r\\n                            <div>\\r\\n                                <md-input-container>\\r\\n                                    <textarea mdInput required type=\\\"textarea\\\" placeholder=\\\"Statement Memo\\\" [formControl]=\\\"myForm.controls.memo\\\" [(ngModel)]=\\\"quotations.memo\\\"></textarea>\\r\\n                                    <md-hint>\\r\\n                                        <form-messages [control]=\\\"myForm.controls.memo\\\"> </form-messages>\\r\\n                                    </md-hint>\\r\\n                                </md-input-container>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div flex-offset=\\\"30\\\">\\r\\n                        <div layout=\\\"column\\\">\\r\\n                            <div layout=\\\"row\\\" layout-align=\\\"space-between end\\\">\\r\\n                                <span flex=\\\"70\\\">Subtotal</span>\\r\\n                                <b flex=\\\"30\\\"> :{{quotations.subTotal | amount}}</b>\\r\\n                            </div>\\r\\n\\r\\n                            <!-- <div layout=\\\"row\\\" layout-align=\\\"space-between center\\\">\\r\\n                                <div flex=\\\"70\\\">\\r\\n                                    <span flex=\\\"50\\\">Discount @&nbsp;</span>\\r\\n                                    <md-input-container flex=\\\"50\\\">\\r\\n                                        <input mdInput [(ngModel)]=\\\"sales.discount\\\" type=\\\"number\\\" (change)=\\\"changeCalculate()\\\">\\r\\n                                        <span mdSuffix>%</span>\\r\\n                                    </md-input-container>\\r\\n                                </div>\\r\\n                                <span flex=\\\"30\\\">\\r\\n                                    <b>:{{sales.discountValue | amount}}</b>\\r\\n                                </span>\\r\\n                            </div> -->\\r\\n\\r\\n                            <div layout=\\\"row\\\" layout-align=\\\"space-between center\\\">\\r\\n                                <div flex=\\\"70\\\">\\r\\n                                    <span flex=\\\"50\\\">Cess @ &nbsp;&nbsp;&nbsp;&nbsp;</span>\\r\\n                                    <md-input-container flex=\\\"50\\\">\\r\\n                                        <input mdInput type=\\\"number\\\" [(ngModel)]=\\\"quotations.cess\\\" (change)=\\\"changeCalculate()\\\">\\r\\n                                        <span mdSuffix>%</span>\\r\\n                                    </md-input-container>\\r\\n                                </div>\\r\\n                                <span flex=\\\"30\\\">\\r\\n                                    <b>:{{quotations.cessValue | amount}}</b>\\r\\n                                </span>\\r\\n                            </div>\\r\\n\\r\\n                            <div layout=\\\"row\\\" layout-align=\\\"space-between end\\\">\\r\\n                                <span flex=\\\"70\\\">Total</span>\\r\\n                                <b flex=\\\"30\\\"> :{{quotations.total | amount}}</b>\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </aside>\\r\\n        </md-card>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\" style=\\\"padding: 1rem; margin-bottom: 5em;\\\" *ngIf=\\\"isEditable== 'true' \\\">\\r\\n        <div class=\\\"col-xs-6 start-xs\\\">\\r\\n            <button md-raised-button (click)=\\\"clear()\\\" color=\\\"accent\\\">Clear</button>\\r\\n            <button md-raised-button color=\\\"primary\\\" [disabled]=\\\"!isPrintEnable\\\" (click)=\\\"printPriview()\\\">Print or Preview</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-xs-6 end-xs\\\">\\r\\n            <!-- <button md-raised-button color=accent (click)=\\\"billing()\\\" [disabled]=\\\"!myForm.valid\\\">Billing</button> -->\\r\\n            <button md-raised-button color=accent (click)=\\\"save()\\\" [disabled]=\\\"!myForm.valid\\\"> Save</button>\\r\\n        </div>\\r\\n    </div>\\r\\n    <!-- Editable div End -->\\r\\n\\r\\n    <!--Non Editable div Start-->\\r\\n    <div class=\\\"row center-xs parent-container\\\" *ngIf=\\\"isEditable== 'false' \\\">\\r\\n        <md-card class=\\\"col-xs-12 child-container padding\\\" style=\\\"max-width:950px;\\\">\\r\\n            <md-card-content class=\\\"start-xs \\\">\\r\\n                <form [formGroup]=\\\"myForm\\\" novalidate autocomplete='off'>\\r\\n                    <div class=\\\"row \\\">\\r\\n                        <!--                         <md-input-container class=\\\"col-xs-8 padding-side\\\"> -->\\r\\n                        <!--                             <input mdInput placeholder=\\\"Search by Product or Service\\\" [(ngModel)]=\\\"product.productName\\\" (focus)=\\\"filterProducts(null)\\\" (keyup)=\\\"filterProducts($event.target.value)\\\" [mdAutocomplete]=\\\"autoProducts\\\" [ngModelOptions]=\\\"{standalone: true}\\\"> -->\\r\\n                        <!--                             <md-autocomplete #autoProducts=\\\"mdAutocomplete\\\"> -->\\r\\n                        <!--                                 <md-option *ngFor=\\\"let option of filteredProducts\\\" [value]=\\\"option.productName\\\" (click)=\\\"selectedProduct(option)\\\"> -->\\r\\n                        <!--                                     <b> {{ option.productName }} </b> - {{option.productCode}} -->\\r\\n                        <!--                                 </md-option> -->\\r\\n                        <!--                             </md-autocomplete> -->\\r\\n                        <!--                         </md-input-container> -->\\r\\n\\r\\n\\r\\n                        <md-input-container class=\\\"col-xs-12 padding-side \\\">\\r\\n                            <input mdInput readonly placeholder=\\\"Choose Customer Name\\\" [ngModel]=\\\"customer.displayName\\\" [mdAutocomplete]=\\\"autoMobile\\\"\\r\\n                                [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                            <md-autocomplete #autoMobile=\\\"mdAutocomplete\\\">\\r\\n                                <md-option *ngFor=\\\"let option of filteredCustomer \\\" (click)=\\\"selectedCustomer(option)\\\">\\r\\n                                    {{ option.firstName }} {{ option.lastName }}\\r\\n                                </md-option>\\r\\n                            </md-autocomplete>\\r\\n                        </md-input-container>\\r\\n\\r\\n\\r\\n                        <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n                            <input mdInput placeholder=\\\"Customer Name\\\" [(ngModel)]=\\\"customer.displayName\\\" readonly [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                        </md-input-container>\\r\\n                        <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n                            <input mdInput placeholder=\\\"GST Registration Number\\\" [(ngModel)]=\\\"customer.gstRegNumber\\\" readonly [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n\\r\\n                        </md-input-container>\\r\\n                        <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n                            <input mdInput placeholder=\\\"Business Name\\\" readonly [(ngModel)]=\\\"customer.businessName\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                        </md-input-container>\\r\\n                        <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n                            <input mdInput placeholder=\\\"Customer Email\\\" [(ngModel)]=\\\"customer.email\\\" readonly [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                        </md-input-container>\\r\\n                        <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n                            <input mdInput placeholder=\\\"Address\\\" [(ngModel)]=\\\"customer.inlineAddress\\\" readonly [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                        </md-input-container>\\r\\n                        <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n                            <input mdInput placeholder=\\\"Website\\\" [(ngModel)]=\\\"customer.webSite\\\" [ngModelOptions]=\\\"{standalone: true}\\\" readonly>\\r\\n                        </md-input-container>\\r\\n\\r\\n                        <md-input-container class=\\\"col-xs-3 padding-side\\\">\\r\\n                            <input mdInput readonly placeholder=\\\"Terms of Payment\\\" [formControl]=\\\"myForm.controls.quotations_termsOfPayment\\\" readonly\\r\\n                                [(ngModel)]=\\\"quotations.paymentTerms\\\">\\r\\n                            <md-hint>\\r\\n                                <form-messages [control]=\\\"myForm.controls.quotations_termsOfPayment\\\">\\r\\n                                </form-messages>\\r\\n                            </md-hint>\\r\\n                        </md-input-container>\\r\\n\\r\\n                        <!-- <div class=\\\"md-select col-xs-4 padding-side\\\">\\r\\n                              <md-select placeholder=\\\"Terms of Payment\\\" [formControl]=\\\"myForm.controls.quotations_termsOfPayment \\\" [(ngModel)]=\\\"quotations.paymentTerms\\\">\\r\\n                                <md-option *ngFor=\\\"let item of termsList\\\" [value]=\\\"item[0]\\\">\\r\\n                                {{item[1]}}\\r\\n                                </md-option>\\r\\n                            </md-select>\\r\\n                            <md-hint>\\r\\n                                <form-messages [control]=\\\"myForm.controls.quotations_termsOfPayment \\\"> </form-messages>\\r\\n                            </md-hint>\\r\\n                        </div> -->\\r\\n                        <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n                            <input mdInput readonly placeholder=\\\"Quotations estimation date\\\" [formControl]=\\\"myForm.controls.estimation_date \\\" [(ngModel)]=\\\"quotations.estimationDate\\\"\\r\\n                                [mdDatepicker]=\\\"estimationDateToggle\\\" readonly>\\r\\n                            <!-- <button mdSuffix [mdDatepickerToggle]=\\\"estimationDateToggle\\\"></button> -->\\r\\n                            <md-hint>\\r\\n                                <form-messages [control]=\\\"myForm.controls.estimation_date \\\"> </form-messages>\\r\\n                            </md-hint>\\r\\n                        </md-input-container>\\r\\n                        <md-datepicker #estimationDateToggle></md-datepicker>\\r\\n                        <!--                         <md-input-container class=\\\"col-xs-4 padding-side\\\"> -->\\r\\n                        <!--                             <input mdInput placeholder=\\\"Quotations due date\\\" [formControl]=\\\"myForm.controls.dueDate \\\" [(ngModel)]=\\\"quotations.dueDate\\\" [mdDatepicker]=\\\"dueDateToggle\\\" readonly> -->\\r\\n                        <!--                             <button mdSuffix [mdDatepickerToggle]=\\\"dueDateToggle\\\"></button> -->\\r\\n                        <!--                             <md-hint> -->\\r\\n                        <!--                                 <form-messages [control]=\\\"myForm.controls.dueDate \\\"> </form-messages> -->\\r\\n                        <!--                             </md-hint> -->\\r\\n                        <!--                         </md-input-container> -->\\r\\n                        <!--                         <md-datepicker #dueDateToggle></md-datepicker>  -->\\r\\n\\r\\n\\r\\n                        <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n                            <input mdInput readonly placeholder=\\\"Quotations expiration date\\\" [formControl]=\\\"myForm.controls.expiration_date \\\" [(ngModel)]=\\\"quotations.expirationDate\\\"\\r\\n                                [mdDatepicker]=\\\"expirationDateToggle\\\" readonly>\\r\\n                            <!-- <button mdSuffix [mdDatepickerToggle]=\\\"expirationDateToggle\\\"></button> -->\\r\\n                            <md-hint>\\r\\n                                <form-messages [control]=\\\"myForm.controls.expiration_date \\\"> </form-messages>\\r\\n                            </md-hint>\\r\\n                        </md-input-container>\\r\\n                        <md-datepicker #expirationDateToggle></md-datepicker>\\r\\n\\r\\n                        <!-- <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n                            <input mdInput readonly placeholder=\\\"Quotations time\\\" [formControl]=\\\"myForm.controls.time \\\" [(ngModel)]=\\\"quotations.time\\\"\\r\\n                                [mdDatepicker]=\\\"timeToggle\\\" readonly>\\r\\n                          \\r\\n                            <md-hint>\\r\\n                                <form-messages [control]=\\\"myForm.controls.time \\\"> </form-messages>\\r\\n                            </md-hint>\\r\\n                        </md-input-container>\\r\\n                        <md-datepicker #timeToggle></md-datepicker>\\r\\n -->\\r\\n\\r\\n                    </div>\\r\\n                </form>\\r\\n                <span class=\\\"padding\\\">Billing Address is same as Shipping address:</span>\\r\\n                <md-slide-toggle disabled color=\\\"primary\\\" [(ngModel)]=\\\"quotations.isBillingAddress\\\" (change)=\\\"onAddressChange($event)\\\">\\r\\n                </md-slide-toggle>\\r\\n                <aside class=\\\"row\\\" *ngIf=\\\"showAddress\\\">\\r\\n\\r\\n                    <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n                        <input mdInput readonly placeholder=\\\"H.no\\\" [formControl]=\\\"myForm.controls.quotations_address_lane \\\" [(ngModel)]=\\\"quotations.address.lane\\\">\\r\\n                        <md-hint>\\r\\n                            <form-messages [control]=\\\"myForm.controls.quotations_address_lane \\\"> </form-messages>\\r\\n                        </md-hint>\\r\\n                    </md-input-container>\\r\\n\\r\\n                    <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n                        <input mdInput readonly placeholder=\\\"Street\\\" [formControl]=\\\"myForm.controls.quotations_address_street \\\" [(ngModel)]=\\\"quotations.address.street\\\">\\r\\n                        <md-hint>\\r\\n                            <form-messages [control]=\\\"myForm.controls.quotations_address_street \\\"> </form-messages>\\r\\n                        </md-hint>\\r\\n                    </md-input-container>\\r\\n\\r\\n                    <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n                        <input mdInput readonly placeholder=\\\"Area\\\" [formControl]=\\\"myForm.controls.quotations_address_area \\\" [(ngModel)]=\\\"quotations.address.area\\\">\\r\\n                        <md-hint>\\r\\n                            <form-messages [control]=\\\"myForm.controls.quotations_address_area \\\"> </form-messages>\\r\\n                        </md-hint>\\r\\n                    </md-input-container>\\r\\n\\r\\n                    <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n                        <input mdInput readonly placeholder=\\\"City\\\" [formControl]=\\\"myForm.controls.quotations_address_city \\\" [(ngModel)]=\\\"quotations.address.city\\\">\\r\\n                        <md-hint>\\r\\n                            <form-messages [control]=\\\"myForm.controls.quotations_address_city \\\"> </form-messages>\\r\\n                        </md-hint>\\r\\n                    </md-input-container>\\r\\n\\r\\n                    <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n                        <input mdInput readonly placeholder=\\\"State\\\" [formControl]=\\\"myForm.controls.quotations_address_state \\\" [(ngModel)]=\\\"quotations.address.state\\\">\\r\\n                        <md-hint>\\r\\n                            <form-messages [control]=\\\"myForm.controls.quotations_address_state \\\"> </form-messages>\\r\\n                        </md-hint>\\r\\n                    </md-input-container>\\r\\n\\r\\n                    <!--<md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n                        <input mdInput placeholder=\\\"Country\\\" [(ngModel)]=\\\"quotations.address.country\\\">\\r\\n                    </md-input-container>-->\\r\\n\\r\\n                    <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n                        <input mdInput readonly placeholder=\\\"Zipcode\\\" [formControl]=\\\"myForm.controls.quotations_address_zipCode \\\" [(ngModel)]=\\\"quotations.address.zipCode\\\">\\r\\n                        <md-hint>\\r\\n                            <form-messages [control]=\\\"myForm.controls.quotations_address_zipCode \\\"> </form-messages>\\r\\n                        </md-hint>\\r\\n                    </md-input-container>\\r\\n                </aside>\\r\\n            </md-card-content>\\r\\n        </md-card>\\r\\n    </div>\\r\\n    <aside style=\\\"max-width: 98%;\\\">\\r\\n        <div layout=\\\"row\\\" layout-align=\\\"end center\\\" *ngIf=\\\"isEditable== 'false' \\\">\\r\\n            <div flex=\\\"10\\\">\\r\\n                <span>GST</span>\\r\\n                <md-slide-toggle disabled color=\\\"primary\\\" [(ngModel)]=\\\"quotations.isCgst\\\" (change)=\\\"changeGst(true)\\\"></md-slide-toggle>\\r\\n            </div>\\r\\n            <div flex=\\\"10\\\">\\r\\n                <span>IGST</span>\\r\\n                <md-slide-toggle disabled color=\\\"primary\\\" [(ngModel)]=\\\"quotations.isIgst\\\" (change)=\\\"changeGst(false)\\\"></md-slide-toggle>\\r\\n            </div>\\r\\n            <div flex=\\\"20\\\">\\r\\n                <md-input-container style=\\\"width:12rem\\\">\\r\\n                    <input mdInput readonly placeholder=\\\"Amounts are (Excluding all tax)\\\" [(ngModel)]=\\\"this.unitSellPrice\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                        type=\\\"number\\\">\\r\\n                </md-input-container>\\r\\n            </div>\\r\\n            <button disabled md-raised-button color=\\\"accent\\\" (click)=\\\"addItem()\\\" flex=\\\"10\\\">Add item</button>\\r\\n        </div>\\r\\n    </aside>\\r\\n\\r\\n    <div class=\\\"padding-side\\\" *ngIf=\\\"isEditable== 'false' \\\">\\r\\n        <md-card>\\r\\n            <aside style=\\\"min-height:7rem;\\\">\\r\\n                <md-list>\\r\\n                    <md-list-item layout=\\\"row\\\" layout-wrap>\\r\\n                        <span flex=\\\"0.5\\\"> S.no</span>\\r\\n                        <span flex=\\\"40\\\">Product/Service</span>\\r\\n                        <span flex=\\\"10\\\">Code</span>\\r\\n                        <span flex=\\\"1\\\">Qty</span>\\r\\n                        <span flex=\\\"0.6\\\">Rate</span>\\r\\n                        <span flex=\\\"0.6\\\" *ngIf=\\\"quotations.isCgst\\\">CGST</span>\\r\\n                        <span flex=\\\"0.6\\\" *ngIf=\\\"quotations.isCgst\\\">SGST</span>\\r\\n                        <span flex=\\\"0.6\\\" *ngIf=\\\"quotations.isIgst\\\">IGST</span>\\r\\n                        <span flex=\\\"0.9\\\">Tax Rate</span>\\r\\n                        <span flex=\\\"0.9\\\">Amount</span>\\r\\n                        <span flex=\\\"0\\\">&nbsp;</span>\\r\\n                    </md-list-item>\\r\\n\\r\\n\\r\\n                    <ng-template let-index=\\\"index\\\" let-item let-last=\\\"last\\\" ngFor [ngForOf]=\\\"quotations.items\\\">\\r\\n\\r\\n                        <md-list-item layout=\\\"row\\\">\\r\\n                            <span flex=\\\"0.5\\\"> {{index+1}}</span>\\r\\n\\r\\n                            <span flex=\\\"40\\\" *ngIf=\\\"quotations.isProduct\\\" style=\\\"margin-top:-20px;\\\">\\r\\n\\r\\n                                <md-input-container>\\r\\n                                    <input mdInput readonly placeholder=\\\"Search by Product\\\" [(ngModel)]=\\\"item.product.productName\\\" [mdAutocomplete]=\\\"autoProducts\\\"\\r\\n                                        [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                                    <md-autocomplete #autoProducts=\\\"mdAutocomplete\\\">\\r\\n                                        <md-option *ngFor=\\\"let option of filteredProducts\\\" [value]='option.productName+\\\" \\\"+option.productCode' (click)=\\\"selectedProduct(option)\\\">\\r\\n                                            <b> {{ option.productName }} </b> - {{option.productCode}}\\r\\n                                        </md-option>\\r\\n                                    </md-autocomplete>\\r\\n                                </md-input-container>\\r\\n\\r\\n\\r\\n                            </span>\\r\\n                            <span flex=\\\"40\\\" *ngIf=\\\"quotations.isService\\\" style=\\\"margin-top:-20px;\\\">\\r\\n\\r\\n                                <md-input-container>\\r\\n                                    <input style=\\\"margin-right:20px;\\\" mdInput placeholder=\\\"Search by Service\\\" [(ngModel)]=\\\"item.serviceName\\\" (focus)=\\\"filterServices(null)\\\"\\r\\n                                        (keyup)=\\\"filterServices($event.target.value)\\\" [mdAutocomplete]=\\\"autoServices\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                                    <md-autocomplete #autoServices=\\\"mdAutocomplete\\\">\\r\\n                                        <md-option *ngFor=\\\"let option of filteredServices\\\" [value]=\\\"option.serviceName\\\" (click)=\\\"selectedService(option)\\\">\\r\\n                                            <b> {{ option.serviceName }} </b> - {{option.serviceCode}}\\r\\n                                        </md-option>\\r\\n                                    </md-autocomplete>\\r\\n                                </md-input-container>\\r\\n\\r\\n                            </span>\\r\\n\\r\\n                            <!--                             <span flex=\\\"40\\\" *ngIf=\\\"!item.product.id\\\"> -->\\r\\n                            <!--                                  <md-input-container > -->\\r\\n                            <!--                                     <input mdInput type=\\\"text\\\" [(ngModel)]=\\\"item.product.productName\\\" > -->\\r\\n                            <!--                                 </md-input-container>     -->\\r\\n                            <!--                             </span> -->\\r\\n                            <span flex=\\\"10\\\">{{item.product.hsnCode}}</span>\\r\\n                            <span flex=\\\"1\\\">\\r\\n                                <md-input-container style=\\\"width:3rem\\\">\\r\\n                                    <input mdInput readonly type=\\\"number\\\" [(ngModel)]=\\\"item.quantity\\\" (change)=\\\"itemCalculate(item)\\\">\\r\\n                                </md-input-container>\\r\\n                            </span>\\r\\n                            <span flex=\\\"0.6\\\">\\r\\n                                <md-input-container style=\\\"width:5rem\\\">\\r\\n                                    <input mdInput readonly type=\\\"number\\\" [(ngModel)]=\\\"item.unit\\\" (change)=\\\"itemCalculate(item)\\\">\\r\\n                                </md-input-container>\\r\\n                            </span>\\r\\n                            <span flex=\\\"0.6\\\" *ngIf=\\\"quotations.isCgst\\\">\\r\\n                                <md-input-container style=\\\"width:3rem\\\">\\r\\n                                    <input mdInput readonly type=\\\"number\\\" [(ngModel)]=\\\"item.cgst\\\" (change)=\\\"itemCalculate(item)\\\">\\r\\n                                </md-input-container>\\r\\n                            </span>\\r\\n                            <span flex=\\\"0.6\\\" *ngIf=\\\"quotations.isCgst\\\">\\r\\n                                <md-input-container style=\\\"width:3rem\\\">\\r\\n                                    <input mdInput readonly type=\\\"number\\\" [(ngModel)]=\\\"item.sgst\\\" (change)=\\\"itemCalculate(item)\\\">\\r\\n                                </md-input-container>\\r\\n                            </span>\\r\\n                            <span flex=\\\"0.6\\\" *ngIf=\\\"quotations.isIgst\\\">\\r\\n                                <md-input-container style=\\\"width:3rem\\\">\\r\\n                                    <input mdInput readonly type=\\\"number\\\" [(ngModel)]=\\\"item.igst\\\" (change)=\\\"itemCalculate(item)\\\">\\r\\n                                </md-input-container>\\r\\n                            </span>\\r\\n                            <span flex=\\\"0.9\\\">{{item.taxrate | amount}}</span>\\r\\n                            <span flex=\\\"0.9\\\">{{item.amount | amount}}</span>\\r\\n                            <!-- <span flex=\\\"0\\\" style=\\\"cursor: pointer\\\"><md-icon color=\\\"accent\\\" >delete</md-icon> </span> -->\\r\\n                        </md-list-item>\\r\\n                    </ng-template>\\r\\n\\r\\n                </md-list>\\r\\n\\r\\n            </aside>\\r\\n            <br/>\\r\\n            <md-divider></md-divider>\\r\\n            <!--<div class=\\\"row padding\\\">\\r\\n                <span class=\\\"col-xs-9\\\">In Words:</span>\\r\\n                <span class=\\\"col-xs-3\\\">\\r\\n                    <div layout=\\\"row\\\"  layout-align=\\\"space-between center\\\">\\r\\n                        <span flex=\\\"70\\\">Subtotal</span>\\r\\n                        <b flex=\\\"30\\\"> :{{quotations.subtotal | amount}}</b>\\r\\n                    </div>\\r\\n                </span>\\r\\n\\r\\n            </div>-->\\r\\n            <br/>\\r\\n            <aside>\\r\\n                <div layout=\\\"row\\\" layout-align=\\\"space-between start\\\">\\r\\n                    <div flex=\\\"50\\\">\\r\\n                        <div layout=\\\"column\\\">\\r\\n                            <!-- <div>\\r\\n                                <span>Words</span>\\r\\n                                <b> :</b>\\r\\n                            </div> -->\\r\\n                            <div>\\r\\n                                <md-input-container>\\r\\n                                    <input mdInput readonly placeholder=\\\"Message diplayed on quotations\\\" [formControl]=\\\"myForm.controls.quotation_message\\\" [(ngModel)]=\\\"quotations.quotationMessage\\\">\\r\\n                                    <!--                                     <md-hint> -->\\r\\n                                    <!--                                         <form-messages [control]=\\\"myForm.controls.sales_invoiceMessage\\\"> </form-messages> -->\\r\\n                                    <!--                                     </md-hint> -->\\r\\n                                </md-input-container>\\r\\n                            </div>\\r\\n                            <div>\\r\\n                                <md-input-container>\\r\\n                                    <textarea mdInput readonly type=\\\"textarea\\\" placeholder=\\\"Statement Memo\\\" [formControl]=\\\"myForm.controls.memo\\\" [(ngModel)]=\\\"quotations.memo\\\"></textarea>\\r\\n                                    <md-hint>\\r\\n                                        <form-messages [control]=\\\"myForm.controls.memo\\\"> </form-messages>\\r\\n                                    </md-hint>\\r\\n                                </md-input-container>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div flex-offset=\\\"30\\\">\\r\\n                        <div layout=\\\"column\\\">\\r\\n                            <div layout=\\\"row\\\" layout-align=\\\"space-between end\\\">\\r\\n                                <span flex=\\\"70\\\">Subtotal</span>\\r\\n                                <b flex=\\\"30\\\"> :{{quotations.subtotal | amount}}</b>\\r\\n                            </div>\\r\\n\\r\\n                            <div layout=\\\"row\\\" layout-align=\\\"space-between center\\\">\\r\\n                                <div flex=\\\"70\\\">\\r\\n                                    <span flex=\\\"50\\\">Discount @&nbsp;</span>\\r\\n                                    <md-input-container flex=\\\"50\\\">\\r\\n                                        <input readonly mdInput [(ngModel)]=\\\"quotations.discount\\\" type=\\\"number\\\" (change)=\\\"changeCalculate()\\\">\\r\\n                                        <span mdSuffix>%</span>\\r\\n                                    </md-input-container>\\r\\n                                </div>\\r\\n                                <span flex=\\\"30\\\">\\r\\n                                    <b>:{{quotations.discountValue | amount}}</b>\\r\\n                                </span>\\r\\n                            </div>\\r\\n\\r\\n                            <div layout=\\\"row\\\" layout-align=\\\"space-between center\\\">\\r\\n                                <div flex=\\\"70\\\">\\r\\n                                    <span flex=\\\"50\\\">Cess @ &nbsp;&nbsp;&nbsp;&nbsp;</span>\\r\\n                                    <md-input-container flex=\\\"50\\\">\\r\\n                                        <input mdInput readonly type=\\\"number\\\" [(ngModel)]=\\\"quotations.cess\\\" (change)=\\\"changeCalculate()\\\">\\r\\n                                        <span mdSuffix>%</span>\\r\\n                                    </md-input-container>\\r\\n                                </div>\\r\\n                                <span flex=\\\"30\\\">\\r\\n                                    <b>:{{quotations.cessValue | amount}}</b>\\r\\n                                </span>\\r\\n                            </div>\\r\\n\\r\\n                            <div layout=\\\"row\\\" layout-align=\\\"space-between end\\\">\\r\\n                                <span flex=\\\"70\\\">Total</span>\\r\\n                                <b flex=\\\"30\\\"> :{{quotations.total | amount}}</b>\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </aside>\\r\\n        </md-card>\\r\\n    </div>\\r\\n    <!--Non Editable div Start-->\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n</aside>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/quotations/quotations.edit.component.html\n// module id = ../../../../../src/app/components/admin/quotations/quotations.edit.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\r\nimport { AppService } from '../../../shared/service/app.service';\r\nimport { AnimationService } from '../../../shared/service/animation.service';\r\nimport { RestService } from './../../../common/rest.service';\r\nimport { Prop } from './../../../common/props';\r\n\r\nimport { Storage } from '../../../shared/utils/storage';\r\nimport { Quotations } from './../../../entities/quotations.entity';\r\nimport { Item } from './../../../entities/item.entity';\r\nimport { Address } from './../../../entities/address.entity';\r\nimport { Customer } from '../../../entities/customer.entity';\r\nimport { QuotationsFormGroup } from '../../../forms/quotations.form';\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-quotations-edit',\r\n  templateUrl: './quotations.edit.component.html'\r\n\r\n})\r\nexport class QuotationsEditComponent implements OnInit {\r\n  myForm: any = QuotationsFormGroup.init();\r\n  customer: Customer;\r\n  product: any;\r\n  productName: string = null;\r\n  quotations: Quotations;\r\n  columns: any[] = [];\r\n  products: any[] = [];\r\n  customers: Customer[] = [];\r\n  services: any[] = [];\r\n  service: any;\r\n  company: any = {};\r\n  unitSellPrice: number = 0;\r\n  showAddress = false;\r\n  isPrintEnable = false;\r\n  public isEditable = false;\r\n  isRecordFound = false;\r\n  testRowIndex: number;\r\n\r\n  constructor(private appService: AppService, private restService: RestService) {\r\n\r\n    QuotationsFormGroup.edit(this.myForm);\r\n    this.isEditable = this.appService.getParam(\"isEditable\");\r\n    this.customer = new Customer();\r\n    this.quotations = new Quotations();\r\n    this.quotations.company = {}\r\n    this.quotations.company.id = this.appService.getBranch().id;\r\n    this.quotations.company.name = this.appService.getBranch().name;\r\n    this.quotations.user = {};\r\n    this.quotations.user.id = this.appService.getSessionUser().id;\r\n    this.quotations.isBillingAddress = true;\r\n    this.retriveCustomer();\r\n    this.retriveProducts();\r\n    this.retriveServices();\r\n    this.product = this.newProduct();\r\n    this.termsLoad();\r\n\r\n    let id = this.appService.getParam(\"id\");\r\n    if (id !== undefined) {\r\n\r\n      this.quotationsDetails(id);\r\n\r\n    }\r\n  }\r\n  ngOnInit() {\r\n    this.termsLoad();\r\n\r\n  }\r\n  retriveProducts() {\r\n    this.restService.retriveProducts()\r\n      .subscribe(result => {\r\n        if (result) {\r\n          this.products = result;\r\n          console.log(this.products);\r\n        }\r\n      });\r\n  }\r\n  retriveServices() {\r\n    this.restService.retriveServices()\r\n      .subscribe(result => {\r\n        if (result) {\r\n          this.services = result;\r\n          // this.services.forEach(item => {\r\n          //   console.log(\"sss======\"+item.serviceName);\r\n          // });\r\n        }\r\n      });\r\n  }\r\n\r\n  filteredServices: any[] = [];\r\n\r\n  filterServices(val: string) {\r\n    this.filteredServices = (val && val != '') ? this.services.filter(s => s.serviceName.toLowerCase().indexOf(val.toLowerCase()) >= 0)\r\n      : this.services;\r\n  }\r\n\r\n  removeItem(index: number) {\r\n    if (index !== -1) {\r\n      this.quotations.items.splice(index, 1);\r\n    }\r\n    this.changeCalculate();\r\n  }\r\n  retriveCustomer() {\r\n    this.restService.retriveCustomer()\r\n      .subscribe(result => {\r\n        if (result) {\r\n          this.customers = result;\r\n          this.customers.forEach(item => {\r\n            item.gstRegNumber = (item.gstRegNumber == \"\" ? \"Not Registered\" : item.gstRegNumber);\r\n            item.displayName = item.firstName + ' ' + item.lastName;\r\n            item.inlineAddress = (item.address.lane == null ? '' : item.address.lane) + ' ' + (item.address.area == null ? '' : item.address.area) + ' ' + (item.address.city == null ? '' : item.address.city) + ' ' + (item.address.state == null ? '' : item.address.state)\r\n          });\r\n        }\r\n      });\r\n  }\r\n  filteredPhones: any[] = [];\r\n\r\n  filterPhones(val: string) {\r\n    this.filteredPhones = (val && val != '') ? this.customers.filter(s => s.businessName.toLowerCase().indexOf(val.toLowerCase()) >= 0)\r\n      : this.customers;\r\n  }\r\n  filteredProducts: any[] = [];\r\n\r\n  filterProducts(val: string) {\r\n    if (val) {\r\n      this.productName = val;\r\n    }\r\n    this.filteredProducts = (val && val != '') ? this.products.filter(s => s.productName.toLowerCase().indexOf(val.toLowerCase()) >= 0)\r\n      : this.products;\r\n  }\r\n\r\n  quotationsDetails(id) {\r\n    this.restService.quotationsEdit(id)\r\n      .subscribe(result => {\r\n        if (result) {\r\n\r\n          this.quotations = result;\r\n          // this.retriveCustomer();\r\n          this.selectedCustomer(this.quotations.customer);\r\n          this.isRecordFound = true;\r\n\r\n        }\r\n      });\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  checkDate() {\r\n    if (this.quotations.estimationDate && this.quotations.expirationDate) {\r\n\r\n      if (this.quotations.expirationDate <= this.quotations.estimationDate) {\r\n\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  filteredCustomer: any[] = [];\r\n\r\n  filterCustomer(val: string) {\r\n    this.filteredCustomer = (val && val != '') ? this.customers.filter(s => s.firstName.toLowerCase().indexOf(val.toLowerCase()) >= 0)\r\n      : this.customers;\r\n  }\r\n\r\n\r\n  changeCalculate() {\r\n    let total = 0;\r\n    this.quotations.items.forEach(item => {\r\n      total += item.totalAmount;\r\n    });\r\n    this.quotations.subTotal = total;\r\n    this.quotations.cessValue = total * (this.quotations.cess / 100);\r\n    //this.quotations.discountValue = total * (this.quotations.discount / 100);\r\n    this.quotations.total = total + this.quotations.cessValue;\r\n\r\n  }\r\n\r\n  changeGst(flipCgst: boolean) {\r\n    if (flipCgst) {\r\n      if (this.quotations.isCgst) {\r\n        this.quotations.isIgst = false;\r\n      } else {\r\n        this.quotations.isIgst = true;\r\n      }\r\n    } else {\r\n      if (this.quotations.isIgst) {\r\n        this.quotations.isCgst = false;\r\n      } else {\r\n        this.quotations.isCgst = true;\r\n      }\r\n    }\r\n\r\n    // this.quotations.items.forEach(item => {\r\n    //   this.commonItemCalculate(item);\r\n    // });\r\n    // this.changeCalculate();\r\n  }\r\n  changeProduct(flipProduct: boolean) {\r\n    if (flipProduct) {\r\n      if (this.quotations.isProduct) {\r\n        this.quotations.isService = false;\r\n      } else {\r\n        this.quotations.isService = true;\r\n      }\r\n    } else {\r\n      if (this.quotations.isService) {\r\n        this.quotations.isProduct = false;\r\n      } else {\r\n        this.quotations.isProduct = true;\r\n      }\r\n    }\r\n  }\r\n  itemCalculate(item: Item) {\r\n    this.commonItemCalculate(item);\r\n    this.changeCalculate();\r\n  }\r\n\r\n  commonItemCalculate(item: Item) {\r\n    // \r\n    if (this.quotations.isProduct) {\r\n      let total = 0;\r\n      let beforeTaxAmount = item.quantity * item.unit;\r\n      item.discountAmount = (beforeTaxAmount * (item.discount / 100))\r\n      item.totalAfterTax = beforeTaxAmount - item.discountAmount;\r\n      total = item.totalAmount;\r\n      if (this.quotations.isCgst) {\r\n        if (item.taxrate && item.taxrate != 'Nil') {\r\n          item.cgst = (total * ((parseFloat(item.taxrate.replace('%', ''))) / 100)) / 2;\r\n          item.sgst = (total * ((parseFloat(item.taxrate.replace('%', ''))) / 100)) / 2;\r\n          item.totalAmount = total + (total * ((parseFloat(item.taxrate.replace('%', ''))) / 100));\r\n        } else {\r\n          item.cgst = 0;\r\n          item.sgst = 0;\r\n          item.totalAmount = total;\r\n        }\r\n      }\r\n      if (this.quotations.isIgst) {\r\n        if (item.taxrate && item.taxrate != 'Nil') {\r\n          item.igst = total * (parseFloat(item.taxrate.replace('%', '')) / 100);\r\n          item.totalAmount = total + (total * ((parseFloat(item.taxrate.replace('%', ''))) / 100));\r\n        } else {\r\n          item.igst = 0;\r\n          item.totalAmount = total;\r\n        }\r\n      }\r\n    } else {\r\n      let total = 0;\r\n      let beforeTaxAmount = item.unit;\r\n      item.discountAmount = (beforeTaxAmount * (item.discount / 100));\r\n      item.totalAmount = beforeTaxAmount - item.discountAmount;\r\n      total = item.totalAmount;\r\n      if (this.quotations.isCgst) {\r\n        if (item.taxrate && item.taxrate != 'Nil') {\r\n          item.cgst = (total * ((parseFloat(item.taxrate.replace('%', ''))) / 100)) / 2;\r\n          item.sgst = (total * ((parseFloat(item.taxrate.replace('%', ''))) / 100)) / 2;\r\n          item.totalAmount = total + (total * ((parseFloat(item.taxrate.replace('%', ''))) / 100));\r\n        } else {\r\n          item.cgst = 0;\r\n          item.sgst = 0;\r\n          item.totalAmount = total;\r\n        }\r\n      }\r\n      if (this.quotations.isIgst) {\r\n        if (item.taxrate && item.taxrate != 'Nil') {\r\n          item.igst = total * (parseFloat(item.taxrate.replace('%', '')) / 100);\r\n          item.totalAmount = total + (total * ((parseFloat(item.taxrate.replace('%', ''))) / 100));\r\n        } else {\r\n          item.igst = 0;\r\n          item.totalAmount = total;\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  addItem() {\r\n    // if( (!this.productName || this.productName.trim().length == 0) && !this.product.id){\r\n    //     this.appService.showMessage(\"Please enter the product.\");\r\n    //     return;\r\n    // }\r\n    // if (!this.product.id) {\r\n    //   this.product.productName = this.productName;\r\n    // }\r\n\r\n\r\n    //      Code for Already exits product Name...\r\n    //    let isExists: boolean = false;\r\n    //    this.sales.items.forEach(item => {\r\n    //      if (this.product.id && item.product.id == this.product.id) {\r\n    //        this.appService.showMessage(\"Product already added\");\r\n    //        isExists = true;\r\n    //      }\r\n    //    })\r\n    //    if (isExists) {\r\n    //      this.product = this.newProduct();\r\n    //      return;\r\n    //    }\r\n    // \r\n    let item = new Item();\r\n    item.id = null;\r\n    //item.company = this.quotations.company;\r\n    if (this.quotations.isService) {\r\n      item.service = Object.assign({}, this.service);\r\n    } else {\r\n      item.stockItemId = Object.assign({}, this.product);\r\n    }\r\n\r\n    item.unit = 0;\r\n    item.cgst = 0;\r\n    item.sgst = 0;\r\n    item.igst = 0;\r\n    item.igst = 0;\r\n\r\n    this.testRowIndex = this.quotations.items.push(item) - 1;\r\n\r\n  }\r\n\r\n\r\n\r\n  // \r\n  selectedProduct(item: any) {\r\n\r\n    this.quotations.items[this.testRowIndex].unit = item.productPriceListItems.unitSellPrice;\r\n    this.quotations.items[this.testRowIndex].stockItemId = item;\r\n    this.quotations.items[this.testRowIndex].taxrate = item.productPriceListItems.tax;\r\n    //new code for productId\r\n    this.quotations.items[this.testRowIndex].stockItemId = item.id;\r\n    this.itemCalculate(this.quotations.items[this.testRowIndex]);\r\n  }\r\n  selectedService(item: any) {\r\n    // console.log(item);\r\n    // console.log(item.tax);\r\n\r\n    this.quotations.items[this.testRowIndex].unit = item.salesUnit;\r\n    this.quotations.items[this.testRowIndex].service = item;\r\n    this.quotations.items[this.testRowIndex].taxrate = item.tax;\r\n    //this.quotations.items[this.testRowIndex].serviceId = item.id;\r\n    this.itemCalculate(this.quotations.items[this.testRowIndex]);\r\n  }\r\n\r\n\r\n  selectedCustomer(item: any) {\r\n    this.customer = item;\r\n    console.log(this.customer);\r\n\r\n    //console.log(\"selected customer =\" + this.customer);\r\n\r\n  }\r\n\r\n\r\n  valid() {\r\n    let returnVal = true;\r\n\r\n    // if (this.quotations.items.length == 0) {\r\n    //   returnVal = false;\r\n    //   this.appService.showMessage(\"please select product\");\r\n    // }\r\n    // let isNotProductFound: boolean = false;\r\n    // this.quotations.items.forEach(element => {\r\n    //   if (!element.product.productName || element.product.productName == \"\") {\r\n    //     isNotProductFound = true;\r\n    //   }\r\n    // });\r\n    // if (isNotProductFound) {\r\n    //   this.appService.showMessage(\"please enter product name\");\r\n    //   returnVal = false;\r\n    // }\r\n    if (returnVal && (!this.customer.id || this.customer.id == '0')) {\r\n      returnVal = false;\r\n      this.appService.showMessage(\"please select customer\");\r\n    }\r\n\r\n    return returnVal;\r\n  }\r\n\r\n  save() {\r\n    if (!this.valid()) return;\r\n    this.quotations.customer = {};\r\n    this.quotations.customer.id = this.customer.id;\r\n    this.restService.saveQuotations(this.quotations)\r\n      .subscribe(result => {\r\n        if (result) {\r\n          this.appService.showMessage('Quotation generated successfully : ' + result.quoteNumber);\r\n          //this.appService.navigate(Prop.INVOICE_SEARCH_PAGE, {});\r\n          this.quotations.id = result.id;\r\n          this.quotations.quoteNumber = result.quoteNumber;\r\n          this.quotations.items = result.items;\r\n          this.quotations.items.forEach(item => {\r\n            delete item.stockItemId.stockItemPrice.stockasofdate;\r\n          })\r\n          this.isPrintEnable = true;\r\n        }\r\n      });\r\n\r\n  }\r\n  billing() {\r\n    if (!this.valid()) return;\r\n    this.quotations.customer = {};\r\n    this.quotations.status = \"BILLING\";\r\n    this.quotations.customer.id = this.customer.id;\r\n    this.restService.saveQuotations(this.quotations)\r\n      .subscribe(result => {\r\n        if (result) {\r\n          this.appService.showMessage('Bill save successfully : ' + result.quoteNumber);\r\n          //this.appService.navigate(Prop.INVOICE_SEARCH_PAGE, {});\r\n          // this.sales.id= result.id;\r\n          // this.sales.invoiceNumber = result.invoiceNumber;\r\n          // this.sales.items= result.items;\r\n          // this.sales.items.forEach( item => {\r\n          //   delete item.product.priceListItems.stockAsOfDate;\r\n          // })\r\n          // this.isPrintEnable = true;\r\n          this.clear();\r\n        }\r\n      });\r\n\r\n  }\r\n  clear() {\r\n    this.quotations = Object.assign({}, new Quotations());\r\n    this.quotations.company = {}\r\n    this.quotations.company.id = this.appService.getBranch().id;\r\n    this.quotations.company.name = this.appService.getBranch().name;\r\n    this.customer = new Customer();\r\n    this.productName = \"\";\r\n    this.isPrintEnable = false;\r\n    this.myForm = QuotationsFormGroup.init();\r\n    QuotationsFormGroup.edit(this.myForm);\r\n    QuotationsFormGroup.address(this.myForm, false);\r\n    this.showAddress = false;\r\n  }\r\n  onAddressChange($event) {\r\n    if ($event.checked) {\r\n      QuotationsFormGroup.address(this.myForm, false);\r\n      this.showAddress = false;\r\n    } else {\r\n      QuotationsFormGroup.address(this.myForm, true);\r\n      this.showAddress = true;\r\n    }\r\n\r\n  }\r\n\r\n  newProduct() {\r\n    return {\r\n\r\n      id: null,\r\n      productCode: Math.floor(Math.random() * (999999999 - 1)),\r\n      productName: null,\r\n      hsnCode: Math.floor(Math.random() * (9999 - 1)),\r\n      companyId: this.quotations.company.id,\r\n      active: true,\r\n      productPurchasing: {\r\n        id: null,\r\n        leadTimeDays: 0,\r\n        cgsTax: \"0\",\r\n        sgsTax: \"0\",\r\n        igsTax: \"0\"\r\n      },\r\n      productPriceListItems: {\r\n        id: null,\r\n        initialStockAtHand: \"100\",\r\n        unitPrice: 1,\r\n        unitSellPrice: 1,\r\n        stockAsOfDate: \"2000-01-01T18:30:00.000Z\",\r\n        stockAlertQty: 10,\r\n        purchaseTaxInclusive: \"1\",\r\n        taxInclusive: \"0\"\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  termsList: any[] = [];\r\n  termsLoad() {\r\n    this.restService.dataload('Terms')\r\n      .subscribe(results => {\r\n        if (results) {\r\n          this.termsList = results;\r\n        }\r\n      })\r\n  }\r\n  printPriview() {\r\n    this.restService.invoiceOpen(this.quotations.id);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/quotations/quotations.edit.component.ts","module.exports = \"  <div>\\r\\n    <h2 style=\\\"text-align: center;\\\">Settings</h2>          \\r\\n</div>\\r\\n\\r\\n<div fxLayout=\\\"row\\\" id=\\\"page-content\\\" style=\\\"overflow: hidden\\\">\\r\\n  <div fxFlex=\\\"100\\\">\\r\\n      <div id=\\\"page-content\\\">\\r\\n          <md-card style=\\\"margin: 1rem; margin-bottom: 5rem;\\\">\\r\\n        <div class=\\\"padding-side\\\">\\r\\n            <div class=\\\"padding-height padding-side\\\">\\r\\n              <!--============= Md Card ===============-->\\r\\n              <form [formGroup]=\\\"userSettingForm\\\" novalidate autocomplete='off'>\\r\\n              <md-tab-group [selectedIndex]=\\\"selectedIndex\\\">\\r\\n                <md-tab label=\\\"Company Information\\\">                    \\r\\n                  <div class=\\\"row\\\">\\r\\n                    <aside class=\\\"col-xs-6 padding-side\\\" style=\\\"margin-top:20px\\\">\\r\\n                        <md-input-container>\\r\\n                            <input #fc_company_name mdInput placeholder=\\\"Company Name\\\"\\r\\n                             [formControl]=\\\"userSettingForm.controls.us_company_name\\\"\\r\\n                                [(ngModel)]=\\\"userSettings.company.name\\\" [readonly]=\\\"true\\\"\\r\\n                                (ngModelChange)=\\\"userSettings.company.name=$event\\\">\\r\\n                                  <md-icon mdSuffix color=\\\"accent\\\" mdTooltip=\\\"click to edit\\\"\\r\\n                                   (click)=\\\"editClick(fc_company_name)\\\"\\r\\n                                  class=\\\"center-xs hover\\\">edit</md-icon>                              \\r\\n                            <md-hint>\\r\\n                                <form-messages [control]=\\\"userSettingForm.controls.us_company_name\\\"> </form-messages>\\r\\n                            </md-hint>\\r\\n                        </md-input-container>\\r\\n                    </aside>\\r\\n                    <aside class=\\\"col-xs-6 padding-side\\\" style=\\\"margin-top:20px\\\">\\r\\n                        <md-input-container>\\r\\n                            <input #fc_company_gstin mdInput placeholder=\\\"GSTIN\\\" \\r\\n                            [formControl]=\\\"userSettingForm.controls.us_company_gstin\\\"\\r\\n                                [(ngModel)]=\\\"userSettings.company.gstin\\\" [readonly]=\\\"true\\\"\\r\\n                                (ngModelChange)=\\\"userSettings.company.gstin=$event\\\">\\r\\n                                  <md-icon mdSuffix color=\\\"accent\\\" mdTooltip=\\\"click to edit\\\" (click)=\\\"editClick(fc_company_gstin)\\\"\\r\\n                                  class=\\\"center-xs hover\\\">edit</md-icon>                              \\r\\n                            <md-hint>\\r\\n                                <form-messages [control]=\\\"userSettingForm.controls.us_company_gstin\\\"> </form-messages>\\r\\n                            </md-hint>\\r\\n                        </md-input-container>\\r\\n                    </aside>\\r\\n                    <aside class=\\\"col-xs-6 padding-side\\\">\\r\\n                        <md-input-container>\\r\\n                            <input #fc_company_website mdInput placeholder=\\\"Website\\\" \\r\\n                            [formControl]=\\\"userSettingForm.controls.us_company_website\\\"\\r\\n                                [(ngModel)]=\\\"userSettings.company.webSite\\\" [readonly]=\\\"true\\\"\\r\\n                                (ngModelChange)=\\\"userSettings.company.webSite=$event\\\">\\r\\n                                  <md-icon mdSuffix color=\\\"accent\\\" mdTooltip=\\\"click to edit\\\"\\r\\n                                   (click)=\\\"editClick(fc_company_website)\\\"\\r\\n                                  class=\\\"center-xs hover\\\">edit</md-icon>                              \\r\\n                            <md-hint>\\r\\n                                <form-messages [control]=\\\"userSettingForm.controls.us_company_website\\\"> </form-messages>\\r\\n                            </md-hint>\\r\\n                        </md-input-container>\\r\\n                    </aside>\\r\\n                    <!-- <aside class=\\\"col-xs-6 padding-side\\\">\\r\\n                        <md-input-container>\\r\\n                            <input #fc_company_logo mdInput placeholder=\\\"Brand Logo\\\" \\r\\n                            [formControl]=\\\"userSettingForm.controls.us_company_logo\\\"\\r\\n                                [(ngModel)]=\\\"userSettings.company.imgLogoUrl\\\" [readonly]=\\\"true\\\">\\r\\n                                  <md-icon mdSuffix color=\\\"accent\\\" mdTooltip=\\\"click to edit\\\" \\r\\n                                  (click)=\\\"editClick(fc_company_logo)\\\"\\r\\n                                  class=\\\"center-xs hover\\\">edit</md-icon>                              \\r\\n                            <md-hint>\\r\\n                                <form-messages [control]=\\\"userSettingForm.controls.us_company_logo\\\"> </form-messages>\\r\\n                            </md-hint>\\r\\n                        </md-input-container>\\r\\n                    </aside> -->\\r\\n                    <aside class=\\\"col-xs-12 padding-side\\\">\\r\\n                      <h4>Address</h4>\\r\\n                    </aside>\\r\\n                    <aside class=\\\"col-xs-6 padding-side\\\">\\r\\n                        <md-input-container>\\r\\n                            <input #fc_company_lane mdInput placeholder=\\\"Lane\\\" \\r\\n                            [formControl]=\\\"userSettingForm.controls.us_company_address_lane\\\"\\r\\n                                [(ngModel)]=\\\"userSettings.company.address.lane\\\" \\r\\n                                (ngModelChange)=\\\"userSettings.company.address.lane=$event\\\"\\r\\n                                [readonly]=\\\"true\\\">\\r\\n                                  <md-icon mdSuffix color=\\\"accent\\\" mdTooltip=\\\"click to edit\\\" (click)=\\\"editClick(fc_company_lane)\\\"\\r\\n                                  class=\\\"center-xs hover\\\">edit</md-icon>                              \\r\\n                            <md-hint>\\r\\n                                <form-messages [control]=\\\"userSettingForm.controls.us_company_address_lane\\\"> </form-messages>\\r\\n                            </md-hint>\\r\\n                        </md-input-container>\\r\\n                    </aside>\\r\\n                    <aside class=\\\"col-xs-6 padding-side\\\">\\r\\n                        <md-input-container>\\r\\n                            <input #fc_company_street mdInput placeholder=\\\"Street\\\" \\r\\n                            [formControl]=\\\"userSettingForm.controls.us_company_address_street\\\"\\r\\n                                [(ngModel)]=\\\"userSettings.company.address.street\\\" \\r\\n                                (ngModelChange)=\\\"userSettings.company.address.street=$event\\\"\\r\\n                                [readonly]=\\\"true\\\">\\r\\n                                  <md-icon mdSuffix color=\\\"accent\\\" mdTooltip=\\\"click to edit\\\" (click)=\\\"editClick(fc_company_street)\\\"\\r\\n                                  class=\\\"center-xs hover\\\">edit</md-icon>                              \\r\\n                            <md-hint>\\r\\n                                <form-messages [control]=\\\"userSettingForm.controls.us_company_address_street\\\"> </form-messages>\\r\\n                            </md-hint>\\r\\n                        </md-input-container>\\r\\n                    </aside>\\r\\n                    <aside class=\\\"col-xs-6 padding-side\\\">\\r\\n                        <md-input-container>\\r\\n                            <input #fc_company_area mdInput placeholder=\\\"Area\\\" \\r\\n                            [formControl]=\\\"userSettingForm.controls.us_company_address_area\\\"\\r\\n                                [(ngModel)]=\\\"userSettings.company.address.area\\\" \\r\\n                                (ngModelChange)=\\\"userSettings.company.address.area=$event\\\"\\r\\n                                [readonly]=\\\"true\\\">\\r\\n                                  <md-icon mdSuffix color=\\\"accent\\\" mdTooltip=\\\"click to edit\\\" (click)=\\\"editClick(fc_company_area)\\\"\\r\\n                                  class=\\\"center-xs hover\\\">edit</md-icon>                              \\r\\n                            <md-hint>\\r\\n                                <form-messages [control]=\\\"userSettingForm.controls.us_company_address_area\\\"> </form-messages>\\r\\n                            </md-hint>\\r\\n                        </md-input-container>\\r\\n                    </aside>\\r\\n                    <aside class=\\\"col-xs-6 padding-side\\\">\\r\\n                        <md-input-container>\\r\\n                            <input #fc_company_city mdInput placeholder=\\\"City\\\" \\r\\n                            [formControl]=\\\"userSettingForm.controls.us_company_address_city\\\"\\r\\n                                [(ngModel)]=\\\"userSettings.company.address.city\\\" \\r\\n                                (ngModelChange)=\\\"userSettings.company.address.city=$event\\\"\\r\\n                                [readonly]=\\\"true\\\">\\r\\n                                  <md-icon mdSuffix color=\\\"accent\\\" mdTooltip=\\\"click to edit\\\" (click)=\\\"editClick(fc_company_city)\\\"\\r\\n                                  class=\\\"center-xs hover\\\">edit</md-icon>                              \\r\\n                            <md-hint>\\r\\n                                <form-messages [control]=\\\"userSettingForm.controls.us_company_address_city\\\"> </form-messages>\\r\\n                            </md-hint>\\r\\n                        </md-input-container>\\r\\n                    </aside>\\r\\n                    <aside class=\\\"col-xs-6 padding-side\\\">\\r\\n                    <md-input-container>\\r\\n                      <input #fc_company_state mdInput required placeholder=\\\"State\\\" \\r\\n                      [formControl]=\\\"userSettingForm.controls.us_company_address_state\\\"\\r\\n                          [(ngModel)]=\\\"userSettings.company.address.state\\\" \\r\\n                          (ngModelChange)=\\\"userSettings.company.address.state=$event\\\"\\r\\n                          [readonly]=\\\"true\\\"\\r\\n                           [mdAutocomplete]=\\\"address\\\" \\r\\n                          (focus)=\\\"filterStates($event.target.values)\\\"\\r\\n                          (keyup)=\\\"filterStates($event.target.value)\\\">\\r\\n                          <md-icon mdSuffix color=\\\"accent\\\" mdTooltip=\\\"click to edit\\\" (click)=\\\"editClick(fc_company_state)\\\"\\r\\n                          class=\\\"center-xs hover\\\">edit</md-icon>     \\r\\n                      <md-autocomplete #address=\\\"mdAutocomplete\\\">\\r\\n                          <md-option *ngFor=\\\"let option of stateList\\\" [value]=\\\"option.key\\\">\\r\\n                              {{option.value}}\\r\\n                          </md-option>\\r\\n                      </md-autocomplete>\\r\\n                      <md-hint>\\r\\n                          <form-messages [control]=\\\"userSettingForm.controls.us_company_address_state\\\">\\r\\n                          </form-messages>\\r\\n                      </md-hint>\\r\\n                  </md-input-container>\\r\\n                </aside>\\r\\n                    \\r\\n                    <aside class=\\\"col-xs-6 padding-side\\\">\\r\\n                        <md-input-container>\\r\\n                            <input #fc_company_zip mdInput placeholder=\\\"Pincode\\\" \\r\\n                            [formControl]=\\\"userSettingForm.controls.us_company_address_zipcode\\\"\\r\\n                                [(ngModel)]=\\\"userSettings.company.address.zipCode\\\"\\r\\n                                (ngModelChange)=\\\"userSettings.company.address.zipCode=$event\\\"\\r\\n                                 [readonly]=\\\"true\\\">\\r\\n                                  <md-icon mdSuffix color=\\\"accent\\\" mdTooltip=\\\"click to edit\\\" \\r\\n                                  (click)=\\\"editClick(fc_company_zip)\\\"\\r\\n                                  class=\\\"center-xs hover\\\">edit</md-icon>                              \\r\\n                            <md-hint>\\r\\n                                <form-messages [control]=\\\"userSettingForm.controls.us_company_address_zipcode\\\"> </form-messages>\\r\\n                            </md-hint>\\r\\n                        </md-input-container>\\r\\n                    </aside>                                       \\r\\n                  </div>     \\r\\n                  <div fxLayout=\\\"row\\\" style=\\\"padding: 1rem;\\\">\\r\\n                    <div class=\\\"col-xs-12 end-xs\\\">\\r\\n                        <!-- <button md-raised-button color=\\\"accent\\\" [disabled]=\\\"userSettingForm.valid\\\" (click)=\\\"saveInfo()\\\"> -->\\r\\n                            <button md-raised-button color=\\\"accent\\\"  (click)=\\\"saveInfo()\\\"\\r\\n                           \\r\\n                            > Save\\r\\n                        </button>                      \\r\\n                    </div>\\r\\n                </div>                                                   \\r\\n                </md-tab>\\r\\n                <md-tab label=\\\"User Profile\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                      <aside class=\\\"col-xs-6 padding-side\\\" style=\\\"margin-top:20px\\\">\\r\\n                        <md-input-container>\\r\\n                          <input #fc_user_firstname mdInput placeholder=\\\"First Name\\\"\\r\\n                           [formControl]=\\\"userSettingForm.controls.us_user_firstname\\\"\\r\\n                            [(ngModel)]=\\\"userSettings.userProfile.firstName\\\" \\r\\n                          (ngModelChange)=\\\"userSettings.userProfile.firstName=$event\\\"\\r\\n                            [readonly]=\\\"true\\\">\\r\\n                          <md-icon mdSuffix color=\\\"accent\\\" mdTooltip=\\\"click to edit\\\" \\r\\n                          (click)=\\\"editClick(fc_user_firstname)\\\" class=\\\"center-xs hover\\\">edit</md-icon>\\r\\n                          <md-hint>\\r\\n                            <form-messages [control]=\\\"userSettingForm.controls.us_user_firstname\\\"> </form-messages>\\r\\n                          </md-hint>\\r\\n                        </md-input-container>\\r\\n                      </aside>\\r\\n                      <aside class=\\\"col-xs-6 padding-side\\\" style=\\\"margin-top:20px\\\">\\r\\n                          <md-input-container>\\r\\n                            <input #fc_user_lastname mdInput placeholder=\\\"Last Name\\\"\\r\\n                             [formControl]=\\\"userSettingForm.controls.us_user_lastname\\\"\\r\\n                              [(ngModel)]=\\\"userSettings.userProfile.lastName\\\" \\r\\n                              (ngModelChange)=\\\"userSettings.userProfile.lastName=$event\\\"\\r\\n                              [readonly]=\\\"true\\\">\\r\\n                            <md-icon mdSuffix color=\\\"accent\\\" mdTooltip=\\\"click to edit\\\" \\r\\n                            (click)=\\\"editClick(fc_user_lastname)\\\" class=\\\"center-xs hover\\\">edit</md-icon>\\r\\n                            <md-hint>\\r\\n                              <form-messages [control]=\\\"userSettingForm.controls.us_user_lastname\\\"> </form-messages>\\r\\n                            </md-hint>\\r\\n                          </md-input-container>\\r\\n                        </aside>\\r\\n                        <aside class=\\\"col-xs-6 padding-side\\\">\\r\\n                            <md-input-container>\\r\\n                                <input #fc_company_mobile mdInput placeholder=\\\"Mobile\\\" \\r\\n                                [formControl]=\\\"userSettingForm.controls.us_user_mobile\\\"\\r\\n                                    [(ngModel)]=\\\"userSettings.userProfile.mobile\\\" \\r\\n                                    (ngModelChange)=\\\"userSettings.userProfile.mobile=$event\\\"\\r\\n                                    [readonly]=\\\"true\\\">\\r\\n                                <md-icon mdSuffix color=\\\"accent\\\" mdTooltip=\\\"click to edit\\\" (click)=\\\"editClick(fc_company_mobile)\\\" class=\\\"center-xs hover\\\">edit</md-icon>\\r\\n                                <md-hint>\\r\\n                                    <form-messages [control]=\\\"userSettingForm.controls.us_user_mobile\\\"> </form-messages>\\r\\n                                </md-hint>\\r\\n                            </md-input-container>\\r\\n                            \\r\\n                        </aside>\\r\\n                        <aside class=\\\"col-xs-6 padding-side\\\">\\r\\n                            <md-input-container>\\r\\n                              <input #fc_user_pan mdInput placeholder=\\\"PAN\\\"\\r\\n                               [formControl]=\\\"userSettingForm.controls.us_user_pan\\\"\\r\\n                                [(ngModel)]=\\\"userSettings.userProfile.pan\\\" \\r\\n                                (ngModelChange)=\\\"userSettings.userProfile.pan=$event\\\"\\r\\n                                [readonly]=\\\"true\\\">\\r\\n                              <md-icon mdSuffix color=\\\"accent\\\" mdTooltip=\\\"click to edit\\\" \\r\\n                              (click)=\\\"editClick(fc_user_pan)\\\" class=\\\"center-xs hover\\\">edit</md-icon>\\r\\n                              <md-hint>\\r\\n                                <form-messages [control]=\\\"userSettingForm.controls.us_user_pan\\\"> </form-messages>\\r\\n                              </md-hint>\\r\\n                            </md-input-container>\\r\\n                        </aside>\\r\\n                  </div>\\r\\n                  <div fxLayout=\\\"row\\\" style=\\\"padding: 1rem;\\\">\\r\\n                    <div class=\\\"col-xs-12 end-xs\\\">\\r\\n                        <!-- <button md-raised-button color=\\\"accent\\\" [disabled]=\\\"userSettingForm.valid\\\" (click)=\\\"saveInfo()\\\"> -->\\r\\n                            <button md-raised-button color=\\\"accent\\\"  (click)=\\\"saveInfo()\\\"\\r\\n                           \\r\\n                            > Save\\r\\n                        </button>                      \\r\\n                    </div>\\r\\n                </div>\\r\\n                </md-tab>\\r\\n                <md-tab label=\\\"Bank Information\\\">\\r\\n               \\r\\n                  <div class=\\\"row\\\">\\r\\n                      <aside class=\\\"col-xs-6 padding-side\\\" style=\\\"margin-top:20px\\\">\\r\\n                        <md-input-container>\\r\\n                          <input #fc_bank_name mdInput placeholder=\\\"Bank Name\\\" \\r\\n                          [formControl]=\\\"userSettingForm.controls.us_bank_name\\\"\\r\\n                           [(ngModel)]=\\\"userSettings.bankDetails.bankName\\\"\\r\\n                           (ngModelChange)=\\\"userSettings.bankDetails.bankName=$event\\\"\\r\\n                            [readonly]=\\\"true\\\">\\r\\n                          <md-icon mdSuffix color=\\\"accent\\\" mdTooltip=\\\"click to edit\\\" \\r\\n                          (click)=\\\"editClick(fc_bank_name)\\\" class=\\\"center-xs hover\\\">edit</md-icon>\\r\\n                          <md-hint>\\r\\n                            <form-messages [control]=\\\"userSettingForm.controls.us_bank_name\\\"> </form-messages>\\r\\n                          </md-hint>\\r\\n                        </md-input-container>\\r\\n                      </aside>\\r\\n                      <aside class=\\\"col-xs-6 padding-side\\\" style=\\\"margin-top:20px\\\">\\r\\n                          <md-input-container>\\r\\n                            <input #fc_bank_accountnumber mdInput placeholder=\\\"Account Number\\\" \\r\\n                            [formControl]=\\\"userSettingForm.controls.us_bank_accountnumber\\\"\\r\\n                             [(ngModel)]=\\\"userSettings.bankDetails.accountNumber\\\"\\r\\n                             (ngModelChange)=\\\"userSettings.bankDetails.accountNumber=$event\\\"\\r\\n                              [readonly]=\\\"true\\\">\\r\\n                            <md-icon mdSuffix color=\\\"accent\\\" mdTooltip=\\\"click to edit\\\" \\r\\n                            (click)=\\\"editClick(fc_bank_accountnumber)\\\" class=\\\"center-xs hover\\\">edit</md-icon>\\r\\n                            <md-hint>\\r\\n                              <form-messages [control]=\\\"userSettingForm.controls.us_bank_accountnumber\\\"> </form-messages>\\r\\n                            </md-hint>\\r\\n                          </md-input-container>\\r\\n                        </aside>\\r\\n                        <aside class=\\\"col-xs-6 padding-side\\\">\\r\\n                            <md-input-container>\\r\\n                              <input #fc_bank_ifsc mdInput placeholder=\\\"IFSC Code\\\" \\r\\n                              [formControl]=\\\"userSettingForm.controls.us_bank_ifsc\\\"\\r\\n                               [(ngModel)]=\\\"userSettings.bankDetails.ifscCode\\\"\\r\\n                               (ngModelChange)=\\\"userSettings.bankDetails.ifscCode=$event\\\"\\r\\n                                [readonly]=\\\"true\\\">\\r\\n                              <md-icon mdSuffix color=\\\"accent\\\" mdTooltip=\\\"click to edit\\\" \\r\\n                              (click)=\\\"editClick(fc_bank_ifsc)\\\" class=\\\"center-xs hover\\\">edit</md-icon>\\r\\n                              <md-hint>\\r\\n                                <form-messages [control]=\\\"userSettingForm.controls.us_bank_ifsc\\\"> </form-messages>\\r\\n                              </md-hint>\\r\\n                            </md-input-container>\\r\\n                          </aside>\\r\\n                          <aside class=\\\"col-xs-6 padding-side\\\">\\r\\n                              <md-input-container>\\r\\n                                <input #fc_bank_branch mdInput placeholder=\\\"Branch\\\" \\r\\n                                [formControl]=\\\"userSettingForm.controls.us_bank_branch\\\"\\r\\n                                 [(ngModel)]=\\\"userSettings.bankDetails.branch\\\"\\r\\n                                 (ngModelChange)=\\\"userSettings.bankDetails.branch=$event\\\"\\r\\n                                  [readonly]=\\\"true\\\">\\r\\n                                <md-icon mdSuffix color=\\\"accent\\\" mdTooltip=\\\"click to edit\\\" \\r\\n                                (click)=\\\"editClick(fc_bank_branch)\\\" class=\\\"center-xs hover\\\">edit</md-icon>\\r\\n                                <md-hint>\\r\\n                                  <form-messages [control]=\\\"userSettingForm.controls.us_bank_branch\\\"> </form-messages>\\r\\n                                </md-hint>\\r\\n                              </md-input-container>\\r\\n                            </aside>\\r\\n                            <aside class=\\\"col-xs-6 padding-side\\\">\\r\\n                                <md-input-container>\\r\\n                                  <input #fc_bank_address mdInput placeholder=\\\"Address\\\" \\r\\n                                  [formControl]=\\\"userSettingForm.controls.us_bank_address\\\"\\r\\n                                   [(ngModel)]=\\\"userSettings.bankDetails.bankAddress\\\"\\r\\n                                   (ngModelChange)=\\\"userSettings.bankDetails.bankAddress=$event\\\"\\r\\n                                    [readonly]=\\\"true\\\">\\r\\n                                  <md-icon mdSuffix color=\\\"accent\\\" mdTooltip=\\\"click to edit\\\" \\r\\n                                  (click)=\\\"editClick(fc_bank_address)\\\" class=\\\"center-xs hover\\\">edit</md-icon>\\r\\n                                  <md-hint>\\r\\n                                    <form-messages [control]=\\\"userSettingForm.controls.us_bank_address\\\"> </form-messages>\\r\\n                                  </md-hint>\\r\\n                                </md-input-container>\\r\\n                              </aside>\\r\\n                  </div>\\r\\n                  <div fxLayout=\\\"row\\\" style=\\\"padding: 1rem;\\\">\\r\\n                    <div class=\\\"col-xs-12 end-xs\\\">\\r\\n                        <!-- <button md-raised-button color=\\\"accent\\\" [disabled]=\\\"userSettingForm.valid\\\" (click)=\\\"saveInfo()\\\"> -->\\r\\n                            <button md-raised-button color=\\\"accent\\\"  (click)=\\\"saveInfo()\\\"\\r\\n                           \\r\\n                            > Save\\r\\n                        </button>                      \\r\\n                    </div>\\r\\n                </div>\\r\\n                </md-tab>\\r\\n                <md-tab label=\\\"Customizations\\\" >\\r\\n                  <div class=\\\"row\\\">\\r\\n                      <aside class=\\\"col-xs-12 padding-side\\\" style=\\\"margin-top:20px\\\">\\r\\n                          <md-input-container>\\r\\n                            <input #fc_invoice_footer mdInput placeholder=\\\"Invoice Footer\\\" \\r\\n                            [formControl]=\\\"userSettingForm.controls.us_invoice_footer\\\"\\r\\n                             [(ngModel)]=\\\"userSettings.invoiceFooter\\\"\\r\\n                             (ngModelChange)=\\\"userSettings.invoiceFooter=$event\\\"\\r\\n                              [readonly]=\\\"true\\\">\\r\\n                            <md-icon mdSuffix color=\\\"accent\\\" mdTooltip=\\\"click to edit\\\" \\r\\n                            (click)=\\\"editClick(fc_invoice_footer)\\\" class=\\\"center-xs hover\\\">edit</md-icon>\\r\\n                            <md-hint>\\r\\n                              <form-messages [control]=\\\"userSettingForm.controls.us_invoice_footer\\\"> </form-messages>\\r\\n                            </md-hint>\\r\\n                          </md-input-container>\\r\\n                        </aside>\\r\\n                        <aside class=\\\"col-xs-12 padding-side\\\">\\r\\n                            <md-input-container>\\r\\n                              <input #fc_quotation_footer mdInput placeholder=\\\"Quotation Footer\\\" \\r\\n                              [formControl]=\\\"userSettingForm.controls.us_quotation_footer\\\"\\r\\n                               [(ngModel)]=\\\"userSettings.quotationFooter\\\"\\r\\n                               (ngModelChange)=\\\"userSettings.quotationFooter=$event\\\"\\r\\n                                [readonly]=\\\"true\\\">\\r\\n                              <md-icon mdSuffix color=\\\"accent\\\" mdTooltip=\\\"click to edit\\\" \\r\\n                              (click)=\\\"editClick(fc_quotation_footer)\\\" class=\\\"center-xs hover\\\">edit</md-icon>\\r\\n                              <md-hint>\\r\\n                                <form-messages [control]=\\\"userSettingForm.controls.us_quotation_footer\\\"> </form-messages>\\r\\n                              </md-hint>\\r\\n                            </md-input-container>\\r\\n                        </aside>\\r\\n                        <aside class=\\\"col-xs-6 padding-side\\\">\\r\\n                            <md-input-container>\\r\\n                                <input\\r\\n                                  mdInput\\r\\n                                  placeholder=\\\"Page Layout Size\\\"\\r\\n                                  [formControl]=\\\"userSettingForm.controls.us_layout_size\\\"\\r\\n                                [(ngModel)]=\\\"userSettings.printLayoutId.id\\\"\\r\\n                                (ngModelChange)=\\\"userSettings.printLayoutId.id=$event\\\"\\r\\n                                  [mdAutocomplete]=\\\"pagelayout\\\"\\r\\n                                  (focus)=\\\"filterLayouts($event.target.value)\\\"\\r\\n                                  (keyup)=\\\"filterLayouts($event.target.value)\\\"\\r\\n                                />\\r\\n                                <md-autocomplete #pagelayout=\\\"mdAutocomplete\\\">\\r\\n                                  <md-option\\r\\n                                    *ngFor=\\\"let option of filteredLayout\\\"\\r\\n                                    [value]=\\\"option.layout\\\"\\r\\n                                  >\\r\\n                                    {{ option.layout }}\\r\\n                                  </md-option>\\r\\n                                </md-autocomplete>\\r\\n                                <md-hint>\\r\\n                                  <form-messages [control]=\\\"userSettingForm.controls.us_layout_size\\\">\\r\\n                                  </form-messages>\\r\\n                                </md-hint>\\r\\n                              </md-input-container>\\r\\n                        </aside>\\r\\n                            \\r\\n                        <aside class=\\\"col-xs-6 padding-side\\\">\\r\\n                                    <span>Product</span>\\r\\n                                    <md-slide-toggle #fc_is_product [formControl]=\\\"userSettingForm.controls.us_is_product\\\"\\r\\n                                    color=\\\"primary\\\" [(ngModel)]=\\\"userSettings.isProduct\\\"></md-slide-toggle>\\r\\n                                <span>Service</span>\\r\\n                                <md-slide-toggle #fc_is_service [formControl]=\\\"userSettingForm.controls.us_is_service\\\"\\r\\n                                color=\\\"primary\\\" [(ngModel)]=\\\"userSettings.isService\\\"></md-slide-toggle>\\r\\n                        </aside>\\r\\n                  </div>\\r\\n                  <div fxLayout=\\\"row\\\" style=\\\"padding: 1rem;\\\">\\r\\n                    <div class=\\\"col-xs-12 end-xs\\\">\\r\\n                        <!-- <button md-raised-button color=\\\"accent\\\" [disabled]=\\\"userSettingForm.valid\\\" (click)=\\\"saveInfo()\\\"> -->\\r\\n                            <button md-raised-button color=\\\"accent\\\"  (click)=\\\"saveInfo()\\\"\\r\\n                           \\r\\n                            > Save\\r\\n                        </button>                      \\r\\n                    </div>\\r\\n                </div>\\r\\n                </md-tab>\\r\\n                <!-- <md-tab label=\\\"Staff Managment\\\">\\r\\n                       <ng-template [ngIf]=\\\"addstaff\\\">\\r\\n                        <div fxLayout=\\\"row\\\" style=\\\"padding: 1rem;\\\">\\r\\n                          <div class=\\\"col-xs-12 end-xs\\\">\\r\\n                            <button md-raised-button color=\\\"accent\\\" (click)=\\\"add(addstaff,null)\\\">\\r\\n                              Add\\r\\n                            </button>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </ng-template>\\r\\n\\r\\n                       <md-card>\\r\\n                        <md-card-content>\\r\\n                          <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-xs-12\\\">\\r\\n                              <table class=\\\"report-table\\\" *ngIf=\\\"dataSource.length <= 0\\\">\\r\\n                                <tbody>\\r\\n                                  <tr>\\r\\n                                    <td>No data found</td>\\r\\n                                  </tr>\\r\\n                                </tbody>\\r\\n                              </table>\\r\\n                              <table class=\\\"report-table\\\" *ngIf=\\\"dataSource.length > 0\\\">\\r\\n                                <thead>\\r\\n                                  <tr>\\r\\n                                    <th\\r\\n                                      *ngFor=\\\"let columnName of displayedColumns\\\"\\r\\n                                      style=\\\"text-transform: capitalize;\\\"\\r\\n                                    >\\r\\n                                      {{ columnName }}\\r\\n                                    </th>\\r\\n                                  </tr>\\r\\n                                </thead>\\r\\n                      \\r\\n                                <tbody>\\r\\n                                  <tr *ngFor=\\\"let row of dataSource\\\">\\r\\n                                    <td *ngFor=\\\"let columnName of displayedColumns\\\">\\r\\n                                       \\r\\n                                      {{ row[columnName] }}\\r\\n                                     \\r\\n                                    </td>\\r\\n                                  </tr>\\r\\n                                </tbody>\\r\\n                              </table>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </md-card-content>\\r\\n                      </md-card>\\r\\n               <ng-template #addstaff>\\r\\n                          <div fxLayout=\\\"row\\\">\\r\\n                              <div class=\\\"col-xs-12 end-xs\\\">\\r\\n                                  <md-icon color=\\\"warn\\\" class=\\\"icon\\\" (click)=\\\"myFunction()\\\"> highlight_off </md-icon>\\r\\n                              </div>\\r\\n                            </div>\\r\\n                        <h2>New Staff Form</h2>\\r\\n                        <div class=\\\"col-md-12\\\">\\r\\n                          <form #formsearch=\\\"ngForm\\\">\\r\\n                          <md-input-container>\\r\\n                            <input\\r\\n                              #firstName\\r\\n                              mdInput\\r\\n                              placeholder=\\\"First Name\\\"\\r\\n                              [(ngModel)]=\\\"staff.firstName\\\"\\r\\n                              [formControl]=\\\"userSettingForm.controls.staff_firstName\\\"\\r\\n                            />\\r\\n                            <md-hint>\\r\\n                              <form-messages [control]=\\\"userSettingForm.controls.staff_firstName\\\"> </form-messages>\\r\\n                            </md-hint>\\r\\n                          </md-input-container>\\r\\n                          </form>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-12\\\">\\r\\n                            <form #formsearch=\\\"ngForm\\\">\\r\\n                          <md-input-container>\\r\\n                            <input\\r\\n                              #lastName\\r\\n                              mdInput\\r\\n                              placeholder=\\\"Last Name\\\"\\r\\n                              [(ngModel)]=\\\"staff.lastName\\\"\\r\\n                              [formControl]=\\\"userSettingForm.controls.staff_lastName\\\"\\r\\n   \\r\\n                            />\\r\\n                            <md-hint>\\r\\n                              <form-messages [control]=\\\"userSettingForm.controls.staff_lastName\\\"> </form-messages>\\r\\n                            </md-hint>\\r\\n                          </md-input-container>\\r\\n                          </form>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-12\\\">\\r\\n                            <form #formsearch=\\\"ngForm\\\">\\r\\n                          <md-input-container>\\r\\n                            <input\\r\\n                              #mobile\\r\\n                              mdInput\\r\\n                              placeholder=\\\"Mobile #\\\"\\r\\n                              [(ngModel)]=\\\"staff.mobile\\\"\\r\\n                              [formControl]=\\\"userSettingForm.controls.staff_mobile\\\"                         \\r\\n                            />\\r\\n                            <md-hint>\\r\\n                              <form-messages [control]=\\\"userSettingForm.controls.staff_mobile\\\"> </form-messages>\\r\\n                            </md-hint>\\r\\n                          </md-input-container>\\r\\n                          </form>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-12\\\">\\r\\n                            <form #formsearch=\\\"ngForm\\\">\\r\\n                          <md-input-container>\\r\\n                            <input\\r\\n                              #password\\r\\n                              mdInput\\r\\n                              placeholder=\\\"Password\\\"\\r\\n                              [(ngModel)]=\\\"staff.password\\\"\\r\\n                              [formControl]=\\\"userSettingForm.controls.staff_password\\\"                         \\r\\n\\r\\n                            />\\r\\n                            <md-hint>\\r\\n                              <form-messages [control]=\\\"userSettingForm.controls.staff_password\\\"> </form-messages>\\r\\n                            </md-hint>\\r\\n                          </md-input-container>\\r\\n                          </form>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-12\\\">\\r\\n                      <md-select\\r\\n                      placeholder=\\\"Access\\\"\\r\\n                      multiple\\r\\n                    >\\r\\n                      <md-option *ngFor=\\\"let typeName of documentTypes\\\" [value]=\\\"typeName\\\">\\r\\n                        {{ typeName }}\\r\\n                      </md-option>\\r\\n                    </md-select>\\r\\n                        </div>\\r\\n                        <div fxLayout=\\\"row\\\" style=\\\"padding: 1rem;\\\">\\r\\n                          <div class=\\\"col-xs-12 end-xs\\\">\\r\\n                            <button md-raised-button color=\\\"accent\\\" (click)=\\\"save()\\\">\\r\\n                              Save\\r\\n                            </button>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                </ng-template>\\r\\n  \\r\\n                </md-tab> -->\\r\\n              </md-tab-group>             \\r\\n              </form>    \\r\\n             \\r\\n              <!--============= Md Card End ===========-->\\r\\n            </div>              \\r\\n        </div>\\r\\n        </md-card>\\r\\n      </div>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/settings/settings.component.html\n// module id = ../../../../../src/app/components/admin/settings/settings.component.html\n// module chunks = 1","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".side {\\n  height: 80px;\\n  width: 800px; }\\n\\nh2 {\\n  color: orange;\\n  text-align: center;\\n  padding-bottom: 30px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/settings/settings.component.scss\n// module id = ../../../../../src/app/components/admin/settings/settings.component.scss\n// module chunks = 1","import { UserSettingFormGroup } from \"./../../../forms/usersetting.form\";\r\nimport { AppService } from \"app/shared/service/app.service\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { RestService } from \"app/common/rest.service\";\r\nimport { UserSettings } from \"app/entities/usersettings.entity\";\r\nimport { Company } from \"app/entities/company.entity\";\r\nimport { Address } from \"app/entities/address.entity\";\r\nimport { UserDetails } from \"app/entities/userdetails.entity\";\r\nimport { BankDetails } from \"app/entities/bank.entity\";\r\nimport { PrintLayout } from \"app/entities/printlayout.entity\";\r\nimport { Storage } from \"../../../shared/utils/storage\";\r\nimport { MdDialog, MdTableModule } from \"@angular/material\";\r\nimport { Staff } from \"app/entities/staff.entity\";\r\nimport { Location } from \"@angular/common\";\r\nimport { Router } from \"@angular/router\";\r\n@Component({\r\n  selector: \"app-settings\",\r\n  templateUrl: \"./settings.component.html\",\r\n  styleUrls: [\"./settings.component.scss\"]\r\n})\r\nexport class SettingsComponent implements OnInit {\r\n  userSettingForm: any = UserSettingFormGroup.init();\r\n  userSettings: UserSettings = new UserSettings();\r\n  settingControlStatus: any = {};\r\n  layoutSelected: string = \"\";\r\n  stateList: any[] = [];\r\n  filteredLayout : any[] = [];\r\n  pageLayoutList: any= [{'id':1, 'layout':'A4 SIZE'},\r\n                        {'id':2, 'layout':'80MM SIZE'},\r\n                        {'id':3, 'layout':'A6 SIZE'},\r\n                        {'id':4,'layout':'60MM SIZE'},\r\n                        {'id':5, 'layout':'HALF A4 SIZE'}];\r\n  selectedIndex: number = 0;\r\n\r\n  staff: Staff = new Staff();\r\n  isEditable: string = \"true\";\r\n  isEdit: boolean = false;\r\n  displayedColumns: any[] = [\r\n    \"firstName\",\r\n    \"lastName\",\r\n    \"mobileNo\",\r\n    \"status\",\r\n    \"loggedIn\"\r\n  ];\r\n  documentTypes: any[] = [\r\n    \"Customers\",\r\n    \"Stock Item\",\r\n    \"Purchase Orders\",\r\n    \"Purchase Invoices\",\r\n    \"Invoices\",\r\n    \"Credit or Debit Note\",\r\n    \"Expanses\",\r\n    \"Payment Received\",\r\n    \"Suppliers\",\r\n    \"Barcode Generation\",\r\n    \"SUPER USER\"\r\n  ];\r\n  dataSource: any[] = [];\r\n  data: any;\r\n  constructor(\r\n    private appService: AppService,\r\n    private restService: RestService,\r\n    private dialog: MdDialog,\r\n    private dialogRef: MdDialog,\r\n    private location: Location\r\n  ) {}\r\n  ngOnInit() {\r\n    UserSettingFormGroup.edit(this.userSettingForm);\r\n    this.retrieveStates();\r\n    //this.retrievePageLayout();\r\n    this.retriveUserSettings();\r\n    Storage.setLocalItem(\"pageLayoutId\", this.userSettings.printLayoutId.id);\r\n    this.staff = new Staff();\r\n  }\r\n  // ngOnInit() {\r\n  //   this.selectedIndex = 0;\r\n  //   UserSettingFormGroup.edit(this.userSettingForm);\r\n  //   this.retrieveStates();\r\n  //   this.retrievePageLayout();\r\n    \r\n  //   let id = this.appService.getParam(\"id\");\r\n  //   this.isEditable = this.appService.getParam(\"isEditable\");\r\n  //   Storage.setLocalItem(\"pageLayoutId\", this.userSettings.printLayoutId.id);\r\n  //   this.retrieveStaffList();\r\n  //   this.staff = new Staff();\r\n  //   if (id !== undefined) {\r\n  //     this.retriveUserSettings(id);\r\n  //   } else {\r\n  //     this.isEdit = false;\r\n  //     this.isEditable = \"true\";\r\n  //   }\r\n  // }\r\n\r\n  retrieveStaffList() {\r\n    this.restService.fetchStaff().subscribe(results => {\r\n      console.log(results);\r\n      this.dataSource = results;\r\n      // console.log(this.dataSource);\r\n    });\r\n    // console.log(\"sstaff list is s\", this.dataSource);\r\n  }\r\n  // edit(template, item: any): void {\r\n  //   if (!item) {\r\n  //     this.staff = new Staff();\r\n  //     this.staff = item;\r\n  //   } else {\r\n  //   this.staff = item;\r\n  //   }\r\n  //   this.dialog.open(template);\r\n  // }\r\n  add(template) {\r\n    setTimeout(() => {\r\n      this.dialog.open(template, {\r\n        width: \"600px\"\r\n      });\r\n    }, 10);\r\n  }\r\n  myFunction() {\r\n    this.dialogRef.closeAll();\r\n  }\r\n  save() {\r\n    this.restService.saveStaff(this.staff).subscribe(results => {\r\n      this.staff = results;\r\n      this.appService.showMessage(\"Saved successfully.\");\r\n      this.dialogRef.closeAll();\r\n      this.ngOnInit();\r\n      this.userSettingForm.reset();\r\n    });\r\n    // this.dialogRef.closeAll();\r\n  }\r\n  retriveUserSettings() {\r\n    this.restService.retriveUserSettings().subscribe(result => {\r\n      if (result) {\r\n        console.log(result);\r\n        this.userSettings = result;\r\n        \r\n        // this.setDefaults();\r\n        this.isEdit = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  retrieveStates() {\r\n    this.restService\r\n      .dataloadFromFile(\"./assets/json/common.json\")\r\n      .subscribe(results => {\r\n        this.stateList = results[\"stateList\"];\r\n      });\r\n  }\r\n  retrievePageLayout() {\r\n    this.restService.dataload(\"pagelayout\").subscribe(results => {\r\n      console.log(results);\r\n      this.pageLayoutList = results;\r\n    });\r\n  }\r\n\r\n  filterStates(val: string) {\r\n    this.stateList = Storage.filterStates(this.stateList, val);\r\n  }\r\n  \r\n  filterLayouts(val: string) {\r\n    console.log(val);\r\n    this.filteredLayout =\r\n      val && val != \"\"\r\n        ? this.pageLayoutList.filter(\r\n            s => s.layout.toLowerCase().indexOf(val.toLowerCase()) >= 0\r\n          )\r\n        : this.pageLayoutList;\r\n  }\r\n  setDefaults() {\r\n    if (!this.userSettings) this.userSettings = new UserSettings();\r\n    if (!this.userSettings.company) {\r\n      this.userSettings.company = new Company();\r\n      this.userSettings.company.id = this.appService.getBranch().id;\r\n      this.userSettings.company.name = this.appService.getBranch().name;\r\n      this.userSettings.companyId = this.appService.getBranch().id;\r\n    }\r\n    if (!this.userSettings.company.address)\r\n      this.userSettings.company.address = new Address();\r\n    if (!this.userSettings.userProfile)\r\n      this.userSettings.userProfile = new UserDetails();\r\n    if (!this.userSettings.bankDetails)\r\n      this.userSettings.bankDetails = new BankDetails();\r\n    if (!this.userSettings.printLayoutId) {\r\n      this.userSettings.printLayoutId = new PrintLayout();\r\n      // TODO: In future remove this and make layout as dropdown\r\n      // this.userSettings.printLayoutId.layoutSize = \"A4\";\r\n    }\r\n  }\r\n\r\n  editClick(formControl: HTMLInputElement) {\r\n    formControl.readOnly = false;\r\n  }\r\n  setPrintLayout(printlayout: any) {\r\n    console.log(printlayout);\r\n    if (this.userSettings.printLayoutId == null) {\r\n      this.userSettings.printLayoutId = new PrintLayout();\r\n    }\r\n    this.userSettings.printLayoutId.layoutSize = printlayout.layout;\r\n    this.userSettings.printLayoutId = printlayout.id;\r\n  }\r\n  saveInfo() {\r\n    console.log(\"Request:\" + JSON.stringify(this.userSettings));\r\n    this.restService.settingsSave(this.userSettings).subscribe(result => {\r\n      if (result) {\r\n        this.userSettings = result;\r\n        this.selectedIndex = 0;\r\n        this.appService.showMessage(\"Saved successfully.\");\r\n      }\r\n    });\r\n  }\r\n\r\n  list(template) {\r\n    setTimeout(() => {\r\n      this.dialog.open(template);\r\n    }, 30);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/settings/settings.component.ts","module.exports = \"<md-card>\\r\\n  <md-card-content>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-12\\\">\\r\\n        <table class=\\\"report-table\\\" *ngIf=\\\"dataSource.length <= 0\\\">\\r\\n          <tbody>\\r\\n            <tr>\\r\\n              <td>No data found</td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n        <table class=\\\"report-table\\\" *ngIf=\\\"dataSource.length > 0\\\">\\r\\n          <thead>\\r\\n            <tr>\\r\\n              <th\\r\\n                *ngFor=\\\"let columnName of displayedColumns\\\"\\r\\n                style=\\\"text-transform: capitalize;\\\"\\r\\n              >\\r\\n                {{ columnName }}\\r\\n              </th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n\\r\\n          <tbody>\\r\\n            <tr *ngFor=\\\"let row of dataSource\\\">\\r\\n              <td *ngFor=\\\"let columnName of displayedColumns\\\">\\r\\n                {{ row[columnName] }}\\r\\n              </td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n      </div>\\r\\n    </div>\\r\\n  </md-card-content>\\r\\n</md-card>\\r\\n\\r\\n<ng-template #addstaff>\\r\\n  <h2>New Staff Form</h2>\\r\\n  <div class=\\\"col-md-12 padding-side side\\\">\\r\\n    <md-input-container>\\r\\n      <input\\r\\n        #firstName\\r\\n        mdInput\\r\\n        placeholder=\\\"First Name\\\"\\r\\n        [(ngModel)]=\\\"staff.firstName\\\"\\r\\n        name=\\\"staff_firstName\\\"\\r\\n        #staff_firstName=\\\"ngModel\\\"\\r\\n      />\\r\\n      <md-hint>\\r\\n        <form-messages [control]=\\\"staff_firstName.control\\\"> </form-messages>\\r\\n      </md-hint>\\r\\n    </md-input-container>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-12 padding-side side\\\">\\r\\n    <md-input-container>\\r\\n      <input\\r\\n        #lastName\\r\\n        mdInput\\r\\n        placeholder=\\\"Last Name\\\"\\r\\n        [(ngModel)]=\\\"staff.lastName\\\"\\r\\n        name=\\\"staff_lastName\\\"\\r\\n        #staff_lastName=\\\"ngModel\\\"\\r\\n      />\\r\\n      <md-hint>\\r\\n        <form-messages [control]=\\\"staff_lastName.control\\\"> </form-messages>\\r\\n      </md-hint>\\r\\n    </md-input-container>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-12 padding-side side\\\">\\r\\n    <md-input-container>\\r\\n      <input\\r\\n        #mobile\\r\\n        mdInput\\r\\n        placeholder=\\\"Mobile #\\\"\\r\\n        [(ngModel)]=\\\"staff.mobile\\\"\\r\\n        name=\\\"staff_mobile\\\"\\r\\n        #staff_mobile=\\\"ngModel\\\"\\r\\n      />\\r\\n      <md-hint>\\r\\n        <form-messages [control]=\\\"staff_mobile.control\\\"> </form-messages>\\r\\n      </md-hint>\\r\\n    </md-input-container>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-12 padding-side side\\\">\\r\\n    <md-input-container>\\r\\n      <input\\r\\n        #password\\r\\n        mdInput\\r\\n        placeholder=\\\"Password\\\"\\r\\n        [(ngModel)]=\\\"staff.password\\\"\\r\\n      />\\r\\n    </md-input-container>\\r\\n  </div>\\r\\n\\r\\n  <div fxLayout=\\\"row\\\" style=\\\"padding: 1rem;\\\">\\r\\n    <div class=\\\"col-xs-12 end-xs\\\">\\r\\n      <button md-raised-button color=\\\"accent\\\" (click)=\\\"saveInfo()\\\">\\r\\n        Save\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template [ngIf]=\\\"addstaff\\\">\\r\\n  <div fxLayout=\\\"row\\\" style=\\\"padding: 1rem;\\\">\\r\\n    <div class=\\\"col-xs-12 end-xs\\\">\\r\\n      <button md-raised-button color=\\\"accent\\\" (click)=\\\"add(addstaff)\\\">\\r\\n        Add\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/staff/staff.component.html\n// module id = ../../../../../src/app/components/admin/staff/staff.component.html\n// module chunks = 1","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".side {\\n  height: 80px;\\n  width: 800px; }\\n\\nh2 {\\n  color: orange;\\n  text-align: center;\\n  padding-bottom: 30px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/staff/staff.component.scss\n// module id = ../../../../../src/app/components/admin/staff/staff.component.scss\n// module chunks = 1","import { Component, OnInit } from \"@angular/core\";\r\nimport { Staff } from \"app/entities/staff.entity\";\r\nimport { RestService } from \"app/common/rest.service\";\r\nimport { MdDialog, MdMenu, MdDialogRef } from \"@angular/material\";\r\nimport { AppService } from \"app/shared/service/app.service\";\r\nimport { UserSettingFormGroup } from \"app/forms/usersetting.form\";\r\n\r\n@Component({\r\n  selector: \"app-staff\",\r\n  templateUrl: \"./staff.component.html\",\r\n  styleUrls: [\"./staff.component.scss\"]\r\n})\r\nexport class StaffComponent implements OnInit {\r\n  staff: Staff = new Staff();\r\n  displayedColumns: any[] = [\r\n    \"firstName\",\r\n    \"lastName\",\r\n    \"mobileNo\",\r\n    \"status\",\r\n    \"loggedIn\"\r\n  ];\r\n  dataSource: any[] = [];\r\n  data: any;\r\n  constructor(\r\n    private dialogRef: MdDialog,\r\n    private restService: RestService,\r\n    private appService: AppService,\r\n    private dialog: MdDialog\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.retrieveStaffList();\r\n    //this.dataSource = this.staffList;\r\n    // console.log(\"data source\" + this.dataSource);\r\n  }\r\n  retrieveStaffList() {\r\n    this.restService.fetchStaff().subscribe(results => {\r\n      console.log(results);\r\n      this.dataSource = results;\r\n      // console.log(this.dataSource);\r\n    });\r\n    // console.log(\"sstaff list is s\", this.dataSource);\r\n  }\r\n  add(template) {\r\n    setTimeout(() => {\r\n      this.dialog.open(template);\r\n    }, 10);\r\n  }\r\n\r\n  saveInfo() {\r\n    this.restService.saveStaff(this.staff).subscribe(results => {\r\n      console.log(results);\r\n      this.appService.showMessage(\"Saved successfully.\");\r\n      this.dialogRef.closeAll();\r\n    });\r\n    //this.userSettingForm.form.reset();\r\n    // this.dialogRef.closeAll();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/staff/staff.component.ts","module.exports = \"<div\\r\\n  id=\\\"page-header\\\"\\r\\n  fxLayoutAlign=\\\"center center\\\"\\r\\n  *ngIf=\\\"isEditable == 'true'\\\"\\r\\n>\\r\\n  <h2>{{ isEdit ? \\\"Edit Stock Item\\\" : \\\"New Stock Item\\\" }}</h2>\\r\\n</div>\\r\\n<div\\r\\n  id=\\\"page-header\\\"\\r\\n  fxLayoutAlign=\\\"center center\\\"\\r\\n  *ngIf=\\\"isEditable == 'false'\\\"\\r\\n>\\r\\n  <h2>View Stock Item</h2>\\r\\n</div>\\r\\n<!-- <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" >\\r\\n  <h2>\\r\\n    Stock Item Entry\\r\\n  </h2>\\r\\n</div> -->\\r\\n\\r\\n<div id=\\\"page-content\\\">\\r\\n  <div class=\\\"row center-xs\\\" style=\\\"margin: 20px 0;\\\">\\r\\n    <div style=\\\"width:800px; background-color: white\\\">\\r\\n      <td-steps mode=\\\"horizontal\\\">\\r\\n\\r\\n        <td-step   #step1\\r\\n        label=\\\"Stock Item\\\"\\r\\n        [active]=\\\"true\\\"\\r\\n        (activated)=\\\"changeEvent(step1, step2, step3)\\\" >\\r\\n          <form [formGroup]=\\\"detailsForm\\\" novalidate autocomplete=\\\"off\\\">\\r\\n            <md-card>\\r\\n              <div class=\\\"row\\\">\\r\\n                <md-input-container class=\\\"col-xs-12 padding-side\\\">\\r\\n                  <input\\r\\n                    required\\r\\n                    mdInput\\r\\n                    placeholder=\\\"Item Name\\\"\\r\\n                    [formControl]=\\\"detailsForm.controls.si_itemname\\\"\\r\\n                    [(ngModel)]=\\\"stockItem.productName\\\"\\r\\n                    (onchange)=\\\"loadProductItems()\\\"\\r\\n                    [readOnly]=\\\"isEditable == 'false'\\\"\\r\\n                    style=\\\"text-transform: capitalize\\\"\\r\\n                  />\\r\\n                  <md-hint>\\r\\n                    <form-messages [control]=\\\"detailsForm.controls.si_itemname\\\">\\r\\n                    </form-messages>\\r\\n                  </md-hint>\\r\\n                </md-input-container>\\r\\n                <div class=\\\"col-xs-12 padding-side\\\">\\r\\n                  <md-input-container>\\r\\n                    <input\\r\\n                      required\\r\\n                      mdInput\\r\\n                      placeholder=\\\"UQC\\\"\\r\\n                      [formControl]=\\\"detailsForm.controls.si_uqc\\\"\\r\\n                      (focus)=\\\"filterUQCList($event.target.values)\\\"\\r\\n                      (keyup)=\\\"filterUQCList($event.target.value)\\\"\\r\\n                      [mdAutocomplete]=\\\"autoUQC\\\"\\r\\n                      [(ngModel)]=\\\"stockItem.uqc\\\"\\r\\n                      [readOnly]=\\\"isEditable == 'false'\\\"\\r\\n                    />\\r\\n                    <md-hint>\\r\\n                      <form-messages [control]=\\\"detailsForm.controls.si_uqc\\\">\\r\\n                      </form-messages>\\r\\n                    </md-hint>\\r\\n                    <md-autocomplete #autoUQC=\\\"mdAutocomplete\\\">\\r\\n                      <md-option\\r\\n                        *ngFor=\\\"let item of filteredUqcList\\\"\\r\\n                        [value]=\\\"item.code\\\"\\r\\n                      >\\r\\n                        <b> {{ item.description }} </b> - {{ item.code }}\\r\\n                      </md-option>\\r\\n                    </md-autocomplete>\\r\\n                  </md-input-container>\\r\\n                </div>\\r\\n\\r\\n                <md-input-container class=\\\"col-xs-12 padding-side\\\">\\r\\n                  <input\\r\\n                    mdInput\\r\\n                    placeholder=\\\"SKU\\\"\\r\\n                    \\r\\n                    [formControl]=\\\"detailsForm.controls.si_sku\\\"\\r\\n                    [(ngModel)]=\\\"stockItem.sku\\\"\\r\\n                    [readOnly]=\\\"isEditable == 'false'\\\"\\r\\n                  />\\r\\n                  <md-hint>\\r\\n                    <form-messages [control]=\\\"detailsForm.controls.si_sku\\\">\\r\\n                    </form-messages>\\r\\n                  </md-hint>\\r\\n                </md-input-container>\\r\\n\\r\\n                <md-input-container class=\\\"col-xs-12 padding-side\\\">\\r\\n                  <input\\r\\n                    mdInput\\r\\n                    placeholder=\\\"HSN Code\\\"\\r\\n                    required\\r\\n                    [formControl]=\\\"detailsForm.controls.hsn\\\"\\r\\n                    [(ngModel)]=\\\"stockItem.hsnCodeNames\\\"\\r\\n                    [readOnly]=\\\"isEditable == 'false'\\\"\\r\\n                  />\\r\\n                  <md-hint>\\r\\n                    <form-messages [control]=\\\"detailsForm.controls.hsn\\\">\\r\\n                    </form-messages>\\r\\n                  </md-hint>\\r\\n                </md-input-container>\\r\\n\\r\\n                <md-input-container class=\\\"col-xs-12 padding-side\\\">\\r\\n                  <input\\r\\n                    mdInput\\r\\n                    placeholder=\\\"Barcode #\\\"\\r\\n                    [formControl]=\\\"detailsForm.controls.si_barcode\\\"\\r\\n                    [readOnly]=\\\"isEditable == 'false'\\\"\\r\\n                  />\\r\\n                  <md-hint>\\r\\n                    <form-messages [control]=\\\"detailsForm.controls.si_barcode\\\">\\r\\n                    </form-messages>\\r\\n                  </md-hint>\\r\\n                </md-input-container>\\r\\n              </div>\\r\\n              <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n                <!-- <button\\r\\n                  md-raised-button\\r\\n                  color=\\\"accent\\\"\\r\\n                  class=\\\"padding-side\\\"\\r\\n                  (click)=\\\"backEvent()\\\"\\r\\n                > \\r\\n                  Back\\r\\n                </button>-->\\r\\n                <button\\r\\n                  md-raised-button\\r\\n                  color=\\\"accent\\\"\\r\\n                  class=\\\"padding-side\\\"\\r\\n                  [disabled]=\\\"!detailsForm.valid\\\"\\r\\n                  (click)=\\\"detailsEvent()\\\"\\r\\n                >\\r\\n                  Next\\r\\n                </button>\\r\\n              </div>\\r\\n            </md-card>\\r\\n          </form>\\r\\n        </td-step>\\r\\n        <td-step\\r\\n        #step2 label=\\\"Details\\\"\\r\\n        >\\r\\n          <form [formGroup]=\\\"productForm\\\" novalidate autocomplete=\\\"off\\\">\\r\\n            <md-card>\\r\\n              <div class=\\\"row \\\">\\r\\n                <div class=\\\"col-xs-12 padding-side\\\">\\r\\n                  <md-input-container>\\r\\n                    <input\\r\\n                      mdInput\\r\\n                      placeholder=\\\"Product Category\\\"\\r\\n                      [formControl]=\\\"productForm.controls.si_category\\\"\\r\\n                      (focus)=\\\"filterCategoryList($event.target.values)\\\"\\r\\n                      [(ngModel)]=\\\"stockItem.categoryName\\\"\\r\\n                      (keyup)=\\\"filterCategoryList($event.target.value)\\\"\\r\\n                      [mdAutocomplete]=\\\"autoCategory\\\"\\r\\n                      (change)=\\\"selectCategory($event.target.value)\\\"\\r\\n                      [readOnly]=\\\"isEditable == 'false'\\\"\\r\\n                    />\\r\\n                    <md-hint>\\r\\n                      <form-messages\\r\\n                        [control]=\\\"productForm.controls.si_category\\\"\\r\\n                      >\\r\\n                      </form-messages>\\r\\n                    </md-hint>\\r\\n                    <md-autocomplete #autoCategory=\\\"mdAutocomplete\\\">\\r\\n                      <md-option\\r\\n                        *ngFor=\\\"let item of filteredCategoryList\\\"\\r\\n                        (click)=\\\"selectCategory(item)\\\"\\r\\n                        [value]=\\\"item.name\\\"\\r\\n                      >\\r\\n                        {{ item.name }}\\r\\n                      </md-option>\\r\\n                    </md-autocomplete>\\r\\n                  </md-input-container>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-xs-12 padding-side\\\">\\r\\n                  <md-input-container>\\r\\n                    <input\\r\\n                      \\r\\n                      mdInput\\r\\n                      placeholder=\\\"Company\\\"\\r\\n                      [formControl]=\\\"productForm.controls.si_company\\\"\\r\\n                      (focus)=\\\"filterCompanyList($event.target.values)\\\"\\r\\n                      (keyup)=\\\"filterCompanyList($event.target.value)\\\"\\r\\n                      [mdAutocomplete]=\\\"autoCompany\\\"\\r\\n                      [(ngModel)]=\\\"stockItem.prodCompanyName\\\"\\r\\n                      (change)=\\\"selectCompany($event.target.value)\\\"\\r\\n                      [readOnly]=\\\"isEditable == 'false'\\\"\\r\\n                      style=\\\"text-transform: capitalize\\\"\\r\\n                    />\\r\\n                    <md-hint>\\r\\n                      <form-messages\\r\\n                        [control]=\\\"productForm.controls.si_company\\\"\\r\\n                      >\\r\\n                      </form-messages>\\r\\n                    </md-hint>\\r\\n                    <md-autocomplete #autoCompany=\\\"mdAutocomplete\\\">\\r\\n                      <md-option\\r\\n                        *ngFor=\\\"let item of filteredCompanyList\\\"\\r\\n                        (click)=\\\"selectCompany(item)\\\"\\r\\n                        [value]=\\\"item.name\\\"\\r\\n                      >\\r\\n                        {{ item.name }}\\r\\n                      </md-option>\\r\\n                    </md-autocomplete>\\r\\n                  </md-input-container>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-xs-12 padding-side\\\">\\r\\n                  <md-input-container>\\r\\n                    <input\\r\\n                      \\r\\n                      mdInput\\r\\n                      placeholder=\\\"Brand\\\"\\r\\n                      [formControl]=\\\"productForm.controls.si_brand\\\"\\r\\n                      (focus)=\\\"filterBrandList($event.target.values)\\\"\\r\\n                      (keyup)=\\\"filterBrandList($event.target.value)\\\"\\r\\n                      [mdAutocomplete]=\\\"autoBrand\\\"\\r\\n                      [(ngModel)]=\\\"stockItem.brandName\\\"\\r\\n                      (change)=\\\"selectBrand($event.target.value)\\\"\\r\\n                      [readOnly]=\\\"isEditable == 'false'\\\"\\r\\n                      style=\\\"text-transform: capitalize\\\"\\r\\n                    />\\r\\n                    <md-hint>\\r\\n                      <form-messages [control]=\\\"productForm.controls.si_brand\\\">\\r\\n                      </form-messages>\\r\\n                    </md-hint>\\r\\n                    <md-autocomplete #autoBrand=\\\"mdAutocomplete\\\">\\r\\n                      <md-option\\r\\n                        *ngFor=\\\"let item of filteredBrandList\\\"\\r\\n                        (click)=\\\"selectBrand(item)\\\"\\r\\n                        [value]=\\\"item.name\\\"\\r\\n                      >\\r\\n                        {{ item.name }}\\r\\n                      </md-option>\\r\\n                    </md-autocomplete>\\r\\n                  </md-input-container>\\r\\n                </div>\\r\\n                <div class=\\\"col-xs-12 padding-side\\\">\\r\\n                  <!-- <md-input-container>\\r\\n                    <input mdInput placeholder=\\\"Batch No\\\" \\r\\n                    [readOnly]=\\\"isEditable == 'false'\\\"\\r\\n                     >\\r\\n                  </md-input-container> -->\\r\\n                  <md-input-container>\\r\\n                    <input\\r\\n                      mdInput\\r\\n                      placeholder=\\\"Batch No\\\"\\r\\n                      \\r\\n                      [formControl]=\\\"productForm.controls.batch_no\\\"\\r\\n                      [(ngModel)]=\\\"stockItem.stockItemPrice.batchNumber\\\"\\r\\n                      [readOnly]=\\\"isEditable == 'false'\\\"\\r\\n                    />\\r\\n                    <md-hint>\\r\\n                      <form-messages [control]=\\\"productForm.controls.batch_no\\\">\\r\\n                      </form-messages>\\r\\n                    </md-hint>\\r\\n                  </md-input-container>\\r\\n                </div>\\r\\n                <div class=\\\"col-xs-12 padding-side\\\">\\r\\n                  <md-input-container>\\r\\n                    <input\\r\\n                      mdInput\\r\\n                      placeholder=\\\"Manufacturer\\\"\\r\\n                      [formControl]=\\\"productForm.controls.si_manufacturer\\\"\\r\\n                      (focus)=\\\"filterManufacturerList($event.target.values)\\\"\\r\\n                      (keyup)=\\\"filterManufacturerList($event.target.value)\\\"\\r\\n                      [mdAutocomplete]=\\\"autoManufacturer\\\"\\r\\n                      [(ngModel)]=\\\"stockItem.manfName\\\"\\r\\n                      (change)=\\\"selectManufacturer($event.target.value)\\\"\\r\\n                      [readOnly]=\\\"isEditable == 'false'\\\"\\r\\n                    />\\r\\n                    <md-hint>\\r\\n                      <form-messages\\r\\n                        [control]=\\\"productForm.controls.si_manufacturer\\\"\\r\\n                      >\\r\\n                      </form-messages>\\r\\n                    </md-hint>\\r\\n                    <md-autocomplete #autoManufacturer=\\\"mdAutocomplete\\\">\\r\\n                      <md-option\\r\\n                        *ngFor=\\\"let item of filteredManufacturerList\\\"\\r\\n                        (click)=\\\"selectManufacturer(item)\\\"\\r\\n                        [value]=\\\"item.name\\\"\\r\\n                      >\\r\\n                        {{ item.name }}\\r\\n                      </md-option>\\r\\n                    </md-autocomplete>\\r\\n                  </md-input-container>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n              <!-- <div class=\\\"row end-xs\\\" > -->\\r\\n                <button\\r\\n                md-raised-button\\r\\n                color=\\\"accent\\\"\\r\\n                class=\\\"padding-side\\\"\\r\\n                (click)=\\\"backEvent()\\\"\\r\\n              > \\r\\n                Back\\r\\n              </button> \\r\\n                <button\\r\\n                  md-raised-button\\r\\n                  color=\\\"accent\\\"\\r\\n                  [disabled]=\\\"!productForm.valid\\\"\\r\\n                  (click)=\\\"pricingEvent()\\\"\\r\\n                >\\r\\n                  Next\\r\\n                </button>\\r\\n              </div>\\r\\n            </md-card>\\r\\n          </form>\\r\\n        </td-step>\\r\\n       \\r\\n        <td-step #step3 label=\\\"Pricing\\\">\\r\\n          <form [formGroup]=\\\"pricingForm\\\" novalidate autocomplete=\\\"off\\\">\\r\\n            <md-card>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-xs-12 padding-side\\\">\\r\\n                  <md-input-container>\\r\\n                    <input\\r\\n                      mdInput\\r\\n                      placeholder=\\\"Supplier\\\"\\r\\n                      (focus)=\\\"filterSupplier(null)\\\"\\r\\n                      (keyup)=\\\"filterSupplier($event.target.value)\\\"\\r\\n                      [mdAutocomplete]=\\\"autoSupplier\\\"\\r\\n                      [(ngModel)]=\\\"supplierSelected\\\"\\r\\n                      [formControl]=\\\"pricingForm.controls.supplier\\\"\\r\\n                      [readOnly]=\\\"isEditable == 'false'\\\"\\r\\n                      style=\\\"text-transform: capitalize\\\"\\r\\n                      (change)=\\\"selectedSupplier($event.target.value)\\\"\\r\\n                    />\\r\\n                    <md-hint>\\r\\n                      <form-messages [control]=\\\"pricingForm.controls.supplier\\\">\\r\\n                      </form-messages>\\r\\n                    </md-hint>\\r\\n                    <md-autocomplete #autoSupplier=\\\"mdAutocomplete\\\">\\r\\n                      <md-option\\r\\n                        *ngFor=\\\"let option of filteredSuppliers\\\"\\r\\n                        value=\\\"{{ option.companyName }} {{\\r\\n                          option.mobileNumber\\r\\n                        }}\\\"\\r\\n                        (click)=\\\"selectedSupplier(option)\\\"\\r\\n                      >\\r\\n                        {{ option.companyName }} - {{ option.mobileNumber }}\\r\\n                      </md-option>\\r\\n                    </md-autocomplete>\\r\\n                  </md-input-container>\\r\\n                </div>\\r\\n                <md-input-container class=\\\"col-xs-12 padding-side\\\">\\r\\n                  <input\\r\\n                    mdInput\\r\\n                   required \\r\\n                    placeholder=\\\"Initial Quantity\\\"\\r\\n                    [formControl]=\\\"pricingForm.controls.si_quantity\\\"\\r\\n                    [(ngModel)]=\\\"stockItem.stockItemPrice.initialQty\\\"\\r\\n                    [readOnly]=\\\"isEditable == 'false'\\\"\\r\\n                  />\\r\\n                  <md-hint>\\r\\n                    <form-messages [control]=\\\"pricingForm.controls.si_quantity\\\">\\r\\n                    </form-messages>\\r\\n                  </md-hint>\\r\\n                </md-input-container>\\r\\n\\r\\n                <ng-template [ngIf]=\\\"isView\\\">\\r\\n                  <md-input-container class=\\\"col-xs-12 padding-side\\\">\\r\\n                    <input\\r\\n                      mdInput\\r\\n                      placeholder=\\\"Stock At Hand\\\"\\r\\n                      [(ngModel)]=\\\"stockItem.stockItemPrice.stockathand\\\"\\r\\n                      [ngModelOptions]=\\\"{ standalone: true }\\\"\\r\\n                      [readOnly]=\\\"isEditable == 'false'\\\"\\r\\n                    />\\r\\n                  </md-input-container>\\r\\n                </ng-template>\\r\\n              </div>\\r\\n\\r\\n              <ng-template [ngIf]=\\\"!isView\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                  <md-select\\r\\n                   required\\r\\n                    class=\\\"col-xs-12 padding-side\\\"\\r\\n                    placeholder=\\\"GST Tax\\\"\\r\\n                    [formControl]=\\\"pricingForm.controls.tax\\\"\\r\\n                    [(ngModel)]=\\\"stockItem.stockItemPrice.tax\\\"\\r\\n                  >\\r\\n                    <md-option\\r\\n                      *ngFor=\\\"let item of taxTypes\\\"\\r\\n                      [value]=\\\"item.value\\\"\\r\\n                    >\\r\\n                      {{ item.key }}\\r\\n                    </md-option>\\r\\n                  </md-select>\\r\\n\\r\\n                  <md-hint>\\r\\n                    <form-messages [control]=\\\"pricingForm.controls.tax\\\">\\r\\n                    </form-messages>\\r\\n                  </md-hint>\\r\\n                </div>\\r\\n              </ng-template>\\r\\n              <ng-template [ngIf]=\\\"isView\\\">\\r\\n                <div class=\\\"col-xs-12 padding-side\\\" placeholder=\\\"GST Tax\\\">\\r\\n                  <md-input-container>\\r\\n                    <input\\r\\n                      mdInput\\r\\n                      placeholder=\\\"GST Tax\\\"\\r\\n                      [formControl]=\\\"pricingForm.controls.tax\\\"\\r\\n                      [(ngModel)]=\\\"stockItem.stockItemPrice.tax\\\"\\r\\n                      [readOnly]=\\\"isEditable == 'false'\\\"\\r\\n                    />\\r\\n                    <md-hint>\\r\\n                      <form-messages [control]=\\\"pricingForm.controls.tax\\\">\\r\\n                      </form-messages>\\r\\n                    </md-hint>\\r\\n                  </md-input-container>\\r\\n                </div>\\r\\n              </ng-template>\\r\\n              <div class=\\\"row\\\">\\r\\n                <md-input-container class=\\\"col-xs-6 padding-side\\\">\\r\\n                  <input\\r\\n                    mdInput\\r\\n                    placeholder=\\\"MRP\\\"\\r\\n                    type=\\\"number\\\"\\r\\n                    [formControl]=\\\"pricingForm.controls.si_mrp\\\"\\r\\n                    name=\\\"greaterThanValue\\\"\\r\\n                    [(ngModel)]=\\\"stockItem.stockItemPrice.mrp\\\"\\r\\n                    (ngModelChange)=\\\"onChange($event)\\\"\\r\\n                    placeholder=\\\"MRP\\\"\\r\\n                    [readOnly]=\\\"isEditable == 'false'\\\"\\r\\n                  />\\r\\n                  <md-hint>\\r\\n                    <form-messages [control]=\\\"pricingForm.controls.si_mrp\\\">\\r\\n                    </form-messages>\\r\\n                  </md-hint>\\r\\n                </md-input-container>\\r\\n                <md-input-container class=\\\"col-xs-3 padding-side\\\">\\r\\n                  <input\\r\\n                    mdInput\\r\\n                    placeholder=\\\"Date from\\\"\\r\\n                    [formControl]=\\\"pricingForm.controls.si_mrp_datefrom\\\"\\r\\n                    [mdDatepicker]=\\\"mrpFromDateToggle\\\"\\r\\n                    readonly\\r\\n                    [(ngModel)]=\\\"stockItem.stockItemPrice.mrpDateFrom\\\"\\r\\n                    [readOnly]=\\\"isEditable == 'false'\\\"\\r\\n                    (ngModelChange)=\\\"comparePaymentDate()\\\"\\r\\n                  />\\r\\n                  <!-- [min]=\\\"min\\\"\\r\\n                    [max]=\\\"stockItem.stockItemPrice.mrpDateTo\\\" -->\\r\\n                  <button\\r\\n                    mdSuffix\\r\\n                    [mdDatepickerToggle]=\\\"mrpFromDateToggle\\\"\\r\\n                    *ngIf=\\\"isEditable == 'true'\\\"\\r\\n                  ></button>\\r\\n                  <md-hint>\\r\\n                    <form-messages\\r\\n                      [control]=\\\"pricingForm.controls.si_mrp_datefrom\\\"\\r\\n                    >\\r\\n                    </form-messages>\\r\\n                  </md-hint>\\r\\n                  <!-- <md-hint *ngIf=\\\"showMsg\\\">\\r\\n                    <span style=\\\"color: #FF0000\\\"> bill date </span>\\r\\n                  </md-hint> -->\\r\\n                </md-input-container>\\r\\n                <md-datepicker #mrpFromDateToggle> </md-datepicker>\\r\\n\\r\\n                <md-input-container class=\\\"col-xs-3 padding-side\\\">\\r\\n                  <input\\r\\n                    mdInput\\r\\n                    placeholder=\\\"Date to\\\"\\r\\n                    [formControl]=\\\"pricingForm.controls.si_mrp_dateto\\\"\\r\\n                    [mdDatepicker]=\\\"mrpToDateToggle\\\"\\r\\n                    [(ngModel)]=\\\"stockItem.stockItemPrice.mrpDateTo\\\"\\r\\n                    readonly\\r\\n                    (ngModelChange)=\\\"comparePaymentDate()\\\"\\r\\n                  />\\r\\n                  <!-- [min]=\\\"stockItem.stockItemPrice.mrpDateFrom\\\" -->\\r\\n\\r\\n                  <button\\r\\n                    mdSuffix\\r\\n                    [mdDatepickerToggle]=\\\"mrpToDateToggle\\\"\\r\\n                    *ngIf=\\\"isEditable == 'true'\\\"\\r\\n                  ></button>\\r\\n                  <md-hint>\\r\\n                    <form-messages\\r\\n                      [control]=\\\"pricingForm.controls.si_mrp_dateto\\\"\\r\\n                    >\\r\\n                    </form-messages>\\r\\n                  </md-hint>\\r\\n                  <md-hint *ngIf=\\\"showMsg\\\">\\r\\n                    <span style=\\\"color: #FF0000\\\">\\r\\n                      TO Date is Not Earlier Than From Date\\r\\n                    </span>\\r\\n                  </md-hint>\\r\\n                </md-input-container>\\r\\n                <md-datepicker #mrpToDateToggle> </md-datepicker>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"row\\\">\\r\\n                <md-input-container class=\\\"col-xs-6 padding-side\\\">\\r\\n                  <input\\r\\n                    mdInput\\r\\n                    placeholder=\\\"Cost Price\\\"\\r\\n                    [formControl]=\\\"pricingForm.controls.si_cost\\\"\\r\\n                    [readOnly]=\\\"isEditable == 'false'\\\"\\r\\n                    type=\\\"number\\\"\\r\\n                    name=\\\"lessThanValue\\\"\\r\\n                    [(ngModel)]=\\\"stockItem.stockItemPrice.itemCostPrice\\\"\\r\\n                    (ngModelChange)=\\\"onChange($event)\\\"\\r\\n                  />\\r\\n                  <span style=\\\"color: red\\\" *ngIf=\\\"isInvalid\\\"\\r\\n                    >cost price not greater than MRP</span\\r\\n                  >\\r\\n                </md-input-container>\\r\\n                <md-input-container class=\\\"col-xs-3 padding-side\\\">\\r\\n                  <input\\r\\n                    mdInput\\r\\n                    placeholder=\\\"Date from\\\"\\r\\n                    [formControl]=\\\"pricingForm.controls.si_cost_datefrom\\\"\\r\\n                    [mdDatepicker]=\\\"costFromDateToggle\\\"\\r\\n                    readonly\\r\\n                    [(ngModel)]=\\\"stockItem.stockItemPrice.cpDateFrom\\\"\\r\\n                    (ngModelChange)=\\\"comparePayment()\\\"\\r\\n                  />\\r\\n                  <!-- [min]=\\\"min\\\"\\r\\n                   [max]=\\\"stockItem.stockItemPrice.cpDateTo\\\" -->\\r\\n                  <button\\r\\n                    mdSuffix\\r\\n                    [mdDatepickerToggle]=\\\"costFromDateToggle\\\"\\r\\n                    *ngIf=\\\"isEditable == 'true'\\\"\\r\\n                  ></button>\\r\\n                  <md-hint>\\r\\n                    <form-messages\\r\\n                      [control]=\\\"pricingForm.controls.si_cost_datefrom\\\"\\r\\n                    >\\r\\n                    </form-messages>\\r\\n                  </md-hint>\\r\\n                </md-input-container>\\r\\n                <md-datepicker #costFromDateToggle> </md-datepicker>\\r\\n\\r\\n                <md-input-container class=\\\"col-xs-3 padding-side\\\">\\r\\n                  <input\\r\\n                    mdInput\\r\\n                    placeholder=\\\"Date to\\\"\\r\\n                    [formControl]=\\\"pricingForm.controls.si_cost_dateto\\\"\\r\\n                    [mdDatepicker]=\\\"costToDateToggle\\\"\\r\\n                    readonly\\r\\n                    [(ngModel)]=\\\"stockItem.stockItemPrice.cpDateTo\\\"\\r\\n                    (ngModelChange)=\\\"comparePayment()\\\"\\r\\n                  />\\r\\n                  <!-- [min]=\\\"stockItem.stockItemPrice.cpDateFrom\\\" -->\\r\\n\\r\\n                  <button\\r\\n                    mdSuffix\\r\\n                    [mdDatepickerToggle]=\\\"costToDateToggle\\\"\\r\\n                    *ngIf=\\\"isEditable == 'true'\\\"\\r\\n                  ></button>\\r\\n                  <md-hint>\\r\\n                    <form-messages\\r\\n                      [control]=\\\"pricingForm.controls.si_cost_dateto\\\"\\r\\n                    >\\r\\n                    </form-messages>\\r\\n                  </md-hint>\\r\\n                  <md-hint *ngIf=\\\"showMs\\\">\\r\\n                    <span style=\\\"color: #FF0000\\\">\\r\\n                      TO Date is Not Earlier Than From Date\\r\\n                    </span>\\r\\n                  </md-hint>\\r\\n                </md-input-container>\\r\\n                <md-datepicker #costToDateToggle></md-datepicker>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <md-input-container class=\\\"col-xs-6 padding-side\\\">\\r\\n                  <input\\r\\n                    mdInput\\r\\n                    placeholder=\\\"Selling Price\\\"\\r\\n                    [readOnly]=\\\"isEditable == 'false'\\\"\\r\\n                    [formControl]=\\\"pricingForm.controls.si_sellingprice\\\"\\r\\n                    type=\\\"number\\\"\\r\\n                    name=\\\"lessThanValue\\\"\\r\\n                    [(ngModel)]=\\\"stockItem.stockItemPrice.sellingPrice\\\"\\r\\n                    (ngModelChange)=\\\"onChange($event)\\\"\\r\\n                  />\\r\\n                  <div style=\\\"color: red\\\" *ngIf=\\\"isvalid\\\">\\r\\n                    selling price not greater than M.R.P\\r\\n                  </div>\\r\\n                  <!-- <md-hint>\\r\\n                    <form-messages [control]=\\\"pricingForm.controls.si_sellingprice\\\"> </form-messages>\\r\\n                  </md-hint> -->\\r\\n                </md-input-container>\\r\\n                <md-input-container class=\\\"col-xs-3 padding-side\\\">\\r\\n                  <input\\r\\n                    mdInput\\r\\n                    placeholder=\\\"Date from\\\"\\r\\n                    [formControl]=\\\"\\r\\n                      pricingForm.controls.si_sellingprice_datefrom\\r\\n                    \\\"\\r\\n                    [mdDatepicker]=\\\"sellingPriceFromDateToggle\\\"\\r\\n                    readonly\\r\\n                    [(ngModel)]=\\\"stockItem.stockItemPrice.spDateFrom\\\"\\r\\n                    (ngModelChange)=\\\"compare()\\\"\\r\\n                  />\\r\\n                  <!-- [min]=\\\"min\\\"\\r\\n                    [max]=\\\"stockItem.stockItemPrice.spDateTo\\\" -->\\r\\n                  <button\\r\\n                    mdSuffix\\r\\n                    [mdDatepickerToggle]=\\\"sellingPriceFromDateToggle\\\"\\r\\n                    *ngIf=\\\"isEditable == 'true'\\\"\\r\\n                  ></button>\\r\\n                  <md-hint>\\r\\n                    <form-messages\\r\\n                      [control]=\\\"pricingForm.controls.si_sellingprice_datefrom\\\"\\r\\n                    >\\r\\n                    </form-messages>\\r\\n                  </md-hint>\\r\\n                </md-input-container>\\r\\n                <md-datepicker #sellingPriceFromDateToggle></md-datepicker>\\r\\n\\r\\n                <md-input-container class=\\\"col-xs-3 padding-side\\\">\\r\\n                  <input\\r\\n                    mdInput\\r\\n                    placeholder=\\\"Date to\\\"\\r\\n                    [formControl]=\\\"pricingForm.controls.si_sellingprice_dateto\\\"\\r\\n                    [mdDatepicker]=\\\"sellingPriceToDateToggle\\\"\\r\\n                    readonly\\r\\n                    [(ngModel)]=\\\"stockItem.stockItemPrice.spDateTo\\\"\\r\\n                    (ngModelChange)=\\\"compare()\\\"\\r\\n                  />\\r\\n                  <!-- [min]=\\\"stockItem.stockItemPrice.spDateFrom\\\" -->\\r\\n\\r\\n                  <button\\r\\n                    mdSuffix\\r\\n                    [mdDatepickerToggle]=\\\"sellingPriceToDateToggle\\\"\\r\\n                    *ngIf=\\\"isEditable == 'true'\\\"\\r\\n                  ></button>\\r\\n                  <md-hint>\\r\\n                    <form-messages\\r\\n                      [control]=\\\"pricingForm.controls.si_sellingprice_dateto\\\"\\r\\n                    >\\r\\n                    </form-messages>\\r\\n                  </md-hint>\\r\\n                  <md-hint *ngIf=\\\"showM\\\">\\r\\n                    <span style=\\\"color: #FF0000\\\">\\r\\n                      TO Date is Not Earlier Than From Date\\r\\n                    </span>\\r\\n                  </md-hint>\\r\\n                </md-input-container>\\r\\n                <md-datepicker #sellingPriceToDateToggle></md-datepicker>\\r\\n              </div>\\r\\n              <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n                <button\\r\\n                  md-raised-button\\r\\n                  color=\\\"accent\\\"\\r\\n                  class=\\\"padding-side\\\"\\r\\n                  (click)=\\\"backEvent()\\\"\\r\\n                >\\r\\n                  Back\\r\\n                </button>\\r\\n                <button\\r\\n                  *ngIf=\\\"isEditable == 'true'\\\"\\r\\n                  md-raised-button\\r\\n                  color=\\\"accent\\\"\\r\\n                  [disabled]=\\\"pricingForm.valid\\\"\\r\\n                  (click)=\\\"saveStockItem()\\\"\\r\\n                >\\r\\n                  {{ isEdit ? \\\"Update Stock Item\\\" : \\\"Create Stock Item\\\" }}\\r\\n                </button>\\r\\n                <button\\r\\n                  *ngIf=\\\"isEditable == 'false'\\\"\\r\\n                  md-raised-button\\r\\n                  color=\\\"accent\\\"\\r\\n                  (click)=\\\"done()\\\"\\r\\n                >\\r\\n                  Done\\r\\n                </button>\\r\\n              </div>\\r\\n            </md-card>\\r\\n          </form>\\r\\n        </td-step>\\r\\n      </td-steps>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/stockitem/addstockitem/addstockitem.component.html\n// module id = ../../../../../src/app/components/admin/stockitem/addstockitem/addstockitem.component.html\n// module chunks = 1","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/stockitem/addstockitem/addstockitem.component.scss\n// module id = ../../../../../src/app/components/admin/stockitem/addstockitem/addstockitem.component.scss\n// module chunks = 1","import { StockItem } from \"./../../../../entities/stockitem.entity\";\r\nimport { AppService } from \"app/shared/service/app.service\";\r\nimport { Component, OnInit, SimpleChanges } from \"@angular/core\";\r\nimport { RestService } from \"app/common/rest.service\";\r\nimport { StockItemFormGroup } from \"app/forms/stockitem.form\";\r\nimport { isArray } from \"util\";\r\n\r\n@Component({\r\n  selector: \"app-addstockitem\",\r\n  templateUrl: \"./addstockitem.component.html\",\r\n  styleUrls: [\"./addstockitem.component.scss\"]\r\n})\r\nexport class AddstockitemComponent implements OnInit {\r\n  uqcList: any[] = [];\r\n  categoryList: any[] = [];\r\n  companyList: any[] = [];\r\n  brandList: any[] = [];\r\n  isRecordFound = false;\r\n  manufacturerList: any[] = [];\r\n  productItems: any[] = [];\r\n  taxTypes: any[] = [];\r\n  filteredUqcList: any[] = [];\r\n  filteredCategoryList: any[] = [];\r\n  filteredCompanyList: any[] = [];\r\n  filteredBrandList: any[] = [];\r\n  filteredManufacturerList: any[] = [];\r\n  isView: boolean = false;\r\n  isDisabled: boolean = false;\r\n  disabled = true;\r\n\r\n  productForm: any = StockItemFormGroup.init();\r\n  detailsForm: any = StockItemFormGroup.init();\r\n  pricingForm: any = StockItemFormGroup.init();\r\n\r\n  stockItem: StockItem;\r\n  isEditable: string = \"true\";\r\n  isEdit: boolean = false;\r\n  min: Date;\r\n  max: Date;\r\n  minimum: number;\r\n  maximum: number;\r\n  currentStep: number = 1;\r\n  step1: any;\r\n  step2: any;\r\n  step3: any;\r\n  step4: any;\r\n\r\n  isActive: boolean = false;\r\n  showMsg: boolean = false;\r\n  showMs: boolean = false;\r\n  showM: boolean = false;\r\n  constructor(\r\n    private appService: AppService,\r\n    private restService: RestService\r\n  ) {\r\n    StockItemFormGroup.productGroup(this.productForm);\r\n    StockItemFormGroup.detailsGroup(this.detailsForm);\r\n    StockItemFormGroup.pricingGroup(this.pricingForm);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.init();\r\n\r\n    let id = this.appService.getParam(\"id\");\r\n    this.isEditable = this.appService.getParam(\"isEditable\");\r\n    if (id !== undefined) {\r\n      this.retrieveStockItem(id);\r\n      if (!(this.isEditable == \"true\")) {\r\n        this.isView = true;\r\n        this.isDisabled = true;\r\n      }\r\n    } else {\r\n      this.isEdit = false;\r\n      this.isEditable = \"true\";\r\n      this.disabled = !this.disabled;\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    this.stockItem = changes[\"stockItem\"].currentValue;\r\n  }\r\n\r\n  private init() {\r\n    this.loadUQC();\r\n    this.loadCategories();\r\n    this.loadCompanies();\r\n    this.loadBrands();\r\n    this.loadManufactures();\r\n    this.initSotckItem();\r\n    this.loadTaxTypes();\r\n    this.loadProductItems();\r\n    this.loadSuppliers();\r\n    // this.loadProductItems();\r\n  }\r\n\r\n  loadTaxTypes() {\r\n    this.restService\r\n      .dataloadFromFile(\"./assets/json/common.json\")\r\n      .subscribe(results => {\r\n        this.taxTypes = results[\"Tax\"];\r\n        console.log(this.taxTypes);\r\n      });\r\n  }\r\n\r\n  private initSotckItem() {\r\n    this.stockItem = new StockItem();\r\n    this.stockItem.stockItemPrice.minStock = 0;\r\n    this.stockItem.active = true;\r\n    this.stockItem.companyId = this.appService.getBranch().id;\r\n  }\r\n  done() {\r\n    this.appService.navigate(\"/admin/stockitem-search\", []);\r\n  }\r\n  retrieveStockItem(id: string) {\r\n    this.restService.getStockItem(id).subscribe(result => {\r\n      if (result) {\r\n        this.stockItem = result;\r\n        this.supplierSelected =\r\n          this.stockItem.stockItemPrice.supplier.companyName +\r\n          \" \" +\r\n          this.stockItem.stockItemPrice.supplier.mobileNumber;\r\n        this.stockItem.companyId = this.appService.getBranch().id;\r\n        this.isEdit = true;\r\n      }\r\n      this.isRecordFound = true;\r\n    });\r\n  }\r\n\r\n  private loadUQC() {\r\n    this.restService\r\n      .dataloadFromFile(\"./assets/json/unit_quantity_codes.json\")\r\n      .subscribe(results => {\r\n        if (results) {\r\n          this.uqcList = results[\"unitQuantityCodes\"];\r\n        }\r\n      });\r\n  }\r\n\r\n  private loadCategories() {\r\n    this.restService.getStockItemCategories({}).subscribe(results => {\r\n      console.log(results);\r\n      if (results && isArray(results)) {\r\n        this.categoryList = results;\r\n      }\r\n    });\r\n  }\r\n\r\n  private loadCompanies() {\r\n    this.restService.getStockItemCompanies({}).subscribe(results => {\r\n      console.log(results);\r\n      if (results && isArray(results)) {\r\n        this.companyList = results;\r\n      }\r\n    });\r\n  }\r\n\r\n  private loadBrands() {\r\n    this.restService.getStockItemBrands({}).subscribe(results => {\r\n      console.log(results);\r\n      if (results && isArray(results)) {\r\n        this.brandList = results;\r\n      }\r\n    });\r\n  }\r\n\r\n  private loadManufactures() {\r\n    this.restService.getStockItemManufacturers({}).subscribe(results => {\r\n      console.log(results);\r\n      if (results && isArray(results)) {\r\n        this.manufacturerList = results;\r\n      }\r\n    });\r\n  }\r\n\r\n  // private loadProductItems() {\r\n  //   this.restService.getProductItem({}).subscribe(results => {\r\n  //     console.log(results);\r\n  //     if (results && isArray(results)) {\r\n  //       this.stockItem.productName = results;\r\n  //       this.stockItem.brandName = \"True\";\r\n  //       console.log(this.productItems);\r\n  //     }\r\n  //   });\r\n  // }\r\n\r\n  private loadProductItems() {\r\n    this.restService.getProductItem({}).subscribe(results => {\r\n      console.log(results);\r\n      if (results && isArray(results)) {\r\n        this.productItems = results;\r\n        console.log(this.productItems);\r\n      }\r\n    });\r\n  }\r\n\r\n  filterUQCList(val: string) {\r\n    if (this.isEditable == \"true\") {\r\n      this.filteredUqcList =\r\n        val && val != \"\"\r\n          ? this.uqcList.filter(\r\n              s => s.description.toLowerCase().indexOf(val.toLowerCase()) >= 0\r\n            )\r\n          : this.uqcList;\r\n    } else {\r\n      this.filteredUqcList = [];\r\n    }\r\n  }\r\n\r\n  filterCategoryList(val: string) {\r\n    if (this.isEditable == \"true\") {\r\n      this.filteredCategoryList =\r\n        val && val != \"\"\r\n          ? this.categoryList.filter(\r\n              s => s.name.toLowerCase().indexOf(val.toLowerCase()) >= 0\r\n            )\r\n          : this.categoryList;\r\n    } else {\r\n      this.filteredCategoryList = [];\r\n    }\r\n  }\r\n\r\n  filterCompanyList(val: string) {\r\n    if (this.isEditable == \"true\") {\r\n      this.filteredCompanyList =\r\n        val && val != \"\"\r\n          ? this.companyList.filter(\r\n              s => s.name.toLowerCase().indexOf(val.toLowerCase()) >= 0\r\n            )\r\n          : this.companyList;\r\n    } else {\r\n      this.filteredCompanyList = [];\r\n    }\r\n  }\r\n\r\n  filterBrandList(val: string) {\r\n    if (this.isEditable == \"true\") {\r\n      this.filteredBrandList =\r\n        val && val != \"\"\r\n          ? this.brandList.filter(\r\n              s => s.name.toLowerCase().indexOf(val.toLowerCase()) >= 0\r\n            )\r\n          : this.brandList;\r\n    } else {\r\n      this.filteredBrandList = [];\r\n    }\r\n  }\r\n\r\n  filterManufacturerList(val: string) {\r\n    if (this.isEditable == \"true\") {\r\n      this.filteredManufacturerList =\r\n        val && val != \"\"\r\n          ? this.manufacturerList.filter(\r\n              s => s.name.toLowerCase().indexOf(val.toLowerCase()) >= 0\r\n            )\r\n          : this.manufacturerList;\r\n    } else {\r\n      this.filteredManufacturerList = [];\r\n    }\r\n  }\r\n  filtername(val: string) {}\r\n\r\n  changeEvent(event1: any, event2: any, event3: any) {\r\n    console.log(\"activeEvent all steps\");\r\n    this.step1 = event1;\r\n    this.step2 = event2;\r\n    this.step3 = event3;\r\n    setTimeout(() => {\r\n      if (!this.isActive) {\r\n        this.isActive = true;\r\n        this.changeStep();\r\n      }\r\n    }, 100);\r\n  }\r\n  changeStep() {\r\n    this.step1.disabled = true;\r\n    this.step2.disabled = true;\r\n    this.step3.disabled = true;\r\n\r\n    this.step1.active = false;\r\n    this.step2.active = false;\r\n    this.step3.active = true;\r\n\r\n    let activeStep: any = this.getActiveStep();\r\n    activeStep.disabled = false;\r\n    activeStep.active = true;\r\n  }\r\n\r\n  getActiveStep() {\r\n    switch (this.currentStep) {\r\n      case 1:\r\n        return this.step1;\r\n      case 2:\r\n        return this.step2;\r\n      case 3:\r\n        return this.step3;\r\n      default:\r\n        return this.step1;\r\n    }\r\n  }\r\n\r\n  detailsEvent($event) {\r\n    let activeStep: any = this.getActiveStep();\r\n    activeStep.state = \"complete\";\r\n    this.currentStep = 2;\r\n    this.changeStep();\r\n  }\r\n  pricingEvent($event) {\r\n    let activeStep: any = this.getActiveStep();\r\n    activeStep.state = \"complete\";\r\n    this.currentStep = 3;\r\n    this.changeStep();\r\n  }\r\n\r\n  backEvent() {\r\n    let activeStep: any = this.getActiveStep();\r\n    activeStep.state = \"none\";\r\n    this.currentStep = this.currentStep - 1;\r\n    this.changeStep();\r\n  }\r\n\r\n  backToFirstStemp() {\r\n    let activeStep: any = this.getActiveStep();\r\n    activeStep.state = \"none\";\r\n    this.currentStep = 1;\r\n    this.changeStep();\r\n  }\r\n\r\n  selectCategory(item: any) {\r\n    if (item && typeof item == \"object\") {\r\n      this.stockItem.categoryId = item.id;\r\n      this.stockItem.categoryName = item.name;\r\n    } else {\r\n      this.filteredCategoryList.push({ id: null, name: item });\r\n      this.stockItem.categoryName = item;\r\n      this.stockItem.categoryId = null;\r\n    }\r\n  }\r\n\r\n  selectCompany(item: any) {\r\n    if (item && typeof item == \"object\") {\r\n      this.stockItem.prodCompanyId = item.id;\r\n      this.stockItem.prodCompanyName = item.name;\r\n    } else {\r\n      this.stockItem.prodCompanyName = item;\r\n      this.stockItem.prodCompanyId = null;\r\n    }\r\n  }\r\n\r\n  selectBrand(item: any) {\r\n    if (item && typeof item == \"object\") {\r\n      this.stockItem.brandId = item.id;\r\n      this.stockItem.brandName = item.name;\r\n    } else {\r\n      this.stockItem.brandName = item;\r\n      this.stockItem.brandId = null;\r\n    }\r\n  }\r\n\r\n  selectManufacturer(item: any) {\r\n    if (item && typeof item == \"object\") {\r\n      this.stockItem.manfId = item.id;\r\n      this.stockItem.manfName = item.name;\r\n    } else {\r\n      this.stockItem.manfName = item;\r\n      this.stockItem.manfId = null;\r\n    }\r\n  }\r\n\r\n  saveStockItem() {\r\n    console.log(this.stockItem);\r\n    this.stockItem.stockItemPrice.stockathand = this.stockItem.stockItemPrice.initialQty;\r\n    this.stockItem.stockItemPrice.stockasofdate = new Date();\r\n    this.restService.saveStockItem(this.stockItem).subscribe(response => {\r\n      let message = \"-----------------\";\r\n      if (this.isEdit) {\r\n        message = \"Stock Item updated successfully.\";\r\n      } else {\r\n        message = \"Stock Item  saved successfully. \";\r\n        //this.expenseManagement = result;\r\n      }\r\n\r\n      this.appService.showMessage(message);\r\n\r\n      if (this.isRecordFound) {\r\n        this.appService.navigate(\"admin/stockitem-search\", []);\r\n      } else {\r\n        this.appService.navigate(\"admin/stockitem-search\", []);\r\n      }\r\n    });\r\n  }\r\n\r\n  public greaterThanValue;\r\n  public lessThanValue;\r\n  public lesserThanValue;\r\n  public isInvalid: boolean;\r\n  public isvalid: boolean;\r\n\r\n  public onChange(event: any): void {\r\n    this.isInvalid =\r\n      this.stockItem.stockItemPrice.mrp <\r\n      this.stockItem.stockItemPrice.itemCostPrice;\r\n    this.isvalid =\r\n      this.stockItem.stockItemPrice.mrp <\r\n      this.stockItem.stockItemPrice.sellingPrice;\r\n  }\r\n\r\n  comparePaymentDate() {\r\n    let payDate = this.stockItem.stockItemPrice.mrpDateTo;\r\n    let chequeDate = this.stockItem.stockItemPrice.mrpDateFrom;\r\n\r\n    //if(chequeDate !== null){\r\n    if (chequeDate > payDate) {\r\n      this.showMsg = true;\r\n    } else {\r\n      this.showMsg = false;\r\n    }\r\n  }\r\n  comparePayment() {\r\n    let cpdate = this.stockItem.stockItemPrice.cpDateFrom;\r\n    let cpto = this.stockItem.stockItemPrice.cpDateTo;\r\n    if (cpdate > cpto) {\r\n      this.showMs = true;\r\n    } else {\r\n      this.showMs = false;\r\n    }\r\n  }\r\n  compare() {\r\n    let sellingfrom = this.stockItem.stockItemPrice.spDateFrom;\r\n    let sellingto = this.stockItem.stockItemPrice.spDateTo;\r\n    if (sellingfrom > sellingto) {\r\n      this.showM = true;\r\n    } else {\r\n      this.showM = false;\r\n    }\r\n  }\r\n\r\n  filteredSuppliers: any[] = [];\r\n  supplierList: any[] = [];\r\n  supplierSelected: string = \"\";\r\n\r\n  loadSuppliers() {\r\n    this.restService.searchSupplier({}).subscribe(results => {\r\n      if (results) {\r\n        this.supplierList = results;\r\n      }\r\n    });\r\n  }\r\n\r\n  filterSupplier(val: string) {\r\n    if (this.isEditable == \"true\") {\r\n      this.filteredSuppliers =\r\n        val && val != \"\"\r\n          ? this.supplierList.filter(\r\n              s =>\r\n                s.companyName.toLowerCase().indexOf(val.toLowerCase()) >= 0 ||\r\n                s.mobileNumber.toLowerCase().indexOf(val.toLowerCase()) >= 0\r\n            )\r\n          : this.supplierList;\r\n    } else {\r\n      this.filteredSuppliers = [];\r\n    }\r\n  }\r\n  selectedSupplier(item: any) {\r\n    console.log(item);\r\n    if (item && typeof item == \"object\") {\r\n      this.supplierSelected = item.companyName + \"-\" + item.mobileNumber;\r\n      this.stockItem.stockItemPrice.supplier = item;\r\n    } else if (!isNaN(item)) {\r\n      this.supplierSelected = \"\";\r\n    } else {\r\n      this.supplierSelected = \"\";\r\n    }\r\n  }\r\n  // retrieveSupplier(id: string) {\r\n  //   this.restService.getSupplier({ id: id }).subscribe(results => {\r\n  //     this.stockItem = results;\r\n\r\n  //     this.supplierSelected =\r\n  //       this.stockItem.stockItemPrice.supplier.companyName +\r\n  //       \" \" +\r\n  //       this.stockItem.stockItemPrice.supplier.mobileNumber;\r\n  //     this.isEdit = true;\r\n  //   });\r\n  // }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/stockitem/addstockitem/addstockitem.component.ts","import { AppService } from \"./../../../shared/service/app.service\";\r\nimport {\r\n  Component,\r\n  Inject,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ViewChild,\r\n  ElementRef\r\n} from \"@angular/core\";\r\nimport { MdDialog, MdDialogRef, MD_DIALOG_DATA } from \"@angular/material\";\r\n\r\nimport {\r\n  TdDataTableService,\r\n  TdDataTableSortingOrder,\r\n  ITdDataTableSortChangeEvent,\r\n  ITdDataTableColumn\r\n} from \"@covalent/core\";\r\nimport { RestService } from \"app/common/rest.service\";\r\n@Component({\r\n  selector: \"dialog-delete-service-item\",\r\n  template: `\r\n    <h2 style=\"color:#000;\">Delete Confirmation</h2>\r\n    <hr style=\"background:#fff;\" />\r\n    <br />\r\n    <p style=\"font-size:16px;\">Are you sure you want to delete stock item?</p>\r\n    <br /><br />\r\n    <button\r\n      md-button\r\n      color=\"primary\"\r\n      (click)=\"delete()\"\r\n      style=\"background:#ffc107; color:#fff;\"\r\n    >\r\n      Yes\r\n    </button>\r\n    <button\r\n      md-button\r\n      color=\"primary\"\r\n      (click)=\"cancel()\"\r\n      style=\"float:right; background:#ffc107; color:#fff;\"\r\n    >\r\n      No\r\n    </button>\r\n  `\r\n})\r\nexport class DialogDeleteServiceItem {\r\n  myData: any;\r\n  constructor(\r\n    private restService: RestService,\r\n    private appService: AppService,\r\n    public dialogRef: MdDialogRef<DialogDeleteServiceItem>,\r\n    @Inject(MD_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.myData = data;\r\n  }\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  delete() {\r\n    this.restService.serviceItemDelete(this.myData).subscribe(result => {\r\n      this.dialogRef.close();\r\n      this.appService.showMessage(\"ServiceItem Deleted Successfully \");\r\n    });\r\n  }\r\n  cancel() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/stockitem/dialog-delete-service-item.ts","import { Component, OnInit, Output, EventEmitter } from \"@angular/core\";\r\nimport { DataSource } from \"@angular/cdk\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\n\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport \"rxjs/add/operator/startWith\";\r\nimport \"rxjs/add/observable/merge\";\r\nimport \"rxjs/add/operator/map\";\r\nimport { MdSort, MdPaginator } from \"@angular/material\";\r\nimport { RestService } from \"app/common/rest.service\";\r\nimport { FormBuilder, FormGroup, FormControl } from \"@angular/forms\";\r\n\r\nexport class ServiceItemDataSource extends DataSource<any> {\r\n  // public data: any[] = [];\r\n  // private data: any[] = null;\r\n  // private originaldata: any[] = null;\r\n  _filterChange = new BehaviorSubject(\"\");\r\n\r\n  public get filter(): string {\r\n    return this._filterChange.value;\r\n  }\r\n  public set filter(filter: string) {\r\n    this._filterChange.next(filter);\r\n  }\r\n  public data: any[] = [];\r\n  constructor(\r\n    private restService: RestService,\r\n    private searchObj: any,\r\n    private sort: MdSort,\r\n    private paginator: MdPaginator //   private stockForm: FormControl\r\n  ) {\r\n    super();\r\n    this.restService.searchServiceItems(this.searchObj).subscribe(results => {\r\n      if (results) {\r\n        this.data = results;\r\n      }\r\n    });\r\n  }\r\n\r\n  connect(): any {\r\n    const displayDataChanges = [\r\n      this.restService.searchServiceItems(this.searchObj),\r\n      this._filterChange,\r\n      this.sort.mdSortChange,\r\n      this.paginator.page\r\n    ];\r\n    console.log(\"im in connect yay !! \");\r\n\r\n    return Observable.merge(...displayDataChanges).map(() => {\r\n      this.data = this.data.slice().filter((item: any) => {\r\n        let searchStr: string =\r\n          item.serviceName +\r\n          //   \"\" +\r\n          //   item.categoryName +\r\n          //   \"\" +\r\n          //   item.brandName +\r\n          \"\" +\r\n          item.companyId;\r\n        return searchStr.toLowerCase().indexOf(this.filter.toLowerCase()) != -1;\r\n      });\r\n\r\n      const myData = this.getSortedData();\r\n\r\n      const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n      return myData.splice(startIndex, this.paginator.pageSize);\r\n    });\r\n  }\r\n\r\n  disconnect() {}\r\n\r\n  getSortedData(): any[] {\r\n    const data = this.data.slice();\r\n    if (this.sort.active && this.sort.direction == \"\") {\r\n      return data;\r\n    }\r\n\r\n    return data.sort((a, b) => {\r\n      let propertyA: number | string | Date = \"\";\r\n      let propertyB: number | string | Date = \"\";\r\n      switch (this.sort.active) {\r\n        case \"productName\":\r\n          [propertyA, propertyB] = [a.serviceName, b.serviceName];\r\n          break;\r\n        // case \"categoryName\":\r\n        //   [propertyA, propertyB] = [a.categoryName, b.categoryName];\r\n        //   break;\r\n        // case \"brandName\":\r\n        //   [propertyA, propertyB] = [a.brandName, b.brandName];\r\n        //   break;\r\n        // case \"mrpPrice\":\r\n        //   [propertyA, propertyB] = [a.stockItemPrice.mrp, b.stockItemPrice.mrp];\r\n        //   break;\r\n        // case \"costPrice\":\r\n        //   [propertyA, propertyB] = [\r\n        //     a.stockItemPrice.itemCostPrice,\r\n        //     b.stockItemPrice.itemCostPrice\r\n        //   ];\r\n        //   break;\r\n        // case \"sellingPrice\":\r\n        //   [propertyA, propertyB] = [\r\n        //     a.stockItemPrice.sellingPrice,\r\n        //     b.stockItemPrice.sellingPrice\r\n        //   ];\r\n        //   break;\r\n        // case \"stockAtHand\":\r\n        //   [propertyA, propertyB] = [\r\n        //     a.stockItemPrice.stockathand,\r\n        //     b.stockItemPrice.stockathand\r\n        //   ];\r\n        //   break;\r\n      }\r\n      let valueA = isNaN(+propertyA) ? propertyA : +propertyA;\r\n      let valueB = isNaN(+propertyB) ? propertyB : +propertyB;\r\n\r\n      return (\r\n        (valueA < valueB ? -1 : 1) * (this.sort.direction == \"asc\" ? 1 : -1)\r\n      );\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/stockitem/service-item-listing.datasource.ts","module.exports = \"<div\\r\\n  id=\\\"page-header\\\"\\r\\n  fxLayoutAlign=\\\"center center\\\"\\r\\n  *ngIf=\\\"isEditable == 'true'\\\"\\r\\n>\\r\\n  <h2>{{ isEdit ? \\\"Edit Service Item\\\" : \\\"New Service Item\\\" }}</h2>\\r\\n</div>\\r\\n<div\\r\\n  id=\\\"page-header\\\"\\r\\n  fxLayoutAlign=\\\"center center\\\"\\r\\n  *ngIf=\\\"isEditable == 'false'\\\"\\r\\n>\\r\\n  <h2>View Service Item</h2>\\r\\n</div>\\r\\n<div id=\\\"page-content\\\" fxLayout=\\\"column\\\">\\r\\n  <md-card style=\\\"margin: 1rem\\\">\\r\\n    <form [formGroup]=\\\"myForm\\\" novalidate autocomplete=\\\"off\\\">\\r\\n      <!-- ==============Editable Section Start====================== -->\\r\\n\\r\\n      <!-- ==============Editable Section End====================== -->\\r\\n\\r\\n      <!--==================== Non Editable Section Start =============-->\\r\\n      <div class=\\\"col-xs-12\\\">\\r\\n        <div class=\\\"row padding-side\\\">\\r\\n          <md-input-container>\\r\\n            <input\\r\\n              mdInput\\r\\n              type=\\\"text\\\"\\r\\n              placeholder=\\\"Service Name\\\"\\r\\n              [formControl]=\\\"myForm.controls.service_serviceName\\\"\\r\\n              [(ngModel)]=\\\"service.serviceName\\\"\\r\\n              [readOnly]=\\\"isEditable == 'false'\\\"\\r\\n            />\\r\\n            <md-hint>\\r\\n              <form-messages [control]=\\\"myForm.controls.service_serviceName\\\">\\r\\n              </form-messages>\\r\\n            </md-hint>\\r\\n          </md-input-container>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row padding-side\\\">\\r\\n          <md-input-container>\\r\\n            <input\\r\\n              mdInput\\r\\n              type=\\\"text\\\"\\r\\n              placeholder=\\\"SAC Code\\\"\\r\\n              [formControl]=\\\"myForm.controls.service_serviceCode\\\"\\r\\n              [(ngModel)]=\\\"service.serviceCode\\\"\\r\\n              [readOnly]=\\\"isEditable == 'false'\\\"\\r\\n            />\\r\\n            <md-hint>\\r\\n              <form-messages [control]=\\\"myForm.controls.service_serviceCode\\\">\\r\\n              </form-messages>\\r\\n            </md-hint>\\r\\n          </md-input-container>\\r\\n        </div>\\r\\n        <!-- <div class=\\\"row padding-side\\\">\\r\\n        <md-input-container>\\r\\n          <input\\r\\n            required\\r\\n            mdInput\\r\\n            placeholder=\\\"Units\\\"\\r\\n            [formControl]=\\\"myForm.controls.service_unitquantitycode\\\"\\r\\n            [(ngModel)]=\\\"service.uqc\\\"\\r\\n          />\\r\\n          <md-hint>\\r\\n            <form-messages [control]=\\\"myForm.controls.service_unitquantitycode\\\">\\r\\n            </form-messages>\\r\\n          </md-hint>\\r\\n        </md-input-container>\\r\\n      </div> -->\\r\\n\\r\\n        <div class=\\\"row padding-side\\\">\\r\\n          <md-input-container>\\r\\n            <input\\r\\n              mdInput\\r\\n              type=\\\"number\\\"\\r\\n              placeholder=\\\"Sales price per unit\\\"\\r\\n              [formControl]=\\\"myForm.controls.service_salesUnit\\\"\\r\\n              [(ngModel)]=\\\"service.salesUnit\\\"\\r\\n              [readOnly]=\\\"isEditable == 'false'\\\"\\r\\n            />\\r\\n            <md-hint>\\r\\n              <form-messages [control]=\\\"myForm.controls.service_salesUnit\\\">\\r\\n              </form-messages>\\r\\n            </md-hint>\\r\\n          </md-input-container>\\r\\n        </div>\\r\\n        <div class=\\\"row padding-side\\\">\\r\\n          <md-input-container>\\r\\n            <input\\r\\n              mdInput\\r\\n              type=\\\"text\\\"\\r\\n              placeholder=\\\"Cess Tax\\\"\\r\\n              [formControl]=\\\"myForm.controls.service_incomeAmount\\\"\\r\\n              [(ngModel)]=\\\"service.incomeAmount\\\"\\r\\n              [readOnly]=\\\"isEditable == 'false'\\\"\\r\\n            />\\r\\n            <md-hint>\\r\\n              <form-messages [control]=\\\"myForm.controls.service_incomeAmount\\\">\\r\\n              </form-messages>\\r\\n            </md-hint>\\r\\n          </md-input-container>\\r\\n        </div>\\r\\n        <ng-template [ngIf]=\\\"isView\\\">\\r\\n          <div class=\\\"row padding-side\\\">\\r\\n            <md-input-container>\\r\\n              <input\\r\\n                mdInput\\r\\n                placeholder=\\\"GST Tax\\\"\\r\\n                [formControl]=\\\"myForm.controls.service_tax\\\"\\r\\n                [(ngModel)]=\\\"service.tax\\\"\\r\\n                [readOnly]=\\\"isEditable == 'false'\\\"\\r\\n                style=\\\"margin-top:20px\\\"\\r\\n              />\\r\\n              <md-hint>\\r\\n                <form-messages [control]=\\\"myForm.controls.service_tax\\\">\\r\\n                </form-messages>\\r\\n              </md-hint>\\r\\n            </md-input-container>\\r\\n          </div>\\r\\n        </ng-template>\\r\\n        <ng-template [ngIf]=\\\"!isView\\\">\\r\\n          <md-select\\r\\n            class=\\\"row padding-side\\\"\\r\\n            placeholder=\\\"GST Tax\\\"\\r\\n            [formControl]=\\\"myForm.controls.service_tax\\\"\\r\\n            [(ngModel)]=\\\"service.tax\\\"\\r\\n            style=\\\"margin-top:20px\\\"\\r\\n          >\\r\\n            <md-option *ngFor=\\\"let item of taxTypes\\\" [value]=\\\"item.value\\\">\\r\\n              {{ item.key }}\\r\\n            </md-option>\\r\\n          </md-select>\\r\\n\\r\\n          <md-hint>\\r\\n            <form-messages [control]=\\\"myForm.controls.service_tax\\\">\\r\\n            </form-messages>\\r\\n          </md-hint>\\r\\n        </ng-template>\\r\\n\\r\\n        <!-- <div fxFlex=\\\"40\\\" class=\\\"padding-side\\\">\\r\\n                    <div class=\\\"md-checkbox\\\">\\r\\n                        <md-checkbox *ngIf=\\\"isEditable=='false'\\\" onclick=\\\"return false;\\\" [(ngModel)]=\\\"service.inclusiveOfTax\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                            Inclusive Of Tax\\r\\n                        </md-checkbox>\\r\\n                    </div>\\r\\n                </div> -->\\r\\n\\r\\n        <div class=\\\"row padding-side\\\">\\r\\n          <ng-template [ngIf]=\\\"isView\\\">\\r\\n            <div class=\\\"md-select\\\">\\r\\n              <md-input-container>\\r\\n                <input\\r\\n                  mdInput\\r\\n                  placeholder=\\\"Status\\\"\\r\\n                  [formControl]=\\\"myForm.controls.status1\\\"\\r\\n                  [(ngModel)]=\\\"service.active\\\"\\r\\n                  [readOnly]=\\\"isEditable == 'false'\\\"\\r\\n                  style=\\\"margin-top:20px\\\"\\r\\n                />\\r\\n              </md-input-container>\\r\\n            </div>\\r\\n          </ng-template>\\r\\n\\r\\n          <ng-template [ngIf]=\\\"!isView\\\">\\r\\n            <div class=\\\"md-select\\\">\\r\\n              <md-select\\r\\n                placeholder=\\\"Status\\\"\\r\\n                [(ngModel)]=\\\"service.active\\\"\\r\\n                [formControl]=\\\"myForm.controls.status1\\\"\\r\\n                ng-if=\\\"isEditable == 'true'\\\"\\r\\n                style=\\\"margin-top:20px\\\"\\r\\n              >\\r\\n                <md-option value=\\\"true\\\">Active</md-option>\\r\\n                <md-option value=\\\"false\\\">Inactive</md-option>\\r\\n              </md-select>\\r\\n\\r\\n              <md-hint>\\r\\n                <form-messages [control]=\\\"myForm.controls.status1\\\">\\r\\n                </form-messages>\\r\\n              </md-hint>\\r\\n            </div>\\r\\n          </ng-template>\\r\\n        </div>\\r\\n      </div>\\r\\n      <!--===================== Non Editable Section End ===============-->\\r\\n    </form>\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end end\\\">\\r\\n      <button\\r\\n        *ngIf=\\\"isEditable == 'true'\\\"\\r\\n        md-raised-button\\r\\n        color=\\\"accent\\\"\\r\\n        [disabled]=\\\"!myForm.valid\\\"\\r\\n        (click)=\\\"save()\\\"\\r\\n      >\\r\\n        {{ isEdit ? \\\"Update Service Item\\\" : \\\"Create Service Item\\\" }}\\r\\n      </button>\\r\\n      <button\\r\\n        *ngIf=\\\"isEditable == 'false'\\\"\\r\\n        md-raised-button\\r\\n        color=\\\"accent\\\"\\r\\n        (click)=\\\"done()\\\"\\r\\n      >\\r\\n        Done\\r\\n      </button>\\r\\n    </div>\\r\\n    <!-- <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end end\\\" class=\\\"padding-side\\\">\\r\\n      <button\\r\\n        md-raised-button\\r\\n        color=\\\"accent\\\"\\r\\n        [disabled]=\\\"!myForm.valid\\\"\\r\\n        (click)=\\\"save()\\\"\\r\\n      >\\r\\n        Save\\r\\n      </button>\\r\\n    </div> -->\\r\\n  </md-card>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/stockitem/service.edit.component.html\n// module id = ../../../../../src/app/components/admin/stockitem/service.edit.component.html\n// module chunks = 1","import { Component, OnInit, Input, SimpleChanges } from \"@angular/core\";\r\nimport { AppService } from \"../../../shared/service/app.service\";\r\nimport { AnimationService } from \"../../../shared/service/animation.service\";\r\nimport { RestService } from \"../../../common/rest.service\";\r\nimport { Prop } from \"../../../common/props\";\r\nimport { Util } from \"../../../shared/utils/util\";\r\n\r\nimport { ServiceFormGroup } from \"../../../forms/Service.form\";\r\n\r\nimport { Service } from \"../../../entities/Service.entity\";\r\n\r\n@Component({\r\n  selector: \"app-service\",\r\n  templateUrl: \"./service.edit.component.html\"\r\n})\r\nexport class ServiceEditComponent implements OnInit {\r\n  myForm: any = ServiceFormGroup.init();\r\n  service: Service = new Service();\r\n  @Input() id;\r\n  serviceTypeList: any[] = [];\r\n  incomeAmountList: any[] = [];\r\n  taxList: any[] = [];\r\n  uqcList: any[] = [];\r\n  filteredUqcList: any[] = [];\r\n  taxTypes: any[] = [];\r\n  isEditable: string = \"true\";\r\n  isEdit: boolean = false;\r\n  serviceitem: Service;\r\n  isView: boolean = false;\r\n  isDisabled: boolean = false;\r\n  disabled = true;\r\n  isRecordFound = false;\r\n  serviceActive: any;\r\n\r\n  constructor(\r\n    private appService: AppService,\r\n    private restService: RestService // vcr: ViewContainerRef\r\n  ) {\r\n    ServiceFormGroup.edit(this.myForm);\r\n   \r\n    // // this.service.productType = \"Service\";\r\n    // // this.isEditable = this.appService.getParam(\"isEditable\");\r\n    // // let id = this.appService.getParam(\"id\");\r\n    // // if (id !== undefined) {\r\n    // //   this.retrieve(id);\r\n    // }\r\n\r\n    // this.toastr.setRootViewContainerRef(vcr);\r\n    //this.showWarning();\r\n  }\r\n\r\n  // showWarning() {\r\n  //     this.toastr.warning('You are being warned.', 'Alert!');\r\n  // }\r\n\r\n  ngOnInit() {\r\n    this.init();\r\n    let id = this.appService.getParam(\"id\");\r\n    this.isEditable = this.appService.getParam(\"isEditable\");\r\n    if (id !== undefined) {\r\n      this.retrieveService(id);\r\n      if (!(this.isEditable == \"true\")) {\r\n        this.isView = true;\r\n        this.isDisabled = true;\r\n      }\r\n    } else {\r\n      this.isEdit = false;\r\n      this.isEditable = \"true\";\r\n      this.disabled = !this.disabled;\r\n    }\r\n    // if(this.service.active == true){\r\n      this.service.active == true ? \"Active\" : \"Inactive\";\r\n      console.log(this.service.active)\r\n    // }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    this.serviceitem = changes[\"serviceItem\"].currentValue;\r\n  }\r\n\r\n  private init() {\r\n    this.taxLoad();\r\n    this.uqcLoad();\r\n    this.loadTaxTypes();\r\n  }\r\n\r\n  // private serviceTypeLoad() {\r\n  //   this.restService.dataload(\"/ServiceType\").subscribe(results => {\r\n  //     if (results) {\r\n  //       this.serviceTypeList = results;\r\n  //     }\r\n  //   });\r\n  // }\r\n\r\n  // private incomeAmountLoad() {\r\n  //   this.restService.dataload(\"/IncomeAccount\").subscribe(results => {\r\n  //     if (results) {\r\n  //       this.incomeAmountList = results;\r\n  //     }\r\n  //   });\r\n  // }\r\n\r\n  retrieveService(id: string) {\r\n    this.restService.getService(id).subscribe(result => {\r\n      if (result) {\r\n        this.service = result;\r\n        console.log(this.service)\r\n        this.service.companyId = this.appService.getBranch().id;\r\n        if(this.service.active == \"true\"){\r\n          this.service.active = \"Active\"\r\n        console.log(this.service.active);\r\n        }\r\n        else{\r\n          this.service.active = \"Inactive\"\r\n          console.log(this.service.active);\r\n        }\r\n        \r\n        this.isEdit = true;\r\n      }\r\n      this.isRecordFound = true;\r\n    });\r\n  }\r\n\r\n  private taxLoad() {\r\n    this.restService\r\n      .dataloadFromFile(\"./assets/json/common.json\")\r\n      .subscribe(results => {\r\n        if (results) {\r\n          this.taxList = results[\"Tax\"];\r\n        }\r\n      });\r\n  }\r\n\r\n  private uqcLoad() {\r\n    this.restService\r\n      .dataloadFromFile(\"./assets/json/unit_quantity_codes.json\")\r\n      .subscribe(results => {\r\n        if (results) {\r\n          this.uqcList = results[\"unitQuantityCodes\"];\r\n        }\r\n      });\r\n  }\r\n\r\n  // filterUQCList(val: string) {\r\n  //   if (val) {\r\n  //     this.service.uqc = val;\r\n  //   }\r\n  //   this.filteredUqcList =\r\n  //     val && val != \"\"\r\n  //       ? this.uqcList.filter(\r\n  //           s => s.description.toLowerCase().indexOf(val.toLowerCase()) >= 0\r\n  //         )\r\n  //       : this.uqcList;\r\n  // }\r\n\r\n  loadTaxTypes() {\r\n    this.restService\r\n      .dataloadFromFile(\"./assets/json/common.json\")\r\n      .subscribe(results => {\r\n        this.taxTypes = results[\"Tax\"];\r\n        console.log(this.taxTypes);\r\n      });\r\n  }\r\n\r\n  retrieve(id: string) {\r\n    this.restService.serviceEntity(id).subscribe(result => {\r\n      if (result) {\r\n        this.service = result;\r\n        this.service.companyId = this.appService.getBranch().id;\r\n        this.isEdit = true;\r\n      }\r\n      this.isRecordFound = true;\r\n    });\r\n  }\r\n\r\n  valid() {\r\n    this.service.active = true;\r\n    //this.service.serviceCode = \"\"+ Math.floor((Math.random()*9999+1));\r\n    this.service.productType = \"Service\";\r\n    this.service.companyId = this.appService.getBranch().id;\r\n    return true;\r\n  }\r\n\r\n  save() {\r\n    if (!this.valid()) return;\r\n    this.service.productType = \"Service\";\r\n    this.service.companyId = this.appService.getBranch().id;\r\n    this.service.active = true;\r\n    this.restService.serviceSave(this.service).subscribe(result => {\r\n      // if (result) {\r\n      //   this.service = new Service();\r\n      //   this.service.productType = \"Service\";\r\n      //   this.appService.showMessage(\"Saved successfully.\");\r\n      //   this.myForm.reset();\r\n      //   this.appService.navigate(\"/admin/serviceitem-search\", []);\r\n      // }\r\n      let message = \"-----------------\";\r\n      if (this.isEdit) {\r\n        message = \"Service Order updated successfully.\";\r\n        //this.expenseManagement = result;\r\n      } else {\r\n        message = \"Service Item saved successfully.\";\r\n      }\r\n      this.appService.showMessage(message);\r\n      this.appService.navigate(\"/admin/serviceitem-search\", []);\r\n    });\r\n  }\r\n\r\n  add() {\r\n    this.service = new Service();\r\n    this.myForm = ServiceFormGroup.init();\r\n  }\r\n\r\n  back() {\r\n    this.appService.navigate(\"\", []);\r\n  }\r\n  done() {\r\n    this.appService.navigate(\"/admin/serviceitem-search\", []);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/stockitem/service.edit.component.ts","module.exports = \"<div id=\\\"page-header\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n  <h2>Service Items</h2>\\r\\n</div>\\r\\n<div id=\\\"page-content\\\">\\r\\n  <div class=\\\"row center-xs padding\\\">\\r\\n    <md-card class=\\\"col-xs-12 \\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <md-input-container>\\r\\n          <!-- <input\\r\\n              mdInput\\r\\n              placeholder=\\\" Search StockItem or brand name or category\\\"\\r\\n              (keydown.backspace)=\\\"onKeydown($event.target.value)\\\"\\r\\n            /> -->\\r\\n          <input\\r\\n            mdInput\\r\\n            #filter\\r\\n            placeholder=\\\"Search ServiceItem\\\"\\r\\n            (keydown.backspace)=\\\"onKeydown($event.target.value)\\\"\\r\\n          />\\r\\n        </md-input-container>\\r\\n      </div>\\r\\n      <md-card-content class=\\\"start-xs \\\">\\r\\n        <md-table\\r\\n          #table\\r\\n          [dataSource]=\\\"dataSource\\\"\\r\\n          mdSort\\r\\n          style=\\\"height: 500px; overflow-y: auto\\\"\\r\\n        >\\r\\n          <ng-container cdkColumnDef=\\\"serviceName\\\">\\r\\n            <md-header-cell\\r\\n              *cdkHeaderCellDef\\r\\n              md-sort-header\\r\\n              style=\\\"position: sticky; top: 0\\\"\\r\\n              fxFlex=\\\"50%\\\"\\r\\n            >\\r\\n              Service Name\\r\\n            </md-header-cell>\\r\\n            <md-cell *cdkCellDef=\\\"let row\\\" (click)=\\\"myFun(row)\\\" fxFlex=\\\"50%\\\">\\r\\n              <div>{{ row.serviceName }}</div>\\r\\n            </md-cell>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container cdkColumnDef=\\\"salesUnit\\\">\\r\\n            <md-header-cell\\r\\n              *cdkHeaderCellDef\\r\\n              md-sort-header\\r\\n              style=\\\"position: sticky; top: 0\\\"\\r\\n              fxFlex=\\\"50%\\\"\\r\\n            >\\r\\n              Sales Price Per Unit\\r\\n            </md-header-cell>\\r\\n            <md-cell *cdkCellDef=\\\"let row\\\" (click)=\\\"myFun(row)\\\" fxFlex=\\\"50%\\\">\\r\\n              <div>{{ row.salesUnit }}</div>\\r\\n            </md-cell>\\r\\n          </ng-container>\\r\\n          -->\\r\\n\\r\\n          <!-- <ng-container cdkColumnDef=\\\"tax\\\">\\r\\n            <md-header-cell\\r\\n              *cdkHeaderCellDef\\r\\n              md-sort-header\\r\\n              style=\\\"position: sticky; top: 0\\\"\\r\\n              fxFlex=\\\"25%\\\"\\r\\n            >\\r\\n              Tax\\r\\n            </md-header-cell>\\r\\n            <md-cell *cdkCellDef=\\\"let row\\\" (click)=\\\"myFun(row)\\\" fxFlex=\\\"25%\\\">\\r\\n              <div>{{ row.tax }}</div>\\r\\n            </md-cell>\\r\\n          </ng-container>\\r\\n          <!-- \\r\\n          <ng-container cdkColumnDef=\\\"uqc\\\">\\r\\n            <md-header-cell\\r\\n              *cdkHeaderCellDef\\r\\n              md-sort-header\\r\\n              style=\\\"position: sticky; top: 0\\\"\\r\\n            >\\r\\n              Uqc\\r\\n            </md-header-cell>\\r\\n            <md-cell *cdkCellDef=\\\"let row\\\" (click)=\\\"myFun(row)\\\">\\r\\n              <div>{{ row.uqc }}</div>\\r\\n            </md-cell>\\r\\n          </ng-container> -->\\r\\n\\r\\n          <!-- <ng-container cdkColumnDef=\\\"costPrice\\\">\\r\\n              <md-header-cell\\r\\n                *cdkHeaderCellDef\\r\\n                md-sort-header\\r\\n                style=\\\"position: sticky; top: 0\\\"\\r\\n              >\\r\\n                Cost Price\\r\\n              </md-header-cell>\\r\\n              <md-cell *cdkCellDef=\\\"let row\\\" (click)=\\\"myFun(row)\\\">\\r\\n                <div>{{ row.stockItemPrice.itemCostPrice }}</div>\\r\\n              </md-cell>\\r\\n            </ng-container>\\r\\n  \\r\\n            <ng-container cdkColumnDef=\\\"sellingPrice\\\">\\r\\n              <md-header-cell\\r\\n                *cdkHeaderCellDef\\r\\n                md-sort-header\\r\\n                style=\\\"position: sticky; top: 0\\\"\\r\\n              >\\r\\n                Selling Price\\r\\n              </md-header-cell>\\r\\n              <md-cell *cdkCellDef=\\\"let row\\\" (click)=\\\"myFun(row)\\\">\\r\\n                <div>{{ row.stockItemPrice.sellingPrice }}</div>\\r\\n              </md-cell>\\r\\n            </ng-container>\\r\\n            <ng-container cdkColumnDef=\\\"stockAtHand\\\">\\r\\n              <md-header-cell\\r\\n                *cdkHeaderCellDef\\r\\n                md-sort-header\\r\\n                style=\\\"position: sticky; top: 0\\\"\\r\\n              >\\r\\n                Stock at Hand\\r\\n              </md-header-cell>\\r\\n              <md-cell *cdkCellDef=\\\"let row\\\" (click)=\\\"myFun(row)\\\">\\r\\n                <div>{{ row.stockItemPrice.stockathand }}</div>\\r\\n              </md-cell>\\r\\n            </ng-container> -->\\r\\n          <ng-container cdkColumnDef=\\\"action\\\">\\r\\n            <md-header-cell\\r\\n              *cdkHeaderCellDef\\r\\n              fxLayoutAlign=\\\"end\\\"\\r\\n              style=\\\"position: sticky; top: 0\\\"\\r\\n              >Action</md-header-cell\\r\\n            >\\r\\n            <md-cell\\r\\n              *cdkCellDef=\\\"let row\\\"\\r\\n              (click)=\\\"selectItem(row)\\\"\\r\\n              fxLayoutAlign=\\\"end\\\"\\r\\n            >\\r\\n              <md-icon color=\\\"accent\\\" [mdMenuTriggerFor]=\\\"sendMenu\\\"\\r\\n                >more_vert</md-icon\\r\\n              >\\r\\n            </md-cell>\\r\\n          </ng-container>\\r\\n\\r\\n          <md-header-row *cdkHeaderRowDef=\\\"displayedColumns\\\"></md-header-row>\\r\\n          <md-row *cdkRowDef=\\\"let row; columns: displayedColumns\\\"></md-row>\\r\\n        </md-table>\\r\\n      </md-card-content>\\r\\n    </md-card>\\r\\n    <md-paginator\\r\\n      #paginator\\r\\n      style=\\\"width: 100%\\\"\\r\\n      [length]=\\\"dataSource.data?.length\\\"\\r\\n      [pageIndex]=\\\"0\\\"\\r\\n      [pageSize]=\\\"10\\\"\\r\\n      [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"\\r\\n    >\\r\\n    </md-paginator>\\r\\n  </div>\\r\\n  <md-menu #sendMenu=\\\"mdMenu\\\" style=\\\"padding: 1rem;\\\">\\r\\n    <button md-menu-item (click)=\\\"view()\\\">View</button>\\r\\n    <button md-menu-item (click)=\\\"edit()\\\">Edit</button>\\r\\n    <button md-menu-item (click)=\\\"delete()\\\">Delete</button>\\r\\n  </md-menu>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/stockitem/service.item.listing.component.html\n// module id = ../../../../../src/app/components/admin/stockitem/service.item.listing.component.html\n// module chunks = 1","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/stockitem/service.item.listing.component.scss\n// module id = ../../../../../src/app/components/admin/stockitem/service.item.listing.component.scss\n// module chunks = 1","import { ServiceItemDataSource } from \"./service-item-listing.datasource\";\r\n\r\nimport { Component, OnInit, ViewChild, ElementRef } from \"@angular/core\";\r\nimport { RestService } from \"app/common/rest.service\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport \"rxjs/add/observable/fromEvent\";\r\nimport \"rxjs/add/operator/debounceTime\";\r\nimport \"rxjs/add/operator/distinctUntilChanged\";\r\nimport { AppService } from \"app/shared/service/app.service\";\r\nimport {\r\n  MdDialog,\r\n  MdSort,\r\n  MdDialogRef,\r\n  MD_DIALOG_DATA,\r\n  MdPaginator\r\n} from \"@angular/material\";\r\nimport { DialogDeleteServiceItem } from \"./dialog-delete-service-item\";\r\n\r\n@Component({\r\n  selector: \"app-service-item-listing\",\r\n  templateUrl: \"./service.item.listing.component.html\",\r\n  styleUrls: [\"./service.item.listing.component.scss\"]\r\n})\r\nexport class ServiceItemListingComponent implements OnInit {\r\n  selectedItem: any = null;\r\n  selectedItemForView: any;\r\n\r\n  @ViewChild(\"filter\") filter: ElementRef;\r\n  @ViewChild(MdSort) sort: MdSort;\r\n  @ViewChild(MdPaginator) paginator: MdPaginator;\r\n\r\n  dataSource: ServiceItemDataSource = null;\r\n  //   displayedColumns: any[] = [\r\n  //     \"productName\",\r\n  //     \"brandName\",\r\n  //     \"categoryName\",\r\n  //     \"mrpPrice\",\r\n  //     \"costPrice\",\r\n  //     \"sellingPrice\",\r\n  //     \"stockAtHand\",\r\n  //     \"action\"\r\n  //   ];\r\n\r\n  displayedColumns: any[] = [\r\n    \"serviceName\",\r\n    // \"uqc\",\r\n    //\"tax\",\r\n    \"salesUnit\",\r\n    \"action\"\r\n  ];\r\n\r\n  constructor(\r\n    private appService: AppService,\r\n    private restService: RestService,\r\n    public dialog: MdDialog\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.dataSource = new ServiceItemDataSource(\r\n      this.restService,\r\n      {},\r\n      this.sort,\r\n      this.paginator\r\n    );\r\n    Observable.fromEvent(this.filter.nativeElement, \"keyup\")\r\n      .debounceTime(100)\r\n      .distinctUntilChanged()\r\n      .subscribe(() => {\r\n        if (!this.dataSource) {\r\n          return;\r\n        }\r\n        this.dataSource.filter = this.filter.nativeElement.value;\r\n      });\r\n  }\r\n\r\n  searchObj: any = {};\r\n\r\n  onKeydown(filterValue: string) {\r\n    if (filterValue.length < 3) return;\r\n    if (filterValue.length < 4) {\r\n      // For First three letters no search - display all\r\n      this.clearAll();\r\n    } else this.ApplyFilter(filterValue);\r\n  }\r\n  public ApplyFilter(filterValue: string) {\r\n    this.searchObj = {};\r\n    this.dataSource = new ServiceItemDataSource(\r\n      this.restService,\r\n      {},\r\n      this.sort,\r\n      this.paginator\r\n    );\r\n    filterValue = filterValue.trim().toLowerCase();\r\n    this.dataSource.filter = filterValue;\r\n  }\r\n  dataList: any = [];\r\n\r\n  selectItem(item: any) {\r\n    this.selectedItem = item;\r\n  }\r\n  onSelectedItem(row) {\r\n    this.selectedItem = row;\r\n  }\r\n\r\n  myFun(row) {\r\n    this.selectedItemForView = row;\r\n    this.appService.navigate(\"./admin/service-edit\", [\r\n      { id: this.selectedItemForView.id, isEditable: false }\r\n    ]);\r\n\r\n    console.log(row);\r\n    console.log(this.searchObj);\r\n  }\r\n\r\n  view(item: any) {\r\n    this.appService.navigate(\"/admin/service-edit\", [\r\n      { id: this.selectedItem.id, isEditable: false }\r\n    ]);\r\n  }\r\n\r\n  edit(item: any) {\r\n    this.appService.navigate(\"/admin/service-edit\", [\r\n      { id: this.selectedItem.id, isEditable: true }\r\n    ]);\r\n  }\r\n\r\n  //For delete Popup\r\n\r\n  openDialog(id) {\r\n    const dialogRef = this.dialog.open(DialogDeleteServiceItem, {\r\n      width: \"500px\",\r\n      height: \"250px\",\r\n      data: id\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.clearAll();\r\n    });\r\n  }\r\n  public clearAll() {\r\n    this.searchObj = {};\r\n    this.dataSource = new ServiceItemDataSource(\r\n      this.restService,\r\n      {},\r\n      this.sort,\r\n      this.paginator\r\n    );\r\n  }\r\n\r\n  delete(item: any) {\r\n    this.openDialog(this.selectedItem.id);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/stockitem/service.item.listing.component.ts","import { AppService } from \"./../../../../shared/service/app.service\";\r\nimport {\r\n  Component,\r\n  Inject,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ViewChild,\r\n  ElementRef\r\n} from \"@angular/core\";\r\nimport { MdDialog, MdDialogRef, MD_DIALOG_DATA } from \"@angular/material\";\r\n\r\nimport {\r\n  TdDataTableService,\r\n  TdDataTableSortingOrder,\r\n  ITdDataTableSortChangeEvent,\r\n  ITdDataTableColumn\r\n} from \"@covalent/core\";\r\nimport { RestService } from \"app/common/rest.service\";\r\n@Component({\r\n  selector: \"dialog-delete-stock-item\",\r\n  template: `\r\n    <h2 style=\"color:#000;\">Delete Confirmation</h2>\r\n    <hr style=\"background:#fff;\" />\r\n    <br />\r\n    <p style=\"font-size:16px;\">Are you sure you want to delete stock item?</p>\r\n    <br /><br />\r\n    <button\r\n      md-button\r\n      color=\"primary\"\r\n      (click)=\"delete()\"\r\n      style=\"background:#ffc107; color:#fff;\"\r\n    >\r\n      Yes\r\n    </button>\r\n    <button\r\n      md-button\r\n      color=\"primary\"\r\n      (click)=\"cancel()\"\r\n      style=\"float:right; background:#ffc107; color:#fff;\"\r\n    >\r\n      No\r\n    </button>\r\n  `\r\n})\r\nexport class DialogDeleteStockItem {\r\n  myData: any;\r\n  constructor(\r\n    private restService: RestService,\r\n    private appService: AppService,\r\n    public dialogRef: MdDialogRef<DialogDeleteStockItem>,\r\n    @Inject(MD_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.myData = data;\r\n  }\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  delete() {\r\n    this.restService.stockItemDelete(this.myData).subscribe(result => {\r\n      this.dialogRef.close();\r\n      this.appService.showMessage(\"StockItem Deleted Successfully \");\r\n    });\r\n  }\r\n  cancel() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/stockitem/stock-item-listing/dialog-delete-stock-item.ts","module.exports = \"<div id=\\\"page-header\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n  <h2>Stock Items</h2>\\r\\n</div>\\r\\n<div id=\\\"page-content\\\">\\r\\n  <div class=\\\"row center-xs padding\\\">\\r\\n    <md-card class=\\\"col-xs-12 \\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <md-input-container>\\r\\n          <!-- <input\\r\\n            mdInput\\r\\n            placeholder=\\\" Search StockItem or brand name or category\\\"\\r\\n            (keydown.backspace)=\\\"onKeydown($event.target.value)\\\"\\r\\n          /> -->\\r\\n          <input\\r\\n            mdInput\\r\\n            #filter\\r\\n            placeholder=\\\"Search Stock Item or Brand Name or Product Category\\\"\\r\\n            (keydown.backspace)=\\\"onKeydown($event.target.value)\\\"\\r\\n          />\\r\\n        </md-input-container>\\r\\n      </div>\\r\\n      <md-card-content class=\\\"start-xs \\\">\\r\\n        <md-table\\r\\n          #table\\r\\n          [dataSource]=\\\"dataSource\\\"\\r\\n          mdSort\\r\\n          style=\\\"height: 500px; overflow-y: auto\\\"\\r\\n        >\\r\\n          <ng-container cdkColumnDef=\\\"productName\\\">\\r\\n            <md-header-cell\\r\\n              *cdkHeaderCellDef\\r\\n              md-sort-header\\r\\n              style=\\\"position: sticky; top: 0\\\"\\r\\n              fxFlex=\\\"30%\\\"\\r\\n            >\\r\\n              Stock Item\\r\\n            </md-header-cell>\\r\\n            <md-cell *cdkCellDef=\\\"let row\\\" (click)=\\\"myFun(row)\\\" fxFlex=\\\"30%\\\">\\r\\n              <div>{{ row.productName }}</div>\\r\\n            </md-cell>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container cdkColumnDef=\\\"stockathand\\\">\\r\\n            <md-header-cell\\r\\n              *cdkHeaderCellDef\\r\\n              md-sort-header\\r\\n              style=\\\"position: sticky; top: 0\\\"\\r\\n              fxFlex=\\\"20%\\\"\\r\\n            >\\r\\n              Stock At Hand\\r\\n            </md-header-cell>\\r\\n            <md-cell *cdkCellDef=\\\"let row\\\" (click)=\\\"myFun(row)\\\" fxFlex=\\\"20%\\\">\\r\\n              <div>{{ row.stockathand }}</div>\\r\\n            </md-cell>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container cdkColumnDef=\\\"brandName\\\">\\r\\n            <md-header-cell\\r\\n              *cdkHeaderCellDef\\r\\n              md-sort-header\\r\\n              style=\\\"position: sticky; top: 0\\\"\\r\\n              fxFlex=\\\"25%\\\"\\r\\n            >\\r\\n              Brand\\r\\n            </md-header-cell>\\r\\n            <md-cell *cdkCellDef=\\\"let row\\\" (click)=\\\"myFun(row)\\\" fxFlex=\\\"25%\\\">\\r\\n              <div>{{ row.brandName }}</div>\\r\\n            </md-cell>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container cdkColumnDef=\\\"categoryName\\\">\\r\\n            <md-header-cell\\r\\n              *cdkHeaderCellDef\\r\\n              md-sort-header\\r\\n              style=\\\"position: sticky; top: 0\\\"\\r\\n              fxFlex=\\\"25%\\\"\\r\\n            >\\r\\n              Product Category\\r\\n            </md-header-cell>\\r\\n            <md-cell *cdkCellDef=\\\"let row\\\" (click)=\\\"myFun(row)\\\" fxFlex=\\\"25%\\\">\\r\\n              <div>{{ row.categoryName }}</div>\\r\\n            </md-cell>\\r\\n          </ng-container>\\r\\n\\r\\n          <!-- <ng-container cdkColumnDef=\\\"mrpPrice\\\">\\r\\n            <md-header-cell\\r\\n              *cdkHeaderCellDef\\r\\n              md-sort-header\\r\\n              style=\\\"position: sticky; top: 0\\\"\\r\\n            >\\r\\n              MRP\\r\\n            </md-header-cell>\\r\\n            <md-cell *cdkCellDef=\\\"let row\\\" (click)=\\\"myFun(row)\\\">\\r\\n              <div>{{ row.stockItemPrice.mrp }}</div>\\r\\n            </md-cell>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container cdkColumnDef=\\\"costPrice\\\">\\r\\n            <md-header-cell\\r\\n              *cdkHeaderCellDef\\r\\n              md-sort-header\\r\\n              style=\\\"position: sticky; top: 0\\\"\\r\\n            >\\r\\n              Cost Price\\r\\n            </md-header-cell>\\r\\n            <md-cell *cdkCellDef=\\\"let row\\\" (click)=\\\"myFun(row)\\\">\\r\\n              <div>{{ row.stockItemPrice.itemCostPrice }}</div>\\r\\n            </md-cell>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container cdkColumnDef=\\\"sellingPrice\\\">\\r\\n            <md-header-cell\\r\\n              *cdkHeaderCellDef\\r\\n              md-sort-header\\r\\n              style=\\\"position: sticky; top: 0\\\"\\r\\n            >\\r\\n              Selling Price\\r\\n            </md-header-cell>\\r\\n            <md-cell *cdkCellDef=\\\"let row\\\" (click)=\\\"myFun(row)\\\">\\r\\n              <div>{{ row.stockItemPrice.sellingPrice }}</div>\\r\\n            </md-cell>\\r\\n          </ng-container>\\r\\n          <ng-container cdkColumnDef=\\\"stockAtHand\\\">\\r\\n            <md-header-cell\\r\\n              *cdkHeaderCellDef\\r\\n              md-sort-header\\r\\n              style=\\\"position: sticky; top: 0\\\"\\r\\n            >\\r\\n              Stock at Hand\\r\\n            </md-header-cell>\\r\\n            <md-cell *cdkCellDef=\\\"let row\\\" (click)=\\\"myFun(row)\\\">\\r\\n              <div>{{ row.stockItemPrice.stockathand }}</div>\\r\\n            </md-cell>\\r\\n          </ng-container> -->\\r\\n          <ng-container cdkColumnDef=\\\"action\\\">\\r\\n            <md-header-cell\\r\\n              *cdkHeaderCellDef\\r\\n              fxLayoutAlign=\\\"end\\\"\\r\\n              fxFlex=\\\"10%\\\"\\r\\n              style=\\\"position: sticky; top: 0\\\"\\r\\n              >Action</md-header-cell\\r\\n            >\\r\\n            <md-cell\\r\\n              *cdkCellDef=\\\"let row\\\"\\r\\n              (click)=\\\"selectItem(row)\\\"\\r\\n              fxLayoutAlign=\\\"end\\\"\\r\\n              fxFlex=\\\"10%\\\"\\r\\n            >\\r\\n              <md-icon color=\\\"accent\\\" [mdMenuTriggerFor]=\\\"sendMenu\\\"\\r\\n                >more_vert</md-icon\\r\\n              >\\r\\n            </md-cell>\\r\\n          </ng-container>\\r\\n\\r\\n          <md-header-row\\r\\n            *cdkHeaderRowDef=\\\"displayedColumns\\\"\\r\\n            style=\\\" position: sticky;\\r\\n          top: 0;\\r\\n          z-index: 100;\\r\\n          background: white;\\\"\\r\\n          ></md-header-row>\\r\\n          <md-row *cdkRowDef=\\\"let row; columns: displayedColumns\\\"></md-row>\\r\\n        </md-table>\\r\\n      </md-card-content>\\r\\n    </md-card>\\r\\n    <md-paginator\\r\\n      #paginator\\r\\n      style=\\\"width: 100%\\\"\\r\\n      [length]=\\\"dataSource.data?.length\\\"\\r\\n      [pageIndex]=\\\"0\\\"\\r\\n      [pageSize]=\\\"10\\\"\\r\\n      [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"\\r\\n    >\\r\\n    </md-paginator>\\r\\n  </div>\\r\\n  <md-menu #sendMenu=\\\"mdMenu\\\" style=\\\"padding: 1rem;\\\">\\r\\n    <button md-menu-item (click)=\\\"view()\\\">View</button>\\r\\n    <button md-menu-item (click)=\\\"edit()\\\">Edit</button>\\r\\n    <button md-menu-item (click)=\\\"delete()\\\">Delete</button>\\r\\n  </md-menu>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/stockitem/stock-item-listing/stock-item-listing.component.html\n// module id = ../../../../../src/app/components/admin/stockitem/stock-item-listing/stock-item-listing.component.html\n// module chunks = 1","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/stockitem/stock-item-listing/stock-item-listing.component.scss\n// module id = ../../../../../src/app/components/admin/stockitem/stock-item-listing/stock-item-listing.component.scss\n// module chunks = 1","import { StockItemDataSource } from \"./stock-item-listing.datasource\";\r\nimport { AppService } from \"app/shared/service/app.service\";\r\n//import { MdSort, MdPaginator, MdDialog } from \"@angular/material\";\r\nimport { Component, OnInit, ViewChild, ElementRef } from \"@angular/core\";\r\nimport { RestService } from \"app/common/rest.service\";\r\nimport { DialogDeleteStockItem } from \"./dialog-delete-stock-item\";\r\n//import { Util } from \"app/shared/utils/util\";\r\n//import { FormBuilder, FormGroup, FormControl } from \"@angular/forms\";\r\n// import { DataSource } from \"@angular/cdk\";\r\n\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport \"rxjs/add/observable/fromEvent\";\r\nimport \"rxjs/add/operator/debounceTime\";\r\nimport \"rxjs/add/operator/distinctUntilChanged\";\r\n//import { DialogContentExampleDialogCustomer } from \"./DialogContentExampleDialogCustomer\";\r\nimport {\r\n  MdDialog,\r\n  MdSort,\r\n  MdDialogRef,\r\n  MD_DIALOG_DATA,\r\n  MdPaginator\r\n} from \"@angular/material\";\r\n\r\n@Component({\r\n  selector: \"app-stock-item-listing\",\r\n  templateUrl: \"./stock-item-listing.component.html\",\r\n  styleUrls: [\"./stock-item-listing.component.scss\"]\r\n})\r\nexport class StockItemListingComponent implements OnInit {\r\n  // stockForm: FormGroup;\r\n  // serachObj: any = {};\r\n  selectedItem: any = null;\r\n  selectedItemForView: any;\r\n\r\n  //searchField: FormControl;\r\n\r\n  @ViewChild(\"filter\") filter: ElementRef;\r\n  @ViewChild(MdSort) sort: MdSort;\r\n  @ViewChild(MdPaginator) paginator: MdPaginator;\r\n\r\n  dataSource: StockItemDataSource = null;\r\n  displayedColumns: any[] = [\r\n    \"productName\",\r\n    \"stockathand\",\r\n    \"brandName\",\r\n    \"categoryName\",\r\n    \"action\"\r\n  ];\r\n\r\n  //  searchObj: any = {};\r\n  constructor(\r\n    private appService: AppService,\r\n    private restService: RestService,\r\n    public dialog: MdDialog\r\n  ) {}\r\n\r\n  // ngOnInit() {\r\n\r\n  //   this.dataSource = new StockItemDataSource(\r\n  //     this.restService,\r\n  //     {},\r\n  //     this.sort,\r\n  //     this.paginator\r\n  //   );\r\n  //   Observable.fromEvent(this.filter.nativeElement, \"keyup\")\r\n  //   .debounceTime(100)\r\n  //   .distinctUntilChanged()\r\n  //   .subscribe(() => {\r\n  //     if (!this.dataSource) {\r\n  //       return;\r\n  //     }\r\n  //     this.dataSource.filter = this.filter.nativeElement.value;\r\n  //   });\r\n  // //  this.searchField = new FormControl();\r\n  //   // this.searchObj = { id: this.appService.getBranch().id };\r\n  //   //this.callDataSource();\r\n  //   // this.serachObj.productName = null;\r\n  //  // this.searchObj.productName = null;\r\n  //   // this.searchObj.crdnNumber = null;\r\n  // }\r\n\r\n  ngOnInit() {\r\n    this.dataSource = new StockItemDataSource(\r\n      this.restService,\r\n      {},\r\n      this.sort,\r\n      this.paginator\r\n    );\r\n    Observable.fromEvent(this.filter.nativeElement, \"keyup\")\r\n      .debounceTime(100)\r\n      .distinctUntilChanged()\r\n      .subscribe(() => {\r\n        if (!this.dataSource) {\r\n          return;\r\n        }\r\n        this.dataSource.filter = this.filter.nativeElement.value;\r\n      });\r\n  }\r\n  // callDataSourceFilter() {\r\n  //   console.log(\"hai\");\r\n  // }\r\n\r\n  // callDataSource() {\r\n  //   this.dataSource = new StockItemDataSource(\r\n  //     this.restService,\r\n  //     this.searchObj,\r\n  //     this.sort,\r\n  //     this.paginator,\r\n  //     this.searchField\r\n  //   );\r\n  // }\r\n  searchObj: any = {};\r\n\r\n  onKeydown(filterValue: string) {\r\n    if (filterValue.length < 1) return;\r\n    if (filterValue.length < 1) {\r\n      // For First three letters no search - display all\r\n      this.clearAll();\r\n    } else this.ApplyFilter(filterValue);\r\n  }\r\n  public ApplyFilter(filterValue: string) {\r\n    this.searchObj = {};\r\n    this.dataSource = new StockItemDataSource(\r\n      this.restService,\r\n      {},\r\n      this.sort,\r\n      this.paginator\r\n    );\r\n    filterValue = filterValue.trim().toLowerCase();\r\n    this.dataSource.filter = filterValue;\r\n  }\r\n  dataList: any = [];\r\n\r\n  selectItem(item: any) {\r\n    this.selectedItem = item;\r\n  }\r\n  onSelectedItem(row) {\r\n    this.selectedItem = row;\r\n  }\r\n\r\n  myFun(row) {\r\n    this.selectedItemForView = row;\r\n    this.appService.navigate(\"./admin/stockitem-management\", [\r\n      { id: this.selectedItemForView.id, isEditable: false }\r\n    ]);\r\n\r\n    console.log(row);\r\n    console.log(this.searchObj);\r\n  }\r\n\r\n  // onKeydown(filterValue: string) {\r\n  //   if (filterValue.length < 3) return;\r\n  //   if (filterValue.length < 4) {\r\n  //     // For First three letters no search - display all\r\n  //     this.clearAll();\r\n  //   } else this.ApplyFilter(filterValue);\r\n  // }\r\n  // public ApplyFilter(filterValue: string) {\r\n  //   this.searchObject = {};\r\n  //   this.dataSource = new StockItemDataSource(\r\n  //     this.restService,\r\n  //     {},\r\n  //     this.sort,\r\n  //     this.paginator\r\n  //   );\r\n  //   filterValue = filterValue.trim().toLowerCase();\r\n  //   this.dataSource.filter = filterValue;\r\n  // }\r\n  // searchObj: any = null;\r\n\r\n  view(item: any) {\r\n    this.appService.navigate(\"/admin/stockitem-management\", [\r\n      { id: this.selectedItem.id, isEditable: false }\r\n    ]);\r\n  }\r\n\r\n  edit(item: any) {\r\n    this.appService.navigate(\"/admin/stockitem-management\", [\r\n      { id: this.selectedItem.id, isEditable: true }\r\n    ]);\r\n  }\r\n\r\n  //For delete Popup\r\n\r\n  openDialog(id) {\r\n    const dialogRef = this.dialog.open(DialogDeleteStockItem, {\r\n      width: \"500px\",\r\n      height: \"250px\",\r\n      data: id\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.clearAll();\r\n    });\r\n  }\r\n  public clearAll() {\r\n    this.searchObj = {};\r\n    this.dataSource = new StockItemDataSource(\r\n      this.restService,\r\n      {},\r\n      this.sort,\r\n      this.paginator\r\n    );\r\n  }\r\n\r\n  // public clearAll() {\r\n  //   this.searchObj = {};\r\n  //   this.dataSource = new StockItemDataSource(\r\n  //     this.restService,\r\n  //     {},\r\n  //     this.sort,\r\n  //     this.paginator,\r\n  //     this.searchField\r\n  //   );\r\n  // }\r\n  // delete() {\r\n  //   this.openDialog({ id: [this.selectedItem.id] });\r\n  // }\r\n  delete(item: any) {\r\n    this.openDialog(this.selectedItem.id);\r\n  }\r\n\r\n  // delete(item: any) {\r\n  //   this.openDialog(this.selectedItem.id);\r\n  // }\r\n  // onSelectedItem(row) {\r\n  //   this.selectedItem = row;\r\n  // }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/stockitem/stock-item-listing/stock-item-listing.component.ts","import { Component, OnInit, Output, EventEmitter } from \"@angular/core\";\r\nimport { DataSource } from \"@angular/cdk\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\n\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport \"rxjs/add/operator/startWith\";\r\nimport \"rxjs/add/observable/merge\";\r\nimport \"rxjs/add/operator/map\";\r\nimport { MdSort, MdPaginator } from \"@angular/material\";\r\nimport { RestService } from \"app/common/rest.service\";\r\nimport { FormBuilder, FormGroup, FormControl } from \"@angular/forms\";\r\n\r\nexport class StockItemDataSource extends DataSource<any> {\r\n  // public data: any[] = [];\r\n  // private data: any[] = null;\r\n  // private originaldata: any[] = null;\r\n  _filterChange = new BehaviorSubject(\"\");\r\n\r\n  public get filter(): string {\r\n    return this._filterChange.value;\r\n  }\r\n  public set filter(filter: string) {\r\n    this._filterChange.next(filter);\r\n  }\r\n  public data: any[] = [];\r\n  constructor(\r\n    private restService: RestService,\r\n    private searchObj: any,\r\n    private sort: MdSort,\r\n    private paginator: MdPaginator //   private stockForm: FormControl\r\n  ) {\r\n    super();\r\n    this.restService.searchStockItems(this.searchObj).subscribe(results => {\r\n      if (results) {\r\n        this.data = results;\r\n      }\r\n    });\r\n\r\n    // this.getDataList();\r\n  }\r\n\r\n  // getDataList() {\r\n  //   this.restService.showLoader(true);\r\n  //   this.restService.searchStockItems(this.searchObj).subscribe(results => {\r\n  //     if (results) {\r\n  //       this.data = results;\r\n  //       this.originaldata = results;\r\n  //       this.restService.showLoader(false);\r\n  //       console.log(this.data);\r\n  //     }\r\n  //   });\r\n  // }\r\n  // connected: boolean = false;\r\n  connect(): any {\r\n    const displayDataChanges = [\r\n      this.restService.searchStockItems(this.searchObj),\r\n      this._filterChange,\r\n      this.sort.mdSortChange,\r\n      this.paginator.page\r\n      //   this.stockForm.valueChanges\r\n    ];\r\n    // this.connected = true;\r\n    console.log(\"im in connect yay !! \");\r\n\r\n    return Observable.merge(...displayDataChanges).map(() => {\r\n      this.data = this.data.slice().filter((item: any) => {\r\n        // return this.data.slice().filter((item: any) => {\r\n        //console.log(item)\r\n        let searchStr: string =\r\n          item.productName +\r\n          \"\" +\r\n          item.stockathand +\r\n          \"\" +\r\n          item.categoryName +\r\n          \"\" +\r\n          item.brandName +\r\n          \"\" +\r\n          item.companyId;\r\n        //console.log(searchStr);\r\n        return searchStr.toLowerCase().indexOf(this.filter.toLowerCase()) != -1;\r\n      });\r\n\r\n      const myData = this.getSortedData();\r\n\r\n      const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n      return myData.splice(startIndex, this.paginator.pageSize);\r\n    });\r\n\r\n    // return Observable.merge(...displayDataChanges).map(results => {\r\n    //   if (this.data == null) {\r\n    //     this.data = results;\r\n    //     this.originaldata = results;\r\n    //   }\r\n    //   if (this.searchObj.productName != null) {\r\n    //     if (this.searchObj.productName.length == 0) {\r\n    //       this.data = this.originaldata;\r\n    //     } else {\r\n    //       let dataf = this.originaldata.filter(item => {\r\n    //         console.log(\"item is\", item);\r\n    //         console.log(\"item.productName\", item.productName);\r\n    //         console.log(\r\n    //           \"compare\",\r\n    //           item.productName.includes(this.searchObj.productName)\r\n    //         );\r\n    //         return item.productName.includes(this.searchObj.productName);\r\n    //       });\r\n    //       console.log(\"after filter \", dataf);\r\n    //       this.data = dataf;\r\n    //       console.log(\"data is now \", this.data);\r\n    //     }\r\n    //   }\r\n\r\n    //   let myData = this.getSortedData();\r\n\r\n    //   // Grab the page's slice of data.\r\n    //   const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n    //   return myData.splice(startIndex, this.paginator.pageSize);\r\n    // });\r\n  }\r\n\r\n  disconnect() {}\r\n\r\n  getSortedData(): any[] {\r\n    const data = this.data.slice();\r\n    if (this.sort.active && this.sort.direction == \"\") {\r\n      return data;\r\n    }\r\n\r\n    return data.sort((a, b) => {\r\n      let propertyA: number | string | Date = \"\";\r\n      let propertyB: number | string | Date = \"\";\r\n      switch (this.sort.active) {\r\n        case \"productName\":\r\n          [propertyA, propertyB] = [a.productName, b.productName];\r\n          break;\r\n        case \"stockathand\":\r\n          [propertyA, propertyB] = [\r\n            a.stockItemPrice.stockathand,\r\n            b.stockItemPrice.stockathand\r\n          ];\r\n          break;\r\n        case \"categoryName\":\r\n          [propertyA, propertyB] = [a.categoryName, b.categoryName];\r\n          break;\r\n        case \"brandName\":\r\n          [propertyA, propertyB] = [a.brandName, b.brandName];\r\n          break;\r\n        case \"mrpPrice\":\r\n          [propertyA, propertyB] = [a.stockItemPrice.mrp, b.stockItemPrice.mrp];\r\n          break;\r\n        case \"costPrice\":\r\n          [propertyA, propertyB] = [\r\n            a.stockItemPrice.itemCostPrice,\r\n            b.stockItemPrice.itemCostPrice\r\n          ];\r\n          break;\r\n        case \"sellingPrice\":\r\n          [propertyA, propertyB] = [\r\n            a.stockItemPrice.sellingPrice,\r\n            b.stockItemPrice.sellingPrice\r\n          ];\r\n          break;\r\n      }\r\n      let valueA = isNaN(+propertyA) ? propertyA : +propertyA;\r\n      let valueB = isNaN(+propertyB) ? propertyB : +propertyB;\r\n\r\n      return (\r\n        (valueA < valueB ? -1 : 1) * (this.sort.direction == \"asc\" ? 1 : -1)\r\n      );\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/stockitem/stock-item-listing/stock-item-listing.datasource.ts","import {\r\n  Component,\r\n  Inject,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ViewChild,\r\n  ElementRef\r\n} from \"@angular/core\";\r\nimport { MdDialog, MdDialogRef, MD_DIALOG_DATA } from \"@angular/material\";\r\nimport { RestService } from \"./../../../common/rest.service\";\r\nimport { AppService } from \"../../../shared/service/app.service\";\r\n\r\nimport {\r\n  TdDataTableService,\r\n  TdDataTableSortingOrder,\r\n  ITdDataTableSortChangeEvent,\r\n  ITdDataTableColumn\r\n} from \"@covalent/core\";\r\n@Component({\r\n  selector: \"dialog-content-example-dialog\",\r\n  template:\r\n    '<h2 style=\"color:#000;\">Delete Confirmation</h2><hr style=\"background:#fff;\" /><br/><p style=\"font-size:16px;\">Are you sure you want to delete supplier?</p><br/><br/><button  md-button color=\"primary\" (click)=\"ok()\" style=\"background:#ffc107; color:#fff;\">Yes</button><button md-button color=\"primary\" (click)=\"cancel()\" style=\"float:right; background:#ffc107; color:#fff;\">No</button>'\r\n})\r\nexport class DialogContentExampleDialog {\r\n  id: any = null;\r\n  constructor(\r\n    private restService: RestService,\r\n    private appService: AppService,\r\n    public dialogRef: MdDialogRef<DialogContentExampleDialog>,\r\n    @Inject(MD_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.id = data;\r\n  }\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  ok() {\r\n    this.restService.supplierDelete(this.id).subscribe(result => {\r\n      this.dialogRef.close();\r\n      this.appService.showMessage(\"Supplier Management Deleted Successfully \");\r\n    });\r\n  }\r\n  cancel() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/suppliermanagement/DialogContentExampleDialog.ts","module.exports = \"<md-card>\\r\\n  <!-- <span class=\\\"title-underline\\\">Billing Address</span> -->\\r\\n  <form [formGroup]=\\\"myForm\\\" novalidate autocomplete=\\\"off\\\">\\r\\n    <!-- Editable Div Start-->\\r\\n    <div class=\\\"row \\\" *ngIf=\\\"isEditable == 'true'\\\">\\r\\n      <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n        <input\\r\\n          mdInput\\r\\n          placeholder=\\\"Address Lane\\\"\\r\\n          [formControl]=\\\"myForm.controls.supplier_address_lane\\\"\\r\\n          [(ngModel)]=\\\"supplierManagement.address.lane\\\"\\r\\n          style=\\\"text-transform: capitalize\\\"\\r\\n        />\\r\\n        <md-hint>\\r\\n          <form-messages [control]=\\\"myForm.controls.supplier_address_lane\\\">\\r\\n          </form-messages>\\r\\n        </md-hint>\\r\\n      </md-input-container>\\r\\n\\r\\n      <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n        <input\\r\\n          mdInput\\r\\n          placeholder=\\\"Street\\\"\\r\\n          [formControl]=\\\"myForm.controls.supplier_address_street\\\"\\r\\n          [(ngModel)]=\\\"supplierManagement.address.street\\\"\\r\\n          style=\\\"text-transform: capitalize\\\"\\r\\n        />\\r\\n        <md-hint>\\r\\n          <form-messages [control]=\\\"myForm.controls.supplier_address_street\\\">\\r\\n          </form-messages>\\r\\n        </md-hint>\\r\\n      </md-input-container>\\r\\n\\r\\n      <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n        <input\\r\\n          mdInput\\r\\n          placeholder=\\\"Area\\\"\\r\\n          [formControl]=\\\"myForm.controls.supplier_address_area\\\"\\r\\n          [(ngModel)]=\\\"supplierManagement.address.area\\\"\\r\\n          style=\\\"text-transform: capitalize\\\"\\r\\n        />\\r\\n        <md-hint>\\r\\n          <form-messages [control]=\\\"myForm.controls.supplier_address_area\\\">\\r\\n          </form-messages>\\r\\n        </md-hint>\\r\\n      </md-input-container>\\r\\n\\r\\n      <!-- <md-input-container class=\\\"col-xs-4 padding-side \\\">\\r\\n                <input mdInput required=\\\"required\\\" placeholder=\\\"State\\\" [formControl]=\\\"myForm.controls.supplier_address_state\\\" [ngModel]=\\\"supplierManagement.address.state\\\"\\r\\n                    (focus)=\\\"filterCustomer(null)\\\" (keyup)=\\\"filterCustomer($event.target.value)\\\" [mdAutocomplete]=\\\"     \\\"\\r\\n                    [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                <md-autocomplete #autoMobile=\\\"mdAutocomplete\\\">\\r\\n                    <md-option *ngFor=\\\"let keyValues of stateList \\\" [value]=\\\"keyValues.key\\\" (click)=\\\"selectedCustomer(option)\\\">\\r\\n                        {{keyValues.value}}\\r\\n                    </md-option>\\r\\n                </md-autocomplete>\\r\\n            </md-input-container> -->\\r\\n      <!-- // Autocomplete States\\r\\n                <md-input-container class=\\\"col-xs-4 padding-side \\\">\\r\\n                <input mdInput required=\\\"required\\\" placeholder=\\\"State\\\" [ngModel]=\\\"supplierManagement.address.state\\\" (focus)=\\\"filterStates(null)\\\"\\r\\n                    (keyup)=\\\"filterStates($event.target.value)\\\" [mdAutocomplete]=\\\"autoMobile\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                <md-autocomplete #autoMobile=\\\"mdAutocomplete\\\">\\r\\n                    <md-option *ngFor=\\\"let keyValues of filteredStates\\\" [value]=\\\"keyValues[0]\\\">\\r\\n                        {{keyValues[1]}}\\r\\n                    </md-option>\\r\\n                </md-autocomplete>\\r\\n            </md-input-container> -->\\r\\n      <!-- <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n        <input\\r\\n          mdInput\\r\\n          required\\r\\n          placeholder=\\\"Choose State\\\"\\r\\n          [formControl]=\\\"myForm.controls.supplier_address_state\\\"\\r\\n          [(ngModel)]=\\\"supplierManagement.address.state\\\"\\r\\n          [mdAutocomplete]=\\\"address\\\"\\r\\n          (focus)=\\\"filterStates($event.target.value)\\\"\\r\\n          (keyup)=\\\"filterStates($event.target.value)\\\"\\r\\n        />\\r\\n        <md-autocomplete #address=\\\"mdAutocomplete\\\">\\r\\n          <md-option\\r\\n            *ngFor=\\\"let option of filteredStates\\\"\\r\\n            [value]=\\\"option.value\\\"\\r\\n          >\\r\\n            {{ option.value }}\\r\\n          </md-option>\\r\\n        </md-autocomplete>\\r\\n        <md-hint>\\r\\n          <form-messages [control]=\\\"myForm.controls.supplier_address_state\\\">\\r\\n          </form-messages>\\r\\n        </md-hint>\\r\\n      </md-input-container> -->\\r\\n\\r\\n      <md-input-container class=\\\"padding-side\\\">\\r\\n        <input\\r\\n          mdInput\\r\\n          required\\r\\n          placeholder=\\\"Choose State\\\"\\r\\n          [formControl]=\\\"myForm.controls.supplier_address_state\\\"\\r\\n          [(ngModel)]=\\\"supplierManagement.address.state\\\"\\r\\n          [mdAutocomplete]=\\\"address\\\"\\r\\n          (focus)=\\\"filterStates(null)\\\"\\r\\n          (keyup)=\\\"filterStates($event.target.value)\\\"\\r\\n        />\\r\\n        <md-autocomplete #address=\\\"mdAutocomplete\\\">\\r\\n          <md-option\\r\\n            *ngFor=\\\"let option of filteredStates\\\"\\r\\n            [value]=\\\"option.value\\\"\\r\\n          >\\r\\n            {{ option.value }}\\r\\n          </md-option>\\r\\n        </md-autocomplete>\\r\\n        <md-hint>\\r\\n          <form-messages [control]=\\\"myForm.controls.supplier_address_state\\\">\\r\\n          </form-messages>\\r\\n        </md-hint>\\r\\n      </md-input-container>\\r\\n      <!-- \\r\\n      <div class=\\\"md-select col-xs-4\\\">\\r\\n        <md-select\\r\\n          required\\r\\n          placeholder=\\\"State\\\"\\r\\n          [formControl]=\\\"myForm.controls.supplier_address_state\\\"\\r\\n          [(ngModel)]=\\\"supplierManagement.address.state\\\"\\r\\n        >\\r\\n          <md-option\\r\\n            *ngFor=\\\"let keyValues of stateList\\\"\\r\\n            [value]=\\\"keyValues.key\\\"\\r\\n          >\\r\\n            {{ keyValues.value }}\\r\\n          </md-option>\\r\\n        </md-select>\\r\\n        <md-hint>\\r\\n          <form-messages [control]=\\\"myForm.controls.supplier_address_state\\\">\\r\\n          </form-messages>\\r\\n        </md-hint>\\r\\n      </div> -->\\r\\n\\r\\n      <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n        <input\\r\\n          mdInput\\r\\n          placeholder=\\\"City\\\"\\r\\n          [formControl]=\\\"myForm.controls.supplier_address_city\\\"\\r\\n          [(ngModel)]=\\\"supplierManagement.address.city\\\"\\r\\n          style=\\\"text-transform: capitalize\\\"\\r\\n          required\\r\\n        />\\r\\n        <md-hint>\\r\\n          <form-messages [control]=\\\"myForm.controls.supplier_address_city\\\">\\r\\n          </form-messages>\\r\\n        </md-hint>\\r\\n      </md-input-container>\\r\\n\\r\\n      <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n        <input\\r\\n          mdInput\\r\\n          placeholder=\\\"Pincode\\\"\\r\\n          [formControl]=\\\"myForm.controls.supplier_address_zipCode\\\"\\r\\n          [(ngModel)]=\\\"supplierManagement.address.zipCode\\\"\\r\\n        />\\r\\n        <md-hint>\\r\\n          <form-messages [control]=\\\"myForm.controls.supplier_address_zipCode\\\">\\r\\n          </form-messages>\\r\\n        </md-hint>\\r\\n      </md-input-container>\\r\\n    </div>\\r\\n    <!-- Editable Div End-->\\r\\n    <!--Non Editable Div Start-->\\r\\n\\r\\n    <div class=\\\"row \\\" *ngIf=\\\"isEditable == 'false'\\\">\\r\\n      <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n        <input\\r\\n          mdInput\\r\\n          placeholder=\\\"Address Lane\\\"\\r\\n          readonly\\r\\n          [formControl]=\\\"myForm.controls.supplier_address_lane\\\"\\r\\n          [(ngModel)]=\\\"supplierManagement.address.lane\\\"\\r\\n        />\\r\\n        <md-hint>\\r\\n          <form-messages [control]=\\\"myForm.controls.supplier_address_lane\\\">\\r\\n          </form-messages>\\r\\n        </md-hint>\\r\\n      </md-input-container>\\r\\n\\r\\n      <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n        <input\\r\\n          mdInput\\r\\n          placeholder=\\\"Street\\\"\\r\\n          readonly\\r\\n          [formControl]=\\\"myForm.controls.supplier_address_street\\\"\\r\\n          [(ngModel)]=\\\"supplierManagement.address.street\\\"\\r\\n        />\\r\\n        <md-hint>\\r\\n          <form-messages [control]=\\\"myForm.controls.supplier_address_street\\\">\\r\\n          </form-messages>\\r\\n        </md-hint>\\r\\n      </md-input-container>\\r\\n\\r\\n      <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n        <input\\r\\n          mdInput\\r\\n          placeholder=\\\"Area\\\"\\r\\n          readonly\\r\\n          [formControl]=\\\"myForm.controls.supplier_address_area\\\"\\r\\n          [(ngModel)]=\\\"supplierManagement.address.area\\\"\\r\\n        />\\r\\n        <md-hint>\\r\\n          <form-messages [control]=\\\"myForm.controls.supplier_address_area\\\">\\r\\n          </form-messages>\\r\\n        </md-hint>\\r\\n      </md-input-container>\\r\\n\\r\\n      <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n        <input\\r\\n          mdInput\\r\\n          placeholder=\\\"State\\\"\\r\\n          readonly\\r\\n          [formControl]=\\\"myForm.controls.supplier_address_state\\\"\\r\\n          [(ngModel)]=\\\"supplierManagement.address.state\\\"\\r\\n        />\\r\\n        <md-hint>\\r\\n          <form-messages [control]=\\\"myForm.controls.supplier_address_state\\\">\\r\\n          </form-messages>\\r\\n        </md-hint>\\r\\n      </md-input-container>\\r\\n\\r\\n      <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n        <input\\r\\n          mdInput\\r\\n          placeholder=\\\"City\\\"\\r\\n          readonly\\r\\n          [formControl]=\\\"myForm.controls.supplier_address_city\\\"\\r\\n          [(ngModel)]=\\\"supplierManagement.address.city\\\"\\r\\n        />\\r\\n        <md-hint>\\r\\n          <form-messages [control]=\\\"myForm.controls.supplier_address_city\\\">\\r\\n          </form-messages>\\r\\n        </md-hint>\\r\\n      </md-input-container>\\r\\n\\r\\n      <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n        <input\\r\\n          mdInput\\r\\n          placeholder=\\\"Pincode\\\"\\r\\n          readonly\\r\\n          [formControl]=\\\"myForm.controls.supplier_address_zipCode\\\"\\r\\n          [(ngModel)]=\\\"supplierManagement.address.zipCode\\\"\\r\\n        />\\r\\n        <md-hint>\\r\\n          <form-messages [control]=\\\"myForm.controls.supplier_address_zipCode\\\">\\r\\n          </form-messages>\\r\\n        </md-hint>\\r\\n      </md-input-container>\\r\\n    </div>\\r\\n    <!--Non Editable Div End-->\\r\\n  </form>\\r\\n\\r\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n    <button\\r\\n      md-raised-button\\r\\n      color=\\\"accent\\\"\\r\\n      class=\\\"padding-side\\\"\\r\\n      (click)=\\\"back()\\\"\\r\\n    >\\r\\n      Back\\r\\n    </button>\\r\\n    <button\\r\\n      md-raised-button\\r\\n      color=\\\"accent\\\"\\r\\n      *ngIf=\\\"isEditable == 'true'\\\"\\r\\n      [disabled]=\\\"!myForm.valid\\\"\\r\\n      (click)=\\\"next()\\\"\\r\\n    >\\r\\n      {{ isEdit ? \\\"Update Supplier\\\" : \\\"Create Supplier\\\" }}\\r\\n    </button>\\r\\n    <button\\r\\n      md-raised-button\\r\\n      color=\\\"accent\\\"\\r\\n      *ngIf=\\\"isEditable == 'false'\\\"\\r\\n      [disabled]=\\\"!myForm.valid\\\"\\r\\n      (click)=\\\"done()\\\"\\r\\n    >\\r\\n      Done\\r\\n    </button>\\r\\n  </div>\\r\\n</md-card>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/suppliermanagement/sm.address.component.html\n// module id = ../../../../../src/app/components/admin/suppliermanagement/sm.address.component.html\n// module chunks = 1","import { Component, OnInit, Input, Output, EventEmitter } from \"@angular/core\";\r\nimport { AppService } from \"../../../shared/service/app.service\";\r\nimport { AnimationService } from \"../../../shared/service/animation.service\";\r\nimport { RestService } from \"./../../../common/rest.service\";\r\nimport { Prop } from \"./../../../common/props\";\r\nimport { SupplierAddress } from \"./../../../entities/supplieraddress.entity\";\r\nimport { SupplierFormGroup } from \"../../../forms/supplier.form\";\r\nimport { SupplierManagement } from \"../../../entities/suppliermanagement\";\r\n\r\n@Component({\r\n  selector: \"app-addresses\",\r\n  templateUrl: \"./sm.address.component.html\"\r\n})\r\nexport class SmAddressComponent implements OnInit {\r\n  // address:Address;\r\n  myForm: any = SupplierFormGroup.init();\r\n  isSameBillingAddress: boolean = true;\r\n  isEditable: string = \"true\";\r\n  isEdit: boolean = false;\r\n  @Input(\"supplierManagement\") supplierManagement: SupplierManagement;\r\n  @Output(\"addressesEvent\") addressesEvent = new EventEmitter<string>();\r\n  @Output(\"backEvent\") backEvent = new EventEmitter<string>();\r\n\r\n  constructor(\r\n    private appService: AppService,\r\n    private restService: RestService\r\n  ) {\r\n    SupplierFormGroup.address(this.myForm);\r\n    this.isEditable = this.appService.getParam(\"isEditable\");\r\n  }\r\n\r\n  ngOnInit() {\r\n    console.log(\"Account Address\");\r\n    this.stateLoad();\r\n    // this.cityLoad(21);\r\n    let id = this.appService.getParam(\"id\");\r\n    this.isEditable = this.appService.getParam(\"isEditable\");\r\n    if (id !== undefined) {\r\n      this.retrieveSupplier(id);\r\n      this.isEdit = true;\r\n    } else {\r\n      this.isEdit = false;\r\n      this.isEditable = \"true\";\r\n    }\r\n  }\r\n\r\n  done() {\r\n    this.appService.navigate(\"/admin/suppliersearch\", []);\r\n  }\r\n\r\n  retrieveSupplier(id: string) {\r\n    this.restService.getSupplier(id).subscribe(result => {\r\n      if (result) {\r\n        this.supplierManagement = result;\r\n\r\n        this.isEdit = true;\r\n      }\r\n    });\r\n  }\r\n  next() {\r\n    this.addressesEvent.emit();\r\n  }\r\n  back() {\r\n    this.backEvent.emit();\r\n  }\r\n\r\n  stateList: any[] = [];\r\n  stateListTemp: any[] = [];\r\n  stateLoad() {\r\n    this.restService\r\n      .dataloadFromFile(\"./assets/json/common.json\")\r\n      .subscribe(results => {\r\n        this.stateList = results[\"stateList\"];\r\n        this.stateListTemp = results;\r\n      });\r\n  }\r\n\r\n  filteredStates: any[] = [];\r\n\r\n  filterStates(val: string) {\r\n    console.log(val);\r\n    this.filteredStates =\r\n      val && val != \"\"\r\n        ? this.stateList.filter(\r\n            s => s.value.toLowerCase().indexOf(val.toLowerCase()) >= 0\r\n          )\r\n        : this.stateList;\r\n  }\r\n\r\n  //  addressChange() {\r\n  //      if(this.isSameBillingAddress) {\r\n  //        SupplierFormGroup.shippingAddress(this.myForm, false);\r\n  //      } else {\r\n  //        SupplierFormGroup.shippingAddress(this.myForm, true);\r\n  //      }\r\n  //  }\r\n  //   cityList: any[] = [];\r\n  //   cityLoad(stateId:number) {\r\n  //     this.restService.cityload(stateId)\r\n  //       .subscribe( results => {\r\n  //           console.log('stateId=='+stateId);\r\n  //         this.cityList = results;\r\n  //       })\r\n  //   }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/suppliermanagement/sm.address.component.ts","module.exports = \"<md-card>\\r\\n    <!--     <span class=\\\"title-underline\\\">Business  Details</span> -->\\r\\n        <form [formGroup]=\\\"myForm\\\" novalidate autocomplete='off'>\\r\\n            <!-- Editable Div Start -->\\r\\n            <div class=\\\"row \\\" *ngIf=\\\"isEditable== true\\\">\\r\\n                <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n                    <input mdInput placeholder=\\\"Account Number\\\" [formControl]=\\\"myForm.controls.supplier_accountNumber\\\" [(ngModel)]=\\\"supplierManagement.accountNumber\\\">\\r\\n                    <md-hint>\\r\\n                        <form-messages [control]=\\\"myForm.controls.supplier_accountNumber \\\"> </form-messages>\\r\\n                    </md-hint>\\r\\n                </md-input-container>\\r\\n                \\r\\n                 <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n                    <input mdInput placeholder=\\\"Bank Branch Name \\\" [formControl]=\\\"myForm.controls.supplier_bankBranch\\\" [(ngModel)]=\\\"supplierManagement.bankBranch\\\">\\r\\n                    <md-hint>\\r\\n                        <form-messages [control]=\\\"myForm.controls.supplier_bankBranch \\\"> </form-messages>\\r\\n                    </md-hint>\\r\\n                </md-input-container>\\r\\n                 <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n                    <input mdInput type=\\\"text\\\" placeholder=\\\"IFSC Code \\\" [formControl]=\\\"myForm.controls.supplier_ifscCode\\\" [(ngModel)]=\\\"supplierManagement.ifscCode\\\">\\r\\n                    <md-hint>\\r\\n                        <form-messages [control]=\\\"myForm.controls.supplier_ifscCode \\\"> </form-messages>\\r\\n                    </md-hint>\\r\\n                </md-input-container>\\r\\n                 <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n                    <input mdInput type=\\\"text\\\" placeholder=\\\"MICR Code\\\" [formControl]=\\\"myForm.controls.supplier_micrCode\\\" [(ngModel)]=\\\"supplierManagement.micrCode\\\">\\r\\n                    <md-hint>\\r\\n                        <form-messages [control]=\\\"myForm.controls.supplier_micrCode \\\"> </form-messages>\\r\\n                    </md-hint>\\r\\n                </md-input-container>  \\r\\n                <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n                    <input mdInput placeholder=\\\"Others\\\" [formControl]=\\\"myForm.controls.supplier_others\\\" [(ngModel)]=\\\"supplierManagement.others\\\">\\r\\n                    <md-hint>\\r\\n                        <form-messages [control]=\\\"myForm.controls.supplier_others\\\"> </form-messages>\\r\\n                    </md-hint>\\r\\n                </md-input-container>\\r\\n            </div>\\r\\n            <!-- Editable Div End -->\\r\\n            <!-- Non Editable Div Start -->\\r\\n            <div class=\\\"row\\\" *ngIf=\\\"isEditable== 'false' \\\">\\r\\n                <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n                    <input mdInput placeholder=\\\"Account Number\\\" readonly [formControl]=\\\"myForm.controls.supplier_accountNumber\\\" [(ngModel)]=\\\"supplierManagement.accountNumber\\\">\\r\\n                    <md-hint>\\r\\n                        <form-messages [control]=\\\"myForm.controls.supplier_accountNumber \\\"> </form-messages>\\r\\n                    </md-hint>\\r\\n                </md-input-container>\\r\\n                \\r\\n                 <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n                    <input mdInput placeholder=\\\"Bank Branch Name \\\" readonly [formControl]=\\\"myForm.controls.supplier_bankBranch\\\" [(ngModel)]=\\\"supplierManagement.bankBranch\\\">\\r\\n                    <md-hint>\\r\\n                        <form-messages [control]=\\\"myForm.controls.supplier_bankBranch \\\"> </form-messages>\\r\\n                    </md-hint>\\r\\n                </md-input-container>\\r\\n                 <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n                    <input mdInput placeholder=\\\"IFSC Code \\\" readonly [formControl]=\\\"myForm.controls.supplier_ifscCode\\\" [(ngModel)]=\\\"supplierManagement.ifscCode\\\">\\r\\n                    <md-hint>\\r\\n                        <form-messages [control]=\\\"myForm.controls.supplier_ifscCode \\\"> </form-messages>\\r\\n                    </md-hint>\\r\\n                </md-input-container>\\r\\n                 <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n                    <input mdInput placeholder=\\\"MICR Code\\\" readonly [formControl]=\\\"myForm.controls.supplier_micrCode\\\" [(ngModel)]=\\\"supplierManagement.micrCode\\\">\\r\\n                    <md-hint>\\r\\n                        <form-messages [control]=\\\"myForm.controls.supplier_micrCode \\\"> </form-messages>\\r\\n                    </md-hint>\\r\\n                </md-input-container>  \\r\\n                <md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n                    <input mdInput placeholder=\\\"Others\\\" readonly [formControl]=\\\"myForm.controls.supplier_others\\\" [(ngModel)]=\\\"supplierManagement.others\\\">\\r\\n                    <md-hint>\\r\\n                        <form-messages [control]=\\\"myForm.controls.supplier_others\\\"> </form-messages>\\r\\n                    </md-hint>\\r\\n                </md-input-container>\\r\\n            </div>\\r\\n            <!-- Non Editable Div End -->\\r\\n        </form>\\r\\n       \\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n            <button md-raised-button color=\\\"accent\\\"  class=\\\"padding-side\\\" (click)=\\\"back()\\\">Back</button>\\r\\n            <button md-raised-button color=\\\"accent\\\" [disabled]=\\\"!myForm.valid\\\" (click)=\\\"next()\\\">Next</button>\\r\\n        </div>\\r\\n    </md-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/suppliermanagement/sm.bussiness.component.html\n// module id = ../../../../../src/app/components/admin/suppliermanagement/sm.bussiness.component.html\n// module chunks = 1","import { Component, OnInit, Input, Output, EventEmitter } from \"@angular/core\";\r\nimport { AppService } from \"../../../shared/service/app.service\";\r\nimport { AnimationService } from \"../../../shared/service/animation.service\";\r\nimport { RestService } from \"./../../../common/rest.service\";\r\nimport { Prop } from \"./../../../common/props\";\r\nimport { SupplierAddress } from \"./../../../entities/supplieraddress.entity\";\r\nimport { SupplierFormGroup } from \"../../../forms/supplier.form\";\r\nimport { SupplierManagement } from \"../../../entities/suppliermanagement\";\r\nimport { Util } from \"../../../shared/utils/util\";\r\n\r\n@Component({\r\n  selector: \"app-business\",\r\n  templateUrl: \"./sm.bussiness.component.html\"\r\n})\r\nexport class SmBusinessComponent implements OnInit {\r\n  // address:Address;\r\n  myForm: any = SupplierFormGroup.init();\r\n  isSameBillingAddress: boolean = true;\r\n  public isEditable : boolean = false;\r\n  @Input(\"supplierManagement\") supplierManagement: SupplierManagement;\r\n  //@Output('addressesEvent') addressesEvent = new EventEmitter<string>();\r\n  @Output(\"supplierBussinessDetail\") supplierBussinessDetail = new EventEmitter<\r\n    string\r\n  >();\r\n  @Output(\"backEvent\") backEvent = new EventEmitter<string>();\r\n\r\n  constructor(\r\n    private appService: AppService,\r\n    private restService: RestService\r\n  ) {\r\n    SupplierFormGroup.bankAccountDetails(this.myForm);\r\n    this.isEditable = this.appService.getParam(\"isEditable\");\r\n    //        let data = this.appService.getLocalItem('supplier');\r\n    //        console.log(data);\r\n  }\r\n\r\n  ngOnInit() {\r\n    console.log(\"Account Address\");\r\n    //        this.stateLoad();\r\n  }\r\n\r\n  next() {\r\n    this.supplierBussinessDetail.emit();\r\n  }\r\n  back() {\r\n    this.backEvent.emit();\r\n  }\r\n\r\n  //  addressChange() {\r\n  //      if(this.isSameBillingAddress) {\r\n  //        SupplierFormGroup.shippingAddress(this.myForm, false);\r\n  //      } else {\r\n  //        SupplierFormGroup.shippingAddress(this.myForm, true);  //      }\r\n  //  }\r\n\r\n  // cityList: any[] = [];\r\n  // cityLoad() {\r\n  //   this.restService.dataload('City')\r\n  //     .subscribe( results => {\r\n  //       this.cityList = results;\r\n  //     })\r\n  // }\r\n\r\n  stateList: any[] = [];\r\n  stateLoad() {\r\n    this.restService.dataload(\"State\").subscribe(results => {\r\n      this.stateList = results;\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/suppliermanagement/sm.bussiness.component.ts","module.exports = \"<md-card>\\r\\n\\t<form [formGroup]=\\\"myForm\\\" novalidate autocomplete='off'>\\r\\n\\t\\t<!-- Editable Div Start -->\\r\\n\\t\\t<div class=\\\"row\\\" *ngIf=\\\"isEditable==true\\\">\\r\\n\\t\\t\\t<div class=\\\"md-select col-xs-2\\\">\\r\\n\\t\\t\\t\\t<md-select required placeholder=\\\"Title\\\"\\r\\n\\t\\t\\t\\t [formControl]=\\\"myForm.controls.supplier_title\\\" [(ngModel)]=\\\"supplierManagement.title\\\">\\r\\n\\t\\t\\t\\t\\t<md-option *ngFor=\\\"let item of titleList\\\" [value]=\\\"item.value\\\">\\r\\n\\t\\t\\t\\t\\t\\t{{item.key}} </md-option>\\r\\n\\t\\t\\t\\t</md-select>\\r\\n\\t\\t\\t\\t<md-hint>\\r\\n\\t\\t\\t\\t\\t<form-messages [control]=\\\"myForm.controls.supplier_title\\\">\\r\\n\\t\\t\\t\\t\\t</form-messages>\\r\\n\\t\\t\\t\\t</md-hint>\\r\\n\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t<md-input-container class=\\\"col-xs-3 padding-side\\\">\\r\\n\\t\\t\\t\\t<input mdInput placeholder=\\\"First Name\\\" required [formControl]=\\\"myForm.controls.supplier_firstName\\\" [(ngModel)]=\\\"supplierManagement.firstName\\\" style=\\\"text-transform: capitalize\\\">\\r\\n\\t\\t\\t\\t<md-hint>\\r\\n\\t\\t\\t\\t\\t<form-messages [control]=\\\"myForm.controls.supplier_firstName\\\">\\r\\n\\t\\t\\t\\t\\t</form-messages>\\r\\n\\t\\t\\t\\t</md-hint>\\r\\n\\t\\t\\t</md-input-container>\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t<md-input-container class=\\\"col-xs-3 padding-side\\\">\\r\\n\\t\\t\\t\\t<input mdInput placeholder=\\\"Middle Name\\\" [formControl]=\\\"myForm.controls.supplier_middleName\\\" [(ngModel)]=\\\"supplierManagement.middleName\\\">\\r\\n\\t\\t\\t</md-input-container>\\r\\n\\r\\n\\t\\t\\t<md-input-container class=\\\"col-xs-4 padding-side\\\">\\r\\n\\t\\t\\t\\t<input mdInput placeholder=\\\"Last Name\\\" [formControl]=\\\"myForm.controls.supplier_lastName\\\" [(ngModel)]=\\\"supplierManagement.lastName\\\">\\r\\n\\t\\t\\t\\t<md-hint>\\r\\n\\t\\t\\t\\t\\t<form-messages [control]=\\\"myForm.controls.supplier_lastName\\\">\\r\\n\\t\\t\\t\\t\\t</form-messages>\\r\\n\\t\\t\\t\\t</md-hint>\\r\\n\\t\\t\\t</md-input-container>\\r\\n\\r\\n\\t\\t\\t<md-input-container class=\\\"col-xs-6 padding-side\\\">\\r\\n\\t\\t\\t\\t<input mdInput placeholder=\\\"Company Name\\\" required [formControl]=\\\"myForm.controls.supplier_companyName\\\" [(ngModel)]=\\\"supplierManagement.companyName\\\" style=\\\"text-transform: capitalize\\\">\\r\\n\\t\\t\\t\\t<md-hint>\\r\\n\\t\\t\\t\\t\\t<form-messages [control]=\\\"myForm.controls.supplier_companyName\\\">\\r\\n\\t\\t\\t\\t\\t</form-messages>\\r\\n\\t\\t\\t\\t</md-hint>\\r\\n\\t\\t\\t</md-input-container>\\r\\n\\r\\n\\t\\t\\t<md-input-container class=\\\"col-xs-6 padding-side\\\">\\r\\n\\t\\t\\t\\t<input mdInput required placeholder=\\\"Email\\\" [formControl]=\\\"myForm.controls.supplier_email\\\" [(ngModel)]=\\\"supplierManagement.emailId\\\">\\r\\n\\t\\t\\t\\t<md-hint>\\r\\n\\t\\t\\t\\t\\t<form-messages [control]=\\\"myForm.controls.supplier_email\\\"> </form-messages>\\r\\n\\t\\t\\t\\t</md-hint>\\r\\n\\t\\t\\t</md-input-container>\\r\\n\\r\\n\\t\\t\\t<md-input-container class=\\\"col-xs-6 padding-side\\\">\\r\\n\\t\\t\\t\\t<input mdInput required placeholder=\\\"Mobile No.\\\" [formControl]=\\\"myForm.controls.supplier_mobile\\\" [(ngModel)]=\\\"supplierManagement.mobileNumber\\\">\\r\\n\\t\\t\\t\\t<md-hint>\\r\\n\\t\\t\\t\\t\\t<form-messages [control]=\\\"myForm.controls.supplier_mobile\\\">\\r\\n\\t\\t\\t\\t\\t</form-messages>\\r\\n\\t\\t\\t\\t</md-hint>\\r\\n\\t\\t\\t</md-input-container>\\r\\n\\r\\n\\t\\t\\t<md-input-container class=\\\"col-xs-6 padding-side\\\">\\r\\n\\t\\t\\t\\t<input mdInput placeholder=\\\"Fax\\\" [formControl]=\\\"myForm.controls.supplier_fax\\\" [(ngModel)]=\\\"supplierManagement.faxNumber\\\">\\r\\n\\t\\t\\t\\t<md-hint>\\r\\n\\t\\t\\t\\t\\t<form-messages [control]=\\\"myForm.controls.supplier_fax\\\"> </form-messages>\\r\\n\\t\\t\\t\\t</md-hint>\\r\\n\\t\\t\\t</md-input-container>\\r\\n\\r\\n\\t\\t\\t<md-input-container class=\\\"col-xs-6 padding-side\\\">\\r\\n\\t\\t\\t\\t<input mdInput placeholder=\\\"Phone\\\" [formControl]=\\\"myForm.controls.supplier_phone\\\" [(ngModel)]=\\\"supplierManagement.phone\\\">\\r\\n\\t\\t\\t\\t<md-hint>\\r\\n\\t\\t\\t\\t\\t<form-messages [control]=\\\"myForm.controls.supplier_phone\\\"> </form-messages>\\r\\n\\t\\t\\t\\t</md-hint>\\r\\n\\t\\t\\t</md-input-container>\\r\\n\\r\\n\\t\\t\\t<md-input-container class=\\\"col-xs-6 padding-side\\\">\\r\\n\\t\\t\\t\\t<input mdInput placeholder=\\\"Pan No.\\\" [formControl]=\\\"myForm.controls.supplier_pan\\\" [(ngModel)]=\\\"supplierManagement.pan\\\">\\r\\n\\t\\t\\t\\t<md-hint>\\r\\n\\t\\t\\t\\t\\t<form-messages [control]=\\\"myForm.controls.supplier_pan\\\"> </form-messages>\\r\\n\\t\\t\\t\\t</md-hint>\\r\\n\\t\\t\\t</md-input-container>\\r\\n\\r\\n\\t\\t\\t<md-input-container class=\\\"col-xs-6 padding-side\\\">\\r\\n\\t\\t\\t\\t<input mdInput placeholder=\\\"Website\\\" [formControl]=\\\"myForm.controls.supplier_website\\\" [(ngModel)]=\\\"supplierManagement.website\\\">\\r\\n\\t\\t\\t\\t<md-hint>\\r\\n\\t\\t\\t\\t\\t<form-messages [control]=\\\"myForm.controls.supplier_website\\\">\\r\\n\\t\\t\\t\\t\\t</form-messages>\\r\\n\\t\\t\\t\\t</md-hint>\\r\\n\\t\\t\\t</md-input-container>\\r\\n\\r\\n\\t\\t\\t<md-input-container class=\\\"col-xs-6 padding-side\\\">\\r\\n\\t\\t\\t\\t<input mdInput placeholder=\\\"GSTIN No\\\" [formControl]=\\\"myForm.controls.supplier_gstin\\\" [(ngModel)]=\\\"supplierManagement.gstin\\\">\\r\\n\\t\\t\\t\\t<md-hint>\\r\\n\\t\\t\\t\\t\\t<form-messages [control]=\\\"myForm.controls.supplier_gstin\\\"> </form-messages>\\r\\n\\t\\t\\t\\t</md-hint>\\r\\n\\t\\t\\t</md-input-container>\\r\\n\\r\\n\\t\\t\\t<md-input-container class=\\\"col-xs-6 padding-side\\\">\\r\\n\\t\\t\\t\\t<input mdInput placeholder=\\\"Opening Balance\\\" [formControl]=\\\"myForm.controls.supplier_openingBalance\\\" [(ngModel)]=\\\"supplierManagement.openingBalance\\\">\\r\\n\\t\\t\\t\\t<md-hint>\\r\\n\\t\\t\\t\\t\\t<form-messages [control]=\\\"myForm.controls.supplier_openingBalance\\\">\\r\\n\\t\\t\\t\\t\\t</form-messages>\\r\\n\\t\\t\\t\\t</md-hint>\\r\\n\\t\\t\\t</md-input-container>\\r\\n\\r\\n\\t\\t\\t<md-input-container class=\\\"col-xs-6 padding-side\\\">\\r\\n\\t\\t\\t\\t<input mdInput placeholder=\\\"Opening Balance Date\\\" [formControl]=\\\"myForm.controls.supplier_openingBalanceDate\\\" [(ngModel)]=\\\"supplierManagement.openingBalanceDate\\\"\\r\\n\\t\\t\\t\\t [mdDatepicker]=\\\"openingBalanceDateToggle\\\" readonly>\\r\\n\\t\\t\\t\\t<button mdSuffix [mdDatepickerToggle]=\\\"openingBalanceDateToggle\\\"></button>\\r\\n\\t\\t\\t\\t<md-hint>\\r\\n\\t\\t\\t\\t\\t<form-messages [control]=\\\"myForm.controls.supplier_openingBalanceDate\\\">\\r\\n\\t\\t\\t\\t\\t</form-messages>\\r\\n\\t\\t\\t\\t</md-hint>\\r\\n\\t\\t\\t</md-input-container>\\r\\n\\t\\t\\t<md-datepicker #openingBalanceDateToggle></md-datepicker>\\r\\n\\r\\n\\t\\t\\t<md-input-container class=\\\"col-xs-6 padding-side\\\">\\r\\n\\t\\t\\t\\t<input mdInput placeholder=\\\"Billing Rate\\\" [formControl]=\\\"myForm.controls.supplier_billingRate\\\" [(ngModel)]=\\\"supplierManagement.bllingRate\\\">\\r\\n\\t\\t\\t\\t<md-hint>\\r\\n\\t\\t\\t\\t\\t<form-messages [control]=\\\"myForm.controls.supplier_billingRate\\\">\\r\\n\\t\\t\\t\\t\\t</form-messages>\\r\\n\\t\\t\\t\\t</md-hint>\\r\\n\\t\\t\\t</md-input-container>\\r\\n\\r\\n\\t\\t\\t<div class=\\\"md-select col-xs-6 padding-side\\\">\\r\\n\\t\\t\\t\\t<md-select placeholder=\\\"Terms Of Payment\\\" [formControl]=\\\"myForm.controls.supplier_termsOfPayment\\\" [(ngModel)]=\\\"supplierManagement.termsOfPayment\\\">\\r\\n\\t\\t\\t\\t\\t<md-option *ngFor=\\\"let item of termsList\\\" [value]=\\\"item.key\\\">\\r\\n\\t\\t\\t\\t\\t\\t{{item.value}} </md-option>\\r\\n\\t\\t\\t\\t</md-select>\\r\\n\\t\\t\\t\\t<md-hint>\\r\\n\\t\\t\\t\\t\\t<form-messages [control]=\\\"myForm.controls.supplier_termsOfPayment\\\">\\r\\n\\t\\t\\t\\t\\t</form-messages>\\r\\n\\t\\t\\t\\t</md-hint>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<!-- Editable Div End -->\\r\\n\\r\\n\\t\\t<!--Non Editable Div Start -->\\r\\n\\t\\t<div class=\\\"row\\\" *ngIf=\\\"isEditable== 'false' \\\">\\r\\n\\t\\t\\t<md-input-container class=\\\"col-xs-3 padding-side\\\">\\r\\n\\t\\t\\t\\t<input mdInput readonly placeholder=\\\"Title\\\" [formControl]=\\\"myForm.controls.supplier_title\\\" readonly [(ngModel)]=\\\"supplierManagement.title\\\">\\r\\n\\t\\t\\t\\t<md-hint>\\r\\n\\t\\t\\t\\t\\t<form-messages [control]=\\\"myForm.controls.supplier_title\\\">\\r\\n\\t\\t\\t\\t\\t</form-messages>\\r\\n\\t\\t\\t\\t</md-hint>\\r\\n\\t\\t\\t</md-input-container>\\r\\n\\t\\t\\t<md-input-container class=\\\"col-xs-3 padding-side\\\">\\r\\n\\t\\t\\t\\t<input mdInput placeholder=\\\"First Name\\\" readonly [formControl]=\\\"myForm.controls.supplier_firstName\\\" [(ngModel)]=\\\"supplierManagement.firstName\\\" style=\\\"text-transform: capitalize\\\">\\r\\n\\t\\t\\t\\t<md-hint>\\r\\n\\t\\t\\t\\t\\t<form-messages [control]=\\\"myForm.controls.supplier_firstName\\\">\\r\\n\\t\\t\\t\\t\\t</form-messages>\\r\\n\\t\\t\\t\\t</md-hint>\\r\\n\\t\\t\\t</md-input-container>\\r\\n\\r\\n\\t\\t\\t<md-input-container class=\\\"col-xs-3 padding-side\\\">\\r\\n\\t\\t\\t\\t<input mdInput placeholder=\\\"Middle Name\\\" readonly [formControl]=\\\"myForm.controls.supplier_middleName\\\" [(ngModel)]=\\\"supplierManagement.middleName\\\">\\r\\n\\t\\t\\t</md-input-container>\\r\\n\\r\\n\\t\\t\\t<md-input-container class=\\\"col-xs-3 padding-side\\\">\\r\\n\\t\\t\\t\\t<input mdInput placeholder=\\\"Last Name\\\" readonly [formControl]=\\\"myForm.controls.supplier_lastName\\\" [(ngModel)]=\\\"supplierManagement.lastName\\\">\\r\\n\\t\\t\\t\\t<md-hint>\\r\\n\\t\\t\\t\\t\\t<form-messages [control]=\\\"myForm.controls.supplier_lastName\\\">\\r\\n\\t\\t\\t\\t\\t</form-messages>\\r\\n\\t\\t\\t\\t</md-hint>\\r\\n\\t\\t\\t</md-input-container>\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t<md-input-container class=\\\"col-xs-6 padding-side\\\">\\r\\n\\t\\t\\t\\t<input mdInput placeholder=\\\"Company Name\\\" readonly [formControl]=\\\"myForm.controls.supplier_companyName\\\" [(ngModel)]=\\\"supplierManagement.companyName\\\" style=\\\"text-transform: capitalize\\\">\\r\\n\\t\\t\\t\\t<md-hint>\\r\\n\\t\\t\\t\\t\\t<form-messages [control]=\\\"myForm.controls.supplier_companyName\\\">\\r\\n\\t\\t\\t\\t\\t</form-messages>\\r\\n\\t\\t\\t\\t</md-hint>\\r\\n\\t\\t\\t</md-input-container>\\r\\n\\t\\t\\t<md-input-container class=\\\"col-xs-6 padding-side\\\">\\r\\n\\t\\t\\t\\t<input mdInput placeholder=\\\"Email\\\" readonly [formControl]=\\\"myForm.controls.supplier_email\\\" [(ngModel)]=\\\"supplierManagement.emailId\\\">\\r\\n\\t\\t\\t\\t<md-hint>\\r\\n\\t\\t\\t\\t\\t<form-messages [control]=\\\"myForm.controls.supplier_email\\\"> </form-messages>\\r\\n\\t\\t\\t\\t</md-hint>\\r\\n\\t\\t\\t</md-input-container>\\r\\n\\t\\t\\t<md-input-container class=\\\"col-xs-6 padding-side\\\">\\r\\n\\t\\t\\t\\t<input mdInput placeholder=\\\"Mobile No.\\\" readonly [formControl]=\\\"myForm.controls.supplier_mobile\\\" [(ngModel)]=\\\"supplierManagement.mobileNumber\\\">\\r\\n\\t\\t\\t\\t<md-hint>\\r\\n\\t\\t\\t\\t\\t<form-messages [control]=\\\"myForm.controls.supplier_mobile\\\">\\r\\n\\t\\t\\t\\t\\t</form-messages>\\r\\n\\t\\t\\t\\t</md-hint>\\r\\n\\t\\t\\t</md-input-container>\\r\\n\\t\\t\\t<md-input-container class=\\\"col-xs-6 padding-side\\\">\\r\\n\\t\\t\\t\\t<input mdInput placeholder=\\\"Fax\\\" readonly [formControl]=\\\"myForm.controls.supplier_fax\\\" [(ngModel)]=\\\"supplierManagement.faxNumber\\\">\\r\\n\\t\\t\\t\\t<md-hint>\\r\\n\\t\\t\\t\\t\\t<form-messages [control]=\\\"myForm.controls.supplier_fax\\\"> </form-messages>\\r\\n\\t\\t\\t\\t</md-hint>\\r\\n\\t\\t\\t</md-input-container>\\r\\n\\t\\t\\t<md-input-container class=\\\"col-xs-6 padding-side\\\">\\r\\n\\t\\t\\t\\t<input mdInput placeholder=\\\"Phone\\\" readonly [formControl]=\\\"myForm.controls.supplier_phone\\\" [(ngModel)]=\\\"supplierManagement.phone\\\">\\r\\n\\t\\t\\t\\t<md-hint>\\r\\n\\t\\t\\t\\t\\t<form-messages [control]=\\\"myForm.controls.supplier_phone\\\"> </form-messages>\\r\\n\\t\\t\\t\\t</md-hint>\\r\\n\\t\\t\\t</md-input-container>\\r\\n\\r\\n\\t\\t\\t<md-input-container class=\\\"col-xs-6 padding-side\\\">\\r\\n\\t\\t\\t\\t<input mdInput placeholder=\\\"Pan No.\\\" readonly [formControl]=\\\"myForm.controls.supplier_pan\\\" [(ngModel)]=\\\"supplierManagement.pan\\\">\\r\\n\\t\\t\\t\\t<md-hint>\\r\\n\\t\\t\\t\\t\\t<form-messages [control]=\\\"myForm.controls.supplier_pan\\\"> </form-messages>\\r\\n\\t\\t\\t\\t</md-hint>\\r\\n\\t\\t\\t</md-input-container>\\r\\n\\t\\t\\t<md-input-container class=\\\"col-xs-6 padding-side\\\">\\r\\n\\t\\t\\t\\t<input mdInput placeholder=\\\"Website\\\" readonly [formControl]=\\\"myForm.controls.supplier_website\\\" [(ngModel)]=\\\"supplierManagement.website\\\">\\r\\n\\t\\t\\t\\t<md-hint>\\r\\n\\t\\t\\t\\t\\t<form-messages [control]=\\\"myForm.controls.supplier_website\\\">\\r\\n\\t\\t\\t\\t\\t</form-messages>\\r\\n\\t\\t\\t\\t</md-hint>\\r\\n\\t\\t\\t</md-input-container>\\r\\n\\t\\t\\t<md-input-container class=\\\"col-xs-6 padding-side\\\">\\r\\n\\t\\t\\t\\t<input mdInput placeholder=\\\"GSTIN No\\\" readonly [formControl]=\\\"myForm.controls.supplier_gstin\\\" [(ngModel)]=\\\"supplierManagement.gstin\\\">\\r\\n\\t\\t\\t\\t<md-hint>\\r\\n\\t\\t\\t\\t\\t<form-messages [control]=\\\"myForm.controls.supplier_gstin\\\"> </form-messages>\\r\\n\\t\\t\\t\\t</md-hint>\\r\\n\\t\\t\\t</md-input-container>\\r\\n\\t\\t\\t<md-input-container class=\\\"col-xs-6 padding-side\\\">\\r\\n\\t\\t\\t\\t<input mdInput placeholder=\\\"Opening Balance\\\" readonly [formControl]=\\\"myForm.controls.supplier_openingBalance\\\" [(ngModel)]=\\\"supplierManagement.openingBalance\\\">\\r\\n\\t\\t\\t\\t<md-hint>\\r\\n\\t\\t\\t\\t\\t<form-messages [control]=\\\"myForm.controls.supplier_openingBalance\\\">\\r\\n\\t\\t\\t\\t\\t</form-messages>\\r\\n\\t\\t\\t\\t</md-hint>\\r\\n\\t\\t\\t</md-input-container>\\r\\n\\t\\t\\t<md-input-container class=\\\"col-xs-6 padding-side\\\">\\r\\n\\t\\t\\t\\t<input mdInput placeholder=\\\"Opening Balance Date\\\" [formControl]=\\\"myForm.controls.supplier_openingBalanceDate\\\" [(ngModel)]=\\\"supplierManagement.openingBalanceDate\\\"\\r\\n\\t\\t\\t\\t [mdDatepicker]=\\\"openingBalanceDateToggle\\\" readonly>\\r\\n\\t\\t\\t\\t<!-- <button mdSuffix [mdDatepickerToggle]=\\\"openingBalanceDateToggle\\\"></button> -->\\r\\n\\t\\t\\t\\t<md-hint>\\r\\n\\t\\t\\t\\t\\t<form-messages [control]=\\\"myForm.controls.supplier_openingBalanceDate\\\">\\r\\n\\t\\t\\t\\t\\t</form-messages>\\r\\n\\t\\t\\t\\t</md-hint>\\r\\n\\t\\t\\t</md-input-container>\\r\\n\\r\\n\\t\\t\\t<md-input-container class=\\\"col-xs-6 padding-side\\\">\\r\\n\\t\\t\\t\\t<input mdInput placeholder=\\\"Billing Rate\\\" readonly [formControl]=\\\"myForm.controls.supplier_billingRate\\\" [(ngModel)]=\\\"supplierManagement.bllingRate\\\">\\r\\n\\t\\t\\t\\t<md-hint>\\r\\n\\t\\t\\t\\t\\t<form-messages [control]=\\\"myForm.controls.supplier_billingRate\\\">\\r\\n\\t\\t\\t\\t\\t</form-messages>\\r\\n\\t\\t\\t\\t</md-hint>\\r\\n\\t\\t\\t</md-input-container>\\r\\n\\t\\t\\t<md-input-container class=\\\"col-xs-3 padding-side\\\">\\r\\n\\t\\t\\t\\t<input mdInput placeholder=\\\"Terms Of Payment\\\" [formControl]=\\\"myForm.controls.supplier_termsOfPayment\\\" readonly [(ngModel)]=\\\"supplierManagement.termsOfPayment\\\">\\r\\n\\t\\t\\t\\t<md-hint>\\r\\n\\t\\t\\t\\t\\t<form-messages [control]=\\\"myForm.controls.supplier_termsOfPayment\\\">\\r\\n\\t\\t\\t\\t\\t</form-messages>\\r\\n\\t\\t\\t\\t</md-hint>\\r\\n\\t\\t\\t</md-input-container>\\r\\n\\t\\t</div>\\r\\n\\t\\t<!-- Non Editable Div End -->\\r\\n\\t</form>\\r\\n\\t<div class=\\\"row end-xs\\\">\\r\\n\\t\\t<button md-raised-button color=\\\"accent\\\" [disabled]=\\\"!myForm.valid && isEditable\\\" (click)=\\\"next()\\\">Next</button>\\r\\n\\t</div>\\r\\n</md-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/suppliermanagement/sm.supplierdetails.component.html\n// module id = ../../../../../src/app/components/admin/suppliermanagement/sm.supplierdetails.component.html\n// module chunks = 1","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { AppService } from '../../../shared/service/app.service';\r\nimport { AnimationService } from '../../../shared/service/animation.service';\r\nimport { RestService } from './../../../common/rest.service';\r\nimport { Prop } from './../../../common/props';\r\nimport { InvoiceFormGroup } from '../../../forms/invoice.form';\r\nimport { SupplierManagement } from '../../../entities/suppliermanagement';\r\nimport { SupplierFormGroup } from '../../../forms/supplier.form';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/startWith';\r\nimport 'rxjs/add/operator/map';\r\nimport { FormControl } from '@angular/forms';\r\n\r\n\r\n@Component({\r\n  selector: 'app-supplierdetails',\r\n  templateUrl: './sm.supplierdetails.component.html'\r\n\r\n})\r\n\r\nexport class SmSupplierdetailsComponent implements OnInit {\r\n\r\n  myForm: any = SupplierFormGroup.init();\r\n  filteredCompanies: Observable<any[]>;\r\n  stateCtrl: FormControl;\r\n  @Input('supplierManagement')\r\n  supplierManagement: SupplierManagement = new SupplierManagement();\r\n  public isEditable : boolean = false;\r\n  @Output('supplierEvent')\r\n  supplierEvent = new EventEmitter<string>();\r\n\r\n\r\n  constructor(private appService: AppService, private restService: RestService) {\r\n    SupplierFormGroup.details(this.myForm);\r\n    this.stateCtrl = new FormControl();\r\n    this.isEditable = this.appService.getParam(\"isEditable\");\r\n    //        this.filteredCompanies = this.stateCtrl.valueChanges\r\n    //            .startWith(null)\r\n    //            .map(company => company ? this.filterCompanies(company) : this.companyList.slice());\r\n\r\n\r\n\r\n  }\r\n  ngOnInit() {\r\n    console.log(\"Account Address\");\r\n    this.titleLoad();\r\n    this.termsLoad();\r\n  }\r\n\r\n  next() {\r\n    //        this.appService.setLocalItem('supplier',this.supplierManagement);         \r\n    this.supplierEvent.emit()\r\n  }\r\n\r\n\r\n\r\n  titleList: any[] = [];\r\n  titleLoad() {\r\n    this.restService.dataloadFromFile('assets/json/common.json')\r\n      .subscribe(results => {\r\n        this.titleList = results[\"Title\"];\r\n        console.log(this.titleList)\r\n      });\r\n  }\r\n\r\n  // termsList: any[] = [];\r\n  // termsLoad() {\r\n  //   this.restService.dataload('Terms')\r\n  //     .subscribe(results => {\r\n  //       if (results) {\r\n  //         this.termsList = results;\r\n  //       }\r\n  //     })\r\n  // }\r\n\r\n  termsList: any[] = [];\r\n  termsLoad() {\r\n    this.restService.dataloadFromFile('assets/json/common.json')\r\n      .subscribe(results => {\r\n        this.termsList = results[\"Terms\"];\r\n      });\r\n  }\r\n  arrayOfCompany = [{ \"id\": \"1\", \"Name\": \"IT\" }, { \"id\": \"2\", \"Name\": \"Sales\" }];\r\n\r\n  //    companyList = [\r\n  //        { value: '0', viewValue: 'IT' },\r\n  //        { value: '1', viewValue: 'Sales' }\r\n  //    ];\r\n\r\n  //    titleList = [\r\n  //        { value: '0', viewValue: 'Mr' },\r\n  //        { value: '1', viewValue: 'Mrs' }\r\n  //    ];\r\n\r\n  //    entityList = [\r\n  //        { value: '0', viewValue: 'Resident Individual / HUF' },\r\n  //        { value: '1', viewValue: ' Resident Other' },\r\n  //        { value: '2', viewValue: 'NRI Individual / HUF' },\r\n  //        { value: '3', viewValue: 'NRI other' }\r\n  //    ];\r\n\r\n\r\n  //    sectionList = [\r\n  //        { value: '0', viewValue: 'Not Applicable' },\r\n  //        { value: '1', viewValue: '192- Salaries' },\r\n  //        { value: '2', viewValue: '193- Interest On Debentures' },\r\n  //        { value: '3', viewValue: '194- Deemed Dividend' }\r\n  //    ];\r\n\r\n  //    termsList = [\r\n  //        { value: '0', viewValue: 'Add New' },\r\n  //        { value: '1', viewValue: 'Due on receipt' },\r\n  //        { value: '2', viewValue: 'Net 15' },\r\n  //        { value: '3', viewValue: 'Net 30' },\r\n  //        { value: '4', viewValue: 'Net 60' }\r\n  //    ];\r\n\r\n\r\n\r\n  sectionList: any[] = [];\r\n  sectionLoad() {\r\n    this.restService.dataload('Section')\r\n      .subscribe(results => {\r\n        if (results) {\r\n          this.sectionList = results;\r\n        }\r\n      })\r\n\r\n  }\r\n\r\n  entityList: any[] = [];\r\n  entityLoad() {\r\n    this.restService.dataload('Entity')\r\n      .subscribe(results => {\r\n        if (results) {\r\n          this.entityList = results;\r\n        }\r\n      })\r\n\r\n\r\n    //    filterCompanies(name: string) {\r\n    //        return this.companyList.filter(company =>\r\n    //            company.viewValue.toLowerCase().indexOf(name.toLowerCase()) === 0);\r\n    //    }\r\n\r\n\r\n  }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/suppliermanagement/sm.supplierdetails.component.ts","import { Component, OnInit } from \"@angular/core\";\r\nimport { DataSource } from \"@angular/cdk\";\r\nimport { AppService } from \"../../../shared/service/app.service\";\r\nimport { AnimationService } from \"../../../shared/service/animation.service\";\r\nimport { RestService } from \"../../../common/rest.service\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { MdSort, MdPaginator } from \"@angular/material\";\r\nimport \"rxjs/add/operator/startWith\";\r\nimport \"rxjs/add/observable/merge\";\r\nimport \"rxjs/add/operator/map\";\r\n\r\nexport class SupplierDataSource extends DataSource<any> {\r\n  private data: any[] = [];\r\n  renderedData: any[] = [];\r\n\r\n  constructor(\r\n    private restService: RestService,\r\n    private searchObject: any,\r\n    private sort: MdSort,\r\n    private paginator: MdPaginator\r\n  ) {\r\n    super();\r\n    this.getDataList();\r\n  }\r\n\r\n  getDataList() {\r\n    // console.log(this.searchObject);\r\n    this.restService.showLoader(true);\r\n    this.restService.searchSupplier(this.searchObject).subscribe(results => {\r\n      if (results) {\r\n        this.data = results;\r\n        this.restService.showLoader(false);\r\n      }\r\n    });\r\n  }\r\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\r\n  connect(): any {\r\n    const displayDataChanges = [\r\n      this.restService.searchSupplier(this.searchObject),\r\n      this.sort.mdSortChange,\r\n      this.paginator.page\r\n    ];\r\n\r\n    return Observable.merge(...displayDataChanges).map(() => {\r\n      //return this.getSortedData();\r\n      // const data = this.data.slice();\r\n      // this.getSortedData();\r\n\r\n      // Grab the page's slice of data.\r\n      // const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n      // return data.splice(startIndex, this.paginator.pageSize);\r\n\r\n      // Sort filtered data\r\n      const myData = this.getSortedData();\r\n\r\n      // Grab the page's slice of data.\r\n      const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n      return myData.splice(startIndex, this.paginator.pageSize);\r\n    });\r\n    // return Promise.resolve([])\r\n  }\r\n\r\n  disconnect() {}\r\n\r\n  getSortedData(): any[] {\r\n    const data = this.data.slice();\r\n    if (this.sort.active && this.sort.direction == \"\") {\r\n      return data;\r\n    }\r\n\r\n    return data.sort((a, b) => {\r\n      let propertyA: number | string | Date = \"\";\r\n      let propertyB: number | string | Date = \"\";\r\n      switch (this.sort.active) {\r\n        case \"company\":\r\n          [propertyA, propertyB] = [a.companyName, b.companyName];\r\n          break;\r\n        case \"state\":\r\n          [propertyA, propertyB] = [a.address.state, b.address.state];\r\n          break;\r\n        case \"city\":\r\n          [propertyA, propertyB] = [a.address.city, b.address.city];\r\n          break;\r\n        case \"mobileNumber\":\r\n          [propertyA, propertyB] = [a.mobileNumber, b.mobileNumber];\r\n          break;\r\n        case \"fromDate\":\r\n          [propertyA, propertyB] = [a.fromDate, b.fromDate];\r\n          break;\r\n        case \"toDate\":\r\n          [propertyA, propertyB] = [a.toDate, b.toDate];\r\n          break;\r\n        // case \"mrpDateFrom\":\r\n        //   [propertyA, propertyB] = [\r\n        //     a.address.stockItemPrice.mrpDateFrom,\r\n        //     b.stockItemPrice.address.mrpDateFrom\r\n        //   ];\r\n        //   break;\r\n\r\n        // case \"balance\":\r\n        //   [propertyA, propertyB] = [a.openingBalance, b.openingBalance];\r\n        //   break;\r\n      }\r\n      let valueA = isNaN(+propertyA) ? propertyA : +propertyA;\r\n      let valueB = isNaN(+propertyB) ? propertyB : +propertyB;\r\n\r\n      return (\r\n        (valueA < valueB ? -1 : 1) * (this.sort.direction == \"asc\" ? 1 : -1)\r\n      );\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/suppliermanagement/supplier.datasource.ts","module.exports = \"<div class=\\\"position\\\">\\r\\n  <div id=\\\"page-header\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n    <h2>Suppliers</h2>\\r\\n  </div>\\r\\n  <aside id=\\\"page-content\\\" style=\\\"overflow:auto;margin: 20px 0;\\\">\\r\\n    <div class=\\\"padding-side\\\">\\r\\n      <md-toolbar color=\\\"primary\\\">\\r\\n        <!-- <md-input-container>\\r\\n                        <input mdInput #filter placeholder=\\\"Search by Supplier Name\\\">\\r\\n                        <input mdInput placeholder=\\\"Search by Supplier Name\\\" [(ngModel)]=\\\"searchObject.name\\\" (change)=\\\"callDataSource()\\\" (click)=\\\" clearAll()\\\">\\r\\n                </md-input-container> -->\\r\\n\\r\\n        <md-input-container class=\\\"col-xs-2\\\">\\r\\n          <input\\r\\n            mdInput\\r\\n            placeholder=\\\"Company Name\\\"\\r\\n            [(ngModel)]=\\\"searchObject.companyName\\\"\\r\\n            (keyup)=\\\"callDataSource()\\\"\\r\\n          />\\r\\n        </md-input-container>\\r\\n\\r\\n        <!-- <md-input-container>\\r\\n        <input\\r\\n          mdInput\\r\\n          placeholder=\\\"State\\\"\\r\\n          [ngModel]=\\\"searchObject.state\\\"\\r\\n          (focus)=\\\"filterStates(null)\\\"\\r\\n          (keyup)=\\\"filterStates($event.target.value); callDataSource()\\\"\\r\\n          [mdAutocomplete]=\\\"autoMobile\\\"\\r\\n          [ngModelOptions]=\\\"{ standalone: true }\\\"\\r\\n        />\\r\\n        <md-autocomplete #autoMobile=\\\"mdAutocomplete\\\">\\r\\n          <md-option\\r\\n            *ngFor=\\\"let keyValues of filteredStates\\\"\\r\\n            [value]=\\\"keyValues.value\\\"\\r\\n          >\\r\\n            {{ keyValues.value }}\\r\\n          </md-option>\\r\\n        </md-autocomplete>\\r\\n      </md-input-container> -->\\r\\n\\r\\n        <md-input-container class=\\\"col-xs-2\\\">\\r\\n          <input\\r\\n            mdInput\\r\\n            placeholder=\\\"State\\\"\\r\\n            [(ngModel)]=\\\"searchObject.state\\\"\\r\\n            (keyup)=\\\"callDataSource()\\\"\\r\\n          />\\r\\n        </md-input-container>\\r\\n\\r\\n        <!-- <md-input-container>\\r\\n                    <input mdInput placeholder=\\\"State\\\" [(ngModel)]=\\\"searchObject.state\\\" (keyup)=\\\"callDataSource()\\\" (click)=\\\" clearAll()\\\">\\r\\n            </md-input-container> -->\\r\\n        <md-input-container class=\\\"col-xs-2\\\">\\r\\n          <input\\r\\n            mdInput\\r\\n            placeholder=\\\"City\\\"\\r\\n            [(ngModel)]=\\\"searchObject.city\\\"\\r\\n            (keyup)=\\\"callDataSource()\\\"\\r\\n          />\\r\\n        </md-input-container>\\r\\n        <md-input-container class=\\\"col-xs-2\\\">\\r\\n          <input\\r\\n            mdInput\\r\\n            placeholder=\\\"Mobile\\\"\\r\\n            [(ngModel)]=\\\"searchObject.mobileNumber\\\"\\r\\n            (keyup)=\\\"callDataSource()\\\"\\r\\n          />\\r\\n        </md-input-container>\\r\\n\\r\\n        <!-- <div>\\r\\n          <md-select\\r\\n            placeholder=\\\"Range\\\"\\r\\n            [(ngModel)]=\\\"searchObject.range\\\"\\r\\n            (change)=\\\"callDataSource()\\\"\\r\\n          >\\r\\n            <md-option *ngFor=\\\"let item of rangeList\\\" [value]=\\\"item.key\\\">\\r\\n              {{ item.value }}\\r\\n            </md-option>\\r\\n          </md-select>\\r\\n        </div> -->\\r\\n\\r\\n        <md-input-container class=\\\"col-xs-2\\\">\\r\\n          <input\\r\\n            mdInput\\r\\n            [mdDatepicker]=\\\"fromDate\\\"\\r\\n            placeholder=\\\"From Date\\\"\\r\\n            [(ngModel)]=\\\"searchObject.fromDate\\\"\\r\\n            (ngModelChange)=\\\"callDataSource()\\\"\\r\\n            (click)=\\\"clearAll()\\\"\\r\\n          />\\r\\n          <button mdSuffix [mdDatepickerToggle]=\\\"fromDate\\\"></button>\\r\\n        </md-input-container>\\r\\n        <md-datepicker #fromDate></md-datepicker>\\r\\n\\r\\n        <md-input-container class=\\\"col-xs-2\\\">\\r\\n          <input\\r\\n            mdInput\\r\\n            [mdDatepicker]=\\\"toDate\\\"\\r\\n            placeholder=\\\"To Date\\\"\\r\\n            [(ngModel)]=\\\"searchObject.toDate\\\"\\r\\n            (ngModelChange)=\\\"callDataSource()\\\"\\r\\n          />\\r\\n          <button mdSuffix [mdDatepickerToggle]=\\\"toDate\\\"></button>\\r\\n        </md-input-container>\\r\\n        <md-datepicker #toDate></md-datepicker>\\r\\n\\r\\n        <!-- <div class=\\\"col-xs-2 padding-side\\\">\\r\\n          <md-select\\r\\n            placeholder=\\\"Period\\\"\\r\\n            [(ngModel)]=\\\"searchObject.period\\\"\\r\\n            (change)=\\\"callDataSource()\\\"\\r\\n          >\\r\\n            <md-option *ngFor=\\\"let item of periodList\\\" [value]=\\\"item.key\\\">\\r\\n              {{ item.value }}\\r\\n            </md-option>\\r\\n          </md-select>\\r\\n        </div> -->\\r\\n      </md-toolbar>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row center-xs padding\\\">\\r\\n      <md-card class=\\\"col-xs-12 \\\">\\r\\n        <!--  <div class=\\\"row\\\">\\r\\n                    \\r\\n                    <div class=\\\"col-xs-12 end-xs padding-height\\\">\\r\\n                        <md-icon color=\\\"accent\\\">print</md-icon>\\r\\n                        <md-icon color=\\\"accent\\\">settings</md-icon>\\r\\n                    </div>\\r\\n                </div> -->\\r\\n        <md-card-content class=\\\"start-xs\\\">\\r\\n          <md-table\\r\\n            #table\\r\\n            [dataSource]=\\\"dataSource\\\"\\r\\n            mdSort\\r\\n            style=\\\"height: 500px; overflow-y: auto\\\"\\r\\n          >\\r\\n            <!--- Note that these columns can be defined in any order.\\r\\n              The actual rendered columns are set as a property on the row definition\\\" -->\\r\\n\\r\\n            <!-- ID Column -->\\r\\n            <!-- <ng-container cdkColumnDef=\\\"name\\\">\\r\\n                            <md-header-cell *cdkHeaderCellDef md-sort-header> Name </md-header-cell>\\r\\n                            <md-cell *cdkCellDef=\\\"let row\\\"> {{row.firstName}} {{row.middleName}} {{row.lastName}} </md-cell>\\r\\n                        </ng-container> -->\\r\\n\\r\\n            <!-- Progress Column -->\\r\\n            <ng-container cdkColumnDef=\\\"company\\\">\\r\\n              <md-header-cell *cdkHeaderCellDef md-sort-header fxFlex=\\\"20%\\\">\\r\\n                Company\\r\\n              </md-header-cell>\\r\\n              <md-cell\\r\\n                *cdkCellDef=\\\"let row\\\"\\r\\n                (click)=\\\"myFun(row)\\\"\\r\\n                style=\\\"text-transform: capitalize\\\"\\r\\n                fxFlex=\\\"20%\\\"\\r\\n              >\\r\\n                {{ row.companyName }}\\r\\n              </md-cell>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Name Column -->\\r\\n            <!-- <ng-container cdkColumnDef=\\\"email\\\">\\r\\n                            <md-header-cell *cdkHeaderCellDef>Email </md-header-cell>\\r\\n                            <md-cell *cdkCellDef=\\\"let row\\\"> {{row.emailId}}</md-cell>\\r\\n                        </ng-container>\\r\\n                        <ng-container cdkColumnDef=\\\"street\\\">\\r\\n                            <md-header-cell *cdkHeaderCellDef>Street </md-header-cell>\\r\\n                            <md-cell *cdkCellDef=\\\"let row\\\"> {{row.address.street}} </md-cell>\\r\\n                        </ng-container> -->\\r\\n            <ng-container cdkColumnDef=\\\"state\\\">\\r\\n              <md-header-cell *cdkHeaderCellDef md-sort-header fxFlex=\\\"20%\\\"\\r\\n                >State\\r\\n              </md-header-cell>\\r\\n              <md-cell *cdkCellDef=\\\"let row\\\" (click)=\\\"myFun(row)\\\" fxFlex=\\\"20%\\\">\\r\\n                {{ row.address.state }}\\r\\n              </md-cell>\\r\\n            </ng-container>\\r\\n            <ng-container cdkColumnDef=\\\"city\\\">\\r\\n              <md-header-cell *cdkHeaderCellDef md-sort-header fxFlex=\\\"20%\\\"\\r\\n                >City\\r\\n              </md-header-cell>\\r\\n              <md-cell\\r\\n                *cdkCellDef=\\\"let row\\\"\\r\\n                (click)=\\\"myFun(row)\\\"\\r\\n                style=\\\"text-transform: capitalize\\\"\\r\\n                fxFlex=\\\"20%\\\"\\r\\n              >\\r\\n                {{ row.address.city }}\\r\\n              </md-cell>\\r\\n            </ng-container>\\r\\n            <ng-container cdkColumnDef=\\\"mobileNumber\\\">\\r\\n              <md-header-cell *cdkHeaderCellDef md-sort-header fxFlex=\\\"30%\\\"\\r\\n                >Mobile No\\r\\n              </md-header-cell>\\r\\n              <md-cell *cdkCellDef=\\\"let row\\\" (click)=\\\"myFun(row)\\\" fxFlex=\\\"30%\\\">\\r\\n                {{ row.mobileNumber }}\\r\\n              </md-cell>\\r\\n            </ng-container>\\r\\n            <!-- <ng-container cdkColumnDef=\\\"balance\\\">\\r\\n                        <md-header-cell *cdkHeaderCellDef md-sort-header>Open Balance </md-header-cell>\\r\\n                        <md-cell *cdkCellDef=\\\"let row\\\" (click)=\\\"myFun(row)\\\"> {{row.openingBalance}} </md-cell>\\r\\n                    </ng-container> -->\\r\\n\\r\\n            <!-- Color Column -->\\r\\n            <!--                     <ng-container cdkColumnDef=\\\"action\\\" > -->\\r\\n            <!--                         <md-header-cell *cdkHeaderCellDef fxLayoutAlign=\\\"end center\\\">Action</md-header-cell> -->\\r\\n            <!--                         <md-cell *cdkCellDef=\\\"let row\\\"  (click)=\\\"onSelectedItem(row)\\\" [mdMenuTriggerFor]=\\\"sendMenu\\\" fxLayoutAlign=\\\"end center\\\"> -->\\r\\n            <!--                             <md-icon color=\\\"accent\\\" >more_vert</md-icon> -->\\r\\n            <!--                         </md-cell> -->\\r\\n            <!--                     </ng-container> -->\\r\\n            <ng-container cdkColumnDef=\\\"action\\\">\\r\\n              <md-header-cell\\r\\n                *cdkHeaderCellDef\\r\\n                fxLayoutAlign=\\\"center\\\"\\r\\n                fxFlex=\\\"10%\\\"\\r\\n                >Action</md-header-cell\\r\\n              >\\r\\n              <md-cell\\r\\n                *cdkCellDef=\\\"let row\\\"\\r\\n                (click)=\\\"onSelectedItem(row)\\\"\\r\\n                fxLayoutAlign=\\\"center\\\"\\r\\n                fxFlex=\\\"10%\\\"\\r\\n              >\\r\\n                <md-icon color=\\\"accent\\\" [mdMenuTriggerFor]=\\\"sendMenu\\\"\\r\\n                  >more_vert</md-icon\\r\\n                >\\r\\n              </md-cell>\\r\\n            </ng-container>\\r\\n\\r\\n            <md-header-row\\r\\n              *cdkHeaderRowDef=\\\"displayedColumns\\\"\\r\\n              style=\\\" position: sticky;\\r\\n            top: 0;\\r\\n            z-index: 100;\\r\\n            background: white;\\\"\\r\\n            ></md-header-row>\\r\\n            <md-row *cdkRowDef=\\\"let row; columns: displayedColumns\\\"></md-row>\\r\\n          </md-table>\\r\\n        </md-card-content>\\r\\n      </md-card>\\r\\n      <md-paginator\\r\\n        #paginator\\r\\n        style=\\\"width: 100%;\\\"\\r\\n        [length]=\\\"dataSource.data.length\\\"\\r\\n        [pageIndex]=\\\"0\\\"\\r\\n        [pageSize]=\\\"10\\\"\\r\\n        [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"\\r\\n      >\\r\\n      </md-paginator>\\r\\n    </div>\\r\\n    <md-menu #sendMenu=\\\"mdMenu\\\" style=\\\"padding: 1rem;\\\">\\r\\n      <!-- <button md-menu-item (click)=\\\"print()\\\"> Print </button> -->\\r\\n      <!-- <button md-menu-item (click)=\\\"open()\\\"> Open </button> -->\\r\\n      <button md-menu-item (click)=\\\"view()\\\">View</button>\\r\\n      <!-- <button md-menu-item (click)=\\\"download()\\\"> Download </button> -->\\r\\n      <!-- <button md-menu-item (click)=\\\"sendEmail()\\\">Send Email</button> -->\\r\\n      <button md-menu-item (click)=\\\"edit()\\\">Edit</button>\\r\\n      <button md-menu-item (click)=\\\"delete()\\\">Delete</button>\\r\\n    </md-menu>\\r\\n  </aside>\\r\\n  <md-sidenav\\r\\n    #sidenav\\r\\n    align=\\\"end\\\"\\r\\n    mode=\\\"over\\\"\\r\\n    [opened]=\\\"showSide\\\"\\r\\n    style=\\\"width:700px\\\"\\r\\n  >\\r\\n    <app-search-email\\r\\n      (close)=\\\"onClose('reload')\\\"\\r\\n      [(email)]=\\\"email\\\"\\r\\n      (emailSave)=\\\"emailSave()\\\"\\r\\n    ></app-search-email>\\r\\n  </md-sidenav>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/suppliermanagement/supplier.search.component.html\n// module id = ../../../../../src/app/components/admin/suppliermanagement/supplier.search.component.html\n// module chunks = 1","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".position {\\n  position: fixed;\\n  left: 0px;\\n  right: 0px;\\n  overflow-x: hidden; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/suppliermanagement/supplier.search.component.scss\n// module id = ../../../../../src/app/components/admin/suppliermanagement/supplier.search.component.scss\n// module chunks = 1","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ViewChild,\r\n  ElementRef\r\n} from \"@angular/core\";\r\nimport { AppService } from \"../../../shared/service/app.service\";\r\nimport { AnimationService } from \"../../../shared/service/animation.service\";\r\nimport { RestService } from \"./../../../common/rest.service\";\r\nimport { Prop } from \"./../../../common/props\";\r\nimport { Util } from \"../../../shared/utils/util\";\r\nimport { InvoiceFormGroup } from \"../../../forms/invoice.form\";\r\nimport { SupplierManagement } from \"../../../entities/suppliermanagement\";\r\nimport { SupplierFormGroup } from \"../../../forms/supplier.form\";\r\nimport { SupplierDataSource } from \"./supplier.datasource\";\r\nimport { ApexService } from \"../../../shared/service/apex.service\";\r\nimport {\r\n  TdDataTableService,\r\n  TdDataTableSortingOrder,\r\n  ITdDataTableSortChangeEvent,\r\n  ITdDataTableColumn\r\n} from \"@covalent/core\";\r\nimport { DataSource } from \"@angular/cdk\";\r\n//import { MdSort } from '@angular/material';\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport \"rxjs/add/observable/fromEvent\";\r\nimport \"rxjs/add/operator/debounceTime\";\r\nimport \"rxjs/add/operator/distinctUntilChanged\";\r\nimport \"rxjs/add/operator/startWith\";\r\nimport \"rxjs/add/observable/merge\";\r\nimport \"rxjs/add/operator/map\";\r\nimport { Email } from \"../../../entities/supplierSearchEmail.entity\";\r\nimport { DialogContentExampleDialog } from \"./DialogContentExampleDialog\";\r\nimport {\r\n  MdDialog,\r\n  MdSort,\r\n  MdDialogRef,\r\n  MD_DIALOG_DATA,\r\n  MdPaginator\r\n} from \"@angular/material\";\r\n//import { AngularFixedModule }        from 'angular-fixed-table-header';\r\n\r\n@Component({\r\n  selector: \"app-supplier-search\",\r\n  templateUrl: \"./supplier.search.component.html\",\r\n  styleUrls: [\"./supplier.search.component.scss\"]\r\n})\r\nexport class SupplierSearchComponent implements OnInit {\r\n  dataSource: SupplierDataSource = null;\r\n  //dataSource: SupplierDataSource = null\r\n  //displayedColumns: any[] = [\"name\", \"company\", \"email\", \"street\",\"state\",\"city\",\"phone\",\"balance\",\"action\"];\r\n  displayedColumns: any[] = [\r\n    \"company\",\r\n    \"state\",\r\n    \"city\",\r\n    \"mobileNumber\",\r\n    \"action\"\r\n  ];\r\n  selectedItem: any = null;\r\n  showSide: boolean = false;\r\n  searchObject: any = {};\r\n  email: any = {};\r\n  selectedItemForView: any = null;\r\n  filteredStates: any[] = [];\r\n  //@ViewChild('filter') filter: ElementRef;\r\n  //searchObj: any = {};\r\n  @ViewChild(MdSort) sort: MdSort;\r\n  @ViewChild(MdPaginator) paginator: MdPaginator;\r\n\r\n  constructor(\r\n    private appService: AppService,\r\n    private restService: RestService,\r\n    private apexService: ApexService,\r\n    private _dataTableService: TdDataTableService,\r\n    public dialog: MdDialog\r\n  ) {}\r\n  openDialog(id) {\r\n    const dialogRef = this.dialog.open(DialogContentExampleDialog, {\r\n      width: \"500px\",\r\n      height: \"250px\",\r\n      data: id\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.clearAll();\r\n    });\r\n  }\r\n\r\n  public clearAll() {\r\n    this.searchObject = {};\r\n    this.dataSource = new SupplierDataSource(\r\n      this.restService,\r\n      this.searchObject,\r\n      this.sort,\r\n      this.paginator\r\n    );\r\n  }\r\n  ngOnInit(): void {\r\n    this.dataSource = new SupplierDataSource(\r\n      this.restService,\r\n      this.searchObject,\r\n      this.sort,\r\n      this.paginator\r\n    );\r\n    this.periodLoad();\r\n    this.rangeLoad();\r\n    this.stateLoad();\r\n  }\r\n\r\n  periodList: any[] = [];\r\n  periodLoad() {\r\n    this.restService\r\n      .dataloadFromFile(\"./assets/json/common.json\")\r\n      .subscribe(results => {\r\n        this.periodList = results[\"Period\"];\r\n      });\r\n  }\r\n\r\n  rangeList: any[] = [];\r\n  rangeLoad() {\r\n    this.restService\r\n      .dataloadFromFile(\"./assets/json/common.json\")\r\n      .subscribe(results => {\r\n        this.rangeList = results[\"Range\"];\r\n      });\r\n  }\r\n\r\n  stateLoad() {\r\n    this.restService\r\n      .dataloadFromFile(\"./assets/json/common.json\")\r\n      .subscribe(results => {\r\n        this.filteredStates = results[\"stateList\"];\r\n      });\r\n  }\r\n\r\n  //     @Output() confirm = new EventEmitter<any>();\r\n  //\r\n  //   constructor(private el: ElementRef) {\r\n  //   }\r\n  //\r\n  //   @HostListener('click')\r\n  //    onClick() {\r\n  //      $.confirm({\r\n  //      buttons: {\r\n  //     confirm: () => this.confirm.emit()\r\n  //   }\r\n  //  });\r\n  // }\r\n\r\n  dataList: any = [];\r\n\r\n  edit() {\r\n    this.appService.navigate(\"./admin/supplier-management\", [\r\n      { id: this.selectedItem.id, isEditable: true }\r\n    ]);\r\n  }\r\n\r\n  view() {\r\n    this.appService.navigate(\"./admin/supplier-management\", [\r\n      { id: this.selectedItem.id, isEditable: false }\r\n    ]);\r\n  }\r\n  delete() {\r\n    // this.restService.supplierDelete({ id: [this.selectedItem.id] })\r\n    //   .subscribe(result => {\r\n\r\n    //     this.apexService.showMessages(\"supplier details deleted successfully.\", 1500);\r\n    //     this.dataSource = new SupplierDataSource(this.restService, this.searchObject, this.sort);\r\n    //   });\r\n    this.openDialog({ id: [this.selectedItem.id] });\r\n    // this.dataSource = new SupplierDataSource(this.restService, this.searchObject, this.sort);\r\n  }\r\n\r\n  onSelectedItem(row) {\r\n    this.selectedItem = row;\r\n  }\r\n\r\n  callDataSource() {\r\n    if (\r\n      this.searchObject.fromDate &&\r\n      typeof this.searchObject.fromDate == \"object\"\r\n    ) {\r\n      this.searchObject.fromDate = Util.ISODate(\r\n        this.searchObject.fromDate.toISOString()\r\n      );\r\n    }\r\n    if (\r\n      this.searchObject.toDate &&\r\n      typeof this.searchObject.toDate == \"object\"\r\n    ) {\r\n      this.searchObject.toDate = Util.ISODate(\r\n        this.searchObject.toDate.toISOString()\r\n      );\r\n    }\r\n    this.dataSource = new SupplierDataSource(\r\n      this.restService,\r\n      this.searchObject,\r\n      this.sort,\r\n      this.paginator\r\n    );\r\n  }\r\n\r\n  print() {\r\n    //    this.restService.paymentPrintPDF(this.selectedItem.id);\r\n    this.restService.supplierPrint(this.selectedItem.id);\r\n  }\r\n  open() {\r\n    this.restService.supplierOpen(this.selectedItem.id);\r\n  }\r\n  download() {\r\n    this.restService.supplierDownload(this.selectedItem.id);\r\n  }\r\n\r\n  sendEmail() {\r\n    this.showSide = true;\r\n    // if (!item) {\r\n    //  alert(this.selectedItem.emailId);\r\n    let item = new Email();\r\n    // }\r\n    this.email = Object.assign({}, item);\r\n    this.email.to = this.selectedItem.emailId;\r\n  }\r\n  onClose(item: any) {\r\n    this.showSide = false;\r\n  }\r\n  emailSave() {\r\n    //this.email.to = this.selectedItem.email;\r\n    this.email.from = this.appService.getSessionUser().email;\r\n    this.email.fileName = \"Supplier.pdf\";\r\n    this.email.content = btoa(this.email.message);\r\n    delete this.email.message;\r\n\r\n    this.restService\r\n      .supplierEmail(this.selectedItem.id, this.email)\r\n      .subscribe(result => {\r\n        this.showSide = false;\r\n      });\r\n  }\r\n  myFun(row) {\r\n    this.selectedItemForView = row;\r\n    this.appService.navigate(\"./admin/supplier-management\", [\r\n      { id: this.selectedItemForView.id, isEditable: false }\r\n    ]);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/suppliermanagement/supplier.search.component.ts","module.exports = \"<div\\r\\n  id=\\\"page-header\\\"\\r\\n  fxLayoutAlign=\\\"center center\\\"\\r\\n  *ngIf=\\\"isEditable == 'true'\\\"\\r\\n>\\r\\n  <h2>{{ isEdit ? \\\"Edit Supplier\\\" : \\\"New Supplier\\\" }}</h2>\\r\\n</div>\\r\\n<div\\r\\n  id=\\\"page-header\\\"\\r\\n  fxLayoutAlign=\\\"center center\\\"\\r\\n  *ngIf=\\\"isEditable == 'false'\\\"\\r\\n>\\r\\n  <h2>View Supplier</h2>\\r\\n</div>\\r\\n<aside>\\r\\n  <div id=\\\"page-content\\\" style=\\\"margin: 20px 0;\\\">\\r\\n    <div class=\\\"row center-xs\\\">\\r\\n      <div style=\\\"width:800px; background-color: white\\\">\\r\\n        <td-steps mode=\\\"horizontal\\\">\\r\\n          <td-step\\r\\n            #step1\\r\\n            label=\\\"Basic Info\\\"\\r\\n            [active]=\\\"true\\\"\\r\\n            (activated)=\\\"changeEvent(step1, step2, step3)\\\"\\r\\n          >\\r\\n            <app-supplierdetails\\r\\n              [(supplierManagement)]=\\\"supplierManagement\\\"\\r\\n              (supplierEvent)=\\\"supplierEvent($event)\\\"\\r\\n            >\\r\\n            </app-supplierdetails>\\r\\n          </td-step>\\r\\n          <td-step #step2 label=\\\"Business and Bank Info\\\">\\r\\n            <app-business\\r\\n              [(supplierManagement)]=\\\"supplierManagement\\\"\\r\\n              (supplierBussinessDetail)=\\\"supplierBussinessDetail($event)\\\"\\r\\n              (backEvent)=\\\"backEvent()\\\"\\r\\n            >\\r\\n            </app-business>\\r\\n          </td-step>\\r\\n\\r\\n          <td-step #step3 label=\\\"Address\\\">\\r\\n            <app-addresses\\r\\n              [(supplierManagement)]=\\\"supplierManagement\\\"\\r\\n              (addressesEvent)=\\\"supplierCreation($event)\\\"\\r\\n              (backEvent)=\\\"backEvent()\\\"\\r\\n            >\\r\\n            </app-addresses>\\r\\n          </td-step>\\r\\n        </td-steps>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</aside>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/suppliermanagement/suppliermanagement.component.html\n// module id = ../../../../../src/app/components/admin/suppliermanagement/suppliermanagement.component.html\n// module chunks = 1","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/suppliermanagement/suppliermanagement.component.scss\n// module id = ../../../../../src/app/components/admin/suppliermanagement/suppliermanagement.component.scss\n// module chunks = 1","import { Component, OnInit } from \"@angular/core\";\r\nimport { AppService } from \"../../../shared/service/app.service\";\r\nimport { AnimationService } from \"../../../shared/service/animation.service\";\r\nimport { RestService } from \"./../../../common/rest.service\";\r\nimport { Prop } from \"./../../../common/props\";\r\nimport { SupplierManagement } from \"../../../entities/suppliermanagement\";\r\nimport { ApexService } from \"../../../shared/service/apex.service\";\r\n\r\n@Component({\r\n  selector: \"app-suppliermanagement\",\r\n  templateUrl: \"./suppliermanagement.component.html\",\r\n  styleUrls: [\"./suppliermanagement.component.scss\"]\r\n})\r\nexport class SuppliermanagementComponent {\r\n  isRecordFound: boolean;\r\n  currentStep: number = 1;\r\n  step1: any;\r\n  step2: any;\r\n  step3: any;\r\n  supplierManagement: SupplierManagement;\r\n  isActive: boolean = false;\r\n  isEditable: string = \"true\";\r\n  isEdit: boolean = false;\r\n  constructor(\r\n    private appService: AppService,\r\n    private restService: RestService,\r\n    private apexService: ApexService\r\n  ) {\r\n    this.supplierManagement = new SupplierManagement();\r\n    this.supplierManagement.company.id = this.appService.getBranch().id;\r\n    // this.customerCreation({});\r\n    let id = this.appService.getParam(\"id\");\r\n    if (id !== undefined) {\r\n      this.supplierDetails(id);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    let id = this.appService.getParam(\"id\");\r\n    this.isEditable = this.appService.getParam(\"isEditable\");\r\n    if (id !== undefined) {\r\n      this.retrieveSupplier(id);\r\n      this.isEdit = true;\r\n    } else {\r\n      this.isEdit = false;\r\n      this.isEditable = \"true\";\r\n    }\r\n  }\r\n\r\n  supplierDetails(id) {\r\n    this.restService.supplierEdit(id).subscribe(result => {\r\n      if (result) {\r\n        this.supplierManagement = result;\r\n        this.isRecordFound = true;\r\n      }\r\n    });\r\n  }\r\n  changeEvent(event1: any, event2: any, event3: any) {\r\n    console.log(\"activeEvent all steps\");\r\n    this.step1 = event1;\r\n    this.step2 = event2;\r\n    this.step3 = event3;\r\n    setTimeout(() => {\r\n      if (!this.isActive) {\r\n        this.isActive = true;\r\n        this.changeStep();\r\n      }\r\n    }, 100);\r\n  }\r\n  changeStep() {\r\n    this.step1.disabled = true;\r\n    this.step2.disabled = true;\r\n\r\n    this.step3.disabled = true;\r\n    this.step1.active = false;\r\n    this.step2.active = false;\r\n\r\n    this.step3.active = false;\r\n\r\n    let activeStep: any = this.getActiveStep();\r\n\r\n    activeStep.disabled = false;\r\n    activeStep.active = true;\r\n  }\r\n  retrieveSupplier(id: string) {\r\n    this.restService.getSupplier(id).subscribe(result => {\r\n      if (result) {\r\n        this.supplierManagement = result;\r\n\r\n        this.isEdit = true;\r\n      }\r\n    });\r\n  }\r\n  getActiveStep() {\r\n    switch (this.currentStep) {\r\n      case 1:\r\n        return this.step1;\r\n      case 2:\r\n        return this.step2;\r\n      case 3:\r\n        return this.step3;\r\n      default:\r\n        return this.step1;\r\n    }\r\n  }\r\n  supplierEvent($event) {\r\n    let activeStep: any = this.getActiveStep();\r\n    activeStep.state = \"complete\";\r\n    this.currentStep = 2;\r\n    this.changeStep();\r\n  }\r\n  supplierBussinessDetail($event) {\r\n    let activeStep: any = this.getActiveStep();\r\n    activeStep.state = \"complete\";\r\n    this.currentStep = 3;\r\n    this.changeStep();\r\n  }\r\n\r\n  addressesEvent($event) {\r\n    let activeStep: any = this.getActiveStep();\r\n    activeStep.state = \"complete\";\r\n    this.currentStep = 4;\r\n    this.changeStep();\r\n  }\r\n\r\n  backEvent() {\r\n    let activeStep: any = this.getActiveStep();\r\n    activeStep.state = \"none\";\r\n    this.currentStep = this.currentStep - 1;\r\n    this.changeStep();\r\n  }\r\n  supplierCreation($event: any) {\r\n    this.restService.supplierSave(this.supplierManagement).subscribe(result => {\r\n      // alert(\"result SupplierManagement\");\r\n      // alert(result);\r\n      let message = \"\";\r\n      if (this.isRecordFound) {\r\n        message = \"supplier details updated successfully.\";\r\n      } else {\r\n        message = \"supplier details saved successfully.\";\r\n      }\r\n      this.apexService.showMessages(message, 1500);\r\n\r\n      if (this.isRecordFound) {\r\n        this.appService.navigate(\"/admin/suppliersearch\", []);\r\n      } else {\r\n        //                      this.supplierManagement = Object.assign({}, new SupplierManagement());\r\n        //                  this.supplierManagement=new SupplierManagement();\r\n        this.appService.navigate(\"/admin/suppliersearch\", []);\r\n        //                      this.currentStep =1;\r\n        //                      this.changeStep();\r\n        // this.changeEvent({},{},{});\r\n        //                     this.appService.navigate('/admin/suppliersearch', []);\r\n        //                 this.appService.navigateMy('/admin/supplier-management');\r\n      }\r\n      // this.appService.navigate('/admin/suppliersearch', []);\r\n      //                 }\r\n    });\r\n  }\r\n\r\n  //\r\n  //     }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/components/admin/suppliermanagement/suppliermanagement.component.ts","import { ProductPurchasing } from \"./ProductPurchasing.entity\";\r\nimport { ProductPriceListItems } from \"./ProductPriceListItems.entity\";\r\n\r\nexport class Inventory {\r\n  id: string;\r\n  productName: string;\r\n  productCode: string;\r\n  productType: string;\r\n  hsnCode: string;\r\n  companyId: string;\r\n  active: any;\r\n  uqc: any;\r\n  productPurchasing: ProductPurchasing = new ProductPurchasing();\r\n  productPriceListItems: ProductPriceListItems = new ProductPriceListItems();\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/entities/Product.entity.ts","export class ProductPriceListItems { \r\n    id : string ; \r\n    initialStockAtHand : string ; \r\n    unitPrice : string ; \r\n    unitSellPrice : number ; \r\n    stockAsOfDate : Date ; \r\n    stockAlertQty : number ; \r\n    taxInclusive : boolean ; \r\n    purchaseTax : string ; \r\n    tax : string ; \r\n    salesInformation : string ; \r\n    expenseAccount : string ; \r\n    revenueAccount : string ; \r\n    invAssetAccount : string ; \r\n    isProdServc : boolean ; \r\n    purchaseTaxInclusive: boolean;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/entities/ProductPriceListItems.entity.ts","export class ProductPurchasing {\r\n  id: string;\r\n  cgsTax: number;\r\n  sgsTax: number;\r\n  IgsTax: number;\r\n  purchasingInfo: string;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/entities/ProductPurchasing.entity.ts","export class Barcode {\r\n  barcode: string;\r\n  stockName: string;\r\n  qty: any;\r\n  qtyArray: any[];\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/entities/barcode.entity.ts","export class ChartofAccount{\r\n    id: string = \"0\";\r\n    account_name: string;\r\n    account_type: string;\r\n    account_detail_type: string;\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/entities/chartofaccount.entity.ts","import { Account } from \"./account.entity\";\r\nimport { Profile } from \"./profile.entity\";\r\nimport { Address } from \"./address.entity\";\r\nimport { CustomerPayment } from \"./customerpayment.entity\";\r\nimport { CustomerTax } from \"./customertax.entity\";\r\n\r\nexport class CustomManagement {\r\n\r\n    constructor() {\r\n        this.billingAddress.lane = ''\r\n        this.billingAddress.street = ''\r\n        this.billingAddress.zipCode = ''\r\n        this.gstNo = ''\r\n        this.businessName = ''\r\n        this.displayName = ''\r\n        this.firstName = ''\r\n        this.lastName = ''\r\n\r\n    }\r\n    id: any;\r\n    active: boolean = true;\r\n    title: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    phone:number;\r\n    mobile:number;\r\n    companyId:number;\r\n    accountNumber: number;\r\n    gstRegNumber: number;\r\n    displayName: string;\r\n    businessName:string;\r\n    email: any;\r\n    fax: number;\r\n    webSite: any;\r\n    others:any;\r\n    isShippingAddress:boolean;\r\n    shippingAddress: Address = new Address();\r\n    billingAddress: Address = new Address();\r\n    customerType : string;\r\n    gstNo : string;\r\n    paymentMethod : string;\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/entities/custommanagement.ts","export class Email {\r\n    from:string;\r\n    to:string;\r\n    subject:string;\r\n    message:string;\r\n    fileName:string =\"expense.pdf\";\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/entities/expenseSearchEmail.entity.ts","export class ExpenseAccountDetails {\r\n  id: any = null;\r\n  expenseId: any;\r\n  expenseTypes: any = {};\r\n  description: string;\r\n  amount: number = 0;\r\n  tax: number = 0;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/entities/expenseaccountdetails.entity.ts","import { ChartofAccount } from \"./chartofaccount.entity\";\r\nimport { SupplierManagement } from \"./suppliermanagement\";\r\nimport { ExpenseAccountDetails } from \"./expenseaccountdetails.entity\";\r\nimport { ExpensePayee } from \"./expensepayee.entity\";\r\n\r\nexport class ExpenseManagement {\r\n  id: any;\r\n  paymentMode: string;\r\n  referenceNo: string;\r\n  chequeNo: string;\r\n  paymentDate: Date;\r\n  billDate: Date;\r\n  chequeDate: Date;\r\n  bankName: string;\r\n  others: string;\r\n  amount: number;\r\n  deleted: number;\r\n  isSupplier: boolean;\r\n  expenseName: string;\r\n  expenseAccountList: ExpenseAccountDetails;\r\n  expenseAccountDetails: ExpenseAccountDetails[] = [];\r\n  creditAccountId: ChartofAccount = new ChartofAccount();\r\n  payeeId: ExpensePayee = new ExpensePayee();\r\n\r\n  subTotal: number = 0;\r\n  totalTax: number = 0;\r\n  grandTotal: number = 0;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/entities/expensemanagement.ts","export class ExpensePayee {\r\n  id: any;\r\n  name: any;\r\n  address: string;\r\n  gst_reg_number: string;\r\n  state: string;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/entities/expensepayee.entity.ts","export class Email {\r\n  from: string;\r\n  to: string;\r\n  subject: string;\r\n  message: string;\r\n  fileName: string = \"supplier.pdf\";\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/entities/invoiceSearchEmail.entity.ts","import { Customer } from \"./customer.entity\";\r\nexport class Payment {\r\n  id: any;\r\n  // customerId: number;\r\n  paymentMode: string;\r\n  referenceNo: string;\r\n  chequeNumber: string;\r\n  paymentDate: Date;\r\n  chequeDate: Date;\r\n  bankName: string;\r\n  remark: string;\r\n  amount: number;\r\n  dueAmount: number;\r\n  deleted: number;\r\n  invoiceNumber: string;\r\n  micr: string;\r\n\r\n  customer: Customer = new Customer();\r\n  companyId: string;\r\n  paymentDateStr: string;\r\n  newamount: any;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/entities/payment.ts","export class Email {\r\n    from:string;\r\n    to:string;\r\n    subject:string;\r\n    message:string;\r\n    fileName:string =\"payment.pdf\";\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/entities/paymentSearchEmail.entity.ts","export class PrintLayout{\r\n    id: string;\r\n    layoutSize: string;\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/entities/printlayout.entity.ts","import {Item} from \"./item.entity\";\r\nimport { Address } from \"./address.entity\";\r\n\r\nexport class Quotations{\r\n  id:string;\r\n  active: boolean = true;\r\n  company: any;\r\n  user: any;\r\n  customer: any;\r\n  memo: string;\r\n  status:any =\"DRAFTSAVE\";\r\n  isCgst : boolean = true;\r\n  isIgst: boolean = false;\r\n  isProduct : boolean = true;\r\n  isService: boolean = false;\r\n  print: any;\r\n  isBillingAddress : boolean = true;\r\n  discount : number = 0;\r\n  discountType : string;\r\n  cess : number = 0;\r\n  cessValue: number;\r\n  discountValue: any;   \r\n  subTotal:number = 0;\r\n  total:number= 0;\r\n  saveType :string = \"save\";\r\n  paymentTerms: any;\r\n  address: Address = new Address();\r\n  items: Item[] = [];\r\n  description =\"\";\r\n  \r\n    estimationDate: Date;\r\n   expirationDate: Date;\r\n   time: Date;\r\n // dueDate : Date;\r\n  quoteNumber : any;\r\n   quotationMessage : string;\r\n   productItems: Item[] = [];\r\n   serviceItems: Item[] = [];\r\n \r\n    \r\n\r\n\r\n    \r\n}\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/entities/quotations.entity.ts","export class Staff {\r\n  id: number = null;\r\n  firstName: string;\r\n  lastName: string;\r\n  mobile: number;\r\n  status: boolean;\r\n  password: string;\r\n  loggedIn: boolean;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/entities/staff.entity.ts","export class Email {\r\n    from:string;\r\n    to:string;\r\n    subject:string;\r\n    message:string;\r\n    fileName:string =\"supplier.pdf\";\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/entities/supplierSearchEmail.entity.ts","import { Address } from './address.entity';\r\nexport class UserDetails{\r\n    id:string;\r\n    firstName: string;\r\n    lastName: string;\r\n    pan: string;\r\n    tan: string;\r\n    gender: string;   \r\n    address: string;     \r\n    mobile:string; \r\n}\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/entities/userdetails.entity.ts","import { PrintLayout } from './printlayout.entity';\r\nimport { BankDetails } from './bank.entity';\r\nimport { UserDetails } from './userdetails.entity';\r\nimport { Company } from \"./company.entity\";\r\n\r\nexport class UserSettings{\r\n    id: string;\r\n    company: Company = new Company();\r\n    companyId: string = \"\";\r\n    userProfile: UserDetails = new UserDetails();\r\n    bankDetails: BankDetails = new BankDetails();\r\n    printLayoutId: PrintLayout = new PrintLayout();\r\n    invoiceFooter: string;\r\n    quotationFooter: string;\r\n    logo: string;    \r\n}\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/entities/usersettings.entity.ts","import { FormGroup, FormBuilder,FormControl, Validators}  from '@angular/forms';\r\nimport { AppFormGroup }  from '../shared/common/app.form';\r\n\r\nexport class InventoryFormGroup extends AppFormGroup {\r\n    static init() {\r\n        return this.getFormGroup();\r\n    }\r\n    static edit(group: FormGroup) {\r\n    \r\n        group.addControl(\"inventory_productName\", this.getController(null, this.TYPE_ALFA_NUM_DES_SPACE, null, 50) ); \r\n        group.addControl(\"inventory_productCode\", this.getController(null, this.TYPE_ALFA_NUM_DES_SPACE, null, 40) ); \r\n        group.addControl(\"inventory_hsnCode\", this.getController(null, this.TYPE_COMBI_NUM, null, 8) );\r\n        group.addControl(\"inventory_productType\", this.getController(null, this.TYPE_DATA, null, 99) ); \r\n        group.addControl(\"inventory_productPurchasing_cgsTax\", this.getController(null, this.TYPE_DATA, null, 50) ); \r\n        group.addControl(\"inventory_productPurchasing_sgsTax\", this.getController(null, this.TYPE_DATA, null, 50) ); \r\n        group.addControl(\"inventory_productPurchasing_IgsTax\", this.getController(null, this.TYPE_DATA, null, 50) ); \r\n        group.addControl(\"inventory_productPurchasing_purchasingInfo\", this.getController(null, this.TYPE_DECIMAL, null, 99) ); \r\n        group.addControl(\"inventory_productPriceListItems_stockAlertQty\", this.getController(null, this.TYPE_NUMBER, null, null) ); \r\n        group.addControl(\"inventory_productPriceListItems_initialStockAtHand\", this.getController(null, this.TYPE_NUMBER, null, 50) ); \r\n        group.addControl(\"inventory_productPriceListItems_unitPrice\", this.getController(null, this.TYPE_DECIMAL, null, 20) ); \r\n        group.addControl(\"inventory_productPriceListItems_unitSellPrice\", this.getController(null, this.TYPE_DECIMAL, null, 20) ); \r\n        group.addControl(\"inventory_productPriceListItems_stockAsOfDate\", this.getController(null, this.TYPE_DATE, null, null) ); \r\n        group.addControl(\"inventory_product_unitquantitycode\",this.getController(true,this.TYPE_DATA,null,null));\r\n        group.addControl(\"inventory_productPriceListItems_stockAlertQty\", this.getController(null, this.TYPE_NUMBER, null, null) ); \r\n        group.addControl(\"inventory_productPriceListItems_purchaseTax\", this.getController(null, this.TYPE_DATA, null, null) ); \r\n        group.addControl(\"inventory_productPriceListItems_tax\", this.getController(null, this.TYPE_DATA, null, null) ); \r\n        group.addControl(\"inventory_productPriceListItems_status\", this.getController(null, this.TYPE_ALL, null, null) );\r\n        \r\n        group.addControl(\"inventory_productPriceListItems_salesInformation\", this.getController(null, this.TYPE_ALFA_NUM_DES_SPACE, null, 99) ); \r\n        group.addControl(\"inventory_productPriceListItems_expenseAccount\", this.getController(null, this.TYPE_ALFA_NUM_DES_SPACE, null, null) ); \r\n        group.addControl(\"inventory_productPriceListItems_revenueAccount\", this.getController(null, this.TYPE_ALFA_NUM_DES_SPACE, null, null) ); \r\n        group.addControl(\"inventory_productPriceListItems_invAssetAccount\", this.getController(null, this.TYPE_ALFA_NUM_DES_SPACE, null, 50) ); \r\n\t}\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/forms/Product.form.ts","import {\r\n  FormGroup,\r\n  FormBuilder,\r\n  FormControl,\r\n  Validators\r\n} from \"@angular/forms\";\r\nimport { AppFormGroup } from \"../shared/common/app.form\";\r\n\r\nexport class ServiceFormGroup extends AppFormGroup {\r\n  static init() {\r\n    return this.getFormGroup();\r\n  }\r\n  static edit(group: FormGroup) {\r\n    group.addControl(\r\n      \"service_serviceName\",\r\n      this.getController(null, this.TYPE_ALFA_NUM_DES_SPACE, null, 30)\r\n    );\r\n    group.addControl(\r\n      \"service_serviceType\",\r\n      this.getController(null, this.TYPE_DATA, null, null)\r\n    );\r\n    group.addControl(\r\n      \"service_serviceCode\",\r\n      this.getController(null, this.TYPE_COMBI_NUM, null, null)\r\n    );\r\n    group.addControl(\r\n      \"service_productType\",\r\n      this.getController(null, this.TYPE_DATA, null, 99)\r\n    );\r\n    // group.addControl(\r\n    //   \"service_unitquantitycode\",\r\n    //   this.getController(true, this.TYPE_DATA, null, null)\r\n    // );\r\n    group.addControl(\r\n      \"service_salesUnit\",\r\n      this.getController(null, this.TYPE_DECIMAL, null, 30)\r\n    );\r\n    group.addControl(\r\n      \"service_incomeAmount\",\r\n      this.getController(null, this.TYPE_DECIMAL, null, null)\r\n    );\r\n    group.addControl(\r\n      \"service_abatement\",\r\n      this.getController(null, this.TYPE_NUMBER, null, 30)\r\n    );\r\n    group.addControl(\r\n      \"service_tax\",\r\n      this.getController(null, this.TYPE_DATA, null, null)\r\n    );\r\n    group.addControl(\r\n      \"status1\",\r\n      this.getController(null, this.TYPE_ALL, null, null)\r\n    );\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/forms/Service.form.ts","import {\r\n  FormGroup,\r\n  FormBuilder,\r\n  FormControl,\r\n  Validators\r\n} from \"@angular/forms\";\r\nimport { AppFormGroup } from \"../shared/common/app.form\";\r\n\r\nexport class CustomerFormGroup extends AppFormGroup {\r\n  static init() {\r\n    return this.getFormGroup();\r\n  }\r\n  static details(group: FormGroup) {\r\n    group.addControl(\r\n      \"custom_title\",\r\n      this.getController(null, this.TYPE_DATA, null, 20)\r\n    );\r\n    group.addControl(\r\n      \"custom_firstName\",\r\n      this.getController(null, this.TYPE_ALFA, null, 50)\r\n    );\r\n    group.addControl(\r\n      \"custom_lastName\",\r\n      this.getController(null, this.TYPE_ALFA, null, 20)\r\n    );\r\n    group.addControl(\r\n      \"custom_displayName\",\r\n      this.getController(null, this.TYPE_BUSI_NAME, 3, 50)\r\n    );\r\n    group.addControl(\r\n      \"custom_email\",\r\n      this.getController(null, this.TYPE_EMAIL, null, 50)\r\n    );\r\n    group.addControl(\r\n      \"custom_website\",\r\n      this.getController(null, this.TYPE_WEBSITE, null, 99)\r\n    );\r\n    group.addControl(\r\n      \"custom_others\",\r\n      this.getController(null, this.TYPE_DATA, null, 99)\r\n    );\r\n    group.addControl(\r\n      \"custom_businessName\",\r\n      this.getController(null, this.TYPE_BUSI_NAME, 5, 50)\r\n    );\r\n    group.addControl(\r\n      \"custom_tan\",\r\n      this.getController(null, this.TYPE_ALFA_NUM, 10, 12)\r\n    );\r\n    group.addControl(\r\n      \"custom_fax\",\r\n      this.getController(null, this.TYPE_ALFA_NUM_DES_SPACE, 10, 15)\r\n    );\r\n    group.addControl(\r\n      \"custom_phone\",\r\n      this.getController(null, this.TYPE_PHONE_NO, 10, 20)\r\n    );\r\n    group.addControl(\r\n      \"custom_mobile\",\r\n      this.getController(null, this.TYPE_MOBILE_NO, 10, 10)\r\n    );\r\n    group.addControl(\r\n      \"custom_discount\",\r\n      this.getController(null, this.TYPE_MOBILE_NO, 10, 10)\r\n    );\r\n  }\r\n\r\n  static taxGroup(group: FormGroup) {\r\n    group.addControl(\r\n      \"tax_taxRegistartionNo\",\r\n      this.getController(null, this.TYPE_NUMBER, 11, 11)\r\n    );\r\n    group.addControl(\r\n      \"tax_cstRegistartionNo\",\r\n      this.getController(null, this.TYPE_NUMBER, 10, 12)\r\n    );\r\n    group.addControl(\r\n      \"tax_gstNo\",\r\n      this.getController(false, this.GST_CODE_PATTERN, 15, 15)\r\n    );\r\n    group.addControl(\r\n      \"tax_pan\",\r\n      this.getController(null, this.TYPE_PAN_NO, 10, 10)\r\n    );\r\n    group.addControl(\r\n      \"tax_type\",\r\n      this.getController(null, this.TYPE_ALFA_NUM_DES_SPACE, null, 99)\r\n    );\r\n\r\n    group.addControl(\r\n      \"payment_paymentMethod\",\r\n      this.getController(null, this.TYPE_DATA, null, 20)\r\n    );\r\n    group.addControl(\r\n      \"payment_deliveryMethod\",\r\n      this.getController(null, this.TYPE_DATA, null, 20)\r\n    );\r\n    group.addControl(\r\n      \"payment_terms\",\r\n      this.getController(null, this.TYPE_DATA, null, 20)\r\n    );\r\n    group.addControl(\r\n      \"payment_openingBalance\",\r\n      this.getController(null, this.TYPE_DECIMAL, null, 15)\r\n    );\r\n    group.addControl(\r\n      \"payment_currentDateAs\",\r\n      this.getController(null, this.TYPE_DATE, null, 15)\r\n    );\r\n  }\r\n\r\n  static address(group: FormGroup) {\r\n    group.addControl(\r\n      \"custom_address_lane\",\r\n      this.getController(null, this.TYPE_ALFA_NUM_DES_SPACE, null, 50)\r\n    );\r\n    group.addControl(\r\n      \"custom_address_area\",\r\n      this.getController(null, this.TYPE_ALFA_NUM_DES_SPACE, null, 30)\r\n    );\r\n    group.addControl(\r\n      \"custom_address_city\",\r\n      this.getController(null, this.TYPE_ALFA_DES, 3, 30)\r\n    );\r\n    group.addControl(\r\n      \"custom_address_state\",\r\n      this.getController(null, this.TYPE_DATA, 2, 70)\r\n    );\r\n    group.addControl(\r\n      \"custom_address_street\",\r\n      this.getController(null, this.TYPE_ALFA_NUM_DES_SPACE, null, 30)\r\n    );\r\n    group.addControl(\r\n      \"custom_address_zipCode\",\r\n      this.getController(null, this.TYPE_ZIP_CODE, 6, 6)\r\n    );\r\n  }\r\n\r\n  static shippingAddress(group: FormGroup, add: boolean) {\r\n    if (add) {\r\n      group.addControl(\r\n        \"custom_shippingAddress_lane\",\r\n        this.getController(null, this.TYPE_ALFA_NUM_DES_SPACE, null, 50)\r\n      );\r\n      group.addControl(\r\n        \"custom_shippingAddress_area\",\r\n        this.getController(null, this.TYPE_ALFA_NUM_DES_SPACE, null, 50)\r\n      );\r\n      group.addControl(\r\n        \"custom_shippingAddress_city\",\r\n        this.getController(null, this.TYPE_ALFA_DES, null, 50)\r\n      );\r\n      group.addControl(\r\n        \"custom_shippingAddress_state\",\r\n        this.getController(null, this.TYPE_DATA, null, 50)\r\n      );\r\n      group.addControl(\r\n        \"custom_shippingAddress_street\",\r\n        this.getController(null, this.TYPE_ALFA_NUM_DES_SPACE, null, 50)\r\n      );\r\n      group.addControl(\r\n        \"custom_shippingAddress_zipCode\",\r\n        this.getController(null, this.TYPE_NUMBER, 6, 6)\r\n      );\r\n    } else {\r\n      group.removeControl(\"custom_shippingAddress_lane\");\r\n      group.removeControl(\"custom_shippingAddress_area\");\r\n      group.removeControl(\"custom_shippingAddress_city\");\r\n      group.removeControl(\"custom_shippingAddress_state\");\r\n      group.removeControl(\"custom_shippingAddress_street\");\r\n      group.removeControl(\"custom_shippingAddress_zipCode\");\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/forms/customer.form.ts","import { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { AppFormGroup } from '../shared/common/app.form';\r\nexport class ExpenseFormGroup extends AppFormGroup {\r\n\r\n    static init() {\r\n        return this.getFormGroup();\r\n    }\r\n    static supplierName(group: FormGroup) {\r\n         group.addControl(\"supplier_id\", this.getController(null, this.TYPE_DATA, null, 100) );         \r\n         group.removeControl(\"payee_name\");\r\n         group.removeControl(\"payee_address\");\r\n         group.removeControl(\"payee_gstin\");\r\n         group.removeControl(\"payee_address_state\");\r\n     }\r\n    static expenseName(group: FormGroup) {\r\n         group.removeControl(\"supplier_id\");\r\n         group.addControl(\"expenseName\", this.getController(null, this.TYPE_DATA, null, 100) );\r\n     }\r\n\r\n    static newPayee(group: FormGroup){\r\n        // group.removeControl(\"supplier_id\");\r\n        group.addControl(\"payee_name\",this.getController(true,this.TYPE_DATA,null,100));\r\n        group.addControl(\"payee_address\",this.getController(false,this.TYPE_DATA,null,100));\r\n        group.addControl(\"payee_gstin\",this.getController(false,this.GST_CODE_PATTERN,15,15));\r\n        group.addControl(\"payee_address_state\",this.getController(true,this.TYPE_DATA,null,null));\r\n        group.addControl(\"tax_gstNo\", this.getController(null, this.GST_CODE_PATTERN, 15, 15));\r\n    }    \r\n\r\n    static edit(group: FormGroup) {\r\n        group.addControl(\"payment_mode\", this.getController(null, this.TYPE_DATA, null, 99) );\r\n        group.addControl(\"payment_date\", this.getController(null, this.TYPE_DATE, null, 99) );\r\n        group.addControl(\"bill_date\", this.getController(null, this.TYPE_DATE, null, 99) );\r\n        group.addControl(\"others\", this.getController(null, this.TYPE_DATA, null, 99) );\r\n        group.addControl(\"amount\", this.getController(null, this.TYPE_DECIMAL, null, 15) );\r\n//      group.addControl(\"supplier_id\", this.getController(null, this.TYPE_DATA, null, 100) );\r\n        group.addControl(\"referenceNumber\",this.getController(null,this.TYPE_NUMBER,null,30));\r\n        //group.addControl(\"reference_no\", this.getController(null, this.TYPE_ALFA_NUM_DES_SPACE, null, 300) );\r\n        group.addControl(\"account_credit\",this.getController(null,this.TYPE_DATA,null,100));\r\n       \r\n    }\r\n    static cheque(group: FormGroup){\r\n        \r\n        group.addControl(\"cheque_number\", this.getController(null, this.TYPE_NUMBER, 6, 6) );\r\n        group.addControl(\"cheque_date\", this.getController(null, this.TYPE_DATE, 10, 15));\r\n        group.addControl(\"bank_name\", this.getController(null, this.TYPE_DATA, null, 200));\r\n        //group.removeControl(\"reference_no\");\r\n           \r\n        } \r\n    static electric(group: FormGroup){\r\n        //group.addControl(\"reference_no\", this.getController(null, this.TYPE_ALFA_NUM_DES_SPACE, null, 300) );\r\n        group.removeControl(\"cheque_number\");\r\n        group.removeControl(\"cheque_date\");\r\n        group.removeControl(\"bank_name\");\r\n         \r\n         }\r\n     static cash(group: FormGroup){\r\n        group.removeControl(\"cheque_number\");\r\n        group.removeControl(\"cheque_date\");\r\n        group.removeControl(\"bank_name\");\r\n        //group.removeControl(\"reference_no\");\r\n            \r\n        }\r\n    \r\n          \r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/forms/expense.form.ts","import { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { AppFormGroup } from '../shared/common/app.form';\r\nexport class PaymentFormGroup extends AppFormGroup {\r\n\r\n    static init() {\r\n        return this.getFormGroup();\r\n    }\r\n   \r\n\r\n    static edit(group: FormGroup) {\r\n        group.addControl(\"payment_mode\", this.getController(null, this.TYPE_DATA, null, 99) );\r\n        group.addControl(\"payment_date\", this.getController(null, this.TYPE_DATE, null, 99) );\r\n        group.addControl(\"remark\", this.getController(null, this.TYPE_DATA, null, 99) );\r\n        group.addControl(\"amount\", this.getController(null, this.TYPE_DECIMAL, null, 15) );\r\n        group.addControl(\"invoice_no\", this.getController(null, this.TYPE_DATA, null, 25) );\r\n        group.addControl(\"customer_id\", this.getController(null, this.TYPE_ALL, null, 5) );\r\n    }\r\n    static cheque(group: FormGroup){\r\n        \r\n            group.addControl(\"cheque_number\", this.getController(null, this.TYPE_NUMBER, 6, 6) );\r\n            group.addControl(\"cheque_date\", this.getController(null, this.TYPE_DATE, null, 15));\r\n            group.addControl(\"bank_name\", this.getController(null, this.TYPE_DATA, null, 200));\r\n            group.addControl(\"micr\", this.getController(null, this.TYPE_ALFA_DES, null, 15));\r\n            group.removeControl(\"reference_no\");\r\n           \r\n        } \r\n    static electric(group: FormGroup){\r\n            group.addControl(\"reference_no\", this.getController(null, this.TYPE_NUMBER, null, 20) );\r\n            group.removeControl(\"cheque_number\");\r\n            group.removeControl(\"cheque_date\");\r\n            group.removeControl(\"micr\");\r\n            group.removeControl(\"bank_name\");\r\n         }\r\n     static cash(group: FormGroup){\r\n            group.removeControl(\"cheque_number\");\r\n            group.removeControl(\"cheque_date\");\r\n            group.removeControl(\"bank_name\");\r\n            group.removeControl(\"reference_no\");\r\n            group.removeControl(\"micr\");\r\n        }\r\n    \r\n          \r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/forms/payment.form.ts","import { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { AppFormGroup } from '../shared/common/app.form';\r\nexport class QuotationsFormGroup extends AppFormGroup {\r\n\r\n    static init() {\r\n        return this.getFormGroup();\r\n    }\r\n    static edit(group: FormGroup) {\r\n        \r\n            group.addControl(\"quotations_firstName\", this.getController(null, this.TYPE_DATA, null, 99) );\r\n            group.addControl(\"quotations_mobile\", this.getController(null, this.TYPE_NUMBER, 10, 10) );\r\n            group.addControl(\"quotations_email\", this.getController(null, this.TYPE_EMAIL, null, 50));\r\n            group.addControl(\"quotations_website\", this.getController(null, this.TYPE_WEBSITE, null, 99));\r\n            // group.addControl(\"quotations_termsOfPayment\", this.getController(null, this.TYPE_DATA, null, 99) );\r\n            // group.addControl(\"quotations_invoiceDate\", this.getController(null, this.TYPE_DATE, null, 30) );\r\n            // group.addControl(\"quotations_dueDate\", this.getController(null, this.TYPE_DATE, null, 30) );\r\n            // group.addControl(\"quotations_invoiceMessage\", this.getController(null, this.TYPE_DATA, null, 99) );\r\n            // group.addControl(\"quotations_memo\", this.getController(null, this.TYPE_DATA, null, 99) );\r\n        \r\n        group.addControl(\"quotations_CustomerName\", this.getController(null, this.TYPE_ALFA, null, 99) );\r\n        group.addControl(\"quotations_termsOfPayment\", this.getController(null, this.TYPE_DATA, null, 99) );\r\n        group.addControl(\"estimation_date\", this.getController(null, this.TYPE_DATE, 10, 30) );\r\n        group.addControl(\"expiration_date\", this.getController(null, this.TYPE_DATE, 10, 30) );\r\n        group.addControl(\"time\", this.getController(null, this.TYPE_DATE, 10, 30) );\r\n//        group.addControl(\"dueDate\", this.getController(null, this.TYPE_DATE, 10, 30) );\r\n//        \r\n//        group.addControl(\"due_date\", this.getController(null, this.TYPE_DATE, 10, 30) );\r\n        group.addControl(\"quotation_message\", this.getController(null, this.TYPE_DATA, null, 99) );\r\n        group.addControl(\"memo\", this.getController(null, this.TYPE_ALFA_NUM_DES_SPACE, null, 99) );\r\n    }\r\n    static address(group: FormGroup, add: boolean){\r\n        if(add) {\r\n            group.addControl(\"quotations_address_lane\", this.getController(null, this.TYPE_ALFA_NUM_DES_SPACE, 3, 20) );\r\n            group.addControl(\"quotations_address_area\", this.getController(null, this.TYPE_ALFA_NUM_DES_SPACE, 3, 20));\r\n            group.addControl(\"quotations_address_city\", this.getController(null, this.TYPE_ALFA_DES, 3, 20));\r\n            group.addControl(\"quotations_address_state\", this.getController(null, this.TYPE_ALFA_DES, 3, 20));\r\n            group.addControl(\"quotations_address_street\",this.getController(null, this.TYPE_ALFA_NUM_DES_SPACE, 3, 20));\r\n            group.addControl(\"quotations_address_zipCode\", this.getController(null, this.TYPE_NUMBER, 6, 8));\r\n        } else {\r\n            group.removeControl(\"quotations_address_lane\");\r\n            group.removeControl(\"quotations_address_area\");\r\n            group.removeControl(\"quotations_address_city\");\r\n            group.removeControl(\"quotations_address_state\");\r\n            group.removeControl(\"quotations_address_street\");\r\n            group.removeControl(\"quotations_address_zipCode\");\r\n        }\r\n    }\r\n      static email(group: FormGroup) {\r\n        group.addControl(\"email_to\", this.getController(null, this.TYPE_EMAIL, null, 300) );\r\n        group.addControl(\"email_subject\", this.getController(null, this.TYPE_DATA, null, 300) );\r\n        group.addControl(\"email_message\", this.getController(null, this.TYPE_ALL, null, 3000) );\r\n\r\n    }\r\n    \r\n    \r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/forms/quotations.form.ts","import {\r\n  FormGroup,\r\n  FormBuilder,\r\n  FormControl,\r\n  Validators\r\n} from \"@angular/forms\";\r\nimport { AppFormGroup } from \"../shared/common/app.form\";\r\n\r\nexport class StockItemFormGroup extends AppFormGroup {\r\n  static init() {\r\n    return this.getFormGroup();\r\n  }\r\n\r\n  static productGroup(group: FormGroup) {\r\n    group.addControl(\r\n      \"si_category\",\r\n      this.getController(false, this.TYPE_DATA, null, 100)\r\n    );\r\n    group.addControl(\r\n      \"si_company\",\r\n      this.getController(false, this.TYPE_DATA, null, 100)\r\n    );\r\n    group.addControl(\r\n      \"si_brand\",\r\n      this.getController(false, this.TYPE_DATA, null, 100)\r\n    );\r\n    group.addControl(\r\n      \"si_manufacturer\",\r\n      this.getController(false, this.TYPE_DATA, null, 100)\r\n    );\r\n    group.addControl(\r\n      \"batch_no\",\r\n      this.getController(false, this.TYPE_DATA, null, 100)\r\n    );\r\n  }\r\n\r\n  static detailsGroup(group: FormGroup) {\r\n    group.addControl(\r\n      \"si_itemname\",\r\n      this.getController(true, this.TYPE_DATA, null, 50)\r\n    );\r\n    group.addControl(\r\n      \"si_uqc\",\r\n      this.getController(null, this.TYPE_DATA, null, 50)\r\n    );\r\n    group.addControl(\r\n      \"si_sku\",\r\n      this.getController(null, this.TYPE_DATA, null, 30)\r\n    );\r\n    group.addControl(\r\n      \"hsn\",\r\n      this.getController(null, this.HSN_PATTERN, null, 8)\r\n    );\r\n\r\n    group.addControl(\r\n      \"si_barcode\",\r\n      this.getController(null, this.TYPE_NUMBER, null, 50)\r\n    );\r\n  }\r\n\r\n  static pricingGroup(group: FormGroup) {\r\n    group.addControl(\r\n      \"si_quantity\",\r\n      this.getController(true, this.TYPE_NUMBER, null, 50)\r\n    );\r\n    group.addControl(\"tax\", this.getController(true, this.TYPE_DATA, null, 50));\r\n    group.addControl(\r\n      \"si_mrp\",\r\n      this.getController(true, this.TYPE_DECIMAL, null, 50)\r\n    );\r\n    group.addControl(\r\n      \"si_mrp_datefrom\",\r\n      this.getController(null, this.TYPE_DATE, null, null)\r\n    );\r\n    group.addControl(\r\n      \"si_mrp_dateto\",\r\n      this.getController(null, this.TYPE_DATE, null, null)\r\n    );\r\n\r\n    group.addControl(\r\n      \"si_cost\",\r\n      this.getController(null, this.TYPE_DECIMAL, null, 50)\r\n    );\r\n    group.addControl(\r\n      \"si_cost_datefrom\",\r\n      this.getController(null, this.TYPE_DATE, null, null)\r\n    );\r\n    group.addControl(\r\n      \"si_cost_dateto\",\r\n      this.getController(null, this.TYPE_DATE, null, null)\r\n    );\r\n\r\n    group.addControl(\r\n      \"si_sellingprice\",\r\n      this.getController(true, this.TYPE_DECIMAL, null, 50)\r\n    );\r\n    group.addControl(\r\n      \"si_sellingprice_datefrom\",\r\n      this.getController(null, this.TYPE_DATE, null, null)\r\n    );\r\n    group.addControl(\r\n      \"si_sellingprice_dateto\",\r\n      this.getController(null, this.TYPE_DATE, null, null)\r\n    );\r\n    group.addControl(\r\n      \"supplier\",\r\n      this.getController(true, this.TYPE_DATA, null, null)\r\n    );\r\n  }\r\n\r\n  static removeDetails(group: FormGroup) {\r\n    group.removeControl(\"si_uqc\");\r\n    group.removeControl(\"si_sku\");\r\n    group.removeControl(\"hsn\");\r\n\r\n    group.removeControl(\"si_barcode\");\r\n  }\r\n\r\n  static removePricing(group: FormGroup) {\r\n    group.removeControl(\"si_quantity\");\r\n\r\n    group.removeControl(\"si_mrp\");\r\n    group.removeControl(\"si_mrp_datefrom\");\r\n    group.removeControl(\"si_mrp_dateto\");\r\n\r\n    group.removeControl(\"si_cost\");\r\n    group.removeControl(\"si_cost_datefrom\");\r\n    group.removeControl(\"si_cost_dateto\");\r\n\r\n    group.removeControl(\"si_sellingprice\");\r\n    group.removeControl(\"si_sellingprice_datefrom\");\r\n    group.removeControl(\"si_sellingprice_dateto\");\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/forms/stockitem.form.ts","import { FormGroup } from \"@angular/forms\";\r\nimport { AppFormGroup } from \"./../shared/common/app.form\";\r\n\r\nexport class UserSettingFormGroup extends AppFormGroup {\r\n  static init() {\r\n    return this.getFormGroup();\r\n  }\r\n\r\n  static edit(group: FormGroup) {\r\n    //============ Company Information fields ============\r\n    group.addControl(\r\n      \"us_company_name\",\r\n      this.getController(false, this.TYPE_ALL, null, 50)\r\n    );\r\n    group.addControl(\r\n      \"us_company_gstin\",\r\n      this.getController(false, this.GST_CODE_PATTERN, 15, 15)\r\n    );\r\n    group.addControl(\r\n      \"us_company_logo\",\r\n      this.getController(false, this.TYPE_ALL, null, 45)\r\n    );\r\n    group.addControl(\r\n      \"us_company_website\",\r\n      this.getController(false, this.WEBSITE_PATTERN, null, 45)\r\n    );\r\n    group.addControl(\r\n      \"us_company_address_lane\",\r\n      this.getController(false, this.TYPE_ALL, null, 50)\r\n    );\r\n    group.addControl(\r\n      \"us_company_address_street\",\r\n      this.getController(false, this.TYPE_ALL, null, 50)\r\n    );\r\n    group.addControl(\r\n      \"us_company_address_area\",\r\n      this.getController(false, this.TYPE_ALL, null, 50)\r\n    );\r\n    group.addControl(\r\n      \"us_company_address_city\",\r\n      this.getController(false, this.TYPE_ALL, null, 50)\r\n    );\r\n    group.addControl(\r\n      \"us_company_address_state\",\r\n      this.getController(false, this.TYPE_ALL, null, 50)\r\n    );\r\n    group.addControl(\r\n      \"us_company_address_zipcode\",\r\n      this.getController(false, this.TYPE_ZIP_CODE, null, 50)\r\n    );\r\n\r\n    //=============== User profile fields =================\r\n    group.addControl(\r\n      \"us_user_firstname\",\r\n      this.getController(false, this.TYPE_ALFA, null, 50)\r\n    );\r\n    group.addControl(\r\n      \"us_user_lastname\",\r\n      this.getController(false, this.TYPE_ALFA, null, 50)\r\n    );\r\n    group.addControl(\r\n      \"us_user_mobile\",\r\n      this.getController(null, this.TYPE_MOBILE_NO, 10, 10)\r\n    );\r\n    group.addControl(\r\n      \"us_user_pan\",\r\n      this.getController(false, this.PAN_NO_PATTERN, null, 20)\r\n    );\r\n\r\n    //=============== Bank Information fields ===============\r\n    group.addControl(\r\n      \"us_bank_name\",\r\n      this.getController(false, this.TYPE_ALFA_NUM_DES_SPACE_HIFEN, null, 300)\r\n    );\r\n    group.addControl(\r\n      \"us_bank_accountnumber\",\r\n      this.getController(false, this.TYPE_NUMBER, null, 50)\r\n    );\r\n    group.addControl(\r\n      \"us_bank_ifsc\",\r\n      this.getController(false, this.TYPE_IFSC_CODE, null, 50)\r\n    );\r\n    group.addControl(\r\n      \"us_bank_branch\",\r\n      this.getController(false, this.TYPE_ALFA_NUM_DES_SPACE_HIFEN, null, 20)\r\n    );\r\n    group.addControl(\r\n      \"us_bank_address\",\r\n      this.getController(false, this.TYPE_ALL, null, 500)\r\n    );\r\n\r\n    //=============== Invoice Information ==================\r\n    group.addControl(\r\n      \"us_invoice_footer\",\r\n      this.getController(false, this.TYPE_ALL, null, 150)\r\n    );\r\n    group.addControl(\r\n      \"us_quotation_footer\",\r\n      this.getController(false, this.TYPE_ALL, null, 150)\r\n    );\r\n    group.addControl(\r\n      \"us_layout_size\",\r\n      this.getController(false, this.TYPE_ALL, null, 10)\r\n    );\r\n    group.addControl(\r\n      \"us_is_product\",\r\n      this.getController(false, this.TYPE_ALL, null, 10)\r\n    );\r\n    group.addControl(\r\n      \"us_is_service\",\r\n      this.getController(false, this.TYPE_ALL, null, 10)\r\n    );\r\n\r\n    //=============== Staff Information ==================\r\n    group.addControl(\r\n      \"staff_firstName\",\r\n      this.getController(null, this.TYPE_ALFA, null, 50)\r\n    );\r\n    group.addControl(\r\n      \"staff_lastName\",\r\n      this.getController(null, this.TYPE_ALFA, null, 20)\r\n    );\r\n    group.addControl(\r\n      \"staff_mobile\",\r\n      this.getController(null, this.TYPE_MOBILE_NO, 10, 10)\r\n    );\r\n    group.addControl(\r\n      \"staff_password\",\r\n      this.getController(null, this.TYPE_ALFA, 10, 10)\r\n    );\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/GitHub/rightinvoices-web-v1.1/src/app/forms/usersetting.form.ts","'use strict';\n\nvar _barcodes = require('./barcodes/');\n\nvar _barcodes2 = _interopRequireDefault(_barcodes);\n\nvar _merge = require('./help/merge.js');\n\nvar _merge2 = _interopRequireDefault(_merge);\n\nvar _linearizeEncodings = require('./help/linearizeEncodings.js');\n\nvar _linearizeEncodings2 = _interopRequireDefault(_linearizeEncodings);\n\nvar _fixOptions = require('./help/fixOptions.js');\n\nvar _fixOptions2 = _interopRequireDefault(_fixOptions);\n\nvar _getRenderProperties = require('./help/getRenderProperties.js');\n\nvar _getRenderProperties2 = _interopRequireDefault(_getRenderProperties);\n\nvar _optionsFromStrings = require('./help/optionsFromStrings.js');\n\nvar _optionsFromStrings2 = _interopRequireDefault(_optionsFromStrings);\n\nvar _ErrorHandler = require('./exceptions/ErrorHandler.js');\n\nvar _ErrorHandler2 = _interopRequireDefault(_ErrorHandler);\n\nvar _exceptions = require('./exceptions/exceptions.js');\n\nvar _defaults = require('./options/defaults.js');\n\nvar _defaults2 = _interopRequireDefault(_defaults);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// The protype of the object returned from the JsBarcode() call\n\n\n// Help functions\nvar API = function API() {};\n\n// The first call of the library API\n// Will return an object with all barcodes calls and the data that is used\n// by the renderers\n\n\n// Default values\n\n\n// Exceptions\n// Import all the barcodes\nvar JsBarcode = function JsBarcode(element, text, options) {\n\tvar api = new API();\n\n\tif (typeof element === \"undefined\") {\n\t\tthrow Error(\"No element to render on was provided.\");\n\t}\n\n\t// Variables that will be pased through the API calls\n\tapi._renderProperties = (0, _getRenderProperties2.default)(element);\n\tapi._encodings = [];\n\tapi._options = _defaults2.default;\n\tapi._errorHandler = new _ErrorHandler2.default(api);\n\n\t// If text is set, use the simple syntax (render the barcode directly)\n\tif (typeof text !== \"undefined\") {\n\t\toptions = options || {};\n\n\t\tif (!options.format) {\n\t\t\toptions.format = autoSelectBarcode();\n\t\t}\n\n\t\tapi.options(options)[options.format](text, options).render();\n\t}\n\n\treturn api;\n};\n\n// To make tests work TODO: remove\nJsBarcode.getModule = function (name) {\n\treturn _barcodes2.default[name];\n};\n\n// Register all barcodes\nfor (var name in _barcodes2.default) {\n\tif (_barcodes2.default.hasOwnProperty(name)) {\n\t\t// Security check if the propery is a prototype property\n\t\tregisterBarcode(_barcodes2.default, name);\n\t}\n}\nfunction registerBarcode(barcodes, name) {\n\tAPI.prototype[name] = API.prototype[name.toUpperCase()] = API.prototype[name.toLowerCase()] = function (text, options) {\n\t\tvar api = this;\n\t\treturn api._errorHandler.wrapBarcodeCall(function () {\n\t\t\t// Ensure text is options.text\n\t\t\toptions.text = typeof options.text === 'undefined' ? undefined : '' + options.text;\n\n\t\t\tvar newOptions = (0, _merge2.default)(api._options, options);\n\t\t\tnewOptions = (0, _optionsFromStrings2.default)(newOptions);\n\t\t\tvar Encoder = barcodes[name];\n\t\t\tvar encoded = encode(text, Encoder, newOptions);\n\t\t\tapi._encodings.push(encoded);\n\n\t\t\treturn api;\n\t\t});\n\t};\n}\n\n// encode() handles the Encoder call and builds the binary string to be rendered\nfunction encode(text, Encoder, options) {\n\t// Ensure that text is a string\n\ttext = \"\" + text;\n\n\tvar encoder = new Encoder(text, options);\n\n\t// If the input is not valid for the encoder, throw error.\n\t// If the valid callback option is set, call it instead of throwing error\n\tif (!encoder.valid()) {\n\t\tthrow new _exceptions.InvalidInputException(encoder.constructor.name, text);\n\t}\n\n\t// Make a request for the binary data (and other infromation) that should be rendered\n\tvar encoded = encoder.encode();\n\n\t// Encodings can be nestled like [[1-1, 1-2], 2, [3-1, 3-2]\n\t// Convert to [1-1, 1-2, 2, 3-1, 3-2]\n\tencoded = (0, _linearizeEncodings2.default)(encoded);\n\n\t// Merge\n\tfor (var i = 0; i < encoded.length; i++) {\n\t\tencoded[i].options = (0, _merge2.default)(options, encoded[i].options);\n\t}\n\n\treturn encoded;\n}\n\nfunction autoSelectBarcode() {\n\t// If CODE128 exists. Use it\n\tif (_barcodes2.default[\"CODE128\"]) {\n\t\treturn \"CODE128\";\n\t}\n\n\t// Else, take the first (probably only) barcode\n\treturn Object.keys(_barcodes2.default)[0];\n}\n\n// Sets global encoder options\n// Added to the api by the JsBarcode function\nAPI.prototype.options = function (options) {\n\tthis._options = (0, _merge2.default)(this._options, options);\n\treturn this;\n};\n\n// Will create a blank space (usually in between barcodes)\nAPI.prototype.blank = function (size) {\n\tvar zeroes = new Array(size + 1).join(\"0\");\n\tthis._encodings.push({ data: zeroes });\n\treturn this;\n};\n\n// Initialize JsBarcode on all HTML elements defined.\nAPI.prototype.init = function () {\n\t// Should do nothing if no elements where found\n\tif (!this._renderProperties) {\n\t\treturn;\n\t}\n\n\t// Make sure renderProperies is an array\n\tif (!Array.isArray(this._renderProperties)) {\n\t\tthis._renderProperties = [this._renderProperties];\n\t}\n\n\tvar renderProperty;\n\tfor (var i in this._renderProperties) {\n\t\trenderProperty = this._renderProperties[i];\n\t\tvar options = (0, _merge2.default)(this._options, renderProperty.options);\n\n\t\tif (options.format == \"auto\") {\n\t\t\toptions.format = autoSelectBarcode();\n\t\t}\n\n\t\tthis._errorHandler.wrapBarcodeCall(function () {\n\t\t\tvar text = options.value;\n\t\t\tvar Encoder = _barcodes2.default[options.format.toUpperCase()];\n\t\t\tvar encoded = encode(text, Encoder, options);\n\n\t\t\trender(renderProperty, encoded, options);\n\t\t});\n\t}\n};\n\n// The render API call. Calls the real render function.\nAPI.prototype.render = function () {\n\tif (!this._renderProperties) {\n\t\tthrow new _exceptions.NoElementException();\n\t}\n\n\tif (Array.isArray(this._renderProperties)) {\n\t\tfor (var i = 0; i < this._renderProperties.length; i++) {\n\t\t\trender(this._renderProperties[i], this._encodings, this._options);\n\t\t}\n\t} else {\n\t\trender(this._renderProperties, this._encodings, this._options);\n\t}\n\n\treturn this;\n};\n\nAPI.prototype._defaults = _defaults2.default;\n\n// Prepares the encodings and calls the renderer\nfunction render(renderProperties, encodings, options) {\n\tencodings = (0, _linearizeEncodings2.default)(encodings);\n\n\tfor (var i = 0; i < encodings.length; i++) {\n\t\tencodings[i].options = (0, _merge2.default)(options, encodings[i].options);\n\t\t(0, _fixOptions2.default)(encodings[i].options);\n\t}\n\n\t(0, _fixOptions2.default)(options);\n\n\tvar Renderer = renderProperties.renderer;\n\tvar renderer = new Renderer(renderProperties.element, encodings, options);\n\trenderer.render();\n\n\tif (renderProperties.afterRender) {\n\t\trenderProperties.afterRender();\n\t}\n}\n\n// Export to browser\nif (typeof window !== \"undefined\") {\n\twindow.JsBarcode = JsBarcode;\n}\n\n// Export to jQuery\n/*global jQuery */\nif (typeof jQuery !== 'undefined') {\n\tjQuery.fn.JsBarcode = function (content, options) {\n\t\tvar elementArray = [];\n\t\tjQuery(this).each(function () {\n\t\t\telementArray.push(this);\n\t\t});\n\t\treturn JsBarcode(elementArray, content, options);\n\t};\n}\n\n// Export to commonJS\nmodule.exports = JsBarcode;\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/JsBarcode.js\n// module id = ../../../../jsbarcode/bin/JsBarcode.js\n// module chunks = 1","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Barcode = function Barcode(data, options) {\n\t_classCallCheck(this, Barcode);\n\n\tthis.data = data;\n\tthis.text = options.text || data;\n\tthis.options = options;\n};\n\nexports.default = Barcode;\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/barcodes/Barcode.js\n// module id = ../../../../jsbarcode/bin/barcodes/Barcode.js\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Barcode2 = require('../Barcode.js');\n\nvar _Barcode3 = _interopRequireDefault(_Barcode2);\n\nvar _constants = require('./constants');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// This is the master class,\n// it does require the start code to be included in the string\nvar CODE128 = function (_Barcode) {\n\t_inherits(CODE128, _Barcode);\n\n\tfunction CODE128(data, options) {\n\t\t_classCallCheck(this, CODE128);\n\n\t\t// Get array of ascii codes from data\n\t\tvar _this = _possibleConstructorReturn(this, (CODE128.__proto__ || Object.getPrototypeOf(CODE128)).call(this, data.substring(1), options));\n\n\t\t_this.bytes = data.split('').map(function (char) {\n\t\t\treturn char.charCodeAt(0);\n\t\t});\n\t\treturn _this;\n\t}\n\n\t_createClass(CODE128, [{\n\t\tkey: 'valid',\n\t\tvalue: function valid() {\n\t\t\t// ASCII value ranges 0-127, 200-211\n\t\t\treturn (/^[\\x00-\\x7F\\xC8-\\xD3]+$/.test(this.data)\n\t\t\t);\n\t\t}\n\n\t\t// The public encoding function\n\n\t}, {\n\t\tkey: 'encode',\n\t\tvalue: function encode() {\n\t\t\tvar bytes = this.bytes;\n\t\t\t// Remove the start code from the bytes and set its index\n\t\t\tvar startIndex = bytes.shift() - 105;\n\t\t\t// Get start set by index\n\t\t\tvar startSet = _constants.SET_BY_CODE[startIndex];\n\n\t\t\tif (startSet === undefined) {\n\t\t\t\tthrow new RangeError('The encoding does not start with a start character.');\n\t\t\t}\n\n\t\t\tif (this.shouldEncodeAsEan128() === true) {\n\t\t\t\tbytes.unshift(_constants.FNC1);\n\t\t\t}\n\n\t\t\t// Start encode with the right type\n\t\t\tvar encodingResult = CODE128.next(bytes, 1, startSet);\n\n\t\t\treturn {\n\t\t\t\ttext: this.text === this.data ? this.text.replace(/[^\\x20-\\x7E]/g, '') : this.text,\n\t\t\t\tdata:\n\t\t\t\t// Add the start bits\n\t\t\t\tCODE128.getBar(startIndex) +\n\t\t\t\t// Add the encoded bits\n\t\t\t\tencodingResult.result +\n\t\t\t\t// Add the checksum\n\t\t\t\tCODE128.getBar((encodingResult.checksum + startIndex) % _constants.MODULO) +\n\t\t\t\t// Add the end bits\n\t\t\t\tCODE128.getBar(_constants.STOP)\n\t\t\t};\n\t\t}\n\n\t\t// GS1-128/EAN-128\n\n\t}, {\n\t\tkey: 'shouldEncodeAsEan128',\n\t\tvalue: function shouldEncodeAsEan128() {\n\t\t\tvar isEAN128 = this.options.ean128 || false;\n\t\t\tif (typeof isEAN128 === 'string') {\n\t\t\t\tisEAN128 = isEAN128.toLowerCase() === 'true';\n\t\t\t}\n\t\t\treturn isEAN128;\n\t\t}\n\n\t\t// Get a bar symbol by index\n\n\t}], [{\n\t\tkey: 'getBar',\n\t\tvalue: function getBar(index) {\n\t\t\treturn _constants.BARS[index] ? _constants.BARS[index].toString() : '';\n\t\t}\n\n\t\t// Correct an index by a set and shift it from the bytes array\n\n\t}, {\n\t\tkey: 'correctIndex',\n\t\tvalue: function correctIndex(bytes, set) {\n\t\t\tif (set === _constants.SET_A) {\n\t\t\t\tvar charCode = bytes.shift();\n\t\t\t\treturn charCode < 32 ? charCode + 64 : charCode - 32;\n\t\t\t} else if (set === _constants.SET_B) {\n\t\t\t\treturn bytes.shift() - 32;\n\t\t\t} else {\n\t\t\t\treturn (bytes.shift() - 48) * 10 + bytes.shift() - 48;\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'next',\n\t\tvalue: function next(bytes, pos, set) {\n\t\t\tif (!bytes.length) {\n\t\t\t\treturn { result: '', checksum: 0 };\n\t\t\t}\n\n\t\t\tvar nextCode = void 0,\n\t\t\t    index = void 0;\n\n\t\t\t// Special characters\n\t\t\tif (bytes[0] >= 200) {\n\t\t\t\tindex = bytes.shift() - 105;\n\t\t\t\tvar nextSet = _constants.SWAP[index];\n\n\t\t\t\t// Swap to other set\n\t\t\t\tif (nextSet !== undefined) {\n\t\t\t\t\tnextCode = CODE128.next(bytes, pos + 1, nextSet);\n\t\t\t\t}\n\t\t\t\t// Continue on current set but encode a special character\n\t\t\t\telse {\n\t\t\t\t\t\t// Shift\n\t\t\t\t\t\tif ((set === _constants.SET_A || set === _constants.SET_B) && index === _constants.SHIFT) {\n\t\t\t\t\t\t\t// Convert the next character so that is encoded correctly\n\t\t\t\t\t\t\tbytes[0] = set === _constants.SET_A ? bytes[0] > 95 ? bytes[0] - 96 : bytes[0] : bytes[0] < 32 ? bytes[0] + 96 : bytes[0];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnextCode = CODE128.next(bytes, pos + 1, set);\n\t\t\t\t\t}\n\t\t\t}\n\t\t\t// Continue encoding\n\t\t\telse {\n\t\t\t\t\tindex = CODE128.correctIndex(bytes, set);\n\t\t\t\t\tnextCode = CODE128.next(bytes, pos + 1, set);\n\t\t\t\t}\n\n\t\t\t// Get the correct binary encoding and calculate the weight\n\t\t\tvar enc = CODE128.getBar(index);\n\t\t\tvar weight = index * pos;\n\n\t\t\treturn {\n\t\t\t\tresult: enc + nextCode.result,\n\t\t\t\tchecksum: weight + nextCode.checksum\n\t\t\t};\n\t\t}\n\t}]);\n\n\treturn CODE128;\n}(_Barcode3.default);\n\nexports.default = CODE128;\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/barcodes/CODE128/CODE128.js\n// module id = ../../../../jsbarcode/bin/barcodes/CODE128/CODE128.js\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _CODE2 = require('./CODE128.js');\n\nvar _CODE3 = _interopRequireDefault(_CODE2);\n\nvar _constants = require('./constants');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar CODE128A = function (_CODE) {\n\t_inherits(CODE128A, _CODE);\n\n\tfunction CODE128A(string, options) {\n\t\t_classCallCheck(this, CODE128A);\n\n\t\treturn _possibleConstructorReturn(this, (CODE128A.__proto__ || Object.getPrototypeOf(CODE128A)).call(this, _constants.A_START_CHAR + string, options));\n\t}\n\n\t_createClass(CODE128A, [{\n\t\tkey: 'valid',\n\t\tvalue: function valid() {\n\t\t\treturn new RegExp('^' + _constants.A_CHARS + '+$').test(this.data);\n\t\t}\n\t}]);\n\n\treturn CODE128A;\n}(_CODE3.default);\n\nexports.default = CODE128A;\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/barcodes/CODE128/CODE128A.js\n// module id = ../../../../jsbarcode/bin/barcodes/CODE128/CODE128A.js\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _CODE2 = require('./CODE128.js');\n\nvar _CODE3 = _interopRequireDefault(_CODE2);\n\nvar _constants = require('./constants');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar CODE128B = function (_CODE) {\n\t_inherits(CODE128B, _CODE);\n\n\tfunction CODE128B(string, options) {\n\t\t_classCallCheck(this, CODE128B);\n\n\t\treturn _possibleConstructorReturn(this, (CODE128B.__proto__ || Object.getPrototypeOf(CODE128B)).call(this, _constants.B_START_CHAR + string, options));\n\t}\n\n\t_createClass(CODE128B, [{\n\t\tkey: 'valid',\n\t\tvalue: function valid() {\n\t\t\treturn new RegExp('^' + _constants.B_CHARS + '+$').test(this.data);\n\t\t}\n\t}]);\n\n\treturn CODE128B;\n}(_CODE3.default);\n\nexports.default = CODE128B;\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/barcodes/CODE128/CODE128B.js\n// module id = ../../../../jsbarcode/bin/barcodes/CODE128/CODE128B.js\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _CODE2 = require('./CODE128.js');\n\nvar _CODE3 = _interopRequireDefault(_CODE2);\n\nvar _constants = require('./constants');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar CODE128C = function (_CODE) {\n\t_inherits(CODE128C, _CODE);\n\n\tfunction CODE128C(string, options) {\n\t\t_classCallCheck(this, CODE128C);\n\n\t\treturn _possibleConstructorReturn(this, (CODE128C.__proto__ || Object.getPrototypeOf(CODE128C)).call(this, _constants.C_START_CHAR + string, options));\n\t}\n\n\t_createClass(CODE128C, [{\n\t\tkey: 'valid',\n\t\tvalue: function valid() {\n\t\t\treturn new RegExp('^' + _constants.C_CHARS + '+$').test(this.data);\n\t\t}\n\t}]);\n\n\treturn CODE128C;\n}(_CODE3.default);\n\nexports.default = CODE128C;\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/barcodes/CODE128/CODE128C.js\n// module id = ../../../../jsbarcode/bin/barcodes/CODE128/CODE128C.js\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _CODE2 = require('./CODE128');\n\nvar _CODE3 = _interopRequireDefault(_CODE2);\n\nvar _auto = require('./auto');\n\nvar _auto2 = _interopRequireDefault(_auto);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar CODE128AUTO = function (_CODE) {\n\t_inherits(CODE128AUTO, _CODE);\n\n\tfunction CODE128AUTO(data, options) {\n\t\t_classCallCheck(this, CODE128AUTO);\n\n\t\t// ASCII value ranges 0-127, 200-211\n\t\tif (/^[\\x00-\\x7F\\xC8-\\xD3]+$/.test(data)) {\n\t\t\tvar _this = _possibleConstructorReturn(this, (CODE128AUTO.__proto__ || Object.getPrototypeOf(CODE128AUTO)).call(this, (0, _auto2.default)(data), options));\n\t\t} else {\n\t\t\tvar _this = _possibleConstructorReturn(this, (CODE128AUTO.__proto__ || Object.getPrototypeOf(CODE128AUTO)).call(this, data, options));\n\t\t}\n\t\treturn _possibleConstructorReturn(_this);\n\t}\n\n\treturn CODE128AUTO;\n}(_CODE3.default);\n\nexports.default = CODE128AUTO;\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/barcodes/CODE128/CODE128_AUTO.js\n// module id = ../../../../jsbarcode/bin/barcodes/CODE128/CODE128_AUTO.js\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _constants = require('./constants');\n\n// Match Set functions\nvar matchSetALength = function matchSetALength(string) {\n\treturn string.match(new RegExp('^' + _constants.A_CHARS + '*'))[0].length;\n};\nvar matchSetBLength = function matchSetBLength(string) {\n\treturn string.match(new RegExp('^' + _constants.B_CHARS + '*'))[0].length;\n};\nvar matchSetC = function matchSetC(string) {\n\treturn string.match(new RegExp('^' + _constants.C_CHARS + '*'))[0];\n};\n\n// CODE128A or CODE128B\nfunction autoSelectFromAB(string, isA) {\n\tvar ranges = isA ? _constants.A_CHARS : _constants.B_CHARS;\n\tvar untilC = string.match(new RegExp('^(' + ranges + '+?)(([0-9]{2}){2,})([^0-9]|$)'));\n\n\tif (untilC) {\n\t\treturn untilC[1] + String.fromCharCode(204) + autoSelectFromC(string.substring(untilC[1].length));\n\t}\n\n\tvar chars = string.match(new RegExp('^' + ranges + '+'))[0];\n\n\tif (chars.length === string.length) {\n\t\treturn string;\n\t}\n\n\treturn chars + String.fromCharCode(isA ? 205 : 206) + autoSelectFromAB(string.substring(chars.length), !isA);\n}\n\n// CODE128C\nfunction autoSelectFromC(string) {\n\tvar cMatch = matchSetC(string);\n\tvar length = cMatch.length;\n\n\tif (length === string.length) {\n\t\treturn string;\n\t}\n\n\tstring = string.substring(length);\n\n\t// Select A/B depending on the longest match\n\tvar isA = matchSetALength(string) >= matchSetBLength(string);\n\treturn cMatch + String.fromCharCode(isA ? 206 : 205) + autoSelectFromAB(string, isA);\n}\n\n// Detect Code Set (A, B or C) and format the string\n\nexports.default = function (string) {\n\tvar newString = void 0;\n\tvar cLength = matchSetC(string).length;\n\n\t// Select 128C if the string start with enough digits\n\tif (cLength >= 2) {\n\t\tnewString = _constants.C_START_CHAR + autoSelectFromC(string);\n\t} else {\n\t\t// Select A/B depending on the longest match\n\t\tvar isA = matchSetALength(string) > matchSetBLength(string);\n\t\tnewString = (isA ? _constants.A_START_CHAR : _constants.B_START_CHAR) + autoSelectFromAB(string, isA);\n\t}\n\n\treturn newString.replace(/[\\xCD\\xCE]([^])[\\xCD\\xCE]/, // Any sequence between 205 and 206 characters\n\tfunction (match, char) {\n\t\treturn String.fromCharCode(203) + char;\n\t});\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/barcodes/CODE128/auto.js\n// module id = ../../../../jsbarcode/bin/barcodes/CODE128/auto.js\n// module chunks = 1","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _SET_BY_CODE;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// constants for internal usage\nvar SET_A = exports.SET_A = 0;\nvar SET_B = exports.SET_B = 1;\nvar SET_C = exports.SET_C = 2;\n\n// Special characters\nvar SHIFT = exports.SHIFT = 98;\nvar START_A = exports.START_A = 103;\nvar START_B = exports.START_B = 104;\nvar START_C = exports.START_C = 105;\nvar MODULO = exports.MODULO = 103;\nvar STOP = exports.STOP = 106;\nvar FNC1 = exports.FNC1 = 207;\n\n// Get set by start code\nvar SET_BY_CODE = exports.SET_BY_CODE = (_SET_BY_CODE = {}, _defineProperty(_SET_BY_CODE, START_A, SET_A), _defineProperty(_SET_BY_CODE, START_B, SET_B), _defineProperty(_SET_BY_CODE, START_C, SET_C), _SET_BY_CODE);\n\n// Get next set by code\nvar SWAP = exports.SWAP = {\n\t101: SET_A,\n\t100: SET_B,\n\t99: SET_C\n};\n\nvar A_START_CHAR = exports.A_START_CHAR = String.fromCharCode(208); // START_A + 105\nvar B_START_CHAR = exports.B_START_CHAR = String.fromCharCode(209); // START_B + 105\nvar C_START_CHAR = exports.C_START_CHAR = String.fromCharCode(210); // START_C + 105\n\n// 128A (Code Set A)\n// ASCII characters 00 to 95 (0–9, A–Z and control codes), special characters, and FNC 1–4\nvar A_CHARS = exports.A_CHARS = \"[\\x00-\\x5F\\xC8-\\xCF]\";\n\n// 128B (Code Set B)\n// ASCII characters 32 to 127 (0–9, A–Z, a–z), special characters, and FNC 1–4\nvar B_CHARS = exports.B_CHARS = \"[\\x20-\\x7F\\xC8-\\xCF]\";\n\n// 128C (Code Set C)\n// 00–99 (encodes two digits with a single code point) and FNC1\nvar C_CHARS = exports.C_CHARS = \"(\\xCF*[0-9]{2}\\xCF*)\";\n\n// CODE128 includes 107 symbols:\n// 103 data symbols, 3 start symbols (A, B and C), and 1 stop symbol (the last one)\n// Each symbol consist of three black bars (1) and three white spaces (0).\nvar BARS = exports.BARS = [11011001100, 11001101100, 11001100110, 10010011000, 10010001100, 10001001100, 10011001000, 10011000100, 10001100100, 11001001000, 11001000100, 11000100100, 10110011100, 10011011100, 10011001110, 10111001100, 10011101100, 10011100110, 11001110010, 11001011100, 11001001110, 11011100100, 11001110100, 11101101110, 11101001100, 11100101100, 11100100110, 11101100100, 11100110100, 11100110010, 11011011000, 11011000110, 11000110110, 10100011000, 10001011000, 10001000110, 10110001000, 10001101000, 10001100010, 11010001000, 11000101000, 11000100010, 10110111000, 10110001110, 10001101110, 10111011000, 10111000110, 10001110110, 11101110110, 11010001110, 11000101110, 11011101000, 11011100010, 11011101110, 11101011000, 11101000110, 11100010110, 11101101000, 11101100010, 11100011010, 11101111010, 11001000010, 11110001010, 10100110000, 10100001100, 10010110000, 10010000110, 10000101100, 10000100110, 10110010000, 10110000100, 10011010000, 10011000010, 10000110100, 10000110010, 11000010010, 11001010000, 11110111010, 11000010100, 10001111010, 10100111100, 10010111100, 10010011110, 10111100100, 10011110100, 10011110010, 11110100100, 11110010100, 11110010010, 11011011110, 11011110110, 11110110110, 10101111000, 10100011110, 10001011110, 10111101000, 10111100010, 11110101000, 11110100010, 10111011110, 10111101110, 11101011110, 11110101110, 11010000100, 11010010000, 11010011100, 1100011101011];\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/barcodes/CODE128/constants.js\n// module id = ../../../../jsbarcode/bin/barcodes/CODE128/constants.js\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CODE128C = exports.CODE128B = exports.CODE128A = exports.CODE128 = undefined;\n\nvar _CODE128_AUTO = require('./CODE128_AUTO.js');\n\nvar _CODE128_AUTO2 = _interopRequireDefault(_CODE128_AUTO);\n\nvar _CODE128A = require('./CODE128A.js');\n\nvar _CODE128A2 = _interopRequireDefault(_CODE128A);\n\nvar _CODE128B = require('./CODE128B.js');\n\nvar _CODE128B2 = _interopRequireDefault(_CODE128B);\n\nvar _CODE128C = require('./CODE128C.js');\n\nvar _CODE128C2 = _interopRequireDefault(_CODE128C);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.CODE128 = _CODE128_AUTO2.default;\nexports.CODE128A = _CODE128A2.default;\nexports.CODE128B = _CODE128B2.default;\nexports.CODE128C = _CODE128C2.default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/barcodes/CODE128/index.js\n// module id = ../../../../jsbarcode/bin/barcodes/CODE128/index.js\n// module chunks = 1","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.CODE39 = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Barcode2 = require(\"../Barcode.js\");\n\nvar _Barcode3 = _interopRequireDefault(_Barcode2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // Encoding documentation:\n// https://en.wikipedia.org/wiki/Code_39#Encoding\n\nvar CODE39 = function (_Barcode) {\n\t_inherits(CODE39, _Barcode);\n\n\tfunction CODE39(data, options) {\n\t\t_classCallCheck(this, CODE39);\n\n\t\tdata = data.toUpperCase();\n\n\t\t// Calculate mod43 checksum if enabled\n\t\tif (options.mod43) {\n\t\t\tdata += getCharacter(mod43checksum(data));\n\t\t}\n\n\t\treturn _possibleConstructorReturn(this, (CODE39.__proto__ || Object.getPrototypeOf(CODE39)).call(this, data, options));\n\t}\n\n\t_createClass(CODE39, [{\n\t\tkey: \"encode\",\n\t\tvalue: function encode() {\n\t\t\t// First character is always a *\n\t\t\tvar result = getEncoding(\"*\");\n\n\t\t\t// Take every character and add the binary representation to the result\n\t\t\tfor (var i = 0; i < this.data.length; i++) {\n\t\t\t\tresult += getEncoding(this.data[i]) + \"0\";\n\t\t\t}\n\n\t\t\t// Last character is always a *\n\t\t\tresult += getEncoding(\"*\");\n\n\t\t\treturn {\n\t\t\t\tdata: result,\n\t\t\t\ttext: this.text\n\t\t\t};\n\t\t}\n\t}, {\n\t\tkey: \"valid\",\n\t\tvalue: function valid() {\n\t\t\treturn this.data.search(/^[0-9A-Z\\-\\.\\ \\$\\/\\+\\%]+$/) !== -1;\n\t\t}\n\t}]);\n\n\treturn CODE39;\n}(_Barcode3.default);\n\n// All characters. The position in the array is the (checksum) value\n\n\nvar characters = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"-\", \".\", \" \", \"$\", \"/\", \"+\", \"%\", \"*\"];\n\n// The decimal representation of the characters, is converted to the\n// corresponding binary with the getEncoding function\nvar encodings = [20957, 29783, 23639, 30485, 20951, 29813, 23669, 20855, 29789, 23645, 29975, 23831, 30533, 22295, 30149, 24005, 21623, 29981, 23837, 22301, 30023, 23879, 30545, 22343, 30161, 24017, 21959, 30065, 23921, 22385, 29015, 18263, 29141, 17879, 29045, 18293, 17783, 29021, 18269, 17477, 17489, 17681, 20753, 35770];\n\n// Get the binary representation of a character by converting the encodings\n// from decimal to binary\nfunction getEncoding(character) {\n\treturn getBinary(characterValue(character));\n}\n\nfunction getBinary(characterValue) {\n\treturn encodings[characterValue].toString(2);\n}\n\nfunction getCharacter(characterValue) {\n\treturn characters[characterValue];\n}\n\nfunction characterValue(character) {\n\treturn characters.indexOf(character);\n}\n\nfunction mod43checksum(data) {\n\tvar checksum = 0;\n\tfor (var i = 0; i < data.length; i++) {\n\t\tchecksum += characterValue(data[i]);\n\t}\n\n\tchecksum = checksum % 43;\n\treturn checksum;\n}\n\nexports.CODE39 = CODE39;\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/barcodes/CODE39/index.js\n// module id = ../../../../jsbarcode/bin/barcodes/CODE39/index.js\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _constants = require('./constants');\n\nvar _encoder = require('./encoder');\n\nvar _encoder2 = _interopRequireDefault(_encoder);\n\nvar _Barcode2 = require('../Barcode');\n\nvar _Barcode3 = _interopRequireDefault(_Barcode2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// Base class for EAN8 & EAN13\nvar EAN = function (_Barcode) {\n\t_inherits(EAN, _Barcode);\n\n\tfunction EAN(data, options) {\n\t\t_classCallCheck(this, EAN);\n\n\t\t// Make sure the font is not bigger than the space between the guard bars\n\t\tvar _this = _possibleConstructorReturn(this, (EAN.__proto__ || Object.getPrototypeOf(EAN)).call(this, data, options));\n\n\t\t_this.fontSize = !options.flat && options.fontSize > options.width * 10 ? options.width * 10 : options.fontSize;\n\n\t\t// Make the guard bars go down half the way of the text\n\t\t_this.guardHeight = options.height + _this.fontSize / 2 + options.textMargin;\n\t\treturn _this;\n\t}\n\n\t_createClass(EAN, [{\n\t\tkey: 'encode',\n\t\tvalue: function encode() {\n\t\t\treturn this.options.flat ? this.encodeFlat() : this.encodeGuarded();\n\t\t}\n\t}, {\n\t\tkey: 'leftText',\n\t\tvalue: function leftText(from, to) {\n\t\t\treturn this.text.substr(from, to);\n\t\t}\n\t}, {\n\t\tkey: 'leftEncode',\n\t\tvalue: function leftEncode(data, structure) {\n\t\t\treturn (0, _encoder2.default)(data, structure);\n\t\t}\n\t}, {\n\t\tkey: 'rightText',\n\t\tvalue: function rightText(from, to) {\n\t\t\treturn this.text.substr(from, to);\n\t\t}\n\t}, {\n\t\tkey: 'rightEncode',\n\t\tvalue: function rightEncode(data, structure) {\n\t\t\treturn (0, _encoder2.default)(data, structure);\n\t\t}\n\t}, {\n\t\tkey: 'encodeGuarded',\n\t\tvalue: function encodeGuarded() {\n\t\t\tvar textOptions = { fontSize: this.fontSize };\n\t\t\tvar guardOptions = { height: this.guardHeight };\n\n\t\t\treturn [{ data: _constants.SIDE_BIN, options: guardOptions }, { data: this.leftEncode(), text: this.leftText(), options: textOptions }, { data: _constants.MIDDLE_BIN, options: guardOptions }, { data: this.rightEncode(), text: this.rightText(), options: textOptions }, { data: _constants.SIDE_BIN, options: guardOptions }];\n\t\t}\n\t}, {\n\t\tkey: 'encodeFlat',\n\t\tvalue: function encodeFlat() {\n\t\t\tvar data = [_constants.SIDE_BIN, this.leftEncode(), _constants.MIDDLE_BIN, this.rightEncode(), _constants.SIDE_BIN];\n\n\t\t\treturn {\n\t\t\t\tdata: data.join(''),\n\t\t\t\ttext: this.text\n\t\t\t};\n\t\t}\n\t}]);\n\n\treturn EAN;\n}(_Barcode3.default);\n\nexports.default = EAN;\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/barcodes/EAN_UPC/EAN.js\n// module id = ../../../../jsbarcode/bin/barcodes/EAN_UPC/EAN.js\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _constants = require('./constants');\n\nvar _EAN2 = require('./EAN');\n\nvar _EAN3 = _interopRequireDefault(_EAN2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // Encoding documentation:\n// https://en.wikipedia.org/wiki/International_Article_Number_(EAN)#Binary_encoding_of_data_digits_into_EAN-13_barcode\n\n// Calculate the checksum digit\n// https://en.wikipedia.org/wiki/International_Article_Number_(EAN)#Calculation_of_checksum_digit\nvar checksum = function checksum(number) {\n\tvar res = number.substr(0, 12).split('').map(function (n) {\n\t\treturn +n;\n\t}).reduce(function (sum, a, idx) {\n\t\treturn idx % 2 ? sum + a * 3 : sum + a;\n\t}, 0);\n\n\treturn (10 - res % 10) % 10;\n};\n\nvar EAN13 = function (_EAN) {\n\t_inherits(EAN13, _EAN);\n\n\tfunction EAN13(data, options) {\n\t\t_classCallCheck(this, EAN13);\n\n\t\t// Add checksum if it does not exist\n\t\tif (data.search(/^[0-9]{12}$/) !== -1) {\n\t\t\tdata += checksum(data);\n\t\t}\n\n\t\t// Adds a last character to the end of the barcode\n\t\tvar _this = _possibleConstructorReturn(this, (EAN13.__proto__ || Object.getPrototypeOf(EAN13)).call(this, data, options));\n\n\t\t_this.lastChar = options.lastChar;\n\t\treturn _this;\n\t}\n\n\t_createClass(EAN13, [{\n\t\tkey: 'valid',\n\t\tvalue: function valid() {\n\t\t\treturn this.data.search(/^[0-9]{13}$/) !== -1 && +this.data[12] === checksum(this.data);\n\t\t}\n\t}, {\n\t\tkey: 'leftText',\n\t\tvalue: function leftText() {\n\t\t\treturn _get(EAN13.prototype.__proto__ || Object.getPrototypeOf(EAN13.prototype), 'leftText', this).call(this, 1, 6);\n\t\t}\n\t}, {\n\t\tkey: 'leftEncode',\n\t\tvalue: function leftEncode() {\n\t\t\tvar data = this.data.substr(1, 6);\n\t\t\tvar structure = _constants.EAN13_STRUCTURE[this.data[0]];\n\t\t\treturn _get(EAN13.prototype.__proto__ || Object.getPrototypeOf(EAN13.prototype), 'leftEncode', this).call(this, data, structure);\n\t\t}\n\t}, {\n\t\tkey: 'rightText',\n\t\tvalue: function rightText() {\n\t\t\treturn _get(EAN13.prototype.__proto__ || Object.getPrototypeOf(EAN13.prototype), 'rightText', this).call(this, 7, 6);\n\t\t}\n\t}, {\n\t\tkey: 'rightEncode',\n\t\tvalue: function rightEncode() {\n\t\t\tvar data = this.data.substr(7, 6);\n\t\t\treturn _get(EAN13.prototype.__proto__ || Object.getPrototypeOf(EAN13.prototype), 'rightEncode', this).call(this, data, 'RRRRRR');\n\t\t}\n\n\t\t// The \"standard\" way of printing EAN13 barcodes with guard bars\n\n\t}, {\n\t\tkey: 'encodeGuarded',\n\t\tvalue: function encodeGuarded() {\n\t\t\tvar data = _get(EAN13.prototype.__proto__ || Object.getPrototypeOf(EAN13.prototype), 'encodeGuarded', this).call(this);\n\n\t\t\t// Extend data with left digit & last character\n\t\t\tif (this.options.displayValue) {\n\t\t\t\tdata.unshift({\n\t\t\t\t\tdata: '000000000000',\n\t\t\t\t\ttext: this.text.substr(0, 1),\n\t\t\t\t\toptions: { textAlign: 'left', fontSize: this.fontSize }\n\t\t\t\t});\n\n\t\t\t\tif (this.options.lastChar) {\n\t\t\t\t\tdata.push({\n\t\t\t\t\t\tdata: '00'\n\t\t\t\t\t});\n\t\t\t\t\tdata.push({\n\t\t\t\t\t\tdata: '00000',\n\t\t\t\t\t\ttext: this.options.lastChar,\n\t\t\t\t\t\toptions: { fontSize: this.fontSize }\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\t}]);\n\n\treturn EAN13;\n}(_EAN3.default);\n\nexports.default = EAN13;\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/barcodes/EAN_UPC/EAN13.js\n// module id = ../../../../jsbarcode/bin/barcodes/EAN_UPC/EAN13.js\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _constants = require('./constants');\n\nvar _encoder = require('./encoder');\n\nvar _encoder2 = _interopRequireDefault(_encoder);\n\nvar _Barcode2 = require('../Barcode');\n\nvar _Barcode3 = _interopRequireDefault(_Barcode2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // Encoding documentation:\n// https://en.wikipedia.org/wiki/EAN_2#Encoding\n\nvar EAN2 = function (_Barcode) {\n\t_inherits(EAN2, _Barcode);\n\n\tfunction EAN2(data, options) {\n\t\t_classCallCheck(this, EAN2);\n\n\t\treturn _possibleConstructorReturn(this, (EAN2.__proto__ || Object.getPrototypeOf(EAN2)).call(this, data, options));\n\t}\n\n\t_createClass(EAN2, [{\n\t\tkey: 'valid',\n\t\tvalue: function valid() {\n\t\t\treturn this.data.search(/^[0-9]{2}$/) !== -1;\n\t\t}\n\t}, {\n\t\tkey: 'encode',\n\t\tvalue: function encode() {\n\t\t\t// Choose the structure based on the number mod 4\n\t\t\tvar structure = _constants.EAN2_STRUCTURE[parseInt(this.data) % 4];\n\t\t\treturn {\n\t\t\t\t// Start bits + Encode the two digits with 01 in between\n\t\t\t\tdata: '1011' + (0, _encoder2.default)(this.data, structure, '01'),\n\t\t\t\ttext: this.text\n\t\t\t};\n\t\t}\n\t}]);\n\n\treturn EAN2;\n}(_Barcode3.default);\n\nexports.default = EAN2;\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/barcodes/EAN_UPC/EAN2.js\n// module id = ../../../../jsbarcode/bin/barcodes/EAN_UPC/EAN2.js\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _constants = require('./constants');\n\nvar _encoder = require('./encoder');\n\nvar _encoder2 = _interopRequireDefault(_encoder);\n\nvar _Barcode2 = require('../Barcode');\n\nvar _Barcode3 = _interopRequireDefault(_Barcode2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // Encoding documentation:\n// https://en.wikipedia.org/wiki/EAN_5#Encoding\n\nvar checksum = function checksum(data) {\n\tvar result = data.split('').map(function (n) {\n\t\treturn +n;\n\t}).reduce(function (sum, a, idx) {\n\t\treturn idx % 2 ? sum + a * 9 : sum + a * 3;\n\t}, 0);\n\treturn result % 10;\n};\n\nvar EAN5 = function (_Barcode) {\n\t_inherits(EAN5, _Barcode);\n\n\tfunction EAN5(data, options) {\n\t\t_classCallCheck(this, EAN5);\n\n\t\treturn _possibleConstructorReturn(this, (EAN5.__proto__ || Object.getPrototypeOf(EAN5)).call(this, data, options));\n\t}\n\n\t_createClass(EAN5, [{\n\t\tkey: 'valid',\n\t\tvalue: function valid() {\n\t\t\treturn this.data.search(/^[0-9]{5}$/) !== -1;\n\t\t}\n\t}, {\n\t\tkey: 'encode',\n\t\tvalue: function encode() {\n\t\t\tvar structure = _constants.EAN5_STRUCTURE[checksum(this.data)];\n\t\t\treturn {\n\t\t\t\tdata: '1011' + (0, _encoder2.default)(this.data, structure, '01'),\n\t\t\t\ttext: this.text\n\t\t\t};\n\t\t}\n\t}]);\n\n\treturn EAN5;\n}(_Barcode3.default);\n\nexports.default = EAN5;\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/barcodes/EAN_UPC/EAN5.js\n// module id = ../../../../jsbarcode/bin/barcodes/EAN_UPC/EAN5.js\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _EAN2 = require('./EAN');\n\nvar _EAN3 = _interopRequireDefault(_EAN2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // Encoding documentation:\n// http://www.barcodeisland.com/ean8.phtml\n\n// Calculate the checksum digit\nvar checksum = function checksum(number) {\n\tvar res = number.substr(0, 7).split('').map(function (n) {\n\t\treturn +n;\n\t}).reduce(function (sum, a, idx) {\n\t\treturn idx % 2 ? sum + a : sum + a * 3;\n\t}, 0);\n\n\treturn (10 - res % 10) % 10;\n};\n\nvar EAN8 = function (_EAN) {\n\t_inherits(EAN8, _EAN);\n\n\tfunction EAN8(data, options) {\n\t\t_classCallCheck(this, EAN8);\n\n\t\t// Add checksum if it does not exist\n\t\tif (data.search(/^[0-9]{7}$/) !== -1) {\n\t\t\tdata += checksum(data);\n\t\t}\n\n\t\treturn _possibleConstructorReturn(this, (EAN8.__proto__ || Object.getPrototypeOf(EAN8)).call(this, data, options));\n\t}\n\n\t_createClass(EAN8, [{\n\t\tkey: 'valid',\n\t\tvalue: function valid() {\n\t\t\treturn this.data.search(/^[0-9]{8}$/) !== -1 && +this.data[7] === checksum(this.data);\n\t\t}\n\t}, {\n\t\tkey: 'leftText',\n\t\tvalue: function leftText() {\n\t\t\treturn _get(EAN8.prototype.__proto__ || Object.getPrototypeOf(EAN8.prototype), 'leftText', this).call(this, 0, 4);\n\t\t}\n\t}, {\n\t\tkey: 'leftEncode',\n\t\tvalue: function leftEncode() {\n\t\t\tvar data = this.data.substr(0, 4);\n\t\t\treturn _get(EAN8.prototype.__proto__ || Object.getPrototypeOf(EAN8.prototype), 'leftEncode', this).call(this, data, 'LLLL');\n\t\t}\n\t}, {\n\t\tkey: 'rightText',\n\t\tvalue: function rightText() {\n\t\t\treturn _get(EAN8.prototype.__proto__ || Object.getPrototypeOf(EAN8.prototype), 'rightText', this).call(this, 4, 4);\n\t\t}\n\t}, {\n\t\tkey: 'rightEncode',\n\t\tvalue: function rightEncode() {\n\t\t\tvar data = this.data.substr(4, 4);\n\t\t\treturn _get(EAN8.prototype.__proto__ || Object.getPrototypeOf(EAN8.prototype), 'rightEncode', this).call(this, data, 'RRRR');\n\t\t}\n\t}]);\n\n\treturn EAN8;\n}(_EAN3.default);\n\nexports.default = EAN8;\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/barcodes/EAN_UPC/EAN8.js\n// module id = ../../../../jsbarcode/bin/barcodes/EAN_UPC/EAN8.js\n// module chunks = 1","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nexports.checksum = checksum;\n\nvar _encoder = require(\"./encoder\");\n\nvar _encoder2 = _interopRequireDefault(_encoder);\n\nvar _Barcode2 = require(\"../Barcode.js\");\n\nvar _Barcode3 = _interopRequireDefault(_Barcode2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // Encoding documentation:\n// https://en.wikipedia.org/wiki/Universal_Product_Code#Encoding\n\nvar UPC = function (_Barcode) {\n\t_inherits(UPC, _Barcode);\n\n\tfunction UPC(data, options) {\n\t\t_classCallCheck(this, UPC);\n\n\t\t// Add checksum if it does not exist\n\t\tif (data.search(/^[0-9]{11}$/) !== -1) {\n\t\t\tdata += checksum(data);\n\t\t}\n\n\t\tvar _this = _possibleConstructorReturn(this, (UPC.__proto__ || Object.getPrototypeOf(UPC)).call(this, data, options));\n\n\t\t_this.displayValue = options.displayValue;\n\n\t\t// Make sure the font is not bigger than the space between the guard bars\n\t\tif (options.fontSize > options.width * 10) {\n\t\t\t_this.fontSize = options.width * 10;\n\t\t} else {\n\t\t\t_this.fontSize = options.fontSize;\n\t\t}\n\n\t\t// Make the guard bars go down half the way of the text\n\t\t_this.guardHeight = options.height + _this.fontSize / 2 + options.textMargin;\n\t\treturn _this;\n\t}\n\n\t_createClass(UPC, [{\n\t\tkey: \"valid\",\n\t\tvalue: function valid() {\n\t\t\treturn this.data.search(/^[0-9]{12}$/) !== -1 && this.data[11] == checksum(this.data);\n\t\t}\n\t}, {\n\t\tkey: \"encode\",\n\t\tvalue: function encode() {\n\t\t\tif (this.options.flat) {\n\t\t\t\treturn this.flatEncoding();\n\t\t\t} else {\n\t\t\t\treturn this.guardedEncoding();\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: \"flatEncoding\",\n\t\tvalue: function flatEncoding() {\n\t\t\tvar result = \"\";\n\n\t\t\tresult += \"101\";\n\t\t\tresult += (0, _encoder2.default)(this.data.substr(0, 6), \"LLLLLL\");\n\t\t\tresult += \"01010\";\n\t\t\tresult += (0, _encoder2.default)(this.data.substr(6, 6), \"RRRRRR\");\n\t\t\tresult += \"101\";\n\n\t\t\treturn {\n\t\t\t\tdata: result,\n\t\t\t\ttext: this.text\n\t\t\t};\n\t\t}\n\t}, {\n\t\tkey: \"guardedEncoding\",\n\t\tvalue: function guardedEncoding() {\n\t\t\tvar result = [];\n\n\t\t\t// Add the first digit\n\t\t\tif (this.displayValue) {\n\t\t\t\tresult.push({\n\t\t\t\t\tdata: \"00000000\",\n\t\t\t\t\ttext: this.text.substr(0, 1),\n\t\t\t\t\toptions: { textAlign: \"left\", fontSize: this.fontSize }\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Add the guard bars\n\t\t\tresult.push({\n\t\t\t\tdata: \"101\" + (0, _encoder2.default)(this.data[0], \"L\"),\n\t\t\t\toptions: { height: this.guardHeight }\n\t\t\t});\n\n\t\t\t// Add the left side\n\t\t\tresult.push({\n\t\t\t\tdata: (0, _encoder2.default)(this.data.substr(1, 5), \"LLLLL\"),\n\t\t\t\ttext: this.text.substr(1, 5),\n\t\t\t\toptions: { fontSize: this.fontSize }\n\t\t\t});\n\n\t\t\t// Add the middle bits\n\t\t\tresult.push({\n\t\t\t\tdata: \"01010\",\n\t\t\t\toptions: { height: this.guardHeight }\n\t\t\t});\n\n\t\t\t// Add the right side\n\t\t\tresult.push({\n\t\t\t\tdata: (0, _encoder2.default)(this.data.substr(6, 5), \"RRRRR\"),\n\t\t\t\ttext: this.text.substr(6, 5),\n\t\t\t\toptions: { fontSize: this.fontSize }\n\t\t\t});\n\n\t\t\t// Add the end bits\n\t\t\tresult.push({\n\t\t\t\tdata: (0, _encoder2.default)(this.data[11], \"R\") + \"101\",\n\t\t\t\toptions: { height: this.guardHeight }\n\t\t\t});\n\n\t\t\t// Add the last digit\n\t\t\tif (this.displayValue) {\n\t\t\t\tresult.push({\n\t\t\t\t\tdata: \"00000000\",\n\t\t\t\t\ttext: this.text.substr(11, 1),\n\t\t\t\t\toptions: { textAlign: \"right\", fontSize: this.fontSize }\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\t}]);\n\n\treturn UPC;\n}(_Barcode3.default);\n\n// Calulate the checksum digit\n// https://en.wikipedia.org/wiki/International_Article_Number_(EAN)#Calculation_of_checksum_digit\n\n\nfunction checksum(number) {\n\tvar result = 0;\n\n\tvar i;\n\tfor (i = 1; i < 11; i += 2) {\n\t\tresult += parseInt(number[i]);\n\t}\n\tfor (i = 0; i < 11; i += 2) {\n\t\tresult += parseInt(number[i]) * 3;\n\t}\n\n\treturn (10 - result % 10) % 10;\n}\n\nexports.default = UPC;\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/barcodes/EAN_UPC/UPC.js\n// module id = ../../../../jsbarcode/bin/barcodes/EAN_UPC/UPC.js\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _encoder = require('./encoder');\n\nvar _encoder2 = _interopRequireDefault(_encoder);\n\nvar _Barcode2 = require('../Barcode.js');\n\nvar _Barcode3 = _interopRequireDefault(_Barcode2);\n\nvar _UPC = require('./UPC.js');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // Encoding documentation:\n// https://en.wikipedia.org/wiki/Universal_Product_Code#Encoding\n//\n// UPC-E documentation:\n// https://en.wikipedia.org/wiki/Universal_Product_Code#UPC-E\n\nvar EXPANSIONS = [\"XX00000XXX\", \"XX10000XXX\", \"XX20000XXX\", \"XXX00000XX\", \"XXXX00000X\", \"XXXXX00005\", \"XXXXX00006\", \"XXXXX00007\", \"XXXXX00008\", \"XXXXX00009\"];\n\nvar PARITIES = [[\"EEEOOO\", \"OOOEEE\"], [\"EEOEOO\", \"OOEOEE\"], [\"EEOOEO\", \"OOEEOE\"], [\"EEOOOE\", \"OOEEEO\"], [\"EOEEOO\", \"OEOOEE\"], [\"EOOEEO\", \"OEEOOE\"], [\"EOOOEE\", \"OEEEOO\"], [\"EOEOEO\", \"OEOEOE\"], [\"EOEOOE\", \"OEOEEO\"], [\"EOOEOE\", \"OEEOEO\"]];\n\nvar UPCE = function (_Barcode) {\n\t_inherits(UPCE, _Barcode);\n\n\tfunction UPCE(data, options) {\n\t\t_classCallCheck(this, UPCE);\n\n\t\tvar _this = _possibleConstructorReturn(this, (UPCE.__proto__ || Object.getPrototypeOf(UPCE)).call(this, data, options));\n\t\t// Code may be 6 or 8 digits;\n\t\t// A 7 digit code is ambiguous as to whether the extra digit\n\t\t// is a UPC-A check or number system digit.\n\n\n\t\t_this.isValid = false;\n\t\tif (data.search(/^[0-9]{6}$/) !== -1) {\n\t\t\t_this.middleDigits = data;\n\t\t\t_this.upcA = expandToUPCA(data, \"0\");\n\t\t\t_this.text = options.text || '' + _this.upcA[0] + data + _this.upcA[_this.upcA.length - 1];\n\t\t\t_this.isValid = true;\n\t\t} else if (data.search(/^[01][0-9]{7}$/) !== -1) {\n\t\t\t_this.middleDigits = data.substring(1, data.length - 1);\n\t\t\t_this.upcA = expandToUPCA(_this.middleDigits, data[0]);\n\n\t\t\tif (_this.upcA[_this.upcA.length - 1] === data[data.length - 1]) {\n\t\t\t\t_this.isValid = true;\n\t\t\t} else {\n\t\t\t\t// checksum mismatch\n\t\t\t\treturn _possibleConstructorReturn(_this);\n\t\t\t}\n\t\t} else {\n\t\t\treturn _possibleConstructorReturn(_this);\n\t\t}\n\n\t\t_this.displayValue = options.displayValue;\n\n\t\t// Make sure the font is not bigger than the space between the guard bars\n\t\tif (options.fontSize > options.width * 10) {\n\t\t\t_this.fontSize = options.width * 10;\n\t\t} else {\n\t\t\t_this.fontSize = options.fontSize;\n\t\t}\n\n\t\t// Make the guard bars go down half the way of the text\n\t\t_this.guardHeight = options.height + _this.fontSize / 2 + options.textMargin;\n\t\treturn _this;\n\t}\n\n\t_createClass(UPCE, [{\n\t\tkey: 'valid',\n\t\tvalue: function valid() {\n\t\t\treturn this.isValid;\n\t\t}\n\t}, {\n\t\tkey: 'encode',\n\t\tvalue: function encode() {\n\t\t\tif (this.options.flat) {\n\t\t\t\treturn this.flatEncoding();\n\t\t\t} else {\n\t\t\t\treturn this.guardedEncoding();\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'flatEncoding',\n\t\tvalue: function flatEncoding() {\n\t\t\tvar result = \"\";\n\n\t\t\tresult += \"101\";\n\t\t\tresult += this.encodeMiddleDigits();\n\t\t\tresult += \"010101\";\n\n\t\t\treturn {\n\t\t\t\tdata: result,\n\t\t\t\ttext: this.text\n\t\t\t};\n\t\t}\n\t}, {\n\t\tkey: 'guardedEncoding',\n\t\tvalue: function guardedEncoding() {\n\t\t\tvar result = [];\n\n\t\t\t// Add the UPC-A number system digit beneath the quiet zone\n\t\t\tif (this.displayValue) {\n\t\t\t\tresult.push({\n\t\t\t\t\tdata: \"00000000\",\n\t\t\t\t\ttext: this.text[0],\n\t\t\t\t\toptions: { textAlign: \"left\", fontSize: this.fontSize }\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Add the guard bars\n\t\t\tresult.push({\n\t\t\t\tdata: \"101\",\n\t\t\t\toptions: { height: this.guardHeight }\n\t\t\t});\n\n\t\t\t// Add the 6 UPC-E digits\n\t\t\tresult.push({\n\t\t\t\tdata: this.encodeMiddleDigits(),\n\t\t\t\ttext: this.text.substring(1, 7),\n\t\t\t\toptions: { fontSize: this.fontSize }\n\t\t\t});\n\n\t\t\t// Add the end bits\n\t\t\tresult.push({\n\t\t\t\tdata: \"010101\",\n\t\t\t\toptions: { height: this.guardHeight }\n\t\t\t});\n\n\t\t\t// Add the UPC-A check digit beneath the quiet zone\n\t\t\tif (this.displayValue) {\n\t\t\t\tresult.push({\n\t\t\t\t\tdata: \"00000000\",\n\t\t\t\t\ttext: this.text[7],\n\t\t\t\t\toptions: { textAlign: \"right\", fontSize: this.fontSize }\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\t}, {\n\t\tkey: 'encodeMiddleDigits',\n\t\tvalue: function encodeMiddleDigits() {\n\t\t\tvar numberSystem = this.upcA[0];\n\t\t\tvar checkDigit = this.upcA[this.upcA.length - 1];\n\t\t\tvar parity = PARITIES[parseInt(checkDigit)][parseInt(numberSystem)];\n\t\t\treturn (0, _encoder2.default)(this.middleDigits, parity);\n\t\t}\n\t}]);\n\n\treturn UPCE;\n}(_Barcode3.default);\n\nfunction expandToUPCA(middleDigits, numberSystem) {\n\tvar lastUpcE = parseInt(middleDigits[middleDigits.length - 1]);\n\tvar expansion = EXPANSIONS[lastUpcE];\n\n\tvar result = \"\";\n\tvar digitIndex = 0;\n\tfor (var i = 0; i < expansion.length; i++) {\n\t\tvar c = expansion[i];\n\t\tif (c === 'X') {\n\t\t\tresult += middleDigits[digitIndex++];\n\t\t} else {\n\t\t\tresult += c;\n\t\t}\n\t}\n\n\tresult = '' + numberSystem + result;\n\treturn '' + result + (0, _UPC.checksum)(result);\n}\n\nexports.default = UPCE;\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/barcodes/EAN_UPC/UPCE.js\n// module id = ../../../../jsbarcode/bin/barcodes/EAN_UPC/UPCE.js\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n// Standard start end and middle bits\nvar SIDE_BIN = exports.SIDE_BIN = '101';\nvar MIDDLE_BIN = exports.MIDDLE_BIN = '01010';\n\nvar BINARIES = exports.BINARIES = {\n\t'L': [// The L (left) type of encoding\n\t'0001101', '0011001', '0010011', '0111101', '0100011', '0110001', '0101111', '0111011', '0110111', '0001011'],\n\t'G': [// The G type of encoding\n\t'0100111', '0110011', '0011011', '0100001', '0011101', '0111001', '0000101', '0010001', '0001001', '0010111'],\n\t'R': [// The R (right) type of encoding\n\t'1110010', '1100110', '1101100', '1000010', '1011100', '1001110', '1010000', '1000100', '1001000', '1110100'],\n\t'O': [// The O (odd) encoding for UPC-E\n\t'0001101', '0011001', '0010011', '0111101', '0100011', '0110001', '0101111', '0111011', '0110111', '0001011'],\n\t'E': [// The E (even) encoding for UPC-E\n\t'0100111', '0110011', '0011011', '0100001', '0011101', '0111001', '0000101', '0010001', '0001001', '0010111']\n};\n\n// Define the EAN-2 structure\nvar EAN2_STRUCTURE = exports.EAN2_STRUCTURE = ['LL', 'LG', 'GL', 'GG'];\n\n// Define the EAN-5 structure\nvar EAN5_STRUCTURE = exports.EAN5_STRUCTURE = ['GGLLL', 'GLGLL', 'GLLGL', 'GLLLG', 'LGGLL', 'LLGGL', 'LLLGG', 'LGLGL', 'LGLLG', 'LLGLG'];\n\n// Define the EAN-13 structure\nvar EAN13_STRUCTURE = exports.EAN13_STRUCTURE = ['LLLLLL', 'LLGLGG', 'LLGGLG', 'LLGGGL', 'LGLLGG', 'LGGLLG', 'LGGGLL', 'LGLGLG', 'LGLGGL', 'LGGLGL'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/barcodes/EAN_UPC/constants.js\n// module id = ../../../../jsbarcode/bin/barcodes/EAN_UPC/constants.js\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _constants = require('./constants');\n\n// Encode data string\nvar encode = function encode(data, structure, separator) {\n\tvar encoded = data.split('').map(function (val, idx) {\n\t\treturn _constants.BINARIES[structure[idx]];\n\t}).map(function (val, idx) {\n\t\treturn val ? val[data[idx]] : '';\n\t});\n\n\tif (separator) {\n\t\tvar last = data.length - 1;\n\t\tencoded = encoded.map(function (val, idx) {\n\t\t\treturn idx < last ? val + separator : val;\n\t\t});\n\t}\n\n\treturn encoded.join('');\n};\n\nexports.default = encode;\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/barcodes/EAN_UPC/encoder.js\n// module id = ../../../../jsbarcode/bin/barcodes/EAN_UPC/encoder.js\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UPCE = exports.UPC = exports.EAN2 = exports.EAN5 = exports.EAN8 = exports.EAN13 = undefined;\n\nvar _EAN = require('./EAN13.js');\n\nvar _EAN2 = _interopRequireDefault(_EAN);\n\nvar _EAN3 = require('./EAN8.js');\n\nvar _EAN4 = _interopRequireDefault(_EAN3);\n\nvar _EAN5 = require('./EAN5.js');\n\nvar _EAN6 = _interopRequireDefault(_EAN5);\n\nvar _EAN7 = require('./EAN2.js');\n\nvar _EAN8 = _interopRequireDefault(_EAN7);\n\nvar _UPC = require('./UPC.js');\n\nvar _UPC2 = _interopRequireDefault(_UPC);\n\nvar _UPCE = require('./UPCE.js');\n\nvar _UPCE2 = _interopRequireDefault(_UPCE);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.EAN13 = _EAN2.default;\nexports.EAN8 = _EAN4.default;\nexports.EAN5 = _EAN6.default;\nexports.EAN2 = _EAN8.default;\nexports.UPC = _UPC2.default;\nexports.UPCE = _UPCE2.default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/barcodes/EAN_UPC/index.js\n// module id = ../../../../jsbarcode/bin/barcodes/EAN_UPC/index.js\n// module chunks = 1","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.GenericBarcode = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Barcode2 = require(\"../Barcode.js\");\n\nvar _Barcode3 = _interopRequireDefault(_Barcode2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar GenericBarcode = function (_Barcode) {\n\t_inherits(GenericBarcode, _Barcode);\n\n\tfunction GenericBarcode(data, options) {\n\t\t_classCallCheck(this, GenericBarcode);\n\n\t\treturn _possibleConstructorReturn(this, (GenericBarcode.__proto__ || Object.getPrototypeOf(GenericBarcode)).call(this, data, options)); // Sets this.data and this.text\n\t}\n\n\t// Return the corresponding binary numbers for the data provided\n\n\n\t_createClass(GenericBarcode, [{\n\t\tkey: \"encode\",\n\t\tvalue: function encode() {\n\t\t\treturn {\n\t\t\t\tdata: \"10101010101010101010101010101010101010101\",\n\t\t\t\ttext: this.text\n\t\t\t};\n\t\t}\n\n\t\t// Resturn true/false if the string provided is valid for this encoder\n\n\t}, {\n\t\tkey: \"valid\",\n\t\tvalue: function valid() {\n\t\t\treturn true;\n\t\t}\n\t}]);\n\n\treturn GenericBarcode;\n}(_Barcode3.default);\n\nexports.GenericBarcode = GenericBarcode;\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/barcodes/GenericBarcode/index.js\n// module id = ../../../../jsbarcode/bin/barcodes/GenericBarcode/index.js\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _constants = require('./constants');\n\nvar _Barcode2 = require('../Barcode');\n\nvar _Barcode3 = _interopRequireDefault(_Barcode2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ITF = function (_Barcode) {\n\t_inherits(ITF, _Barcode);\n\n\tfunction ITF() {\n\t\t_classCallCheck(this, ITF);\n\n\t\treturn _possibleConstructorReturn(this, (ITF.__proto__ || Object.getPrototypeOf(ITF)).apply(this, arguments));\n\t}\n\n\t_createClass(ITF, [{\n\t\tkey: 'valid',\n\t\tvalue: function valid() {\n\t\t\treturn this.data.search(/^([0-9]{2})+$/) !== -1;\n\t\t}\n\t}, {\n\t\tkey: 'encode',\n\t\tvalue: function encode() {\n\t\t\tvar _this2 = this;\n\n\t\t\t// Calculate all the digit pairs\n\t\t\tvar encoded = this.data.match(/.{2}/g).map(function (pair) {\n\t\t\t\treturn _this2.encodePair(pair);\n\t\t\t}).join('');\n\n\t\t\treturn {\n\t\t\t\tdata: _constants.START_BIN + encoded + _constants.END_BIN,\n\t\t\t\ttext: this.text\n\t\t\t};\n\t\t}\n\n\t\t// Calculate the data of a number pair\n\n\t}, {\n\t\tkey: 'encodePair',\n\t\tvalue: function encodePair(pair) {\n\t\t\tvar second = _constants.BINARIES[pair[1]];\n\n\t\t\treturn _constants.BINARIES[pair[0]].split('').map(function (first, idx) {\n\t\t\t\treturn (first === '1' ? '111' : '1') + (second[idx] === '1' ? '000' : '0');\n\t\t\t}).join('');\n\t\t}\n\t}]);\n\n\treturn ITF;\n}(_Barcode3.default);\n\nexports.default = ITF;\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/barcodes/ITF/ITF.js\n// module id = ../../../../jsbarcode/bin/barcodes/ITF/ITF.js\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _ITF2 = require('./ITF');\n\nvar _ITF3 = _interopRequireDefault(_ITF2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// Calculate the checksum digit\nvar checksum = function checksum(data) {\n\tvar res = data.substr(0, 13).split('').map(function (num) {\n\t\treturn parseInt(num, 10);\n\t}).reduce(function (sum, n, idx) {\n\t\treturn sum + n * (3 - idx % 2 * 2);\n\t}, 0);\n\n\treturn Math.ceil(res / 10) * 10 - res;\n};\n\nvar ITF14 = function (_ITF) {\n\t_inherits(ITF14, _ITF);\n\n\tfunction ITF14(data, options) {\n\t\t_classCallCheck(this, ITF14);\n\n\t\t// Add checksum if it does not exist\n\t\tif (data.search(/^[0-9]{13}$/) !== -1) {\n\t\t\tdata += checksum(data);\n\t\t}\n\t\treturn _possibleConstructorReturn(this, (ITF14.__proto__ || Object.getPrototypeOf(ITF14)).call(this, data, options));\n\t}\n\n\t_createClass(ITF14, [{\n\t\tkey: 'valid',\n\t\tvalue: function valid() {\n\t\t\treturn this.data.search(/^[0-9]{14}$/) !== -1 && +this.data[13] === checksum(this.data);\n\t\t}\n\t}]);\n\n\treturn ITF14;\n}(_ITF3.default);\n\nexports.default = ITF14;\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/barcodes/ITF/ITF14.js\n// module id = ../../../../jsbarcode/bin/barcodes/ITF/ITF14.js\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nvar START_BIN = exports.START_BIN = '1010';\nvar END_BIN = exports.END_BIN = '11101';\n\nvar BINARIES = exports.BINARIES = ['00110', '10001', '01001', '11000', '00101', '10100', '01100', '00011', '10010', '01010'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/barcodes/ITF/constants.js\n// module id = ../../../../jsbarcode/bin/barcodes/ITF/constants.js\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ITF14 = exports.ITF = undefined;\n\nvar _ITF = require('./ITF');\n\nvar _ITF2 = _interopRequireDefault(_ITF);\n\nvar _ITF3 = require('./ITF14');\n\nvar _ITF4 = _interopRequireDefault(_ITF3);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.ITF = _ITF2.default;\nexports.ITF14 = _ITF4.default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/barcodes/ITF/index.js\n// module id = ../../../../jsbarcode/bin/barcodes/ITF/index.js\n// module chunks = 1","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Barcode2 = require(\"../Barcode.js\");\n\nvar _Barcode3 = _interopRequireDefault(_Barcode2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // Encoding documentation\n// https://en.wikipedia.org/wiki/MSI_Barcode#Character_set_and_binary_lookup\n\nvar MSI = function (_Barcode) {\n\t_inherits(MSI, _Barcode);\n\n\tfunction MSI(data, options) {\n\t\t_classCallCheck(this, MSI);\n\n\t\treturn _possibleConstructorReturn(this, (MSI.__proto__ || Object.getPrototypeOf(MSI)).call(this, data, options));\n\t}\n\n\t_createClass(MSI, [{\n\t\tkey: \"encode\",\n\t\tvalue: function encode() {\n\t\t\t// Start bits\n\t\t\tvar ret = \"110\";\n\n\t\t\tfor (var i = 0; i < this.data.length; i++) {\n\t\t\t\t// Convert the character to binary (always 4 binary digits)\n\t\t\t\tvar digit = parseInt(this.data[i]);\n\t\t\t\tvar bin = digit.toString(2);\n\t\t\t\tbin = addZeroes(bin, 4 - bin.length);\n\n\t\t\t\t// Add 100 for every zero and 110 for every 1\n\t\t\t\tfor (var b = 0; b < bin.length; b++) {\n\t\t\t\t\tret += bin[b] == \"0\" ? \"100\" : \"110\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// End bits\n\t\t\tret += \"1001\";\n\n\t\t\treturn {\n\t\t\t\tdata: ret,\n\t\t\t\ttext: this.text\n\t\t\t};\n\t\t}\n\t}, {\n\t\tkey: \"valid\",\n\t\tvalue: function valid() {\n\t\t\treturn this.data.search(/^[0-9]+$/) !== -1;\n\t\t}\n\t}]);\n\n\treturn MSI;\n}(_Barcode3.default);\n\nfunction addZeroes(number, n) {\n\tfor (var i = 0; i < n; i++) {\n\t\tnumber = \"0\" + number;\n\t}\n\treturn number;\n}\n\nexports.default = MSI;\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/barcodes/MSI/MSI.js\n// module id = ../../../../jsbarcode/bin/barcodes/MSI/MSI.js\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _MSI2 = require('./MSI.js');\n\nvar _MSI3 = _interopRequireDefault(_MSI2);\n\nvar _checksums = require('./checksums.js');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar MSI10 = function (_MSI) {\n\t_inherits(MSI10, _MSI);\n\n\tfunction MSI10(data, options) {\n\t\t_classCallCheck(this, MSI10);\n\n\t\treturn _possibleConstructorReturn(this, (MSI10.__proto__ || Object.getPrototypeOf(MSI10)).call(this, data + (0, _checksums.mod10)(data), options));\n\t}\n\n\treturn MSI10;\n}(_MSI3.default);\n\nexports.default = MSI10;\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/barcodes/MSI/MSI10.js\n// module id = ../../../../jsbarcode/bin/barcodes/MSI/MSI10.js\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _MSI2 = require('./MSI.js');\n\nvar _MSI3 = _interopRequireDefault(_MSI2);\n\nvar _checksums = require('./checksums.js');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar MSI1010 = function (_MSI) {\n\t_inherits(MSI1010, _MSI);\n\n\tfunction MSI1010(data, options) {\n\t\t_classCallCheck(this, MSI1010);\n\n\t\tdata += (0, _checksums.mod10)(data);\n\t\tdata += (0, _checksums.mod10)(data);\n\t\treturn _possibleConstructorReturn(this, (MSI1010.__proto__ || Object.getPrototypeOf(MSI1010)).call(this, data, options));\n\t}\n\n\treturn MSI1010;\n}(_MSI3.default);\n\nexports.default = MSI1010;\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/barcodes/MSI/MSI1010.js\n// module id = ../../../../jsbarcode/bin/barcodes/MSI/MSI1010.js\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _MSI2 = require('./MSI.js');\n\nvar _MSI3 = _interopRequireDefault(_MSI2);\n\nvar _checksums = require('./checksums.js');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar MSI11 = function (_MSI) {\n\t_inherits(MSI11, _MSI);\n\n\tfunction MSI11(data, options) {\n\t\t_classCallCheck(this, MSI11);\n\n\t\treturn _possibleConstructorReturn(this, (MSI11.__proto__ || Object.getPrototypeOf(MSI11)).call(this, data + (0, _checksums.mod11)(data), options));\n\t}\n\n\treturn MSI11;\n}(_MSI3.default);\n\nexports.default = MSI11;\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/barcodes/MSI/MSI11.js\n// module id = ../../../../jsbarcode/bin/barcodes/MSI/MSI11.js\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _MSI2 = require('./MSI.js');\n\nvar _MSI3 = _interopRequireDefault(_MSI2);\n\nvar _checksums = require('./checksums.js');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar MSI1110 = function (_MSI) {\n\t_inherits(MSI1110, _MSI);\n\n\tfunction MSI1110(data, options) {\n\t\t_classCallCheck(this, MSI1110);\n\n\t\tdata += (0, _checksums.mod11)(data);\n\t\tdata += (0, _checksums.mod10)(data);\n\t\treturn _possibleConstructorReturn(this, (MSI1110.__proto__ || Object.getPrototypeOf(MSI1110)).call(this, data, options));\n\t}\n\n\treturn MSI1110;\n}(_MSI3.default);\n\nexports.default = MSI1110;\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/barcodes/MSI/MSI1110.js\n// module id = ../../../../jsbarcode/bin/barcodes/MSI/MSI1110.js\n// module chunks = 1","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.mod10 = mod10;\nexports.mod11 = mod11;\nfunction mod10(number) {\n\tvar sum = 0;\n\tfor (var i = 0; i < number.length; i++) {\n\t\tvar n = parseInt(number[i]);\n\t\tif ((i + number.length) % 2 === 0) {\n\t\t\tsum += n;\n\t\t} else {\n\t\t\tsum += n * 2 % 10 + Math.floor(n * 2 / 10);\n\t\t}\n\t}\n\treturn (10 - sum % 10) % 10;\n}\n\nfunction mod11(number) {\n\tvar sum = 0;\n\tvar weights = [2, 3, 4, 5, 6, 7];\n\tfor (var i = 0; i < number.length; i++) {\n\t\tvar n = parseInt(number[number.length - 1 - i]);\n\t\tsum += weights[i % weights.length] * n;\n\t}\n\treturn (11 - sum % 11) % 11;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/barcodes/MSI/checksums.js\n// module id = ../../../../jsbarcode/bin/barcodes/MSI/checksums.js\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MSI1110 = exports.MSI1010 = exports.MSI11 = exports.MSI10 = exports.MSI = undefined;\n\nvar _MSI = require('./MSI.js');\n\nvar _MSI2 = _interopRequireDefault(_MSI);\n\nvar _MSI3 = require('./MSI10.js');\n\nvar _MSI4 = _interopRequireDefault(_MSI3);\n\nvar _MSI5 = require('./MSI11.js');\n\nvar _MSI6 = _interopRequireDefault(_MSI5);\n\nvar _MSI7 = require('./MSI1010.js');\n\nvar _MSI8 = _interopRequireDefault(_MSI7);\n\nvar _MSI9 = require('./MSI1110.js');\n\nvar _MSI10 = _interopRequireDefault(_MSI9);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.MSI = _MSI2.default;\nexports.MSI10 = _MSI4.default;\nexports.MSI11 = _MSI6.default;\nexports.MSI1010 = _MSI8.default;\nexports.MSI1110 = _MSI10.default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/barcodes/MSI/index.js\n// module id = ../../../../jsbarcode/bin/barcodes/MSI/index.js\n// module chunks = 1","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.codabar = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Barcode2 = require(\"../Barcode.js\");\n\nvar _Barcode3 = _interopRequireDefault(_Barcode2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // Encoding specification:\n// http://www.barcodeisland.com/codabar.phtml\n\nvar codabar = function (_Barcode) {\n\t_inherits(codabar, _Barcode);\n\n\tfunction codabar(data, options) {\n\t\t_classCallCheck(this, codabar);\n\n\t\tif (data.search(/^[0-9\\-\\$\\:\\.\\+\\/]+$/) === 0) {\n\t\t\tdata = \"A\" + data + \"A\";\n\t\t}\n\n\t\tvar _this = _possibleConstructorReturn(this, (codabar.__proto__ || Object.getPrototypeOf(codabar)).call(this, data.toUpperCase(), options));\n\n\t\t_this.text = _this.options.text || _this.text.replace(/[A-D]/g, '');\n\t\treturn _this;\n\t}\n\n\t_createClass(codabar, [{\n\t\tkey: \"valid\",\n\t\tvalue: function valid() {\n\t\t\treturn this.data.search(/^[A-D][0-9\\-\\$\\:\\.\\+\\/]+[A-D]$/) !== -1;\n\t\t}\n\t}, {\n\t\tkey: \"encode\",\n\t\tvalue: function encode() {\n\t\t\tvar result = [];\n\t\t\tvar encodings = this.getEncodings();\n\t\t\tfor (var i = 0; i < this.data.length; i++) {\n\t\t\t\tresult.push(encodings[this.data.charAt(i)]);\n\t\t\t\t// for all characters except the last, append a narrow-space (\"0\")\n\t\t\t\tif (i !== this.data.length - 1) {\n\t\t\t\t\tresult.push(\"0\");\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {\n\t\t\t\ttext: this.text,\n\t\t\t\tdata: result.join('')\n\t\t\t};\n\t\t}\n\t}, {\n\t\tkey: \"getEncodings\",\n\t\tvalue: function getEncodings() {\n\t\t\treturn {\n\t\t\t\t\"0\": \"101010011\",\n\t\t\t\t\"1\": \"101011001\",\n\t\t\t\t\"2\": \"101001011\",\n\t\t\t\t\"3\": \"110010101\",\n\t\t\t\t\"4\": \"101101001\",\n\t\t\t\t\"5\": \"110101001\",\n\t\t\t\t\"6\": \"100101011\",\n\t\t\t\t\"7\": \"100101101\",\n\t\t\t\t\"8\": \"100110101\",\n\t\t\t\t\"9\": \"110100101\",\n\t\t\t\t\"-\": \"101001101\",\n\t\t\t\t\"$\": \"101100101\",\n\t\t\t\t\":\": \"1101011011\",\n\t\t\t\t\"/\": \"1101101011\",\n\t\t\t\t\".\": \"1101101101\",\n\t\t\t\t\"+\": \"101100110011\",\n\t\t\t\t\"A\": \"1011001001\",\n\t\t\t\t\"B\": \"1001001011\",\n\t\t\t\t\"C\": \"1010010011\",\n\t\t\t\t\"D\": \"1010011001\"\n\t\t\t};\n\t\t}\n\t}]);\n\n\treturn codabar;\n}(_Barcode3.default);\n\nexports.codabar = codabar;\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/barcodes/codabar/index.js\n// module id = ../../../../jsbarcode/bin/barcodes/codabar/index.js\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _CODE = require('./CODE39/');\n\nvar _CODE2 = require('./CODE128/');\n\nvar _EAN_UPC = require('./EAN_UPC/');\n\nvar _ITF = require('./ITF/');\n\nvar _MSI = require('./MSI/');\n\nvar _pharmacode = require('./pharmacode/');\n\nvar _codabar = require('./codabar');\n\nvar _GenericBarcode = require('./GenericBarcode/');\n\nexports.default = {\n\tCODE39: _CODE.CODE39,\n\tCODE128: _CODE2.CODE128, CODE128A: _CODE2.CODE128A, CODE128B: _CODE2.CODE128B, CODE128C: _CODE2.CODE128C,\n\tEAN13: _EAN_UPC.EAN13, EAN8: _EAN_UPC.EAN8, EAN5: _EAN_UPC.EAN5, EAN2: _EAN_UPC.EAN2, UPC: _EAN_UPC.UPC, UPCE: _EAN_UPC.UPCE,\n\tITF14: _ITF.ITF14,\n\tITF: _ITF.ITF,\n\tMSI: _MSI.MSI, MSI10: _MSI.MSI10, MSI11: _MSI.MSI11, MSI1010: _MSI.MSI1010, MSI1110: _MSI.MSI1110,\n\tpharmacode: _pharmacode.pharmacode,\n\tcodabar: _codabar.codabar,\n\tGenericBarcode: _GenericBarcode.GenericBarcode\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/barcodes/index.js\n// module id = ../../../../jsbarcode/bin/barcodes/index.js\n// module chunks = 1","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.pharmacode = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Barcode2 = require(\"../Barcode.js\");\n\nvar _Barcode3 = _interopRequireDefault(_Barcode2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // Encoding documentation\n// http://www.gomaro.ch/ftproot/Laetus_PHARMA-CODE.pdf\n\nvar pharmacode = function (_Barcode) {\n\t_inherits(pharmacode, _Barcode);\n\n\tfunction pharmacode(data, options) {\n\t\t_classCallCheck(this, pharmacode);\n\n\t\tvar _this = _possibleConstructorReturn(this, (pharmacode.__proto__ || Object.getPrototypeOf(pharmacode)).call(this, data, options));\n\n\t\t_this.number = parseInt(data, 10);\n\t\treturn _this;\n\t}\n\n\t_createClass(pharmacode, [{\n\t\tkey: \"encode\",\n\t\tvalue: function encode() {\n\t\t\tvar z = this.number;\n\t\t\tvar result = \"\";\n\n\t\t\t// http://i.imgur.com/RMm4UDJ.png\n\t\t\t// (source: http://www.gomaro.ch/ftproot/Laetus_PHARMA-CODE.pdf, page: 34)\n\t\t\twhile (!isNaN(z) && z != 0) {\n\t\t\t\tif (z % 2 === 0) {\n\t\t\t\t\t// Even\n\t\t\t\t\tresult = \"11100\" + result;\n\t\t\t\t\tz = (z - 2) / 2;\n\t\t\t\t} else {\n\t\t\t\t\t// Odd\n\t\t\t\t\tresult = \"100\" + result;\n\t\t\t\t\tz = (z - 1) / 2;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove the two last zeroes\n\t\t\tresult = result.slice(0, -2);\n\n\t\t\treturn {\n\t\t\t\tdata: result,\n\t\t\t\ttext: this.text\n\t\t\t};\n\t\t}\n\t}, {\n\t\tkey: \"valid\",\n\t\tvalue: function valid() {\n\t\t\treturn this.number >= 3 && this.number <= 131070;\n\t\t}\n\t}]);\n\n\treturn pharmacode;\n}(_Barcode3.default);\n\nexports.pharmacode = pharmacode;\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/barcodes/pharmacode/index.js\n// module id = ../../../../jsbarcode/bin/barcodes/pharmacode/index.js\n// module chunks = 1","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*eslint no-console: 0 */\n\nvar ErrorHandler = function () {\n\tfunction ErrorHandler(api) {\n\t\t_classCallCheck(this, ErrorHandler);\n\n\t\tthis.api = api;\n\t}\n\n\t_createClass(ErrorHandler, [{\n\t\tkey: \"handleCatch\",\n\t\tvalue: function handleCatch(e) {\n\t\t\t// If babel supported extending of Error in a correct way instanceof would be used here\n\t\t\tif (e.name === \"InvalidInputException\") {\n\t\t\t\tif (this.api._options.valid !== this.api._defaults.valid) {\n\t\t\t\t\tthis.api._options.valid(false);\n\t\t\t\t} else {\n\t\t\t\t\tthrow e.message;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthrow e;\n\t\t\t}\n\n\t\t\tthis.api.render = function () {};\n\t\t}\n\t}, {\n\t\tkey: \"wrapBarcodeCall\",\n\t\tvalue: function wrapBarcodeCall(func) {\n\t\t\ttry {\n\t\t\t\tvar result = func.apply(undefined, arguments);\n\t\t\t\tthis.api._options.valid(true);\n\t\t\t\treturn result;\n\t\t\t} catch (e) {\n\t\t\t\tthis.handleCatch(e);\n\n\t\t\t\treturn this.api;\n\t\t\t}\n\t\t}\n\t}]);\n\n\treturn ErrorHandler;\n}();\n\nexports.default = ErrorHandler;\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/exceptions/ErrorHandler.js\n// module id = ../../../../jsbarcode/bin/exceptions/ErrorHandler.js\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar InvalidInputException = function (_Error) {\n\t_inherits(InvalidInputException, _Error);\n\n\tfunction InvalidInputException(symbology, input) {\n\t\t_classCallCheck(this, InvalidInputException);\n\n\t\tvar _this = _possibleConstructorReturn(this, (InvalidInputException.__proto__ || Object.getPrototypeOf(InvalidInputException)).call(this));\n\n\t\t_this.name = \"InvalidInputException\";\n\n\t\t_this.symbology = symbology;\n\t\t_this.input = input;\n\n\t\t_this.message = '\"' + _this.input + '\" is not a valid input for ' + _this.symbology;\n\t\treturn _this;\n\t}\n\n\treturn InvalidInputException;\n}(Error);\n\nvar InvalidElementException = function (_Error2) {\n\t_inherits(InvalidElementException, _Error2);\n\n\tfunction InvalidElementException() {\n\t\t_classCallCheck(this, InvalidElementException);\n\n\t\tvar _this2 = _possibleConstructorReturn(this, (InvalidElementException.__proto__ || Object.getPrototypeOf(InvalidElementException)).call(this));\n\n\t\t_this2.name = \"InvalidElementException\";\n\t\t_this2.message = \"Not supported type to render on\";\n\t\treturn _this2;\n\t}\n\n\treturn InvalidElementException;\n}(Error);\n\nvar NoElementException = function (_Error3) {\n\t_inherits(NoElementException, _Error3);\n\n\tfunction NoElementException() {\n\t\t_classCallCheck(this, NoElementException);\n\n\t\tvar _this3 = _possibleConstructorReturn(this, (NoElementException.__proto__ || Object.getPrototypeOf(NoElementException)).call(this));\n\n\t\t_this3.name = \"NoElementException\";\n\t\t_this3.message = \"No element to render on.\";\n\t\treturn _this3;\n\t}\n\n\treturn NoElementException;\n}(Error);\n\nexports.InvalidInputException = InvalidInputException;\nexports.InvalidElementException = InvalidElementException;\nexports.NoElementException = NoElementException;\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/exceptions/exceptions.js\n// module id = ../../../../jsbarcode/bin/exceptions/exceptions.js\n// module chunks = 1","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.default = fixOptions;\n\n\nfunction fixOptions(options) {\n\t// Fix the margins\n\toptions.marginTop = options.marginTop || options.margin;\n\toptions.marginBottom = options.marginBottom || options.margin;\n\toptions.marginRight = options.marginRight || options.margin;\n\toptions.marginLeft = options.marginLeft || options.margin;\n\n\treturn options;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/help/fixOptions.js\n// module id = ../../../../jsbarcode/bin/help/fixOptions.js\n// module chunks = 1","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _optionsFromStrings = require(\"./optionsFromStrings.js\");\n\nvar _optionsFromStrings2 = _interopRequireDefault(_optionsFromStrings);\n\nvar _defaults = require(\"../options/defaults.js\");\n\nvar _defaults2 = _interopRequireDefault(_defaults);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction getOptionsFromElement(element) {\n\tvar options = {};\n\tfor (var property in _defaults2.default) {\n\t\tif (_defaults2.default.hasOwnProperty(property)) {\n\t\t\t// jsbarcode-*\n\t\t\tif (element.hasAttribute(\"jsbarcode-\" + property.toLowerCase())) {\n\t\t\t\toptions[property] = element.getAttribute(\"jsbarcode-\" + property.toLowerCase());\n\t\t\t}\n\n\t\t\t// data-*\n\t\t\tif (element.hasAttribute(\"data-\" + property.toLowerCase())) {\n\t\t\t\toptions[property] = element.getAttribute(\"data-\" + property.toLowerCase());\n\t\t\t}\n\t\t}\n\t}\n\n\toptions[\"value\"] = element.getAttribute(\"jsbarcode-value\") || element.getAttribute(\"data-value\");\n\n\t// Since all atributes are string they need to be converted to integers\n\toptions = (0, _optionsFromStrings2.default)(options);\n\n\treturn options;\n}\n\nexports.default = getOptionsFromElement;\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/help/getOptionsFromElement.js\n// module id = ../../../../jsbarcode/bin/help/getOptionsFromElement.js\n// module chunks = 1","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; /* global HTMLImageElement */\n/* global HTMLCanvasElement */\n/* global SVGElement */\n\nvar _getOptionsFromElement = require(\"./getOptionsFromElement.js\");\n\nvar _getOptionsFromElement2 = _interopRequireDefault(_getOptionsFromElement);\n\nvar _renderers = require(\"../renderers\");\n\nvar _renderers2 = _interopRequireDefault(_renderers);\n\nvar _exceptions = require(\"../exceptions/exceptions.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Takes an element and returns an object with information about how\n// it should be rendered\n// This could also return an array with these objects\n// {\n//   element: The element that the renderer should draw on\n//   renderer: The name of the renderer\n//   afterRender (optional): If something has to done after the renderer\n//     completed, calls afterRender (function)\n//   options (optional): Options that can be defined in the element\n// }\n\nfunction getRenderProperties(element) {\n\t// If the element is a string, query select call again\n\tif (typeof element === \"string\") {\n\t\treturn querySelectedRenderProperties(element);\n\t}\n\t// If element is array. Recursivly call with every object in the array\n\telse if (Array.isArray(element)) {\n\t\t\tvar returnArray = [];\n\t\t\tfor (var i = 0; i < element.length; i++) {\n\t\t\t\treturnArray.push(getRenderProperties(element[i]));\n\t\t\t}\n\t\t\treturn returnArray;\n\t\t}\n\t\t// If element, render on canvas and set the uri as src\n\t\telse if (typeof HTMLCanvasElement !== 'undefined' && element instanceof HTMLImageElement) {\n\t\t\t\treturn newCanvasRenderProperties(element);\n\t\t\t}\n\t\t\t// If SVG\n\t\t\telse if (element && element.nodeName === 'svg' || typeof SVGElement !== 'undefined' && element instanceof SVGElement) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\telement: element,\n\t\t\t\t\t\toptions: (0, _getOptionsFromElement2.default)(element),\n\t\t\t\t\t\trenderer: _renderers2.default.SVGRenderer\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\t// If canvas (in browser)\n\t\t\t\telse if (typeof HTMLCanvasElement !== 'undefined' && element instanceof HTMLCanvasElement) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\telement: element,\n\t\t\t\t\t\t\toptions: (0, _getOptionsFromElement2.default)(element),\n\t\t\t\t\t\t\trenderer: _renderers2.default.CanvasRenderer\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\t// If canvas (in node)\n\t\t\t\t\telse if (element && element.getContext) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\telement: element,\n\t\t\t\t\t\t\t\trenderer: _renderers2.default.CanvasRenderer\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} else if (element && (typeof element === \"undefined\" ? \"undefined\" : _typeof(element)) === 'object' && !element.nodeName) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\telement: element,\n\t\t\t\t\t\t\t\trenderer: _renderers2.default.ObjectRenderer\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow new _exceptions.InvalidElementException();\n\t\t\t\t\t\t}\n}\n\nfunction querySelectedRenderProperties(string) {\n\tvar selector = document.querySelectorAll(string);\n\tif (selector.length === 0) {\n\t\treturn undefined;\n\t} else {\n\t\tvar returnArray = [];\n\t\tfor (var i = 0; i < selector.length; i++) {\n\t\t\treturnArray.push(getRenderProperties(selector[i]));\n\t\t}\n\t\treturn returnArray;\n\t}\n}\n\nfunction newCanvasRenderProperties(imgElement) {\n\tvar canvas = document.createElement('canvas');\n\treturn {\n\t\telement: canvas,\n\t\toptions: (0, _getOptionsFromElement2.default)(imgElement),\n\t\trenderer: _renderers2.default.CanvasRenderer,\n\t\tafterRender: function afterRender() {\n\t\t\timgElement.setAttribute(\"src\", canvas.toDataURL());\n\t\t}\n\t};\n}\n\nexports.default = getRenderProperties;\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/help/getRenderProperties.js\n// module id = ../../../../jsbarcode/bin/help/getRenderProperties.js\n// module chunks = 1","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.default = linearizeEncodings;\n\n// Encodings can be nestled like [[1-1, 1-2], 2, [3-1, 3-2]\n// Convert to [1-1, 1-2, 2, 3-1, 3-2]\n\nfunction linearizeEncodings(encodings) {\n\tvar linearEncodings = [];\n\tfunction nextLevel(encoded) {\n\t\tif (Array.isArray(encoded)) {\n\t\t\tfor (var i = 0; i < encoded.length; i++) {\n\t\t\t\tnextLevel(encoded[i]);\n\t\t\t}\n\t\t} else {\n\t\t\tencoded.text = encoded.text || \"\";\n\t\t\tencoded.data = encoded.data || \"\";\n\t\t\tlinearEncodings.push(encoded);\n\t\t}\n\t}\n\tnextLevel(encodings);\n\n\treturn linearEncodings;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/help/linearizeEncodings.js\n// module id = ../../../../jsbarcode/bin/help/linearizeEncodings.js\n// module chunks = 1","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.default = function (old, replaceObj) {\n  return _extends({}, old, replaceObj);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/help/merge.js\n// module id = ../../../../jsbarcode/bin/help/merge.js\n// module chunks = 1","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.default = optionsFromStrings;\n\n// Convert string to integers/booleans where it should be\n\nfunction optionsFromStrings(options) {\n\tvar intOptions = [\"width\", \"height\", \"textMargin\", \"fontSize\", \"margin\", \"marginTop\", \"marginBottom\", \"marginLeft\", \"marginRight\"];\n\n\tfor (var intOption in intOptions) {\n\t\tif (intOptions.hasOwnProperty(intOption)) {\n\t\t\tintOption = intOptions[intOption];\n\t\t\tif (typeof options[intOption] === \"string\") {\n\t\t\t\toptions[intOption] = parseInt(options[intOption], 10);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (typeof options[\"displayValue\"] === \"string\") {\n\t\toptions[\"displayValue\"] = options[\"displayValue\"] != \"false\";\n\t}\n\n\treturn options;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/help/optionsFromStrings.js\n// module id = ../../../../jsbarcode/bin/help/optionsFromStrings.js\n// module chunks = 1","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nvar defaults = {\n\twidth: 2,\n\theight: 100,\n\tformat: \"auto\",\n\tdisplayValue: true,\n\tfontOptions: \"\",\n\tfont: \"monospace\",\n\ttext: undefined,\n\ttextAlign: \"center\",\n\ttextPosition: \"bottom\",\n\ttextMargin: 2,\n\tfontSize: 20,\n\tbackground: \"#ffffff\",\n\tlineColor: \"#000000\",\n\tmargin: 10,\n\tmarginTop: undefined,\n\tmarginBottom: undefined,\n\tmarginLeft: undefined,\n\tmarginRight: undefined,\n\tvalid: function valid() {}\n};\n\nexports.default = defaults;\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/options/defaults.js\n// module id = ../../../../jsbarcode/bin/options/defaults.js\n// module chunks = 1","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _merge = require(\"../help/merge.js\");\n\nvar _merge2 = _interopRequireDefault(_merge);\n\nvar _shared = require(\"./shared.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar CanvasRenderer = function () {\n\tfunction CanvasRenderer(canvas, encodings, options) {\n\t\t_classCallCheck(this, CanvasRenderer);\n\n\t\tthis.canvas = canvas;\n\t\tthis.encodings = encodings;\n\t\tthis.options = options;\n\t}\n\n\t_createClass(CanvasRenderer, [{\n\t\tkey: \"render\",\n\t\tvalue: function render() {\n\t\t\t// Abort if the browser does not support HTML5 canvas\n\t\t\tif (!this.canvas.getContext) {\n\t\t\t\tthrow new Error('The browser does not support canvas.');\n\t\t\t}\n\n\t\t\tthis.prepareCanvas();\n\t\t\tfor (var i = 0; i < this.encodings.length; i++) {\n\t\t\t\tvar encodingOptions = (0, _merge2.default)(this.options, this.encodings[i].options);\n\n\t\t\t\tthis.drawCanvasBarcode(encodingOptions, this.encodings[i]);\n\t\t\t\tthis.drawCanvasText(encodingOptions, this.encodings[i]);\n\n\t\t\t\tthis.moveCanvasDrawing(this.encodings[i]);\n\t\t\t}\n\n\t\t\tthis.restoreCanvas();\n\t\t}\n\t}, {\n\t\tkey: \"prepareCanvas\",\n\t\tvalue: function prepareCanvas() {\n\t\t\t// Get the canvas context\n\t\t\tvar ctx = this.canvas.getContext(\"2d\");\n\n\t\t\tctx.save();\n\n\t\t\t(0, _shared.calculateEncodingAttributes)(this.encodings, this.options, ctx);\n\t\t\tvar totalWidth = (0, _shared.getTotalWidthOfEncodings)(this.encodings);\n\t\t\tvar maxHeight = (0, _shared.getMaximumHeightOfEncodings)(this.encodings);\n\n\t\t\tthis.canvas.width = totalWidth + this.options.marginLeft + this.options.marginRight;\n\n\t\t\tthis.canvas.height = maxHeight;\n\n\t\t\t// Paint the canvas\n\t\t\tctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\t\t\tif (this.options.background) {\n\t\t\t\tctx.fillStyle = this.options.background;\n\t\t\t\tctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\t\t\t}\n\n\t\t\tctx.translate(this.options.marginLeft, 0);\n\t\t}\n\t}, {\n\t\tkey: \"drawCanvasBarcode\",\n\t\tvalue: function drawCanvasBarcode(options, encoding) {\n\t\t\t// Get the canvas context\n\t\t\tvar ctx = this.canvas.getContext(\"2d\");\n\n\t\t\tvar binary = encoding.data;\n\n\t\t\t// Creates the barcode out of the encoded binary\n\t\t\tvar yFrom;\n\t\t\tif (options.textPosition == \"top\") {\n\t\t\t\tyFrom = options.marginTop + options.fontSize + options.textMargin;\n\t\t\t} else {\n\t\t\t\tyFrom = options.marginTop;\n\t\t\t}\n\n\t\t\tctx.fillStyle = options.lineColor;\n\n\t\t\tfor (var b = 0; b < binary.length; b++) {\n\t\t\t\tvar x = b * options.width + encoding.barcodePadding;\n\n\t\t\t\tif (binary[b] === \"1\") {\n\t\t\t\t\tctx.fillRect(x, yFrom, options.width, options.height);\n\t\t\t\t} else if (binary[b]) {\n\t\t\t\t\tctx.fillRect(x, yFrom, options.width, options.height * binary[b]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: \"drawCanvasText\",\n\t\tvalue: function drawCanvasText(options, encoding) {\n\t\t\t// Get the canvas context\n\t\t\tvar ctx = this.canvas.getContext(\"2d\");\n\n\t\t\tvar font = options.fontOptions + \" \" + options.fontSize + \"px \" + options.font;\n\n\t\t\t// Draw the text if displayValue is set\n\t\t\tif (options.displayValue) {\n\t\t\t\tvar x, y;\n\n\t\t\t\tif (options.textPosition == \"top\") {\n\t\t\t\t\ty = options.marginTop + options.fontSize - options.textMargin;\n\t\t\t\t} else {\n\t\t\t\t\ty = options.height + options.textMargin + options.marginTop + options.fontSize;\n\t\t\t\t}\n\n\t\t\t\tctx.font = font;\n\n\t\t\t\t// Draw the text in the correct X depending on the textAlign option\n\t\t\t\tif (options.textAlign == \"left\" || encoding.barcodePadding > 0) {\n\t\t\t\t\tx = 0;\n\t\t\t\t\tctx.textAlign = 'left';\n\t\t\t\t} else if (options.textAlign == \"right\") {\n\t\t\t\t\tx = encoding.width - 1;\n\t\t\t\t\tctx.textAlign = 'right';\n\t\t\t\t}\n\t\t\t\t// In all other cases, center the text\n\t\t\t\telse {\n\t\t\t\t\t\tx = encoding.width / 2;\n\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t}\n\n\t\t\t\tctx.fillText(encoding.text, x, y);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: \"moveCanvasDrawing\",\n\t\tvalue: function moveCanvasDrawing(encoding) {\n\t\t\tvar ctx = this.canvas.getContext(\"2d\");\n\n\t\t\tctx.translate(encoding.width, 0);\n\t\t}\n\t}, {\n\t\tkey: \"restoreCanvas\",\n\t\tvalue: function restoreCanvas() {\n\t\t\t// Get the canvas context\n\t\t\tvar ctx = this.canvas.getContext(\"2d\");\n\n\t\t\tctx.restore();\n\t\t}\n\t}]);\n\n\treturn CanvasRenderer;\n}();\n\nexports.default = CanvasRenderer;\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/renderers/canvas.js\n// module id = ../../../../jsbarcode/bin/renderers/canvas.js\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _canvas = require('./canvas.js');\n\nvar _canvas2 = _interopRequireDefault(_canvas);\n\nvar _svg = require('./svg.js');\n\nvar _svg2 = _interopRequireDefault(_svg);\n\nvar _object = require('./object.js');\n\nvar _object2 = _interopRequireDefault(_object);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = { CanvasRenderer: _canvas2.default, SVGRenderer: _svg2.default, ObjectRenderer: _object2.default };\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/renderers/index.js\n// module id = ../../../../jsbarcode/bin/renderers/index.js\n// module chunks = 1","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ObjectRenderer = function () {\n\tfunction ObjectRenderer(object, encodings, options) {\n\t\t_classCallCheck(this, ObjectRenderer);\n\n\t\tthis.object = object;\n\t\tthis.encodings = encodings;\n\t\tthis.options = options;\n\t}\n\n\t_createClass(ObjectRenderer, [{\n\t\tkey: \"render\",\n\t\tvalue: function render() {\n\t\t\tthis.object.encodings = this.encodings;\n\t\t}\n\t}]);\n\n\treturn ObjectRenderer;\n}();\n\nexports.default = ObjectRenderer;\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/renderers/object.js\n// module id = ../../../../jsbarcode/bin/renderers/object.js\n// module chunks = 1","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.getTotalWidthOfEncodings = exports.calculateEncodingAttributes = exports.getBarcodePadding = exports.getEncodingHeight = exports.getMaximumHeightOfEncodings = undefined;\n\nvar _merge = require(\"../help/merge.js\");\n\nvar _merge2 = _interopRequireDefault(_merge);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction getEncodingHeight(encoding, options) {\n\treturn options.height + (options.displayValue && encoding.text.length > 0 ? options.fontSize + options.textMargin : 0) + options.marginTop + options.marginBottom;\n}\n\nfunction getBarcodePadding(textWidth, barcodeWidth, options) {\n\tif (options.displayValue && barcodeWidth < textWidth) {\n\t\tif (options.textAlign == \"center\") {\n\t\t\treturn Math.floor((textWidth - barcodeWidth) / 2);\n\t\t} else if (options.textAlign == \"left\") {\n\t\t\treturn 0;\n\t\t} else if (options.textAlign == \"right\") {\n\t\t\treturn Math.floor(textWidth - barcodeWidth);\n\t\t}\n\t}\n\treturn 0;\n}\n\nfunction calculateEncodingAttributes(encodings, barcodeOptions, context) {\n\tfor (var i = 0; i < encodings.length; i++) {\n\t\tvar encoding = encodings[i];\n\t\tvar options = (0, _merge2.default)(barcodeOptions, encoding.options);\n\n\t\t// Calculate the width of the encoding\n\t\tvar textWidth;\n\t\tif (options.displayValue) {\n\t\t\ttextWidth = messureText(encoding.text, options, context);\n\t\t} else {\n\t\t\ttextWidth = 0;\n\t\t}\n\n\t\tvar barcodeWidth = encoding.data.length * options.width;\n\t\tencoding.width = Math.ceil(Math.max(textWidth, barcodeWidth));\n\n\t\tencoding.height = getEncodingHeight(encoding, options);\n\n\t\tencoding.barcodePadding = getBarcodePadding(textWidth, barcodeWidth, options);\n\t}\n}\n\nfunction getTotalWidthOfEncodings(encodings) {\n\tvar totalWidth = 0;\n\tfor (var i = 0; i < encodings.length; i++) {\n\t\ttotalWidth += encodings[i].width;\n\t}\n\treturn totalWidth;\n}\n\nfunction getMaximumHeightOfEncodings(encodings) {\n\tvar maxHeight = 0;\n\tfor (var i = 0; i < encodings.length; i++) {\n\t\tif (encodings[i].height > maxHeight) {\n\t\t\tmaxHeight = encodings[i].height;\n\t\t}\n\t}\n\treturn maxHeight;\n}\n\nfunction messureText(string, options, context) {\n\tvar ctx;\n\n\tif (context) {\n\t\tctx = context;\n\t} else if (typeof document !== \"undefined\") {\n\t\tctx = document.createElement(\"canvas\").getContext(\"2d\");\n\t} else {\n\t\t// If the text cannot be messured we will return 0.\n\t\t// This will make some barcode with big text render incorrectly\n\t\treturn 0;\n\t}\n\tctx.font = options.fontOptions + \" \" + options.fontSize + \"px \" + options.font;\n\n\t// Calculate the width of the encoding\n\tvar size = ctx.measureText(string).width;\n\n\treturn size;\n}\n\nexports.getMaximumHeightOfEncodings = getMaximumHeightOfEncodings;\nexports.getEncodingHeight = getEncodingHeight;\nexports.getBarcodePadding = getBarcodePadding;\nexports.calculateEncodingAttributes = calculateEncodingAttributes;\nexports.getTotalWidthOfEncodings = getTotalWidthOfEncodings;\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/renderers/shared.js\n// module id = ../../../../jsbarcode/bin/renderers/shared.js\n// module chunks = 1","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _merge = require(\"../help/merge.js\");\n\nvar _merge2 = _interopRequireDefault(_merge);\n\nvar _shared = require(\"./shared.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar svgns = \"http://www.w3.org/2000/svg\";\n\nvar SVGRenderer = function () {\n\tfunction SVGRenderer(svg, encodings, options) {\n\t\t_classCallCheck(this, SVGRenderer);\n\n\t\tthis.svg = svg;\n\t\tthis.encodings = encodings;\n\t\tthis.options = options;\n\t\tthis.document = options.xmlDocument || document;\n\t}\n\n\t_createClass(SVGRenderer, [{\n\t\tkey: \"render\",\n\t\tvalue: function render() {\n\t\t\tvar currentX = this.options.marginLeft;\n\n\t\t\tthis.prepareSVG();\n\t\t\tfor (var i = 0; i < this.encodings.length; i++) {\n\t\t\t\tvar encoding = this.encodings[i];\n\t\t\t\tvar encodingOptions = (0, _merge2.default)(this.options, encoding.options);\n\n\t\t\t\tvar group = this.createGroup(currentX, encodingOptions.marginTop, this.svg);\n\n\t\t\t\tthis.setGroupOptions(group, encodingOptions);\n\n\t\t\t\tthis.drawSvgBarcode(group, encodingOptions, encoding);\n\t\t\t\tthis.drawSVGText(group, encodingOptions, encoding);\n\n\t\t\t\tcurrentX += encoding.width;\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: \"prepareSVG\",\n\t\tvalue: function prepareSVG() {\n\t\t\t// Clear the SVG\n\t\t\twhile (this.svg.firstChild) {\n\t\t\t\tthis.svg.removeChild(this.svg.firstChild);\n\t\t\t}\n\n\t\t\t(0, _shared.calculateEncodingAttributes)(this.encodings, this.options);\n\t\t\tvar totalWidth = (0, _shared.getTotalWidthOfEncodings)(this.encodings);\n\t\t\tvar maxHeight = (0, _shared.getMaximumHeightOfEncodings)(this.encodings);\n\n\t\t\tvar width = totalWidth + this.options.marginLeft + this.options.marginRight;\n\t\t\tthis.setSvgAttributes(width, maxHeight);\n\n\t\t\tif (this.options.background) {\n\t\t\t\tthis.drawRect(0, 0, width, maxHeight, this.svg).setAttribute(\"style\", \"fill:\" + this.options.background + \";\");\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: \"drawSvgBarcode\",\n\t\tvalue: function drawSvgBarcode(parent, options, encoding) {\n\t\t\tvar binary = encoding.data;\n\n\t\t\t// Creates the barcode out of the encoded binary\n\t\t\tvar yFrom;\n\t\t\tif (options.textPosition == \"top\") {\n\t\t\t\tyFrom = options.fontSize + options.textMargin;\n\t\t\t} else {\n\t\t\t\tyFrom = 0;\n\t\t\t}\n\n\t\t\tvar barWidth = 0;\n\t\t\tvar x = 0;\n\t\t\tfor (var b = 0; b < binary.length; b++) {\n\t\t\t\tx = b * options.width + encoding.barcodePadding;\n\n\t\t\t\tif (binary[b] === \"1\") {\n\t\t\t\t\tbarWidth++;\n\t\t\t\t} else if (barWidth > 0) {\n\t\t\t\t\tthis.drawRect(x - options.width * barWidth, yFrom, options.width * barWidth, options.height, parent);\n\t\t\t\t\tbarWidth = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Last draw is needed since the barcode ends with 1\n\t\t\tif (barWidth > 0) {\n\t\t\t\tthis.drawRect(x - options.width * (barWidth - 1), yFrom, options.width * barWidth, options.height, parent);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: \"drawSVGText\",\n\t\tvalue: function drawSVGText(parent, options, encoding) {\n\t\t\tvar textElem = this.document.createElementNS(svgns, 'text');\n\n\t\t\t// Draw the text if displayValue is set\n\t\t\tif (options.displayValue) {\n\t\t\t\tvar x, y;\n\n\t\t\t\ttextElem.setAttribute(\"style\", \"font:\" + options.fontOptions + \" \" + options.fontSize + \"px \" + options.font);\n\n\t\t\t\tif (options.textPosition == \"top\") {\n\t\t\t\t\ty = options.fontSize - options.textMargin;\n\t\t\t\t} else {\n\t\t\t\t\ty = options.height + options.textMargin + options.fontSize;\n\t\t\t\t}\n\n\t\t\t\t// Draw the text in the correct X depending on the textAlign option\n\t\t\t\tif (options.textAlign == \"left\" || encoding.barcodePadding > 0) {\n\t\t\t\t\tx = 0;\n\t\t\t\t\ttextElem.setAttribute(\"text-anchor\", \"start\");\n\t\t\t\t} else if (options.textAlign == \"right\") {\n\t\t\t\t\tx = encoding.width - 1;\n\t\t\t\t\ttextElem.setAttribute(\"text-anchor\", \"end\");\n\t\t\t\t}\n\t\t\t\t// In all other cases, center the text\n\t\t\t\telse {\n\t\t\t\t\t\tx = encoding.width / 2;\n\t\t\t\t\t\ttextElem.setAttribute(\"text-anchor\", \"middle\");\n\t\t\t\t\t}\n\n\t\t\t\ttextElem.setAttribute(\"x\", x);\n\t\t\t\ttextElem.setAttribute(\"y\", y);\n\n\t\t\t\ttextElem.appendChild(this.document.createTextNode(encoding.text));\n\n\t\t\t\tparent.appendChild(textElem);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: \"setSvgAttributes\",\n\t\tvalue: function setSvgAttributes(width, height) {\n\t\t\tvar svg = this.svg;\n\t\t\tsvg.setAttribute(\"width\", width + \"px\");\n\t\t\tsvg.setAttribute(\"height\", height + \"px\");\n\t\t\tsvg.setAttribute(\"x\", \"0px\");\n\t\t\tsvg.setAttribute(\"y\", \"0px\");\n\t\t\tsvg.setAttribute(\"viewBox\", \"0 0 \" + width + \" \" + height);\n\n\t\t\tsvg.setAttribute(\"xmlns\", svgns);\n\t\t\tsvg.setAttribute(\"version\", \"1.1\");\n\n\t\t\tsvg.setAttribute(\"style\", \"transform: translate(0,0)\");\n\t\t}\n\t}, {\n\t\tkey: \"createGroup\",\n\t\tvalue: function createGroup(x, y, parent) {\n\t\t\tvar group = this.document.createElementNS(svgns, 'g');\n\t\t\tgroup.setAttribute(\"transform\", \"translate(\" + x + \", \" + y + \")\");\n\n\t\t\tparent.appendChild(group);\n\n\t\t\treturn group;\n\t\t}\n\t}, {\n\t\tkey: \"setGroupOptions\",\n\t\tvalue: function setGroupOptions(group, options) {\n\t\t\tgroup.setAttribute(\"style\", \"fill:\" + options.lineColor + \";\");\n\t\t}\n\t}, {\n\t\tkey: \"drawRect\",\n\t\tvalue: function drawRect(x, y, width, height, parent) {\n\t\t\tvar rect = this.document.createElementNS(svgns, 'rect');\n\n\t\t\trect.setAttribute(\"x\", x);\n\t\t\trect.setAttribute(\"y\", y);\n\t\t\trect.setAttribute(\"width\", width);\n\t\t\trect.setAttribute(\"height\", height);\n\n\t\t\tparent.appendChild(rect);\n\n\t\t\treturn rect;\n\t\t}\n\t}]);\n\n\treturn SVGRenderer;\n}();\n\nexports.default = SVGRenderer;\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/~/jsbarcode/bin/renderers/svg.js\n// module id = ../../../../jsbarcode/bin/renderers/svg.js\n// module chunks = 1","import { Component, Input, NgModule, Renderer2, ViewChild } from '@angular/core';\n\nvar jsbarcode = require('jsbarcode');\nvar NgxBarcodeComponent = (function () {\n    /**\n     * @param {?} renderer\n     */\n    function NgxBarcodeComponent(renderer) {\n        this.renderer = renderer;\n        this.elementType = 'svg';\n        this.cssClass = 'barcode'; // this should be done more elegantly\n        this.format = 'CODE128';\n        this.lineColor = '#000000';\n        this.width = 2;\n        this.height = 100;\n        this.displayValue = false;\n        this.fontOptions = '';\n        this.font = 'monospace';\n        this.textAlign = 'center';\n        this.textPosition = 'bottom';\n        this.textMargin = 2;\n        this.fontSize = 20;\n        this.background = '#ffffff';\n        this.margin = 10;\n        this.marginTop = 10;\n        this.marginBottom = 10;\n        this.marginLeft = 10;\n        this.marginRight = 10;\n        this.value = '';\n        this.valid = function () { return true; };\n    }\n    Object.defineProperty(NgxBarcodeComponent.prototype, \"options\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return {\n                format: this.format,\n                lineColor: this.lineColor,\n                width: this.width,\n                height: this.height,\n                displayValue: this.displayValue,\n                fontOptions: this.fontOptions,\n                font: this.font,\n                textAlign: this.textAlign,\n                textPosition: this.textPosition,\n                textMargin: this.textMargin,\n                fontSize: this.fontSize,\n                background: this.background,\n                margin: this.margin,\n                marginTop: this.marginTop,\n                marginBottom: this.marginBottom,\n                marginLeft: this.marginLeft,\n                marginRight: this.marginRight,\n                valid: this.valid,\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    NgxBarcodeComponent.prototype.ngOnChanges = function () {\n        this.createBarcode();\n    };\n    /**\n     * @return {?}\n     */\n    NgxBarcodeComponent.prototype.createBarcode = function () {\n        if (!this.value) {\n            return;\n        }\n        \n        var /** @type {?} */ element;\n        switch (this.elementType) {\n            case 'img':\n                element = this.renderer.createElement('img');\n                break;\n            case 'canvas':\n                element = this.renderer.createElement('canvas');\n                break;\n            case 'svg':\n            default:\n                element = this.renderer.createElement('svg', 'svg');\n        }\n        jsbarcode(element, this.value, this.options);\n        for (var _i = 0, _a = this.bcElement.nativeElement.childNodes; _i < _a.length; _i++) {\n            var node = _a[_i];\n            this.renderer.removeChild(this.bcElement.nativeElement, node);\n        }\n        this.renderer.appendChild(this.bcElement.nativeElement, element);\n    };\n    NgxBarcodeComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'ngx-barcode',\n                    template: \"<div #bcElement [class]=\\\"cssClass\\\"></div>\",\n                    styles: []\n                },] },\n    ];\n    /**\n     * @nocollapse\n     */\n    NgxBarcodeComponent.ctorParameters = function () { return [\n        { type: Renderer2, },\n    ]; };\n    NgxBarcodeComponent.propDecorators = {\n        'elementType': [{ type: Input, args: ['bc-element-type',] },],\n        'cssClass': [{ type: Input, args: ['bc-class',] },],\n        'format': [{ type: Input, args: ['bc-format',] },],\n        'lineColor': [{ type: Input, args: ['bc-line-color',] },],\n        'width': [{ type: Input, args: ['bc-width',] },],\n        'height': [{ type: Input, args: ['bc-height',] },],\n        'displayValue': [{ type: Input, args: ['bc-display-value',] },],\n        'fontOptions': [{ type: Input, args: ['bc-font-options',] },],\n        'font': [{ type: Input, args: ['bc-font',] },],\n        'textAlign': [{ type: Input, args: ['bc-text-align',] },],\n        'textPosition': [{ type: Input, args: ['bc-text-position',] },],\n        'textMargin': [{ type: Input, args: ['bc-text-margin',] },],\n        'fontSize': [{ type: Input, args: ['bc-font-size',] },],\n        'background': [{ type: Input, args: ['bc-background',] },],\n        'margin': [{ type: Input, args: ['bc-margin',] },],\n        'marginTop': [{ type: Input, args: ['bc-margin-top',] },],\n        'marginBottom': [{ type: Input, args: ['bc-margin-bottom',] },],\n        'marginLeft': [{ type: Input, args: ['bc-margin-left',] },],\n        'marginRight': [{ type: Input, args: ['bc-margin-right',] },],\n        'value': [{ type: Input, args: ['bc-value',] },],\n        'bcElement': [{ type: ViewChild, args: ['bcElement',] },],\n        'valid': [{ type: Input, args: ['bc-valid',] },],\n    };\n    return NgxBarcodeComponent;\n}());\n\nvar NgxBarcodeModule = (function () {\n    function NgxBarcodeModule() {\n    }\n    /**\n     * @return {?}\n     */\n    NgxBarcodeModule.forRoot = function () {\n        return {\n            ngModule: NgxBarcodeModule,\n            providers: []\n        };\n    };\n    NgxBarcodeModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [],\n                    declarations: [\n                        NgxBarcodeComponent,\n                    ],\n                    exports: [\n                        NgxBarcodeComponent,\n                    ]\n                },] },\n    ];\n    /**\n     * @nocollapse\n     */\n    NgxBarcodeModule.ctorParameters = function () { return []; };\n    return NgxBarcodeModule;\n}());\n\nexport { NgxBarcodeModule, NgxBarcodeComponent };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/~/ngx-barcode/index.js\n// module id = ../../../../ngx-barcode/index.js\n// module chunks = 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar distinctUntilChanged_1 = require('../../operator/distinctUntilChanged');\nObservable_1.Observable.prototype.distinctUntilChanged = distinctUntilChanged_1.distinctUntilChanged;\n//# sourceMappingURL=distinctUntilChanged.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/~/rxjs/add/operator/distinctUntilChanged.js\n// module id = ../../../../rxjs/add/operator/distinctUntilChanged.js\n// module chunks = 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar tryCatch_1 = require('../util/tryCatch');\nvar errorObject_1 = require('../util/errorObject');\n/* tslint:disable:max-line-length */\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * @example <caption>A simple example with numbers</caption>\n * Observable.of(1, 1, 2, 2, 2, 1, 1, 2, 3, 3, 4)\n *   .distinctUntilChanged()\n *   .subscribe(x => console.log(x)); // 1, 2, 1, 2, 3, 4\n *\n * @example <caption>An example using a compare function</caption>\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'})\n *     { age: 6, name: 'Foo'})\n *     .distinctUntilChanged((p: Person, q: Person) => p.name === q.name)\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n *\n * @see {@link distinct}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [compare] optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} an Observable that emits items from the source Observable with distinct values.\n * @method distinctUntilChanged\n * @owner Observable\n */\nfunction distinctUntilChanged(compare, keySelector) {\n    return this.lift(new DistinctUntilChangedOperator(compare, keySelector));\n}\nexports.distinctUntilChanged = distinctUntilChanged;\nvar DistinctUntilChangedOperator = (function () {\n    function DistinctUntilChangedOperator(compare, keySelector) {\n        this.compare = compare;\n        this.keySelector = keySelector;\n    }\n    DistinctUntilChangedOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));\n    };\n    return DistinctUntilChangedOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DistinctUntilChangedSubscriber = (function (_super) {\n    __extends(DistinctUntilChangedSubscriber, _super);\n    function DistinctUntilChangedSubscriber(destination, compare, keySelector) {\n        _super.call(this, destination);\n        this.keySelector = keySelector;\n        this.hasKey = false;\n        if (typeof compare === 'function') {\n            this.compare = compare;\n        }\n    }\n    DistinctUntilChangedSubscriber.prototype.compare = function (x, y) {\n        return x === y;\n    };\n    DistinctUntilChangedSubscriber.prototype._next = function (value) {\n        var keySelector = this.keySelector;\n        var key = value;\n        if (keySelector) {\n            key = tryCatch_1.tryCatch(this.keySelector)(value);\n            if (key === errorObject_1.errorObject) {\n                return this.destination.error(errorObject_1.errorObject.e);\n            }\n        }\n        var result = false;\n        if (this.hasKey) {\n            result = tryCatch_1.tryCatch(this.compare)(this.key, key);\n            if (result === errorObject_1.errorObject) {\n                return this.destination.error(errorObject_1.errorObject.e);\n            }\n        }\n        else {\n            this.hasKey = true;\n        }\n        if (Boolean(result) === false) {\n            this.key = key;\n            this.destination.next(value);\n        }\n    };\n    return DistinctUntilChangedSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=distinctUntilChanged.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/GitHub/rightinvoices-web-v1.1/~/rxjs/operator/distinctUntilChanged.js\n// module id = ../../../../rxjs/operator/distinctUntilChanged.js\n// module chunks = 1"],"sourceRoot":"webpack:///"}